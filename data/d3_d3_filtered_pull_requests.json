[
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-10-13T17:56:29Z",
        "closed_at": "2023-10-15T07:17:56Z",
        "merged_at": "2023-10-15T07:17:56Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-10-12T21:57:34Z",
        "closed_at": "2023-10-12T23:19:58Z",
        "merged_at": "2023-10-12T23:19:58Z",
        "body": "Replaces temporary Slack invite links with a static redirect to the latest invite URL that can be updated independently.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-11T13:28:08Z",
        "closed_at": null,
        "merged_at": null,
        "body": "I believe that the word should have been \"radians\", not \"radius\". Instead of fixing this (potential) typo, however, maybe deleting this part of the sentence altogether is the better option? Deleting it makes the `arc.startAngle(angle)` description match the `arc.endAngle(angle)` description (which does not mention radius/radians in the corresponding sentence). Radians are addressed elsewhere, so mentioning them in the edited sentence is, perhaps, not necessary.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-11T12:56:06Z",
        "closed_at": "2023-10-11T13:04:02Z",
        "merged_at": "2023-10-11T13:04:02Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1537,
        "changed_files": 3,
        "created_at": "2023-10-06T15:44:33Z",
        "closed_at": "2023-10-06T16:59:53Z",
        "merged_at": "2023-10-06T16:59:53Z",
        "body": "https://github.com/d3/d3/issues/3775",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-10-05T16:52:27Z",
        "closed_at": "2023-10-05T19:12:59Z",
        "merged_at": "2023-10-05T19:12:59Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-05T16:43:22Z",
        "closed_at": "2023-10-05T19:25:29Z",
        "merged_at": "2023-10-05T19:25:29Z",
        "body": "add an example of how to load from a single module (using the recommended ESM method & destructuring)\r\n\r\n\r\n<img width=\"671\" alt=\"\" src=\"https://github.com/d3/d3/assets/7001/b791c048-2d40-4516-bb2f-db4f61720ad1\">\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-14T19:35:04Z",
        "closed_at": "2023-09-14T19:40:50Z",
        "merged_at": null,
        "body": "bilalskhan340@gmail.com",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-23T14:31:06Z",
        "closed_at": "2023-08-23T15:46:12Z",
        "merged_at": "2023-08-23T15:46:12Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-08-21T19:34:38Z",
        "closed_at": "2023-08-21T21:05:07Z",
        "merged_at": "2023-08-21T21:05:07Z",
        "body": "Fixes #3744.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-21T16:26:11Z",
        "closed_at": "2023-08-21T17:12:16Z",
        "merged_at": null,
        "body": "All the links in the [D3 Gallery](https://observablehq.com/@d3/gallery) have been cleaned. This adds the ?intent=fork parameter back.\r\n\r\ncc: @ajangus\r\n![sample](https://github.com/d3/d3/assets/7001/d018e51a-a92a-461d-a536-d6f41adadceb)\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-13T13:13:25Z",
        "closed_at": "2023-08-21T18:59:05Z",
        "merged_at": null,
        "body": "The `forceSimulation(nodes)` function operates in an impure manner and can modify its input array of nodes during the simulation.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-08-09T11:50:13Z",
        "closed_at": "2023-08-21T18:09:14Z",
        "merged_at": "2023-08-21T18:09:14Z",
        "body": "- Add missing date arguments to `d3.timeMonth.floor()` and `d3.timeMonth.ceil()` calls.\r\n- Fix the expected date range",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-08T13:33:17Z",
        "closed_at": "2023-08-08T14:06:07Z",
        "merged_at": "2023-08-08T14:06:07Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 442,
        "deletions": 439,
        "changed_files": 2,
        "created_at": "2023-07-29T17:06:52Z",
        "closed_at": "2023-07-29T17:08:38Z",
        "merged_at": "2023-07-29T17:08:38Z",
        "body": "Turning off the default rel=noreferrer for external links. Also upgrading VitePress and other dependencies.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-07-28T20:57:39Z",
        "closed_at": "2023-08-21T19:34:50Z",
        "merged_at": null,
        "body": "fixes #3744.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 25,
        "changed_files": 18,
        "created_at": "2023-07-05T07:13:17Z",
        "closed_at": "2023-07-29T16:44:37Z",
        "merged_at": "2023-07-29T16:44:37Z",
        "body": "Update links.\r\n\r\ncloses #3696",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-25T10:05:44Z",
        "closed_at": "2023-06-25T15:02:26Z",
        "merged_at": "2023-06-25T15:02:26Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-21T13:36:42Z",
        "closed_at": "2023-06-21T15:34:00Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-20T23:39:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Closes #3691\r\n\r\nI've created the SECURITY.md file following a GitHub's template and considering that you'd request that users report vulnerabilities through the [security advisory](https://docs.github.com/en/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability), which is a handy new GitHub feature, but it's still in beta and **has to be manually enabled by a maintainer**.\r\n\r\nIf you're interested in this feature, you can activate it following this steps:\r\n\r\n1. Click on this [link](https://github.com/d3/d3/settings/security_analysis) to go to Code security & analysis section on your repo's settings\r\n2. Click \"Enable\" for \"Private vulnerability reporting (Beta)\"\r\n\r\nHowever, if you'd rather not use this feature, you can also request users to report vulnerabilities to an email. If that's the case, let me know which email you would like to receive the reports and I can submit the change.\r\n\r\nAdditionally, feel free to edit or suggest any changes to this document, it is supposed to reflect the amount of effort the team can offer to handle vulnerabilities.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-16T12:53:55Z",
        "closed_at": "2023-06-16T12:55:26Z",
        "merged_at": "2023-06-16T12:55:26Z",
        "body": "https://observablehq.com/@d3/chord-diagram/2\r\n\r\ncomplement to https://github.com/d3/d3/pull/3670#issuecomment-1594625531",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-15T06:35:21Z",
        "closed_at": "2023-06-15T06:58:48Z",
        "merged_at": "2023-06-15T06:58:48Z",
        "body": "cherry-picked from #3679",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 81,
        "deletions": 30,
        "changed_files": 2,
        "created_at": "2023-06-15T06:34:19Z",
        "closed_at": "2023-06-16T20:41:47Z",
        "merged_at": "2023-06-16T20:41:47Z",
        "body": "if we want a more discoverable easter egg, the axis transition could alternatively be triggered on \"pointermove click\"",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-15T04:54:51Z",
        "closed_at": "2023-06-15T06:40:50Z",
        "merged_at": null,
        "body": "If it's ok to use those more as a blurb than as a scientific quote.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-14T16:39:09Z",
        "closed_at": "2023-06-14T16:43:16Z",
        "merged_at": "2023-06-14T16:43:16Z",
        "body": "copy of https://github.com/observablehq/plot/pull/1692",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-06-13T14:10:05Z",
        "closed_at": "2023-06-13T16:33:02Z",
        "merged_at": "2023-06-13T16:33:02Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-12T15:10:34Z",
        "closed_at": "2023-06-12T19:35:50Z",
        "merged_at": "2023-06-12T19:35:50Z",
        "body": "Not sure about the exact phrasing but I think something like this would be nice. It'd be overwhelming to list every module that touches the DOM, but it may be frustratingly vague to just say \"most don't, some do\". Is there a general principle by which the uninitiated reader might spot which do and don't? As a beginner programmer learning D3 I know I didn't have a good mental model of where the DOM fit in, but I think I'd at least be able to spot \"does this take a selection\".",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 155,
        "deletions": 79,
        "changed_files": 5,
        "created_at": "2023-06-12T09:36:38Z",
        "closed_at": "2023-06-13T16:57:29Z",
        "merged_at": "2023-06-13T16:57:29Z",
        "body": "- Hard errors are expected with 3ae7380 (the script fails to load non-existing files).\r\n- Soft errors are expected with 58c0d2b (some anchors are broken).\r\n- No errors are expected with 3c01a95 (all links fixed).\r\n- I then pushed a version that also supports Plot.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-06-12T08:12:36Z",
        "closed_at": "2023-06-12T13:36:51Z",
        "merged_at": "2023-06-12T13:36:51Z",
        "body": "for light mode\r\n\r\n<img width=\"728\" alt=\"Capture d\u2019e\u0301cran 2023-06-12 a\u0300 10 07 33\" src=\"https://github.com/d3/d3/assets/7001/d2277f0d-609c-4b7a-88d0-c3b859f6450f\">\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 49,
        "deletions": 41,
        "changed_files": 2,
        "created_at": "2023-06-11T20:15:12Z",
        "closed_at": "2023-06-11T20:16:52Z",
        "merged_at": "2023-06-11T20:16:52Z",
        "body": "same as https://github.com/observablehq/plot/pull/1687",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 83,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-06-11T20:04:46Z",
        "closed_at": "2023-06-15T18:43:45Z",
        "merged_at": "2023-06-15T18:43:45Z",
        "body": "same chord example as a D3 chart instead of an image.\r\n\r\nIt's not clear to me how to react to dark mode in this example: \"brighter\" is for dark mode, and should be \"darker\" for light mode.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 67,
        "deletions": 24,
        "changed_files": 3,
        "created_at": "2023-06-11T20:02:06Z",
        "closed_at": "2023-06-15T18:02:34Z",
        "merged_at": "2023-06-15T18:02:34Z",
        "body": "just an underline; I just saw that this doesn't work in Safari, though?",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-11T07:16:17Z",
        "closed_at": "2023-06-11T21:15:02Z",
        "merged_at": null,
        "body": "add a comma in readme",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 16,
        "changed_files": 5,
        "created_at": "2023-06-09T16:08:28Z",
        "closed_at": "2023-06-09T16:56:47Z",
        "merged_at": null,
        "body": "note: on my computer I get #1e1e1e vs #1e1e20 for the actual background, and it's slightly noticeable. Still better than the white bg!\r\n\r\n(next step will be to render them dynamically instead)\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-06-09T14:53:36Z",
        "closed_at": "2023-06-09T16:08:58Z",
        "merged_at": "2023-06-09T16:08:58Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1081,
        "deletions": 81,
        "changed_files": 14,
        "created_at": "2023-06-09T14:10:58Z",
        "closed_at": null,
        "merged_at": null,
        "body": "It's a lot, but we love projections, and it would be a shame not to find them with instant search.\r\n\r\nI've put everything into a single file, but it's possibly too much. Leaving this as a draft for discussion:\r\n\r\nWe could:\r\n* remove the d3-geo projections and split the remainder again into two groups (geo-projection vs geo-polygon), but that's still a long list and there are duplicates)\r\n* create another type of classification? (polyhedral, etc)\r\n* move the \u201cadditional methods\u201d (geoProject\u2026) in their own page, and have only projections in that page\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 61,
        "deletions": 79,
        "changed_files": 10,
        "created_at": "2023-06-09T07:15:45Z",
        "closed_at": "2023-06-09T14:22:35Z",
        "merged_at": "2023-06-09T14:22:35Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 19,
        "changed_files": 15,
        "created_at": "2023-06-08T19:41:26Z",
        "closed_at": "2023-06-08T21:21:39Z",
        "merged_at": "2023-06-08T21:21:39Z",
        "body": "going reverse-alphabetical, here just from d3-zoom through d3-selection; will keep adding to this PR",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 247,
        "deletions": 287,
        "changed_files": 46,
        "created_at": "2023-06-08T17:29:31Z",
        "closed_at": "2023-06-09T02:36:35Z",
        "merged_at": "2023-06-09T02:36:35Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-07T23:13:06Z",
        "closed_at": "2023-06-08T00:22:04Z",
        "merged_at": "2023-06-08T00:22:04Z",
        "body": "I know you removed the TODO but I was already trying to fill it in! I think just making the distinction of modules that touch the DOM and those that don't was super clarifying for me personally when I figured that out. And I always forget the most basic ref pattern (and still might've messed it up here). I don't think we should get into updating or interactivity or whatever, but I think just this much goes a long way toward demystifying (and showing just the most basic best practices).\r\n\r\n<img width=\"420\" alt=\"image\" src=\"https://github.com/d3/d3/assets/841829/90d8463d-52ab-46f9-9b4e-54320dac6f7c\">\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19342,
        "deletions": 136,
        "changed_files": 139,
        "created_at": "2023-05-17T01:00:36Z",
        "closed_at": "2023-06-08T01:30:48Z",
        "merged_at": "2023-06-08T01:30:48Z",
        "body": "Fixes #3655.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-07-09T14:42:14Z",
        "closed_at": "2022-07-09T15:33:45Z",
        "merged_at": null,
        "body": "The react native CLI requires the `./package.json` key be filled in for libraries it uses. Without this being filled in, we have no way of starting the Bundling Server. Several libraries are updating to compensate for this (See: https://github.com/react-native-community/cli/issues/1168). ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 5,
        "changed_files": 7,
        "created_at": "2022-05-19T19:36:31Z",
        "closed_at": "2022-05-19T19:37:12Z",
        "merged_at": null,
        "body": "Test",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 391,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2022-04-08T11:10:02Z",
        "closed_at": "2022-04-08T11:11:15Z",
        "merged_at": null,
        "body": "Create a PR to test",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-03-29T00:16:03Z",
        "closed_at": "2022-03-29T00:49:12Z",
        "merged_at": "2022-03-29T00:49:12Z",
        "body": "The API Reference link at the top of README.md used \"master\" instead of \"main\". GitHub would redirect to the correct page, but with a warning message.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-11-28T12:15:06Z",
        "closed_at": "2021-11-28T15:19:24Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2021-10-10T12:46:41Z",
        "closed_at": "2021-10-10T14:57:36Z",
        "merged_at": null,
        "body": "Named imports make Rollup configuration more consistent in semantic meaning",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 71,
        "deletions": 45,
        "changed_files": 3,
        "created_at": "2021-07-30T10:08:40Z",
        "closed_at": "2021-07-30T11:07:37Z",
        "merged_at": null,
        "body": "Hi! I have used dependabot to update the current dependencies.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-06-25T13:48:52Z",
        "closed_at": "2021-07-04T17:17:33Z",
        "merged_at": null,
        "body": "in reply to https://github.com/d3/d3/issues/3469#issuecomment-866273720",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1406,
        "deletions": 682,
        "changed_files": 16,
        "created_at": "2021-06-11T17:48:47Z",
        "closed_at": "2021-06-11T17:50:21Z",
        "merged_at": "2021-06-11T17:50:19Z",
        "body": "Fixes #3502.\r\nFixes #3501.\r\nFixes #3469.\r\nFixes #3477.\r\nFixes #3454.\r\nFixes #3366.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-13T15:01:34Z",
        "closed_at": "2021-05-13T16:38:42Z",
        "merged_at": "2021-05-13T16:38:42Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-04-03T12:43:32Z",
        "closed_at": "2021-04-03T14:15:02Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 948,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2021-03-16T18:15:55Z",
        "closed_at": "2021-06-11T17:50:21Z",
        "merged_at": null,
        "body": "Hi,\r\n\r\nTo solve #3471 issue, I added a configuration file of GitHub Actions for ESLint. More, LINTER.md is added to explain how to run eslint locally and by using GitHub Actions.\r\n\r\nI added settings that I used for my personal projects. They may not be correct settings. So, they can be changed.\r\n\r\nI didn't fix any error found by ESLint to make this pull request simple. These errors can be fixed with another pull request.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-03-15T22:39:52Z",
        "closed_at": "2021-03-15T23:00:22Z",
        "merged_at": "2021-03-15T23:00:22Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-07T19:52:05Z",
        "closed_at": "2021-02-07T20:10:30Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 62,
        "deletions": 29,
        "changed_files": 3,
        "created_at": "2020-12-30T08:24:47Z",
        "closed_at": "2021-06-11T17:50:21Z",
        "merged_at": null,
        "body": "rollup-plugin-node-resolve is deprecated, so replace it with @rollup/plugin-node-resolve",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2020-08-27T15:03:55Z",
        "closed_at": "2020-08-27T15:37:17Z",
        "merged_at": null,
        "body": "I couldn't help but notice the inconsistency that a few sentences were missing periods. This PR adds them. Very minor.\r\n\r\nReally excited for v6!",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2020-08-23T23:27:20Z",
        "closed_at": "2020-08-26T20:38:10Z",
        "merged_at": "2020-08-26T20:38:10Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1751,
        "deletions": 1623,
        "changed_files": 7,
        "created_at": "2020-07-27T16:45:02Z",
        "closed_at": "2020-08-26T21:34:57Z",
        "merged_at": "2020-08-26T21:34:57Z",
        "body": "This is the first \"complete\" d3v6 build, with no duplications. (Previously I had a duplicate of each of the dependencies of the already-released modules d3-scale\u00a0+\u00a0d3-force which were not taken in the 2.0.0-rc.* range.)\r\n\r\nThe file size for d3v6 is 5.83% larger than d3v5 (by some kind of coincidence\u00a0it's the same ratio both for the compressed and the uncompressed versions).\r\nSee\u00a0\u00a0https://observablehq.com/d/b5b8bc70373e615c for the build.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-06-04T22:59:03Z",
        "closed_at": "2020-06-05T04:39:29Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-03-15T16:23:07Z",
        "closed_at": "2020-03-15T16:40:19Z",
        "merged_at": null,
        "body": "Update year to 2020 in license.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-03-15T15:41:17Z",
        "closed_at": "2020-03-15T15:53:39Z",
        "merged_at": null,
        "body": "I think it's a better way  to update end year to present, and we dont't need to update license year in future.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2020-01-28T09:53:37Z",
        "closed_at": "2021-06-11T17:50:21Z",
        "merged_at": null,
        "body": "Since 13.6 node is able to load esm without the `--experimental-modules` flag, and since 13.7 node supports [conditional exports](https://nodejs.org/api/esm.html#esm_conditional_exports) unflagged as well.\r\n\r\nWhile node can import cjs code from esm code just fine, currently only\r\n```js\r\nimport d3 from 'd3';\r\n```\r\nis possible. If you try\r\n```js\r\nimport { line } from 'd3';\r\n```\r\nyou get\r\n```\r\nimport { line } from 'd3';\r\n         ^^^^\r\nSyntaxError: The requested module 'd3' does not provide an export named 'line'\r\n```\r\nbecause Node doesn't support named exports from cjs modules.\r\n\r\nI modified the build config to build an esm file for node as well and made sure node can find it using the conditional exports.\r\n\r\nI am aware that the node version of d3 simply exports the individual `d3-*` modules whereas my build fully includes them in the code. I think that eventually the conditional exports should be used in each of the `d3-*` modules. I just wanted to add this as a PoC however to open up the discussion without going through all the work of implementing the conditional exports in each of the submodules.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-01-22T08:05:12Z",
        "closed_at": "2020-01-22T09:16:17Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 769,
        "changed_files": 1,
        "created_at": "2020-01-22T08:03:53Z",
        "closed_at": "2020-01-22T08:04:12Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-07T04:17:28Z",
        "closed_at": "2020-01-18T20:38:12Z",
        "merged_at": null,
        "body": "Happy New Year!",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-03T21:11:45Z",
        "closed_at": "2019-10-03T21:26:36Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2019-09-24T22:45:14Z",
        "closed_at": "2019-09-25T05:15:43Z",
        "merged_at": "2019-09-25T05:15:43Z",
        "body": "This PR removes beta from links to observablehq.com, thus eliminating a HTTP 301 redirect hop.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2019-08-23T13:13:47Z",
        "closed_at": "2019-08-30T15:00:16Z",
        "merged_at": null,
        "body": "- Optimised all images in the repository using the [ImgBot app from the GitHub Marketplace](https://github.com/marketplace/imgbot).\r\n\r\n<details>\r\n<summary>\r\nDetails\r\n</summary>\r\n\r\n| File | Before | After | Percent reduction |\r\n|:--|:--|:--|:--|\r\n| /img/pack-v3.png | 116.51kb | 113.81kb | 2.32% |\r\n| /img/pack-v4.png | 163.22kb | 160.47kb | 1.68% |\r\n| | | | |\r\n| **Total :** | **279.72kb** | **274.27kb** | **1.95%** |\r\n</details>",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2019-08-12T09:54:24Z",
        "closed_at": "2019-08-12T10:14:47Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2019-04-25T11:17:18Z",
        "closed_at": "2019-08-01T15:32:10Z",
        "merged_at": null,
        "body": "As with pre-built binaries, it is convenient to be able to use a good tool without build steps. With this PR, the ESM distribution can be used which, unlike the UMD distribution, does not require one to pollute one's HTML with extra, non-modular, script tag dependencies, and also ensures one's JavaScript is free of \"magic\" such that there are no globals and one can trace--starting with any file--where the variables it uses are defined.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-04-25T10:57:53Z",
        "closed_at": "2019-08-01T15:08:48Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-02-22T22:59:06Z",
        "closed_at": "2019-02-22T23:01:47Z",
        "merged_at": null,
        "body": "yo yo",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-01-16T20:39:51Z",
        "closed_at": "2019-01-19T16:20:53Z",
        "merged_at": null,
        "body": "add { \"sideEffects\": false } optimization\r\nhttps://github.com/webpack/webpack/tree/master/examples/side-effects",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-01-08T18:46:39Z",
        "closed_at": "2019-01-08T18:49:57Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-12-19T05:57:35Z",
        "closed_at": "2019-08-01T15:08:11Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-12-05T10:57:47Z",
        "closed_at": "2019-08-01T15:03:11Z",
        "merged_at": null,
        "body": "NPM command was not visible enough to user. Infact at first I missed it. So tried to make it more visible. ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 160,
        "deletions": 4,
        "changed_files": 6,
        "created_at": "2018-11-29T00:12:07Z",
        "closed_at": "2019-08-01T15:02:27Z",
        "merged_at": null,
        "body": "I am a product manager at Microsoft and would like to help you enable continuous integration for the D3 repos using Azure Pipelines.  [Azure Pipeline](https://azure.microsoft.com/en-us/services/devops/pipelines/) is a CI integration service from Microsoft that is **free** for open source projects and supports build and test across Linux, macOS, and Windows.\r\n\r\n## Summary\r\n\r\nTo get the ball rolling, I created pipelines for **28 of the D3 repos**. I chose these repos because they were the most consistent and would be fairly easy to script/automate the handful of necessary updates. \r\n\r\nAt a high level, the changes were:\r\n\r\n1. Added an `.azure-pipelines.yml` file that defines the CI jobs for Linux and Windows\r\n2. Updated `package.json` with new CI-specific scripts (these scripts call existing scripts but generate XML output). I also had to swap a few commands (like `rm -rf`) with cross-platform alternatives\r\n3. Updated `README.md` with a build status badge\r\n\r\nMost of the (28) repos built correctly on Window sand Linux, but a few required some tweaks:\r\n\r\n1. [d3-geo-projection](https://github.com/willsmythe/d3-geo-projection) and [d3-geo](https://github.com/willsmythe/d3-geo) rely on node-canvas, which required installing some platform-specific dependencies.\r\n2. [d3-axis](https://github.com/willsmythe/d3-axis) had failing tests due to an assumption about the line endings being LF (not CRLF)\r\n3. [d3](https://github.com/willsmythe/d3) doesn\u2019t use eslint (which make sense) so I had to tweak the build configuration to not run lint or publish lint results\r\n\r\nA handful of other repos like d3-timer have some legitimate-looking test failures (see [test results](https://dev.azure.com/d3/d3/_build/results?buildId=134&view=ms.vss-test-web.test-result-details)), but I didn't dig too deep into them -- here's how the test results appear in the Azure Pipelines UI:\r\n\r\n![image](https://user-images.githubusercontent.com/2503052/49190632-30166d00-f341-11e8-8f70-738baa200945.png)\r\n\r\n## Pipeline status\r\n\r\nYou can access the forks and pipelines here:\r\n\r\n| Repo     | Status    |\r\n|----------|-----------|\r\n| [d3](https://github.com/willsmythe/d3) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3)](https://dev.azure.com/d3/d3/_build/definition?definitionId=33) |\r\n| [d3-array](https://github.com/willsmythe/d3-array) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-array)](https://dev.azure.com/d3/d3/_build/definition?definitionId=8) |\r\n| [d3-axis](https://github.com/willsmythe/d3-axis) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-axis)](https://dev.azure.com/d3/d3/_build/definition?definitionId=7) |\r\n| [d3-chord](https://github.com/willsmythe/d3-chord) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-chord)](https://dev.azure.com/d3/d3/_build/definition?definitionId=5) |\r\n| [d3-color](https://github.com/willsmythe/d3-color) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-color)](https://dev.azure.com/d3/d3/_build/definition?definitionId=13) |\r\n| [d3-contour](https://github.com/willsmythe/d3-contour) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-contour)](https://dev.azure.com/d3/d3/_build/definition?definitionId=6) |\r\n| [d3-dispatch](https://github.com/willsmythe/d3-dispatch) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-dispatch)](https://dev.azure.com/d3/d3/_build/definition?definitionId=3) |\r\n| [d3-dsv](https://github.com/willsmythe/d3-dsv) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-dsv)](https://dev.azure.com/d3/d3/_build/definition?definitionId=14) |\r\n| [d3-ease](https://github.com/willsmythe/d3-ease) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-ease)](https://dev.azure.com/d3/d3/_build/definition?definitionId=15) |\r\n| [d3-format](https://github.com/willsmythe/d3-format) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-format)](https://dev.azure.com/d3/d3/_build/definition?definitionId=16) |\r\n| [d3-geo](https://github.com/willsmythe/d3-geo) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-geo)](https://dev.azure.com/d3/d3/_build/definition?definitionId=17) |\r\n| [d3-geo-projection](https://github.com/willsmythe/d3-geo-projection) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-geo-projection)](https://dev.azure.com/d3/d3/_build/definition?definitionId=18) |\r\n| [d3-hierarchy](https://github.com/willsmythe/d3-hierarchy) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-hierarchy)](https://dev.azure.com/d3/d3/_build/definition?definitionId=11) |\r\n| [d3-interpolate](https://github.com/willsmythe/d3-interpolate) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-interpolate)](https://dev.azure.com/d3/d3/_build/definition?definitionId=19) |\r\n| [d3-path](https://github.com/willsmythe/d3-path) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-path)](https://dev.azure.com/d3/d3/_build/definition?definitionId=20) |\r\n| [d3-polygon](https://github.com/willsmythe/d3-polygon) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-polygon)](https://dev.azure.com/d3/d3/_build/definition?definitionId=21) |\r\n| [d3-quadtree](https://github.com/willsmythe/d3-quadtree) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-quadtree)](https://dev.azure.com/d3/d3/_build/definition?definitionId=22) |\r\n| [d3-random](https://github.com/willsmythe/d3-random) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-random)](https://dev.azure.com/d3/d3/_build/definition?definitionId=23) |\r\n| [d3-scale](https://github.com/willsmythe/d3-scale) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-scale)](https://dev.azure.com/d3/d3/_build/definition?definitionId=2) |\r\n| [d3-scale-chromatic](https://github.com/willsmythe/d3-scale-chromatic) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-scale-chromatic)](https://dev.azure.com/d3/d3/_build/definition?definitionId=9) |\r\n| [d3-selection](https://github.com/willsmythe/d3-selection) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-selection)](https://dev.azure.com/d3/d3/_build/definition?definitionId=24) |\r\n| [d3-shape](https://github.com/willsmythe/d3-shape) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-shape)](https://dev.azure.com/d3/d3/_build/definition?definitionId=25) |\r\n| [d3-time](https://github.com/willsmythe/d3-time) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-time)](https://dev.azure.com/d3/d3/_build/definition?definitionId=26) |\r\n| [d3-time-format](https://github.com/willsmythe/d3-time-format) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-time-format)](https://dev.azure.com/d3/d3/_build/definition?definitionId=27) |\r\n| [d3-timer](https://github.com/willsmythe/d3-timer) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-timer)](https://dev.azure.com/d3/d3/_build/definition?definitionId=28) |\r\n| [d3-transition](https://github.com/willsmythe/d3-transition) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-transition)](https://dev.azure.com/d3/d3/_build/definition?definitionId=29) |\r\n| [d3-voronoi](https://github.com/willsmythe/d3-voronoi) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-voronoi)](https://dev.azure.com/d3/d3/_build/definition?definitionId=30) |\r\n| [d3-zoom](https://github.com/willsmythe/d3-zoom) | [![Build Status](https://dev.azure.com/d3/d3/_apis/build/status/d3.d3-zoom)](https://dev.azure.com/d3/d3/_build/definition?definitionId=10) |\r\n\r\n## package.json script updates\r\n\r\nMy main goals were to preserve the existing package.json script functionality and to avoid duplicating the test and lint commands. Here's a snippet from [d3-array/package.json](https://github.com/willsmythe/d3-array/commit/7eb5248a7af17d95dbefe8696a921f83fb7fa76c#diff-b9cfc7f2cdf78a7f4b91a753d10865a2)\r\n\r\n```json\r\n{\r\n  \"scripts\": {\r\n    \"lint\": \"eslint src\",\r\n    \"lint:ci\": \"yarn run lint -f junit -o test-results/lint.xml\",\r\n    \"pretape\": \"rollup -c\",\r\n    \"tape\": \"tape test/**/*-test.js\",\r\n    \"tape:ci\": \"yarn run tape | tap-junit -o test-results -n tape.xml\",\r\n    \"test\": \"yarn run tape && yarn run lint\",\r\n    \"prepublishOnly\": \"rimraf dist && yarn test\",\r\n    \"postpublish\": \"...\"\r\n  }\r\n}\r\n```\r\n\r\n* `test` still runs both tape and lint, but the actual functionality has been broken out into separate scripts (`tape` and `run`) so they can be called by CI-specific scripts\r\n* `rm -rf` was replaced with `rimraf`\r\n* A handful of scripts set environment variables --- these had to be replaced with `cross-env`\r\n\r\n## Next steps\r\n\r\nIf you are interested in moving forward, I can stage PRs for some/all of the other repos. I can also transfer the dev.azure.com/d3 Azure Pipelines org to you to save you the time of setting up the pipelines, wiring them up, etc. You can also \"start small\" and only use Azure Pipelines for a handful of your repos.\r\n\r\nFeel free to reach out to me at wismythe at microsoft.com if you have questions.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-11-23T12:43:25Z",
        "closed_at": "2018-11-23T17:22:53Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 57,
        "changed_files": 1,
        "created_at": "2018-11-01T11:03:59Z",
        "closed_at": "2018-11-01T11:04:24Z",
        "merged_at": null,
        "body": "test",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 16,
        "changed_files": 7,
        "created_at": "2018-10-29T08:40:27Z",
        "closed_at": "2018-10-29T15:14:52Z",
        "merged_at": null,
        "body": "sdd",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-08-29T16:29:16Z",
        "closed_at": "2018-08-29T20:05:38Z",
        "merged_at": "2018-08-29T20:05:38Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2018-08-13T01:16:23Z",
        "closed_at": "2018-08-13T01:17:13Z",
        "merged_at": null,
        "body": "\u66f4\u65b0",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-21T16:53:19Z",
        "closed_at": "2018-06-21T19:47:45Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2018-05-13T11:44:04Z",
        "closed_at": "2019-01-19T16:22:11Z",
        "merged_at": "2019-01-19T16:22:11Z",
        "body": "Change all `radialLine` to `lineRadial`.\r\nAlso add `density.size`, `link.context` and `d3.pointRadial`.\r\n\"Streams\" header should be a _h3_ and not a _h4_.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2018-05-11T11:59:43Z",
        "closed_at": "2019-01-19T16:26:50Z",
        "merged_at": null,
        "body": "As I understand it it is no longer possible to edit the wiki page. The sentence  \"To contribute new documentation or add examples to the gallery, just edit the Wiki\" in CONTRIBUTING.md was therefore misleading.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2018-05-03T08:42:46Z",
        "closed_at": "2018-05-03T13:18:18Z",
        "merged_at": "2018-05-03T13:18:18Z",
        "body": "Also add `contours.contour`.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-03-28T17:05:12Z",
        "closed_at": "2018-03-28T22:07:37Z",
        "merged_at": null,
        "body": "I created the issue #3287, \"update LICENSE year\".\r\nThis is my pull request to change the LICENSE year to 2018.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2018-03-23T00:37:14Z",
        "closed_at": "2018-03-23T00:56:30Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-03-05T20:34:02Z",
        "closed_at": "2018-03-05T21:11:55Z",
        "merged_at": null,
        "body": "Adds a badge showing the number of people helping this repo on CodeTriage.\n\n[![Open Source Helpers](https://www.codetriage.com/d3/d3/badges/users.svg)](https://www.codetriage.com/d3/d3)\n\n\n## What is CodeTriage?\n\nCodeTriage is an Open Source app that is designed to make contributing to Open Source projects easier. It works by sending subscribers a few open issues in their inbox. If subscribers get busy, there is an algorithm that backs off issue load so they do not get overwhelmed\n\n[Read more about the CodeTriage project](https://www.codetriage.com/what).\n\n## Why am I getting this PR?\n\nYour project was picked by the human, @schneems. They selected it from the projects submitted to https://www.codetriage.com and hand edited the PR. How did your project get added to [CodeTriage](https://www.codetriage.com/what)? Roughly over 1 year ago, [andrewjhinger](https://github.com/andrewjhinger) added this project to CodeTriage in order to start contributing. Since then, 2 people have subscribed to help this repo.\n\n## What does adding a badge accomplish?\n\nAdding a badge invites people to help contribute to your project. It also lets developers know that others are invested in the longterm success and maintainability of the project.\n\nYou can see an example of a CodeTriage badge on these popular OSS READMEs:\n\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/rails/rails/badges/users.svg)](https://www.codetriage.com/rails/rails) https://github.com/rails/rails\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/crystal-lang/crystal/badges/users.svg)](https://www.codetriage.com/crystal-lang/crystal) https://github.com/crystal-lang/crystal\n\n## Have a question or comment?\n\nWhile I am a bot, this PR was manually reviewed and monitored by a human - @schneems. My job is writing commit messages and handling PR logistics.\n\nIf you have any questions, you can reply back to this PR and they will be answered by @schneems. If you do not want a badge right now, no worries, close the PR, you will not hear from me again.\n\nThanks for making your project Open Source! Any feedback is greatly appreciated.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-02-01T22:55:42Z",
        "closed_at": "2018-02-01T23:00:27Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-18T19:42:37Z",
        "closed_at": "2018-01-18T19:48:05Z",
        "merged_at": "2018-01-18T19:48:05Z",
        "body": "Super tiny change in documentation. \r\n\r\nLooks like the functionality of color.toString changed between v3 and v4. v3 returned hex representation and v4 returns string according to CSS spec. But, this description got missed in the md file. \r\n\r\nI wasn't sure if you'd prefer \"returns string representation of rbg values\" or \"returns string according to CSS spec\" or something else. Mostly just wanted to flag the need for this tweak in the documentation. \r\n\r\nthanks!",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-03T07:52:26Z",
        "closed_at": "2018-01-03T16:59:32Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-12-31T23:50:16Z",
        "closed_at": "2018-01-01T19:10:53Z",
        "merged_at": null,
        "body": "TO DO:\r\n\r\n- [x] Wait to the next year (100% done, depends on timezone)\r\n- [ ] Merge!\r\n\r\n:octocat:",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 114,
        "deletions": 101,
        "changed_files": 3,
        "created_at": "2017-12-11T04:28:15Z",
        "closed_at": "2017-12-11T04:28:53Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2017-10-16T10:32:07Z",
        "closed_at": "2017-10-16T10:32:37Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2836,
        "deletions": 46053,
        "changed_files": 486,
        "created_at": "2017-10-01T21:03:48Z",
        "closed_at": "2017-10-01T21:50:56Z",
        "merged_at": null,
        "body": "A command",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 18,
        "changed_files": 4,
        "created_at": "2017-10-01T05:12:24Z",
        "closed_at": "2017-10-01T18:13:37Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 327,
        "deletions": 162,
        "changed_files": 8,
        "created_at": "2017-09-06T00:25:16Z",
        "closed_at": "2017-09-06T00:26:08Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-20T02:21:41Z",
        "closed_at": "2017-07-20T02:22:15Z",
        "merged_at": null,
        "body": "Tutorial",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 22,
        "changed_files": 1,
        "created_at": "2017-07-07T18:19:01Z",
        "closed_at": "2017-10-02T17:09:00Z",
        "merged_at": "2017-10-02T17:09:00Z",
        "body": "Adding some missing descriptions to match the documentation.\r\nAlso adding zoom.wheelDelta. Unsure of would be preferred, so I put it after zoom.filter to match the d3-zoom documentation.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-31T06:03:46Z",
        "closed_at": "2017-05-31T06:05:49Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-12T10:55:21Z",
        "closed_at": "2017-05-12T15:15:10Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2017-04-05T20:01:15Z",
        "closed_at": "2017-04-05T22:48:24Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-22T14:55:42Z",
        "closed_at": "2017-03-22T15:38:04Z",
        "merged_at": "2017-03-22T15:38:04Z",
        "body": "In case this was going to happen eventually anyway, thought I'd facilitate.\r\n\r\nCloses #3084",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-20T17:44:06Z",
        "closed_at": "2017-03-20T17:52:26Z",
        "merged_at": null,
        "body": "i ass some chang",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-03-15T11:23:04Z",
        "closed_at": "2017-03-15T13:53:21Z",
        "merged_at": null,
        "body": "LICENSE",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2017-02-15T22:28:17Z",
        "closed_at": "2017-02-15T22:32:51Z",
        "merged_at": "2017-02-15T22:32:51Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2017-02-03T22:06:36Z",
        "closed_at": "2017-02-03T22:27:02Z",
        "merged_at": null,
        "body": "Doesn\u2019t work correctly because the translateExtent may need to be dependent on\r\nscale, or the zoom behavior may need to know the visible area. Related #1084.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-26T19:57:52Z",
        "closed_at": "2017-01-26T21:07:34Z",
        "merged_at": null,
        "body": "This PR adds the d3 v3 `axis.innerTickSize` and `axis.outerTickSize` so that a user searching *CHANGES.md* for the v3 syntax will find a mention of it and a pointer to the new v4 syntax\r\n\r\n<img width=\"1113\" alt=\"screen shot 2017-01-26 at 12 00 14 pm\" src=\"https://cloud.githubusercontent.com/assets/2119400/22348056/127caffe-e3bf-11e6-8354-a8b863d97535.png\">\r\n\r\nhere are the [d3 v3 Axes API docs](https://github.com/d3/d3-3.x-api-reference/blob/master/API-Reference.md#axes), for reference",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-26T18:01:58Z",
        "closed_at": "2017-01-26T18:02:36Z",
        "merged_at": "2017-01-26T18:02:36Z",
        "body": "d3-shape wants to be like the other guys",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-15T21:43:12Z",
        "closed_at": "2017-01-15T21:43:38Z",
        "merged_at": null,
        "body": "testing",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-03T17:18:07Z",
        "closed_at": "2017-01-03T17:18:31Z",
        "merged_at": null,
        "body": "update copyright year",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-12-31T15:47:40Z",
        "closed_at": "2016-12-31T15:49:43Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 114,
        "deletions": 101,
        "changed_files": 3,
        "created_at": "2016-12-05T17:45:02Z",
        "closed_at": "2016-12-05T17:45:55Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-11-22T02:56:07Z",
        "closed_at": "2016-11-22T17:11:08Z",
        "merged_at": "2016-11-22T17:11:08Z",
        "body": "A few typos in the anchors for links in API.md:\r\n\r\n\"axisTight\" -> \"axisRight\"\r\n\"axisTeft\" -> \"axisLeft\"",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 178,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-11-18T00:21:19Z",
        "closed_at": "2016-11-18T00:21:59Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-11-04T14:35:22Z",
        "closed_at": "2016-11-04T14:56:39Z",
        "merged_at": "2016-11-04T14:56:38Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-10-21T15:40:32Z",
        "closed_at": "2016-10-21T15:41:46Z",
        "merged_at": null,
        "body": "This will add the badge to show its version on CDNJS and also link to its page on CDNJS!\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2086,
        "deletions": 2388,
        "changed_files": 35,
        "created_at": "2016-10-01T23:35:15Z",
        "closed_at": "2016-10-02T03:15:10Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 24978,
        "deletions": 8813,
        "changed_files": 5,
        "created_at": "2016-09-27T17:26:42Z",
        "closed_at": "2016-09-28T17:40:38Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-09-19T20:41:46Z",
        "closed_at": "2016-09-19T20:43:03Z",
        "merged_at": "2016-09-19T20:43:03Z",
        "body": "Duplicated utcFormat entries on API reference. Fixed wrong one.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-09-16T09:21:22Z",
        "closed_at": "2016-09-19T16:11:15Z",
        "merged_at": null,
        "body": "I have made modifications to package.json adding rimraf to dev dependencies and modifying rollup-node to work on Windows and hopefully be cross platform. I have not been able to test on Linux or OSX yet but it should work fine AFAICS.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2016-09-06T19:02:14Z",
        "closed_at": "2016-09-06T19:02:40Z",
        "merged_at": null,
        "body": "merge\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2016-08-30T16:48:41Z",
        "closed_at": "2016-08-30T19:25:48Z",
        "merged_at": "2016-08-30T19:25:48Z",
        "body": "According to the [creator's twitter](https://twitter.com/mjackson/status/770427936449101824) and the [npmcdn's website](https://npmcdn.com/) the project was renamed to unpkg to avoid trademark issues.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-26T02:55:00Z",
        "closed_at": "2016-07-26T20:30:38Z",
        "merged_at": "2016-07-26T20:30:38Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-07-23T11:32:40Z",
        "closed_at": "2016-07-23T11:33:25Z",
        "merged_at": "2016-07-23T11:33:25Z",
        "body": "`Local Variables` API description is incorrect.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2016-07-18T17:08:46Z",
        "closed_at": "2016-07-18T18:55:22Z",
        "merged_at": "2016-07-18T18:55:22Z",
        "body": "Not sure if I fully understand these, but I sensed inconsistency\n- enter nodes are not defined anywhere, but placeholders are mentioned\n  everywhere\n- catmull-rom changes described restoring the old behavior, but showed\n  the new behavior\n- sentence fragment when describing invert/rescale\n- random fixes\n\n(Just little stuff, but this is probably a document people will be reading again and again.)\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-13T23:22:43Z",
        "closed_at": "2016-07-13T23:44:59Z",
        "merged_at": "2016-07-13T23:44:59Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-05T03:18:16Z",
        "closed_at": "2016-07-05T09:45:01Z",
        "merged_at": null,
        "body": "I spent almost 15mins figuring out how to import it.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-07-01T09:51:48Z",
        "closed_at": "2016-07-01T13:59:52Z",
        "merged_at": "2016-07-01T13:59:51Z",
        "body": "Removes \" There are also .\" from the end of the paragraph on d3.hierarchy.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2016-06-27T19:25:29Z",
        "closed_at": "2016-06-27T19:25:54Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2016-06-27T18:30:53Z",
        "closed_at": "2016-06-27T18:32:29Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 57,
        "changed_files": 1,
        "created_at": "2016-06-27T18:22:36Z",
        "closed_at": "2016-06-27T18:28:46Z",
        "merged_at": "2016-06-27T18:28:46Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 211,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-06-27T14:07:10Z",
        "closed_at": "2016-06-27T16:25:35Z",
        "merged_at": null,
        "body": "D3 min max slider is a d3 experiment for slider\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-06-13T18:37:24Z",
        "closed_at": "2016-06-13T18:40:06Z",
        "merged_at": "2016-06-13T18:40:06Z",
        "body": "For consistency with the previous mention of d3.set, which is linked.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-06-13T18:25:54Z",
        "closed_at": "2016-06-13T18:29:42Z",
        "merged_at": "2016-06-13T18:29:42Z",
        "body": "I was reading through this and it seemed like you meant \"inspected\" here:\n- before: \"...that also allows the axis tick arguments to be inspect.\"\n- after: \"...that also allows the axis tick arguments to be **inspected**\".\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 328,
        "deletions": 162,
        "changed_files": 9,
        "created_at": "2016-06-12T11:40:51Z",
        "closed_at": "2016-06-13T18:30:13Z",
        "merged_at": null,
        "body": "sorry, i did wrong,there is no thing\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-05-10T03:28:50Z",
        "closed_at": "2016-05-10T15:46:24Z",
        "merged_at": null,
        "body": "\u6dfb\u52a0baidumap\uff0c\u589e\u52a0\u90e8\u5206\u63a7\u5236\u754c\u9762\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2016-04-30T14:12:28Z",
        "closed_at": "2016-04-30T14:55:59Z",
        "merged_at": null,
        "body": "Please ingore, sorry for that ...\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-04-30T09:19:43Z",
        "closed_at": "2016-07-14T19:39:26Z",
        "merged_at": null,
        "body": "Added English formatting followed in India.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 5,
        "changed_files": 7,
        "created_at": "2016-04-26T19:07:21Z",
        "closed_at": "2016-04-26T19:10:45Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 123,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2016-04-20T12:03:14Z",
        "closed_at": "2016-04-20T14:19:57Z",
        "merged_at": "2016-04-20T14:19:57Z",
        "body": "Changed the Chinese locale to make it closer to the Chinese custom and follow the [localeplanet rules](http://www.localeplanet.com/java/zh/). \nAdded its corresponding test.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-04-20T11:21:41Z",
        "closed_at": "2016-04-26T20:15:33Z",
        "merged_at": null,
        "body": "If in safari use as amd, after compiler.inside scope `this` is `undefined`, also looks like same errors apears on IE as well. I added `call(window||this)` at the end, and this fix working fine.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 54,
        "changed_files": 9,
        "created_at": "2016-04-15T03:31:34Z",
        "closed_at": "2016-04-26T20:16:02Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 57,
        "changed_files": 3,
        "created_at": "2016-04-13T17:48:25Z",
        "closed_at": "2016-04-26T23:17:17Z",
        "merged_at": null,
        "body": "This speeds up d3_time_parse, a hot function.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 136,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2016-04-04T00:05:12Z",
        "closed_at": "2016-07-14T19:37:36Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-03-31T22:03:22Z",
        "closed_at": "2016-05-05T00:30:20Z",
        "merged_at": "2016-05-05T00:30:20Z",
        "body": "Hi!\n\nI was hit by what seems to be #2025 when developing a couple of canvas-based maps. This change fixes it for me.\n\nI have no idea if this is correct or makes any sense in general, but I have not found any regressions so far.\n\nThank you,\n\nLukas\n",
        "comments": 16
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-03-31T12:14:20Z",
        "closed_at": "2016-03-31T16:09:31Z",
        "merged_at": null,
        "body": "This could be a big time saver and optimisation, since you won't need to generate/call separate functions for each attribute. For lazy developers who don't use predefined functions and for anyone else.\n\nP.S. Unfortunately I couldn't install dependencies on my machine, and this might be a reason that tests don't pass as well, and I can't build. Which version of node should be used?\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1413,
        "deletions": 49,
        "changed_files": 11,
        "created_at": "2016-03-16T14:29:10Z",
        "closed_at": "2016-03-16T17:40:44Z",
        "merged_at": null,
        "body": "- Additional function to voronoi object for obtaining centroidal voronoi tessellation, using LLoyd relaxation;\n- Added tests for the above.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2016-03-07T19:55:07Z",
        "closed_at": "2016-03-07T21:16:16Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2016-03-07T08:13:20Z",
        "closed_at": "2016-07-14T19:35:21Z",
        "merged_at": null,
        "body": "Rather than starting the ticks on the minimum domain value, round up based on\nthe step size. Fixes #1757.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2016-02-24T05:51:06Z",
        "closed_at": "2016-05-14T16:28:12Z",
        "merged_at": null,
        "body": "The dragend is not properly triggered when using a touch a \"touchcancel\" event was triggered.\n\nThis caused our application to be unable to scroll in some cases when implementing scrolling behaviour inside a graph.\nOn iOS this can be reproduced by using the 4 or 5 finger swipe on the application.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-02-22T14:53:33Z",
        "closed_at": "2016-02-22T15:04:03Z",
        "merged_at": null,
        "body": "Chrome can't optimise the `for ... in` loop here as `value` is a non-local variable (i.e has been passed in from outside the function).\n\nBelow you can see before it was un-optimisable, after it optimises ok (ignore timings, they're not comparing like with like).\n### Before\n\n![before](https://cloud.githubusercontent.com/assets/249800/13221531/d127d796-d973-11e5-9b15-9037d74cad5d.png)\n### After\n\n![after](https://cloud.githubusercontent.com/assets/249800/13221544/e6a20452-d973-11e5-9fdb-bd49fd31773b.png)\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 222,
        "deletions": 222,
        "changed_files": 5,
        "created_at": "2016-02-20T05:09:41Z",
        "closed_at": "2016-02-20T15:44:28Z",
        "merged_at": null,
        "body": "Updated variables in the color class to add clarity to the variable names at a quick glance, as the subject matter can be confusing as it is. The appropriate documentation will be updated if this pull request is accepted.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-02-08T23:10:18Z",
        "closed_at": "2016-04-26T20:20:19Z",
        "merged_at": null,
        "body": "I have written a clear, easy-to-comprehend introduction for d3.js. I believe this introduction, free of complex technical terms, will swiftly and thoroughly inform anyone about the use-cases, merit, and advantages, including the celebrated features, of d3.js. Seasoned developers, new programmers, and even nontechnical visitors will benefit from the clear language, exposing d3.js to a broader range of users.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2016-02-06T13:48:53Z",
        "closed_at": "2016-04-26T20:22:30Z",
        "merged_at": null,
        "body": "To make D3 more approachable to a larger number of users\u2014from informed developers to curious passersby and new and interested visitors\u2014I have added a new section to the README. The section is entitled What to Use D3 for and When to Use It. As the name suggests, the new section, a brief paragraph, explains in plain and straightforward language what D3 is used for and when one should consider using it in a project. \n\nOther repositories may begin to use this new informative and catchy section soon, as my colleagues contact open-source technologies in an effort to make them more accessible to the tens of thousands of new users learning to code and thousands joining GitHub every day.\n\nThank you!\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2016-01-27T22:32:30Z",
        "closed_at": "2016-01-27T22:41:33Z",
        "merged_at": null,
        "body": "I would like to call selection.style(), with a single argument that is a map generating function. Something like this:\n\n```\nselection.style(function(d) {return {'fill': someScale(d.x), 'stroke': someOtherScale(d.y)};});\n```\n\nThis will make it usable with functions that generate [inline styles](https://facebook.github.io/react/tips/inline-styles.html) for React.js.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-01-20T17:17:26Z",
        "closed_at": "2016-01-20T17:29:00Z",
        "merged_at": null,
        "body": "I'm using webpack to build a third party library and want to avoid exposing my lib's d3 to the global namespace since the client might already be using another version of d3 which I don't want to be overwritten.\n\nWebpack supports both AMD and CommonJS but it will use [the first one](https://github.com/webpack/webpack/issues/883) so it ends up using the AMD definition here which has this extra \"export\" to the window object.\n\nI think this exposure is not needed when d3 is used with AMD and it's trivial to be added in user code.\n\nThoughts?\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2016-01-20T07:21:37Z",
        "closed_at": "2016-01-20T17:35:09Z",
        "merged_at": null,
        "body": "Capitalized lines 100-103 to match other single-line comments\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-01-11T22:30:36Z",
        "closed_at": "2016-01-11T23:37:17Z",
        "merged_at": "2016-01-11T23:37:16Z",
        "body": "if we want to define a different entry point for browserify, we should be using the browser key: https://github.com/substack/node-browserify#browser-field\n\nThe browserify key in package.json should be an object that is used to define globalt transforms: \nhttps://github.com/substack/node-browserify#browserifytransform\n\nThis fix will allow d3 to be used through cartero (https://github.com/rotundasoftware/cartero) which relies on browserify for creating bundles\n\nThanks!\nF\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2016-01-10T17:19:14Z",
        "closed_at": "2016-01-20T17:35:58Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-01-02T12:04:36Z",
        "closed_at": "2016-01-02T16:53:31Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2016-01-01T01:56:25Z",
        "closed_at": "2016-01-02T16:53:38Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 114,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-12-29T09:04:52Z",
        "closed_at": "2015-12-30T16:49:57Z",
        "merged_at": null,
        "body": "Platlets is the extention of Pie-Chart on d3. Its a new chart having\nattractive shape. If you want to know what the pie chart looks like\nvisit:http://bl.ocks.org/mbostock/3887235\n\nFor platelets visit: http://bl.ocks.org/lokesh005/1b23c84b68f5be134ff0\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 136,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-12-23T21:19:13Z",
        "closed_at": "2016-07-14T19:29:08Z",
        "merged_at": null,
        "body": "added uk_Ua locale as well as some tests\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2015-12-16T15:11:42Z",
        "closed_at": "2016-04-06T21:00:15Z",
        "merged_at": null,
        "body": "Current engines (tested on Firefox and Chrome) aren't _that_ smart about `arguments` yet.\nIt is slow to assign to one while using the others, because they are bound: changing `name` also changes `arguments[0]`, which hinders the engines' ability to optimize the code.\n\nThe second issue is using a non-local value (and a `arguments` one at that) as the topic of a `for`-`in`, which is suboptimal.\nIn Chrome's profil, it warns with: \"Not optimized: ForInStatement with non-local each variable\".\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2015-12-14T20:26:35Z",
        "closed_at": "2015-12-14T21:13:19Z",
        "merged_at": null,
        "body": "Sometimes there is not enough screen real estate to use the standard axis label for your axes. (This is especially true when packing in a lot of Tufte-style small multiples.) This code change adds a \"firstTick\" method to D3's axis function so that you can replace the first value in your axis with a custom text string. In the example block (linked below), I have replaced the first value of of the X-axis with the custom string \"Year\".\n\nhttp://bl.ocks.org/jharveymerkle/4ca2bf750b02cb724cff\n\nThe files changed are src/svg/axis.js and test/svg/axis-test.js.\n\nThis update to D3 is offered with permission of Merkle, Inc. \nhttp://www.merkleinc.com\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-12-11T08:51:48Z",
        "closed_at": "2015-12-14T19:17:06Z",
        "merged_at": "2015-12-14T19:17:06Z",
        "body": "- (x - x0) / k sometimes provides a value with trailing 0's due to division. This means groups that have an integer value appear to be a decimal number\n\nExample of problem below:\n![image](https://cloud.githubusercontent.com/assets/6097953/11739551/33079cd8-9fa1-11e5-8d98-117c850d9de2.png)\n\nWith changes:\n![image](https://cloud.githubusercontent.com/assets/6097953/11739563/4f6ea2ae-9fa1-11e5-9530-20e0d41414d5.png)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2015-12-07T15:38:28Z",
        "closed_at": "2016-04-06T21:43:02Z",
        "merged_at": null,
        "body": "The Y coordinate gets set to zero for all children/grandchildren, etc.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-11-27T09:05:20Z",
        "closed_at": "2015-11-30T02:29:33Z",
        "merged_at": null,
        "body": "because `src/` is useless in the npm module\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2015-11-25T17:03:12Z",
        "closed_at": "2015-11-30T02:40:19Z",
        "merged_at": "2015-11-30T02:40:19Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-11-25T12:34:17Z",
        "closed_at": "2015-11-25T17:01:06Z",
        "merged_at": null,
        "body": "\u2026 zero\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-11-24T03:41:15Z",
        "closed_at": "2015-11-28T05:56:01Z",
        "merged_at": null,
        "body": "Hey Mike! I added  fix for #2646. \nThe issue was the tree.separation method was using the depth of the left and right nodes. In the case in which the root had only one child, both nodes were equal to root (left and right = root) which has a depth of 0 causing it to fail. So, on line 7053 of d3.js I made if (node.x < left.x) left = node; to if (node.x <= left.x) left = node;\nI hope that is an appropriate fix. It passed all the tests.\nAlso, thank you for making d3. It is awesome!\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2015-11-23T19:12:47Z",
        "closed_at": "2015-11-23T19:13:59Z",
        "merged_at": null,
        "body": "Update My Repo\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 113,
        "deletions": 4,
        "changed_files": 8,
        "created_at": "2015-11-13T00:05:14Z",
        "closed_at": "2016-04-06T21:01:09Z",
        "merged_at": null,
        "body": "`domainSegmented()` splits the domain in segments which \"walk the range at uniform speed\". This means that if one replaces a 2-segment range [mn, mx] with a uniformly-split range [mn, ..., mx] of length l, then replacing the domain [mnD, mxD] with domainSegmented([mnD, mxD], l) will have no effect.\n\nThis transformation is useful when the range of a scale is (say) a highly-segmented colorbrewer scale, and one wishes to interpolate between the endpoints at the appropriate speed. More concretely, it allows one to easily change a colormap from:\n\n`d3.scale.linear().domainSegmented([mnD, mxD], 6).range(colorbrewer.Blues[6])`\n\nto\n\n`d3.scale.log().domainSegmented([mnD, mxD], 6).range(colorbrewer.Blues[6])`\n\nor\n\n`d3.scale.pow().exponent(.5).domainSegmented([mnD, mxD], 6).range(colorbrewer.Blues[6])`\n\nand the domain segments are split correctly.\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 29,
        "changed_files": 6,
        "created_at": "2015-11-12T14:05:38Z",
        "closed_at": "2015-11-16T16:02:57Z",
        "merged_at": "2015-11-16T16:02:57Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2015-11-11T20:26:47Z",
        "closed_at": "2015-11-12T14:05:54Z",
        "merged_at": null,
        "body": "This reverts #312, since we later implemented a more robust check in #1005 using a zero-delay timeout to expire click suppression.\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 143,
        "deletions": 139,
        "changed_files": 3,
        "created_at": "2015-11-10T15:57:28Z",
        "closed_at": "2015-11-10T16:34:40Z",
        "merged_at": "2015-11-10T16:34:40Z",
        "body": "Firefox doesn\u2019t correctly hoist functions defined inside if blocks, so move the functions out of the if block.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 29,
        "changed_files": 11,
        "created_at": "2015-11-06T01:09:28Z",
        "closed_at": "2015-11-06T04:11:59Z",
        "merged_at": null,
        "body": "In order to be consistent with the Map and Set spec, I have refactored\nthe forEach method on both collection primitives.\n\n**THIS DOES INTRODUCE A BREAKING CHANGE**\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2015-11-04T11:54:47Z",
        "closed_at": "2016-10-20T17:53:35Z",
        "merged_at": null,
        "body": "When using the zoom behavior at the moment zooming by mouse wheel or double click causes a zoom which is a multiple of 2. A custom zoom factor would allow more control over zooming speed, especially with mouse wheels.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 128,
        "deletions": 72,
        "changed_files": 7,
        "created_at": "2015-10-25T21:46:19Z",
        "closed_at": "2015-10-25T22:20:05Z",
        "merged_at": "2015-10-25T22:20:05Z",
        "body": "When a scheduled transition is pre-empted by a newer transition starting, we now cancel the old transition\u2019s timers immediately, rather than waiting for the old transition to start.\n\nTODO:\n- [x] d3.timer should return void (at least until 3.6 or 4.0)\n- [x] verify whether those errors can be thrown\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 136,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-10-24T21:33:50Z",
        "closed_at": "2015-10-26T03:10:53Z",
        "merged_at": "2015-10-26T03:10:53Z",
        "body": "Added Hungarian locale and a test for it\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2015-10-24T15:56:28Z",
        "closed_at": "2015-10-24T15:57:54Z",
        "merged_at": "2015-10-24T15:57:54Z",
        "body": "If a selection is missing elements, then selection.data would still attempt to evaluate the optional key function for the missing elements, resulting in an uncaught TypeError. For example:\n\n``` js\nd3.selectAll(\"p\")\n  .select(function(d, i) { return i & 1 ? this : null; })\n    .data([1, 2, 3], Number);\n```\n\nNow, any missing elements are automatically assigned to the exit selection.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1075,
        "deletions": 895,
        "changed_files": 100,
        "created_at": "2015-10-22T20:29:03Z",
        "closed_at": "2015-11-10T03:58:11Z",
        "merged_at": "2015-11-10T03:58:11Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 929,
        "deletions": 324,
        "changed_files": 4,
        "created_at": "2015-10-04T04:03:30Z",
        "closed_at": "2016-10-20T17:53:35Z",
        "merged_at": null,
        "body": "Fixes #1992.  See the [demo](http://klortho.github.io/d3-flextree/).\n\nSee [klortho/d3-flextree](https://github.com/klortho/d3-flextree) for more info.  This is a rewrite of layout/tree.js, based on [this code](https://github.com/cwi-swat/non-layered-tidy-trees) from a 2013 paper, [Drawing Non-layered Tidy Trees in Linear Time](http://oai.cwi.nl/oai/asset/21856/21856B.pdf). A.J. van der Ploeg, 2013.\n\nI also wrote a script to turn it into a plugin, which I listed on your plugin wiki page.\n\nI added a bunch of tests to test/layout/tree-test.js, and there are a lot more tests, include regression tests, [here](http://klortho.github.io/d3-flextree/test/).\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-30T18:09:18Z",
        "closed_at": "2015-10-01T15:01:10Z",
        "merged_at": null,
        "body": "Even though in a sense the ES6 spec isn't intuitive (.keys() / .entries()?)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-09-30T18:02:19Z",
        "closed_at": "2015-10-21T17:08:11Z",
        "merged_at": null,
        "body": "Although .size is still a function and not a getter as in ES6\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-09-18T14:17:36Z",
        "closed_at": "2015-10-21T17:09:30Z",
        "merged_at": "2015-10-21T17:09:30Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-09-14T17:28:12Z",
        "closed_at": "2015-10-21T17:22:34Z",
        "merged_at": null,
        "body": "Addresses suggestion: Preserve comments in d3.js (issue #2554)\nhttps://github.com/mbostock/d3/issues/2554\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2015-09-11T18:13:35Z",
        "closed_at": "2015-10-21T17:26:53Z",
        "merged_at": null,
        "body": "Check if resulting endAngle is NaN, if it is set it to 0. Fixes [Issue 2475](https://github.com/mbostock/d3/issues/2475)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2015-09-09T20:16:57Z",
        "closed_at": "2016-01-30T00:23:54Z",
        "merged_at": null,
        "body": "fixes https://github.com/mbostock/d3/issues/2549\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2015-09-09T10:45:29Z",
        "closed_at": "2016-02-11T20:03:20Z",
        "merged_at": "2016-02-11T20:03:20Z",
        "body": "Drag behavior is broken for svg:use elements on certain\nbrowsers. This includes `d3.layout.force(...).drag()`\n\nOn browsers like Internet Explorer 11, the `<svg:use>`\nEventTarget is represented by a SVGElementInstance that looks\nlike this:\n\n```\n    [object SVGElementInstance]\n       {\n          [functions]: ,\n          __proto__: { },\n          childNodes: { },\n          constructor: { },\n          correspondingElement: { },\n          correspondingUseElement: { },\n          firstChild: null,\n          lastChild: null,\n          nextSibling: null,\n          parentNode: { },\n          previousSibling: { }\n       }\n```\n\nNo other properties such as `event.target.style` are present. We must use the\n`event.target.correspondingElement` property to access the actual SVG element\ninstantiated by the `<svg:use>` in order to have a successful drag.\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 268,
        "deletions": 15,
        "changed_files": 3,
        "created_at": "2015-09-07T12:30:21Z",
        "closed_at": "2016-10-20T17:53:35Z",
        "merged_at": null,
        "body": "Added support of Pointer events in addition to Touch events\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-27T07:52:50Z",
        "closed_at": "2015-10-21T17:32:44Z",
        "merged_at": null,
        "body": "Without this, custom builds that depend on behavior/zoom, yet don't\ninclude transitions fail to include the needed d3_selection_interrupt.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 65,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2015-08-27T04:07:22Z",
        "closed_at": "2015-10-21T17:35:49Z",
        "merged_at": null,
        "body": "This PR adds the `margin` parameter to the pack layout. It allows to specify the distance to the parent circle in the same way that the `padding` parameter allows to specify the distance to the sibling circles.\n\nDemo [here](http://bl.ocks.org/larskotthoff/085bb57f710aa417af41). I implemented this in response to [a question on Stackoverflow](https://stackoverflow.com/questions/32235067/padding-and-margin-on-pack-layout).\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 65,
        "changed_files": 4,
        "created_at": "2015-08-23T12:40:04Z",
        "closed_at": "2015-10-21T17:43:27Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-21T17:12:39Z",
        "closed_at": "2015-10-21T17:51:23Z",
        "merged_at": "2015-10-21T17:51:23Z",
        "body": "Added support for Swedish locale\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-08-18T15:35:45Z",
        "closed_at": "2015-10-21T17:53:33Z",
        "merged_at": null,
        "body": "An attempt to take into account limited floating point precision with the goal of making the number of returned array elements more predictable. See issue #2524.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-08-07T08:09:33Z",
        "closed_at": "2015-11-30T03:04:49Z",
        "merged_at": null,
        "body": "I find that the curve generated by d3_svg_lineMonotone sometimes has a \u201cbump\u201d, so i try to read the understand the algorithm in  http://en.wikipedia.org/wiki/Monotone_cubic_interpolation \u3002\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-08-05T11:44:13Z",
        "closed_at": "2015-08-06T11:58:37Z",
        "merged_at": null,
        "body": "Heya,\n\nA little contribution to enable to set multiple attributes at once. Like `x` and `y` for a `svg` element.\n\nUse case, being able to set two arguments at once (code from http://bl.ocks.org/mbostock/4207744)\n\n``` javascript\n// Using translate\n  svg.selectAll(\"text\")\n      .data(cantons.features)\n    .enter().append(\"text\")\n      .attr(\"transform\", function(d) { return \"translate(\" + path.centroid(d) + \")\"; })\n      .text(function(d) { return d.properties.name; });\n// Using x/y\n  svg.selectAll(\"text\")\n      .data(cantons.features)\n    .enter().append(\"text\")\n      .attr(function(d) { var c = path.centroid(d); return {x: c[0], y: c[1]} })\n      .text(function(d) { return d.properties.name; });\n```\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 535,
        "deletions": 486,
        "changed_files": 7,
        "created_at": "2015-07-28T13:09:00Z",
        "closed_at": "2015-07-28T13:09:19Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 243,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2015-07-09T22:23:59Z",
        "closed_at": "2016-05-14T16:32:37Z",
        "merged_at": null,
        "body": "This addition makes it very easy to have millisecond resolution ticks on the axis \n\ne.g.\n\n```\nmaxBottomAxis.ticks(d3.time.milliseconds, 100).tickFormat(d3.time.format('%L'));\n```\n\nIssue #1529 does not provide quite the same functionality since it requires an explicit modification of the data.\n\n```\nd.time = new Date(+d.time * 1000);\n```\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2015-06-28T01:02:51Z",
        "closed_at": "2015-10-21T17:57:06Z",
        "merged_at": null,
        "body": "Flexible class additional \n1. Check node class name\n2. add class name\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2015-06-26T21:36:25Z",
        "closed_at": "2015-10-21T18:02:54Z",
        "merged_at": null,
        "body": "This addresses #2055. Since someone else also ran into this issue, I thought I\u2019d submit a PR with the patch I wrote a little while ago. I\u2019d love to see this go in, but I also realize there\u2019s been zero discussion from any maintainers on the issue report for the last several months. Maybe this can spur some discussion?\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 112,
        "deletions": 71,
        "changed_files": 4,
        "created_at": "2015-06-19T00:19:30Z",
        "closed_at": "2016-06-28T21:23:50Z",
        "merged_at": null,
        "body": "The padding parameter previously was constant across the layout, and required a second pass of d3_layout_packSiblings. Padding also would not apply to group nodes, only to the leaf nodes they contain.\n\nWith this change, it is possible to specify padding on any node, even group nodes. This value is added to the outer radius of the node when packing the nodes. This gives complete control over the spacing of any part of the layout. Since the computed padding is also exposed on the node via `node.p`, it is also possible to use the padding directly in the diagram. Padding is also computed on the first packing pass.\n### Related issues\n\nThis addresses #2247 and #1686 but differs from the solution proposed in #2379, which adds consideration for the `value` property on a group node. \n### Padding vs value\n\nThe `value` of a node in pack layouts is treated as the relative _area_ of a node. The `padding` of a node is added directly to the resulting _radius_ of a node.\n### Demos\n\n[Demo](http://bl.ocks.org/hughes/aeee6c44713598563393)\n\n[Demo 2](http://bl.ocks.org/hughes/9a5a68c0d49e02803e06)\n### Tests\n\nThis change affected all pack layout tests, as the computed padding is added to the projection of the test results, which is zero in all previously built tests. Six additional tests have been added to ensure expected behaviour of padding constants and functions.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-06-09T02:01:48Z",
        "closed_at": "2015-07-04T02:59:23Z",
        "merged_at": null,
        "body": "Per bower/bower.json-spec@a325da3\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 870,
        "deletions": 870,
        "changed_files": 63,
        "created_at": "2015-05-20T14:08:24Z",
        "closed_at": "2016-05-14T16:43:39Z",
        "merged_at": null,
        "body": "When using the non-minified version of d3, chromium Version 41.0.2272.76 Built on Ubuntu 14.04, running on LinuxMint 17.1 (64-bit) threw errrors on any code using non-ascii utf8 characters (e.g. greek letters).  For my own use in development I replaced all greek letters by their spelled-out ascii names.\n\nI know that utf8 should be supported but for some reason in my case it wasn't.\n\nAll tests except test/geo/circle-test.js passed immediately. circle-test passed with slightly reduced floating point precision (1e-4 instead of 1e-5).  Circle-test didn't pass on my machine for the original HEAD commit either.\n\nCheers,\nDaniel\n\nPS: thanks for this awesome library. It make's visualizations (and more) fun.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1252,
        "deletions": 5,
        "changed_files": 8,
        "created_at": "2015-05-20T10:11:30Z",
        "closed_at": "2016-10-20T17:53:34Z",
        "merged_at": null,
        "body": "An octree and 3d force layout, almost entirely copied off of the existing quadtree and 2d force layout implementations with an extra dimension added. Appropriate tests have been added for the quadtree, but not the force layout.\n\nIf it's not appropriate for the base library, perhaps it could be a plugin?\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2015-05-19T10:23:18Z",
        "closed_at": "2015-05-19T14:40:12Z",
        "merged_at": "2015-05-19T14:40:12Z",
        "body": "specifying the type and URL is deprecated:\n\nhttps://docs.npmjs.com/files/package.json#license\nhttp://npm1k.org/\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-05-13T03:10:01Z",
        "closed_at": "2015-07-04T03:03:48Z",
        "merged_at": "2015-07-04T03:03:48Z",
        "body": "Per https://github.com/bower/bower.json-spec/commit/a325da3d79baab018c572d75dc1781b12322f6cd\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2015-05-11T17:13:27Z",
        "closed_at": "2016-01-06T05:01:13Z",
        "merged_at": null,
        "body": "This adds an optional function to transform column names to `dsv.parse(...)`, comparable to the row accessor added in  https://github.com/mbostock/d3/pull/1107, \n\nThe motivation is that input datafiles may have column names...\n- with arbitrary case generated from other packages that are case insensitive like SAS or SPSS, requiring conversion to some defined case in Javascript\n- with duplicate / missing column names, that need to be deduped, cleaned up, or invented, (e.g. see rules for \"Variable Names\" in [Stat/Transfer](https://www.stattransfer.com/support/manual/)\n\nTests are added that cover these two examples:\n\n``` js\nvar rows = d3.csv.parse(csv, null, function(name) { return name.toLocaleLowerCase(); })\nvar rows = d3.csv.parse(csv, null, function(name, i) { return \"var\"+i; })\n```\n\nhttp://stackoverflow.com/questions/26998476/right-way-to-modify-d3-csv-to-lower-case-column-names\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-05-06T17:51:37Z",
        "closed_at": "2015-10-26T03:22:37Z",
        "merged_at": null,
        "body": "When d3.sum(values) == 0, k should be 0\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-05-06T07:17:24Z",
        "closed_at": "2015-05-06T17:23:21Z",
        "merged_at": null,
        "body": "I would go with the convention here and put the parens.  The result is the same, but I think the different style is confusing when looking across the code base.  In all other cases the parens are used when creating a map.  At first I thought maybe this was slightly more efficient or something.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2015-05-04T21:14:57Z",
        "closed_at": "2015-10-21T21:59:19Z",
        "merged_at": null,
        "body": "This addresses some of the places where an exception from a callback can corrupt the internal state of d3.timer and/or d3_transitionNode, resulting in the issue at #2415.\n\nI'm submitting this patch as it does improve the situation, but to be honest it's not a full fix, nor a particularly elegant one. Most of D3 can get away with leaving exceptions to blast their way through, and I think that's a good design. Here, however, seems to be a slippery slope of needing to catch and delayed-throw any possible error to keep the mechanism on track.\n\nThe timer/transition logic can get in a really bad state depending on where the exception is thrown. If an exception hits `d3.timer` it simply breaks permanently, no more timers fire whether existing or registered later. Fixing that reveals a worse situation though: the transition logic monkey patches its own (internal to `d3.timer`!) callback, and usually only _after_ it has called its own callbacks [tweens, factories, event handlers\u2026] \u2014\u00a0so the internal transition logic stops advancing properly if _it_ doesn't handle exceptions, but it keeps getting triggered triggered triggered triggered forever anyway now that d3.timer does.\n\nPart of me still wants to fix this (thus this start), but I'd like some feedback first on what the best direction is:\n- give up and say timer/tween callbacks must not ever throw. _drawback:_ if any one caller breaks that rule, all others suffer.\n- have d3.timer catch but also automatically cancel any of its callbacks that throw. _drawback:_ means transition does not complete, probably leaving its selection/elements corrupted still.\n- wrap every single call of d3_transitionNode to any external tween/factory/event(/etc.?) handler with its own try/catch wart\n- overhaul d3_transitionNode to be more naturally robust, somehow.\n\nThoughts?\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 20,
        "changed_files": 6,
        "created_at": "2015-05-04T19:22:51Z",
        "closed_at": "2016-04-26T23:20:45Z",
        "merged_at": null,
        "body": "Note that this is only a partial fix for #2413 \u2014\u00a0the other part may be \"unfixable\". However, even if we are stuck with attr/style tweens as they are, I still think it makes sense to fix the custom/generic `.tween` handling for consistency with the rest of D3. I cannot see ever passing a \"current value\" parameter due to the generic nature of the callback, and IMO best to fill in the \"j\" parameter now and let any [unlikely?] future parameters fill in _after_ that.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 186,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2015-05-04T05:44:37Z",
        "closed_at": "2015-05-04T10:36:53Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 228,
        "deletions": 16,
        "changed_files": 3,
        "created_at": "2015-04-23T16:21:15Z",
        "closed_at": "2015-09-07T12:32:59Z",
        "merged_at": null,
        "body": "Support of pointer events in Internet Explorer 10 and 11\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 15,
        "changed_files": 4,
        "created_at": "2015-04-22T21:57:30Z",
        "closed_at": "2016-10-20T17:53:33Z",
        "merged_at": null,
        "body": "This makes e.g. [the bubble demo](http://bl.ocks.org/mbostock/9631744) usable via touchscreen on Windows machines, and should remain future proof as other major browsers adopt Pointer Events (and as MS [adds Touch Events](http://blogs.msdn.com/b/ie/archive/2014/07/31/the-mobile-web-should-just-work-for-everyone.aspx) for backwards compatibility on some of their platforms).\n## Miscellaneous notes\n- Unfortunately, this required an (albeit minor and backwards compatible) addition to d3.mouse. My [original go at this](https://github.com/mbostock/d3/commit/736cc499739373d861d625affbf87991a36736f5) compared the ids itself, which seemed a better encapsulation, but the current drag code now already expects a missing (i.e. falsy) position return value as d3.touch gives so I've followed suit here. May actually be useful to other PE-aware users of d3.mouse I suppose.\n- I've made the touch-action setting a bit more careful in this go-'round. I again debated whether or not d3 should be setting a style property like this, but a) it's already doing much crazier DOM hacks when needed for other event handling, b) better to have it work by default for the 99% of cases and have anyone who really has some way for touch-action to remain 'auto' and still get useful work out of d3.drag (they can set back themselves).\n- Finally, as a more general comment, I haven't updated d3.zoom to work with PE. In my opinion, that behavior should be leveraging the work in d3.drag (+ one further trivial modification to also pass along the dragId with its events) to track touches in a cross-platform way but that needs a bit further discussion beyond https://github.com/mbostock/d3/issues/1793#issuecomment-38082270 \u2014 I have long been using `d3.drag` to track touches on a _parent_ element (rather than an actually dragged element) and it works fine by simply adjusting via `.origin()`.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-04-18T00:03:11Z",
        "closed_at": "2015-10-21T18:33:31Z",
        "merged_at": null,
        "body": "I tried to modify the \"text-anchor\" style for ticks using the `tickFormat` method on d3 axes. The function was roughly this:\n\n``` js\nfunction tickFormat(tick) {\n  d3(this).style(\"text-anchor\", \"end\");\n  return tick;\n}\n```\n\nHowever, the styling doesn't take effect. Internally, d3 adds default \"text-anchor\" styling to the ticks _after_ the `tickFormat` function is applied, meaning any \"text-anchor\" value set in the `tickFormat` function gets overridden.\n\nTo fix this, I just moved the part applying `tickFormat` to be after the \"text-anchor\" assignment. This gives a user the ability to override the default styling.\n\nNot a huge deal, but helpful!\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-13T18:27:30Z",
        "closed_at": "2016-01-20T17:39:10Z",
        "merged_at": null,
        "body": "It is simply an import.html with the following content:\n\n```\n<script src=\"d3.min.js\" charset=\"utf-8\"></script>\n```\n\nWhen working with web components, every component that uses d3 will import it through:\n\n```\n<link rel=\"import\" href=\"../d3/import.html\">\n```\n\nThis will prevent importing d3 more than once.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 377,
        "deletions": 346,
        "changed_files": 5,
        "created_at": "2015-04-10T21:10:01Z",
        "closed_at": "2015-10-21T18:37:32Z",
        "merged_at": null,
        "body": "Move the interpolators from svg/line.js to svg/interpolator.js. Primary purpose is to expose the interpolator functions directly to users. Will update docs if/when this is merged in.\n\nCloses #2385 \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-04-07T05:28:04Z",
        "closed_at": "2015-10-21T18:44:02Z",
        "merged_at": "2015-10-21T18:44:02Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-04-04T21:01:22Z",
        "closed_at": "2015-04-09T18:26:32Z",
        "merged_at": null,
        "body": "D3 was bold when it shouldn't be.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 18,
        "changed_files": 5,
        "created_at": "2015-04-03T13:55:25Z",
        "closed_at": "2015-10-21T18:20:04Z",
        "merged_at": null,
        "body": "First attempt to make the parents reflect their own size in addition to the size of their children. This is in response to issue #2247 and #1686. This is the same issue I faced as well. I had the additional problem where I could not drag and drop a circle into a parent with a single child since it was the same size. \n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 13,
        "changed_files": 9,
        "created_at": "2015-04-02T13:56:58Z",
        "closed_at": "2015-10-25T22:20:28Z",
        "merged_at": null,
        "body": "We at Kiln recently noticed that calling `.remove()` on a transition would not always work as expected (though explicitly removing the element from an `.each(\"end\", \u2026)` handler did work).\n\nIt turns out that it wasn\u2019t working in the situation where the running transition had preempted a transition that had not yet started (due to a delay).\n\nThis patch (with test) seems to resolve the problem, though you may have a better idea for how to deal with it. In any case it seems to me that the `this[ns].count < 2` check is too simplistic, since there may be transitions with ids less than the active one, that will therefore never run.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2015-03-31T20:48:29Z",
        "closed_at": "2015-10-22T20:29:27Z",
        "merged_at": null,
        "body": "Using a selection created via e.g. `var sel = d3.selectAll(someElement.children)` used to work, but in https://github.com/mbostock/d3/commit/9c3df31216aa28d8252b216b558cbb5907480b5b#diff-d93c7c1ccac09d19287c11d2d115758aL61 a critical conversion to `d3_array` was factored out of that path. This resulted in such selections exploding when certain array-dependent methods were used, such as `sel.sort()`.\n\nSimple fix, plus now a test for this code path. (The existing test had only been exercising `sel.selectAll` but not `d3.selectAll`!)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-27T14:14:47Z",
        "closed_at": "2015-10-21T18:51:52Z",
        "merged_at": null,
        "body": "Support for de_CH locale\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 8,
        "changed_files": 5,
        "created_at": "2015-03-26T23:36:15Z",
        "closed_at": "2015-07-04T03:03:47Z",
        "merged_at": "2015-07-04T03:03:47Z",
        "body": "Fixes #2359.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-03-26T12:00:46Z",
        "closed_at": "2015-03-26T12:23:24Z",
        "merged_at": null,
        "body": "Also improves the readability a bit I think.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-03-26T11:48:55Z",
        "closed_at": "2015-03-26T12:54:51Z",
        "merged_at": null,
        "body": "I found a un-caught exception regarding to NaN while following tutorial part 3.\nThe root cause of this is a parse error, and this occurs when the data file is not properly formatted.\nWhen attempting to set attribute, we already avoid when the value x is NULL.\nBy removing attribute when the x is NaN, we can prevent un-handled NaN exception in browser.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2015-03-24T14:01:31Z",
        "closed_at": "2015-07-04T03:03:47Z",
        "merged_at": "2015-07-04T03:03:47Z",
        "body": "During a combined zoom/pan gesture, controlled via simultaneous use of\nthe mousewheel and dragging, it is possible for the drag to finish\nbefore the use of the mousewheel finishes.  The mousewheel gesture is\ndeemed to be finished if 50ms passes with no mousewheel event.\n\nAlthough the \"zoomend\" event is only dispatched when _both_ gestures\nhave finished, the variable \"center0\" was being reset when _either_\ngesture was finished, causing an error in the mousewheel handler.\n\nFixes #2205.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-03-20T19:01:30Z",
        "closed_at": "2015-03-20T19:12:34Z",
        "merged_at": null,
        "body": "Prevents error that is thrown when a resize event happens.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5111,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-03-19T13:33:05Z",
        "closed_at": "2015-03-31T20:57:54Z",
        "merged_at": null,
        "body": "As I can see, you are carefully fill tags and labels for issues in your repo.\n\n For such cases I create a [github_changelog_generator](https://github.com/skywinder/github-changelog-generator), that generate change log file based on **tags**, **issues** and merged **pull requests** from :octocat: Issue Tracker.\n\n This PR add change log file to your repo (generated by this script).\n You can look, how it's look like here: [Change Log](https://github.com/skywinder/d3/blob/add-change-log-file/CHANGELOG.md)\n\n Some essential features, that has this script:\n-  it **exclude** not-related to changelog issues (any issue, that has label `question` `duplicate` `invalid` `wontfix` )\n- Distinguish issues **according labels**:\n  - Merged pull requests (all `merged` pull-requests)\n  - Bug fixes (by label `bug` in issue)\n  - Enhancements (by label `enhancement` in issue)\n  - Issues (closed issues `w/o any labels`)\n- Generate neat Change Log file according basic [change log guidelines](http://keepachangelog.com).\n\nYou can easily update this file in future by simply run script: `github_changelog_generator` in your repo folder and it make your Change Log file up-to-date again!\n\nHope you find this commit as useful. :wink:\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2015-02-16T17:59:32Z",
        "closed_at": "2016-10-20T17:53:33Z",
        "merged_at": null,
        "body": "Running into problems with voronoi use from with the nvd3 library, and while debugging I noticed that cascading conditional starting on line 51 of `cell.js` can end up with a `null` value, which causes `CreateBorderEdge` to choke de-referencing for an `x` value.\n\nNot really understanding this code, it seems that we would not want to create a border edge in that case.\n\nIs there any harm it just skipping its creation?\n\nFWIW, the nvd3 code was fixed to remove duplicate points (see https://github.com/novus/nvd3/pull/584).\n\nThanks for any insights you can offer.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 91,
        "deletions": 60,
        "changed_files": 3,
        "created_at": "2015-02-16T16:07:23Z",
        "closed_at": "2016-04-26T23:22:24Z",
        "merged_at": null,
        "body": "##### Description of the change\n\nThe `padAngle` function accepted a single number previously, but now accepts an array of two values too, in which case the left and right pad angle are set separately as specified in the array. This allows for the creation of sunburst charts with straight separation edges. Of course, the `padAngle` can still return an accessor function, that can return an array.\n##### Reason for the change\n\nThis was something I needed in a project, but it was not possible to do this without changing D3 code. Hopefully, my changes can (after some feedback) be of use to others too.\n\nThe fundamental problem is that when one applies a gap between arcs in a partition using some definition in radians, a wedge-shaped gap is formed. The existing `padAngle` implementation handles this nicely already, by making the inner and outer padding slightly different, so that a straight edge gap is formed. However, it is not possible to extend this gap to outer rings, because a segment always has a padding both to the left and right of it. This change makes it possible to set the padding for the left and right side of a segment separately.\n##### Demo / application of the change\n\n[This bl.ocks.org demo](http://bl.ocks.org/Caster/e5b50054e36a34dbb6b8) demonstrates what I needed in my project, using some made up data. Notice how the padding between segments in the inner ring extends to the outer ring, while the segments in the outer ring do not have inner padding.\n##### Remarks\n\nI noticed how there is _a lot_ of functionality stuffed in that function already ( :-) ), so some things may not work well together with this change (like rounded segment corners). However, all existing tests still pass. I am just not really sure how to write tests, so I would really appreciate some pointers if tests are desired (and I assume they are).\n\nAll feedback is appreciated and I am definitely willing to make (big) changes if necessary :-)\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-02-13T00:04:32Z",
        "closed_at": "2015-04-06T22:28:16Z",
        "merged_at": "2015-04-06T22:28:16Z",
        "body": "Currently, the subject of the readme's last sentence is \"D3's emphasis,\" which is bit abstract for a subject. Foregrounding D3 and having it as the main actor would make the sentence stronger and clearer.\n\nAdditionally, the adverbial clause (begins with \"combing...\") is a little odd. I moved this adverbial clause to the beginning to clarify the relationship between \"combining\" and \"D3.\" Currently, the clause is modifying the verb \"gives,\" but placing it after \"framework\" makes it seem like its actually modifying \"framework.\" \n\nIn any case, I just felt that the last sentence was a little long and odd, so I'm proposing these changes and hoping that you find them helpful. \n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-02-11T07:00:24Z",
        "closed_at": "2015-02-12T03:10:24Z",
        "merged_at": "2015-02-12T03:10:24Z",
        "body": "Update README.md to include a serial comma to better resolve ambiguity between the three terms HTML, SVG, and CSS. [Wikipedia](http://en.wikipedia.org/wiki/Serial_comma) states that an _omission_ of a comma before the last term can suggest a stronger connection between the last two items in a series.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 15,
        "changed_files": 5,
        "created_at": "2015-02-08T02:49:11Z",
        "closed_at": "2015-10-22T20:35:33Z",
        "merged_at": null,
        "body": "We don\u2019t need the index.js to unset the global if we don\u2019t set it.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 308,
        "deletions": 220,
        "changed_files": 29,
        "created_at": "2015-02-07T16:29:21Z",
        "closed_at": "2015-02-07T20:31:44Z",
        "merged_at": "2015-02-07T20:31:44Z",
        "body": "- Remove hard dependency on global `window` and `document`.\n- Limit JSDOM to a development-only (test-only) dependency.\n- Fix `d3.transition()` in IE.\n- Fix selection.append for shadow DOMs that lack a namespaceURI.\n- Fix quadtree.find when used with x- and y-accessors.\n- Fix parsing of named colors to be case-insensitive.\n- Add support for the color \u201crebeccapurple\u201d.\n- Improve initial random positioning of nodes for force layouts.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 261,
        "deletions": 201,
        "changed_files": 22,
        "created_at": "2015-02-07T06:44:13Z",
        "closed_at": "2015-02-07T16:34:10Z",
        "merged_at": null,
        "body": "Fixes #2190 #1491 #2180 #1986 #1250.\n\nCode that previously assumed a global document or window now uses the related node\u2019s ownerDocument or ownerDocument.defaultView as appropriate.\n\nIf no related node is available, the corresponding code will crash; however, the rest of D3 will work just fine. For example, you can\u2019t use d3.select(string) unless a global document is available; it just doesn\u2019t make sense. Use d3.select(node) instead, followed by selection.select(string).\n\nCode that previously checked for a global on the window (e.g., XDomainRequest) now uses the global context (`this`) rather than the window.\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 15,
        "changed_files": 4,
        "created_at": "2015-02-06T15:45:52Z",
        "closed_at": "2015-02-07T06:57:15Z",
        "merged_at": null,
        "body": "Due to the lack of support for prototype injection in IE9, we use direct\nextension as a fallback.  However, when d3_selectionRoot is declared,\nsome methods have not yet been added to d3_selectionPrototype, hence\nthey are not copied to d3_selectionRoot.\n\nSince d3_selectionRoot is only used by d3.selection and d3.transition,\nwe replace its eager initialisation by a lazy initialisation within\nd3.selection, and modify d3.transition to call d3.selection on order to\nretrieve the singleton selection object.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 7,
        "changed_files": 7,
        "created_at": "2015-02-06T00:19:24Z",
        "closed_at": "2015-02-07T16:29:33Z",
        "merged_at": null,
        "body": "[Looks like HTML color names are case-insensitive.](http://www.w3.org/TR/html4/types.html#h-6.5) This patch ensures that they're interpreted correctly regardless of case.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-02-05T16:34:18Z",
        "closed_at": "2015-02-07T16:35:26Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 79,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2015-02-03T05:23:24Z",
        "closed_at": "2016-04-26T23:27:11Z",
        "merged_at": null,
        "body": "Took me a while to understand how the circle pack layout algorithm works. I modified and added documentation to explain what's happening internally. \n\nIf this is a desirable direction for granular documentation here, it could benefit from another\u00a0pass by someone with more familiarity.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2015-01-31T18:04:21Z",
        "closed_at": "2016-10-20T17:53:33Z",
        "merged_at": null,
        "body": "Hey! Not sure if there is a specific reason this didn't work before, but if you make these modifications you can have multiple drag behaviour like this:\n\n```\na = d3.behavior.drag('drag-a').on( ... );\nb = d3.behavior.drag('drag-b').on( ... );\na.call(element);\nb.call(element);\n```\n\nIf this is of any use for you I can compile the source files properly!\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2015-01-28T12:19:52Z",
        "closed_at": "2015-02-07T16:36:34Z",
        "merged_at": null,
        "body": "Title says it all, really.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 18,
        "changed_files": 3,
        "created_at": "2015-01-28T00:21:13Z",
        "closed_at": "2015-10-22T05:28:35Z",
        "merged_at": null,
        "body": "D3 is currently out of commission in IE8 thanks to some [tight for..in loops](https://github.com/shawnbot/d3/blob/master/src/arrays/map.js#L38) in the `d3.map()` implementation. When d3.js is executed, IE8 fails while iterating over `d3_svg_lineInterpolators` when it hits the `__proto__` key:\n\n![image](https://cloud.githubusercontent.com/assets/113896/5929882/9304fb52-a63d-11e4-9342-4d2a238b0caa.png)\n\nBecause, unfortunately, in IE8:\n\n``` js\nfor (var key in Object.create({})) console.log(key);\n// prints: \"LOG: __proto__\"\n```\n\nWhich means that we have to use `hasOwnProperty()` instead of just the `in` operator. This PR suggests one fix (for which the tests pass, and I've confirmed it works in IE8), but it might have performance implications. For instance, instead of the locally bound `has(key)` these functions could call `this.has(key)` instead, which _might_ be faster.\n\nI haven't looked too closely to see if there are any other places in d3 where this might apply, but the [d3.map constructor](https://github.com/shawnbot/d3/blob/master/src/arrays/map.js#L14) might be a candidate.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-14T16:24:25Z",
        "closed_at": "2015-10-22T21:06:35Z",
        "merged_at": null,
        "body": "d3_geom_polygonIntersect ran into a division by 0. A check for undefined result allows to continue with a defined value. Please check if i have not run in a misunderstanding of the function.\n\nrelated issue: https://github.com/mbostock/d3/issues/2183\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2015-01-14T09:08:53Z",
        "closed_at": "2015-02-07T16:43:36Z",
        "merged_at": "2015-02-07T16:43:36Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-01-13T00:21:17Z",
        "closed_at": "2015-01-26T09:15:18Z",
        "merged_at": "2015-01-26T09:15:18Z",
        "body": "This should help newcomers who occasionally open issues that aren\u2019t bug reports or feature requests.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2015-01-04T15:29:56Z",
        "closed_at": "2015-02-07T16:38:26Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2015-01-03T03:03:56Z",
        "closed_at": "2016-10-20T17:53:33Z",
        "merged_at": null,
        "body": "I've modified the nest function to allow for multiple rollups to be specified, while maintaining the original functionality.  This simplifies dynamically adding rollups.  I updated Phoebe Bright's nest tutorial with some examples: http://bl.ocks.org/brett-miller/c31eb0c4d89ab84d6e22.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 15,
        "changed_files": 6,
        "created_at": "2014-12-27T00:14:56Z",
        "closed_at": "2015-01-19T18:30:21Z",
        "merged_at": null,
        "body": "- `.DS_Store` is not required to ignore in `npm` (`npm` synchronized from git repo).\n- `.DS_Store`, `.git` and `node_modules` is not required to ignore in `bower` (`bower` synchronized from git repo).\n- `https://github.com/mbostock/d3/issues?milestone=&page=1&state=open` -> `https://github.com/mbostock/d3/issues/new`.\n\n`_site` directory (`.gitignore`, `.npmignore`) used?\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2014-12-23T23:20:58Z",
        "closed_at": "2015-02-07T16:40:15Z",
        "merged_at": null,
        "body": "`d3_geom_quadtreeFind` was using the node data instead of `x` and `y` properties, making it only useable with position arrays.\n\n```\n  \u2713 OK \u00bb 2687 honored (9.716s) \n```\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 471,
        "deletions": 484,
        "changed_files": 7,
        "created_at": "2014-12-23T19:24:25Z",
        "closed_at": "2016-10-20T17:53:41Z",
        "merged_at": null,
        "body": "Spherical rotation is now applied prior to spherical clipping, eliminating the requirement for spherical clipping to perform the rotation.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2014-12-22T22:18:51Z",
        "closed_at": "2015-02-07T16:42:00Z",
        "merged_at": null,
        "body": "Normally selection.append is only called on normal elements that have a defined namespaceURI. However, if createElement is called on a shadow root, then namespaceURI is null. Now we correctly fallback to createElement instead of createElementNS in this case. Fixes #2161.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 86,
        "deletions": 11,
        "changed_files": 5,
        "created_at": "2014-12-18T13:28:19Z",
        "closed_at": "2016-10-20T17:53:33Z",
        "merged_at": null,
        "body": "Hi !\nIt would be very useful to have the possibility to pause / resume transitions. \nThis is a first \"naive\" go.\n\n`d3.transition.pause()` will pause all active transitions, while `d3.transition.resume` does what it should !\nThere is also a way to act just on specific transition (transition.pause() and transition.resume())\n\nUse case : a small animation utility written with d3.js - see here (draft) https://www.e-smile.org/solutions/whatIsIt\nCheers,\nC.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-12-11T15:22:04Z",
        "closed_at": "2015-02-07T16:47:04Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-12-11T10:31:33Z",
        "closed_at": "2015-02-07T16:46:43Z",
        "merged_at": "2015-02-07T16:46:43Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 125,
        "deletions": 7,
        "changed_files": 8,
        "created_at": "2014-12-10T17:37:06Z",
        "closed_at": "2016-10-20T17:53:33Z",
        "merged_at": null,
        "body": "I have implemented the %V directive as defined in the documentation of strftime. It is following the ISO 8601 standard and it works for formatting and parsing. I also added tests for corner cases like the 2009 year that has 53 weeks.\n\nParsing note: If you parse something like this : \"Fri 53 2009\", it yield a date in 2010 since week 53 span over the next yea. Same thing, if you parse \"Wed 01 2009\", it yield a date in 2008 since week 1 start in previous year.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2014-12-10T11:48:48Z",
        "closed_at": "2015-10-21T19:16:53Z",
        "merged_at": null,
        "body": "While working on reimplementing most of the Web APIs required by D3 so it can be used in iOS apps \n(see https://github.com/turbolent/d2a), I noticed that `clearTimeout` is used incorrectly. Its definition is `void clearTimeout(long handle);`, which means that it should only be called with a timer ID obtained from `setTimeout` and not with `undefined`.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2014-12-09T23:20:59Z",
        "closed_at": "2015-02-07T18:56:17Z",
        "merged_at": "2015-02-07T18:56:17Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2014-12-08T20:00:15Z",
        "closed_at": "2014-12-09T18:12:27Z",
        "merged_at": "2014-12-09T18:12:37Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-12-04T21:29:06Z",
        "closed_at": "2014-12-04T21:40:11Z",
        "merged_at": null,
        "body": "Fixes issue #2135\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-12-03T22:49:40Z",
        "closed_at": "2014-12-06T21:26:49Z",
        "merged_at": null,
        "body": "As suggested in #2104 I've did the change ;-)\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2014-11-25T07:50:02Z",
        "closed_at": "2015-02-08T17:21:12Z",
        "merged_at": "2015-02-08T17:21:12Z",
        "body": "Hi Mike, Jason,\n\nI'm a package maintainer for [Meteor.js](http://meteor.com), a [popular full-stack JavaScript framework](http://github.com/meteor/meteor).\n\nMeteor devs love d3. It was a [core package](https://github.com/meteor/meteor/issues/2557) until recently, and now it's time to separate concerns and let the community maintain the Meteor <-> d3 integration. This PR will allow you to directly publish updated versions of d3 as they become available. All you have to do is create an account at https://meteor.com/ (click _SIGN IN_, then _Create account_). After you've done that, please let me know the name of the account, and I'll add you as a maintainer.\n\nI've already published the current version of the package on [Atmosphere](https://atmospherejs.com/d3js/d3) (Meteor's package directory). When you release new versions of d3, you'll be able to publish them to Atmosphere by running `make meteor`.\n\nThanks & best regards,\nDan\n",
        "comments": 55
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-11-25T06:01:46Z",
        "closed_at": "2014-12-06T21:31:44Z",
        "merged_at": null,
        "body": "d3 is no longer exactly \"small\" :)\n\nThe old description vastly undersold d3.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2014-11-25T04:14:58Z",
        "closed_at": "2015-11-02T18:23:48Z",
        "merged_at": null,
        "body": "Currently, it is possible to manually set a scale value outside a zoom behavior's scaleExtent.\n\n``` js\nvar zoom = d3.behavior.zoom();\nzoom.scaleExtent();\n > [0, Infinity]\nzoom.scale(-1);\nzoom.scale();\n> -1\nzoom.scaleExtent();\n> [0, Infinity]\n```\n\nThis seems broken to me. If you disagree, fine, close the PR. There's already a clipping function `scaleTo` so we just call that.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 136,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-11-22T08:46:56Z",
        "closed_at": "2016-10-20T17:53:32Z",
        "merged_at": null,
        "body": "I made a chinese translation for d3-csv(https://github.com/mbostock/d3/wiki/CSV).\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 71,
        "deletions": 33,
        "changed_files": 4,
        "created_at": "2014-11-17T07:43:41Z",
        "closed_at": "2014-11-17T19:02:26Z",
        "merged_at": "2014-11-17T19:02:26Z",
        "body": "The pie layout now exports the padAngle so that it can be used by d3.svg.arc to inset the arc accordingly.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 32,
        "changed_files": 6,
        "created_at": "2014-11-17T04:18:32Z",
        "closed_at": "2015-10-21T19:19:24Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 115,
        "deletions": 43,
        "changed_files": 4,
        "created_at": "2014-11-16T23:30:23Z",
        "closed_at": "2014-11-17T06:09:36Z",
        "merged_at": "2014-11-17T06:09:36Z",
        "body": "Still need to implement corners for inner arcs and handle the case where there is not enough room to draw the corners (in which case the corner radius will be reduced as necessary). Related #1131.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1248,
        "deletions": 430,
        "changed_files": 57,
        "created_at": "2014-11-14T20:56:08Z",
        "closed_at": "2014-12-06T22:29:28Z",
        "merged_at": "2014-12-06T22:29:29Z",
        "body": "Changes:\n- Add [named transitions](http://bl.ocks.org/mbostock/5d8039fb983a29e2ad49) for concurrent (non-exclusive) animations on the same element.\n- Add \u201cinterrupt\u201d events for when a transition is interrupted.\n- Allow a transition\u2019s ease or duration to be changed before the transition starts.\n- Add d3.svg.arc cornerRadius (#1131).\n- Add d3.layout.pie padding (#1516).\n- Add double-click and double-tap smooth transitions to d3.behavior.zoom (#1985).\n- Add d3.behavior.zoom duration for customizing or disabling double-click transitions.\n- Add d3.map(array[, accessor]) for constructing a map by key from an array.\n- Add d3.scale.ordinal rangeRoundPoints, a rounded version of rangePoints.\n- Add d3.geom.quadtree find for efficient [2D search](http://bl.ocks.org/mbostock/9078690).\n- Add d3.variance and d3.deviation.\n- Add locales for Poland and Canada.\n- d3.shuffle can now optionally shuffle a subset of an array.\n- Generate a [counter-clockwise arc](http://bl.ocks.org/mbostock/57d620285395dae5a2ff) when startAngle is greater than endAngle.\n- Fix additional stroke when rendering Point features on canvas with d3.geo.path.\n- Fix memory leak with chained transitions.\n- Fix reported \"zoomstart\" and \"zoomend\" events for re-entrant zoom gestures.\n\nDeferred to 3.5.x:\n- Further tests for d3.layout.pie padding.\n- Further tests for d3.svg.arc cornerRadius.\n\nDeferred to 3.6:\n- Inertial panning for zoom behavior (#2096).\n- Add d3.geom.voronoi topology (#1819).\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2014-11-14T19:00:28Z",
        "closed_at": "2014-11-14T20:56:41Z",
        "merged_at": null,
        "body": "When creating a new transition derived from an existing transition, the new transition\u2019s parameters (reference time, delay, duration and easing) are inherited. However, we were inadvertently also capturing a reference to the old transition lock, including any tweens and listeners. Even though this object wasn\u2019t used by the transition after creation, it\u2019s likely that the garbage collector wasn\u2019t smart enough to free the old lock. We now set the lock to null explicitly so as to allow garbage collection and avoid a memory leak with chained transitions. Related #2110.\n\nAlso, create a new object when using transition.transition rather than using Object.create. It\u2019s slightly more code, but it\u2019s simpler.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2014-11-13T10:17:55Z",
        "closed_at": "2014-11-14T20:56:51Z",
        "merged_at": null,
        "body": "Strictly speaking, this is not legal ECMA-262 syntax, since a function\ndeclaration is not a statement and thus shouldn\u2019t appear as part of a\nblock.  The reason for this is inconsistent hoisting behaviour across\nimplementations.  For example, V8 will always hoist a function\ndeclaration, even if it\u2019s inside a conditional block, but Firefox will\nnot hoist function declarations inside conditional blocks.\n\nFixes #2114, #1553.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2014-11-04T18:29:52Z",
        "closed_at": "2016-05-08T15:38:43Z",
        "merged_at": null,
        "body": "This allows the label's text-anchor setting to be overridden by CSS without having to resort to `!important`-statements (which are ugly and a maintenance hell) - for example to create horizontally centered labels on vertical axes. You are using `attr()` for visual attributes pretty much everywhere else in the code, so maybe there's some reason I've overlooked for specifically using `style()` here, but from what I see there should be no reason to not use `attr()` for assigning the `text-anchor` value.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2014-11-04T14:36:44Z",
        "closed_at": "2014-11-14T20:57:25Z",
        "merged_at": null,
        "body": "Slicing an array with a negative end index indicates an offset from the end of the array.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-10-31T03:31:21Z",
        "closed_at": "2014-10-31T10:47:25Z",
        "merged_at": null,
        "body": "add sth\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2014-10-26T09:01:40Z",
        "closed_at": "2015-10-26T03:46:57Z",
        "merged_at": null,
        "body": "In this case treat both nodes as having an equal weight of 1\n(arbitrary).\n\nThis fixes a divide by zero error otherwise.\n\nI've included a signed-off (saying that I'm the author of the code). I didn't sign the contributor agreement since this falls under the trivial rule. Correct me if I am mistaken.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2014-10-26T08:38:35Z",
        "closed_at": "2015-10-21T19:40:24Z",
        "merged_at": null,
        "body": "Native JavaScript Object.keys() method is heavily optimized for the specified task (http://jsperf.com/object-keys-iteration/20).  The native method does not perform on the object's prototype and as such, I have concatenated the object's keys with that of the prototype's keys because based on previous implementation it seems the keys of the prototype is also desired. Concatenation is also more optimized than pushing (http://jsperf.com/concatperftest/6).\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2014-10-24T18:32:39Z",
        "closed_at": "2014-11-14T20:57:31Z",
        "merged_at": null,
        "body": "The d3.map constructor can now be used to index the elements of an array by an optional key function, providing a convenient (and faster) alternative to using d3.nest. Before:\n\n``` js\nvar objectByKey = d3.nest()\n    .key(function(d) { return d.key; })\n    .rollup(function(values) { return values[0]; })\n    .map(objects, d3.map);\n```\n\nAfter:\n\n``` js\nvar objectByKey = d3.map(objects, function(d) { return d.key; });\n```\n\nNote that the behavior of the d3.map constructor now changes slightly when a sparse array is used. Previously, missing elements from sparse arrays were skipped by the for-in loop, but now missing elements are indexed.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2014-10-23T22:09:09Z",
        "closed_at": "2014-11-14T20:59:22Z",
        "merged_at": null,
        "body": "The canvas arc commands starts at the positive x-axis, so we must move there before drawing the arc, rather than moving to the circle\u2019s center.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 17,
        "changed_files": 7,
        "created_at": "2014-10-23T21:06:26Z",
        "closed_at": "2014-11-14T20:59:25Z",
        "merged_at": null,
        "body": "Just to show that we don\u2019t need to use `undefined` at all.  But I don\u2019t think we necessarily care about it enough to do this!\n\nFixes #2077.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2014-10-23T17:08:35Z",
        "closed_at": "2014-10-23T17:25:17Z",
        "merged_at": "2014-10-23T17:25:17Z",
        "body": "Currently, dates get formatted as \"1.01.2014\" which is inconsistent.\nOther locales use \"01.01.2014\" or comparable as well.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 126,
        "deletions": 107,
        "changed_files": 16,
        "created_at": "2014-10-23T17:06:09Z",
        "closed_at": "2014-11-14T20:59:29Z",
        "merged_at": null,
        "body": "Fixes #24 #2076.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 5,
        "changed_files": 5,
        "created_at": "2014-10-21T23:13:01Z",
        "closed_at": "2016-10-20T17:53:32Z",
        "merged_at": null,
        "body": "As discussed [on the mailing list](https://groups.google.com/d/msg/d3-js/4epALWqwaOM/Br6tjnpXaZUJ), the (Cartesian) product of two arrays is every way of choosing an element from each. This is useful for grids and [scatterplot matrices](http://bl.ocks.org/mbostock/3213173), from which the implementation is taken. I signed the license agreement to cover the tests. This adds only 134 bytes minified.\n\nProposed documentation (to be added under [Array.pairs](https://github.com/mbostock/d3/wiki/Arrays#d3_pairs) once released):\n\n``` markdown\n<a name=\"d3_product\" href=\"#d3_product\">#</a> d3.<b>product</b>(<i>array1</i>, <i>array2</i>)\n\nReturns an array of all combinations of elements from *array1* and *array2*. Each element is an\nobject with the following fields: `i` is the index into *array1*, `x` is the element from `array1` at\nindex `i`, `j` is the index into *array2*, and `y` is the element from *array2* at index `j`. The array is\nordered such that all `i` values are grouped in ascending order, and within each group is each `j`\nvalue in ascending order. The function is useful for creating grids, matrices, and crosstabs.\n```\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2014-10-21T13:23:13Z",
        "closed_at": "2014-11-14T20:59:34Z",
        "merged_at": null,
        "body": "Note, this may introduce a circular dependency as `projection` imports `rotation`, yet `rotation` imports `equirectangular` which itself imports `projection`, but it looks like that hasn't caused any problems...\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2014-10-18T03:51:46Z",
        "closed_at": "2014-10-23T17:29:15Z",
        "merged_at": null,
        "body": "Appends an undef function that returns _nothing_ (undefined) to `d3` and updates instances of code that return undefined with `d3.undef()` to prevent from undefined re-assigning bugs. Arguably not quite useful, but also defensible that large projects such as this, present a higher than trivial probability to incur in bugs of this nature.\n\nBest.\nD\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 677,
        "deletions": 464,
        "changed_files": 38,
        "created_at": "2014-10-17T06:06:27Z",
        "closed_at": "2014-10-17T11:55:37Z",
        "merged_at": "2014-10-17T11:55:37Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 149,
        "deletions": 100,
        "changed_files": 9,
        "created_at": "2014-10-17T05:19:01Z",
        "closed_at": "2014-10-17T06:06:37Z",
        "merged_at": null,
        "body": "Maps and sets now use `Object.create(null)`, meaning that we only need to escape the special `__proto__` property. Any other key is safe to set or get.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 99,
        "changed_files": 3,
        "created_at": "2014-10-17T04:40:30Z",
        "closed_at": "2014-10-17T06:06:41Z",
        "merged_at": null,
        "body": "Saves 494 minified bytes.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-10-16T13:59:45Z",
        "closed_at": "2014-11-14T20:59:37Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 100,
        "deletions": 25,
        "changed_files": 12,
        "created_at": "2014-10-16T08:17:47Z",
        "closed_at": "2014-10-17T06:06:44Z",
        "merged_at": null,
        "body": "Fixes #2067, #2069 and #2072.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 179,
        "deletions": 68,
        "changed_files": 8,
        "created_at": "2014-10-14T17:13:32Z",
        "closed_at": "2014-10-17T05:19:27Z",
        "merged_at": null,
        "body": "Rather than always escaping keys with a null-prefix, only escape keys that can conflict with built-in properties (either on Object, d3_Map or d3_Set). By only prefixing these special keys, we can avoid the cost of constructing new strings in the common case.\n\nTo check whether a key is special, we check whether it is in an empty map instance. In addition, keys that are already null-prefixed must be prefixed a second time to correctly unescape.\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 19,
        "changed_files": 4,
        "created_at": "2014-10-14T01:22:40Z",
        "closed_at": "2014-10-17T05:19:31Z",
        "merged_at": null,
        "body": "Preallocate the keyValues array and use a single Map with the\nsentinel value `true` to represent a previously seen key.\n\nBefore:\n\nselection.data(values, key) (enter) 1.5ms/op.\nselection.data(values, key) (update) 1.7ms/op.\n\nAfter:\n\nselection.data(values, key) (enter) 0.81ms/op.\nselection.data(values, key) (update) 1.1ms/op.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 262,
        "deletions": 260,
        "changed_files": 7,
        "created_at": "2014-10-13T21:33:02Z",
        "closed_at": "2014-10-17T06:06:47Z",
        "merged_at": null,
        "body": "Due to the tests using two different copies of d3 (one loaded via require, and the other via smash), the instanceof check in the d3.lab constructor was returning false when testing for d3.hcl, and this constructor was therefore never tested.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2014-10-10T16:36:27Z",
        "closed_at": "2014-10-17T06:06:51Z",
        "merged_at": null,
        "body": "Fixes #2006.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2014-10-10T16:21:48Z",
        "closed_at": "2014-10-17T06:06:53Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2014-10-10T10:04:57Z",
        "closed_at": "2014-10-17T06:06:56Z",
        "merged_at": null,
        "body": "Fixes #2004.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 25,
        "changed_files": 8,
        "created_at": "2014-10-10T09:45:53Z",
        "closed_at": "2014-10-17T06:07:00Z",
        "merged_at": null,
        "body": "TL;DR: this ensures that uninterpolate(a, b)(b) always equals 1, and interpolate(a, b)(1) always equals b.\n\n**uninterpolate:**\n\nThe use of a reciprocal in d3_uninterpolateNumber to avoid division\nresults in a small loss of precision (the following is a paraphrase):\n\n``` js\nfunction d3_uninterpolateNumber(a, b) {\n  var k = b - a ? 1 / (b - a) : 0;\n  return function(x) { return (x - a) * k; };\n}\n```\n\nFor x = a, there is no problem, since u = (a - a) \\* k = 0 \\* k = 0 as\nexpected.  For x = b, we have u = (b - a) \\* k, and since k cannot\nrepresent 1 / (b - a) exactly, we don\u2019t get u = 1, but something very\nclose to 1.\n\nInstead, if we perform the division within the generated function, we\ncan ensure we always get u = 1 for x = b:\n\n``` js\nfunction d3_uninterpolateNumber(a, b) {\n  var k = b - a || Infinity;\n  return function(x) { return (x - a) / k; };\n}\n```\n\nAgain, for x = a, we simply have u = (a - a) / k = 0.  For x = b, we\nhave u = (b - a) / k = (b - a) / (b - a) = 1.\n\n**interpolate:**\n\nSimilarly, for d3_interpolateNumber, we have a small loss of precision,\nthis time due to subtraction.  Paraphrased:\n\n``` js\nfunction d3_interpolateNumber(a, b) {\n  var d = b - a;\n  return function(t) { return a + t * d; };\n}\n```\n\nThere is no issue for t = 0, because we always get i = a + 0 \\* d = a.\nHowever, for t = 1, we get i = a + d, which might not be exactly equal\nto b as desired.  The following will return precisely b for t = 1:\n\n``` js\nfunction d3_interpolateNumber(a, b) {\n  return function(t) { return a * (1 - t) + b * t; };\n}\n```\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 21,
        "changed_files": 4,
        "created_at": "2014-10-10T06:14:13Z",
        "closed_at": "2014-10-10T08:43:54Z",
        "merged_at": null,
        "body": "Fixes a minor merge conflict that might be slowing down #2000. This ended up being caused by a separate one line change by @jasondavies [here](https://github.com/mbostock/d3/commit/519f258f#diff-6634c8489aac5b3c3f09ae6e3a1d6d58L17) to src/locale/number-format.js as part of commit 519f258f.\n\nThis commit merges master into fix-format and repairs that merge-conflict. Confirmed that tests are passing including new tests in test/format/format-test.js I'm not sure what the etiquette is here, so I've taken the more conservative approach of creating this pull request against the pending fix-format branch, assuming jason could merge this into that branch and then #2000 will be ready to go again.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2014-10-09T15:43:52Z",
        "closed_at": "2014-10-09T16:05:56Z",
        "merged_at": null,
        "body": "Test case: http://bl.ocks.org/mbostock/219e9a38d8de73f3f9f7\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 168,
        "deletions": 160,
        "changed_files": 34,
        "created_at": "2014-10-08T14:41:24Z",
        "closed_at": "2014-10-08T15:24:57Z",
        "merged_at": "2014-10-08T15:24:57Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-10-08T00:43:59Z",
        "closed_at": "2014-10-10T16:48:58Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2014-10-03T21:07:19Z",
        "closed_at": "2014-10-08T14:45:53Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2014-10-03T20:11:47Z",
        "closed_at": "2014-12-06T21:48:02Z",
        "merged_at": null,
        "body": "Since the transition duration is not needed until the first tick, the duration can still be modified either in a \"start\" event listener, or in a tween factory.  This allows a behaviour such as d3.behavior.zoom to use an arbitrary transition duration depending on the parameters available on transition start (or during tweener generation).\n\nThe same applies to transition.ease: it is not needed until the first tick, therefore it seems reasonable to read it after tweener generation.\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2014-10-03T18:03:24Z",
        "closed_at": "2014-10-03T21:13:44Z",
        "merged_at": null,
        "body": "Suggested fix for #2043\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 11,
        "changed_files": 5,
        "created_at": "2014-10-02T11:29:26Z",
        "closed_at": "2014-10-08T14:45:01Z",
        "merged_at": null,
        "body": "To fix this issue : https://github.com/petkaantonov/bluebird/issues/291\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2014-09-29T23:08:18Z",
        "closed_at": "2014-10-08T14:47:02Z",
        "merged_at": null,
        "body": "There was a bug when parsing positive time zone offsets with a non-zero\nnumber of minutes: the use of Math.floor on negative numbers rounded in\nthe wrong direction.  Replacing Math.floor with (x | 0) correctly\ntruncates positive and negative values.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 52,
        "deletions": 18,
        "changed_files": 3,
        "created_at": "2014-09-17T11:54:24Z",
        "closed_at": "2015-12-05T00:07:28Z",
        "merged_at": null,
        "body": "I have added support for custom scaling while zooming with `d3.behavior.zoom`. Example and changes in d3 API are described at http://bl.ocks.org/jchlapinski/d51d9aca2084bc02f30b\n\nA method `scaleGenerator` was added to the 'zoom' object as follows: \n\n``` javascript\nvar zoom = d3.behavior.zoom();\n\nzoom.scaleGenerator(function (scale, delta, usecase) { // below is the default implementation\n  if (usecase === \"mousewheel\") {\n      // delta = event.deltaY (or equivalent for different browsers);\n      return Math.pow(2, delta * .002) * k;\n    } else if (usecase === \"dbltap\") {\n      // delta = 0 \n      return k * 2;\n    } else if (usecase === \"dblclick\") { \n      // delta = 1 or -1 if user double-clicks while holding SHIFT\n      return Math.pow(2, delta < 0 ? Math.ceil(Math.log(k) / Math.LN2) - 1 : Math.floor(Math.log(k) / Math.LN2) + 1);\n    } else if (usecase === \"touchzoom\") {\n      // delta is equal to the distance change between touches (two-finger) in pixels\n      return k * delta;\n    }\n    return k;\n});\n\nvar sg = zoom.scaleGenerator(); // get current scale generator\n\nzoom.scaleGenerator(null); // restore default scale generator\n```\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2014-09-12T21:20:42Z",
        "closed_at": "2016-05-25T21:31:01Z",
        "merged_at": null,
        "body": "All of this code was contributed by @mhsmith (https://github.com/mbostock/d3/pull/1299) and reimplemented for the latest d3 version by @lebolo.\n\nThese limit all actions to ensure the domain of the corresponding scale always stays within the given extent. As well as panning, zooming actions may also be limited in the zoom-out direction. If more than one of `scaleExtent`, `xExtent` and `yExtent` are provided, the effective bottom end of the scale extent will be the most restrictive of the three.\n\nIf `scaleExtent` and `x/yExtent` cannot be satisfied simultaneously (i.e. the lower scale limit implied by `x/yExtent` is above the `scaleExtent`), then `x/yExtent` will take priority.\n\nSimple example: http://bl.ocks.org/mhsmith/5732011\nExample with discontinuous and log scales: http://bl.ocks.org/mhsmith/5734904\n",
        "comments": 25
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2014-09-10T11:01:56Z",
        "closed_at": "2014-10-08T15:04:44Z",
        "merged_at": null,
        "body": "Fixes #2013.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-09-09T18:27:18Z",
        "closed_at": "2014-10-17T05:43:08Z",
        "merged_at": null,
        "body": "Fixes Bug #2010 \n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 91,
        "deletions": 9,
        "changed_files": 6,
        "created_at": "2014-08-28T21:50:19Z",
        "closed_at": "2014-09-24T03:41:26Z",
        "merged_at": null,
        "body": "This allows condensing the very common action\n\n``` js\nselection.append(\"div\").attr(\"class\", \"foo\");\n```\n\ninto a single command\n\n``` js\nselection.append(\"div.foo\");\n```\n\nThis also works:\n\n``` js\nselection.append(\"div.first-class.second-class\");\n// same as\nselection.append(\"div\").attr(\"class\", \"first-class second-class\");\n```\n\nas well as\n\n``` js\nselection.append(\"div#someId\");\n// same as\nselection.append(\"div\").attr(\"id\", \"someId\");\n```\n\nor even a combination of both\n\n``` js\nselection.append(\"div#someId.some-class\");\n// same as\nselection.append(\"div\").attr({ \"id\": \"someId\", \"class\": \"some-class\" });\n```\n\nHappy to discuss options to improve the implementation details, but it should work as expected. Added a test and made sure that the existing tests are all passing. \n\n**Edit:** I changed the original proposal to the second-parameter implementation, which seems cleaner and much simpler to implement.\n\n**Edit (2):** Changed API back to original proposal which avoids second-argument confusion when used in `insert`. \n",
        "comments": 19
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-08-28T16:34:18Z",
        "closed_at": "2014-11-14T20:59:46Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 71,
        "deletions": 23,
        "changed_files": 4,
        "created_at": "2014-08-28T14:36:03Z",
        "closed_at": "2014-10-17T06:07:03Z",
        "merged_at": null,
        "body": "Very small or large numbers use exponent notation when converted to strings.  If grouping is enabled and there is no decimal, the exponent wasn\u2019t being ignored, so the group separator was in the wrong place.\n\nThis also fixes a bug relating to padding and thousands grouping: the padding calculation assumed a grouping of [3].\n\nFixes #1972, #1994.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2014-08-28T10:26:58Z",
        "closed_at": "2014-08-28T14:45:57Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 116,
        "deletions": 18,
        "changed_files": 4,
        "created_at": "2014-08-27T22:47:30Z",
        "closed_at": "2014-08-28T14:42:26Z",
        "merged_at": null,
        "body": "- fix #1994/#1972: the d3.format bug where scientific notation values are corrupted by the locale thousands separator action (e.g. d3.format(',f')(1e42)) when the value representation does not contain a decimal point as well.\n- # 1994: ditto where scientific notation values are printed in format modes which 'usually do not print the value as a scientific number' but the machine has to due to the very tiny or huge value presented to d3.format to print (such as type='f')\n- tolerate the comma in the format spec for format types which do not use it (type=[boxX...]): see also next item\n- fix #1995 the type=n format: to match the documentation (n === ,g), the 'n' type should also use the same value formatter as 'g': that formatter differs noticably from the 'default formatter' when large/tiny numbers are printed.\n- tiny optimization: do not mix run-time types in the 'type' variable to help the JS JIT compilers' run-time type analysis (Chrome V8 et al) to produce optimized code: `type` is a string, `type_f` is the corresponding function.\n- Tests have been added to cover all situations as the bug(s) were discovered due to the combination of\n  - userland code constructing a user-driven d3.format string (which should tolerate simple 'illegal combinations' to simplify d3.format usage by not requiring the userland code to carry a rule matrix for filtering formats upon construction), and\n  - userland data including very large and very small numbers being fed to these d3.format-generated formatters.\n## Notes\n#1996:\n\nThe 'p' percent type/mode performs a multiplication resulting in the ubiquitous floating point inaccuracy issues (http://dl.acm.org/citation.cfm?id=103162.103163) rearing their ugly head: see the commented out test case\n\n```\n//assert.strictEqual(f(3.1415e42), \"3.1415e+44%\");  // x86: 3.1415000000000002e+44% -- floating point inaccuracy kicking in...\n```\n\nwhich has been 'tweaked' to circumvent the issue **for this particular test case** (i.e. the problem is not gone, it is simply hiding)\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2014-08-27T14:32:19Z",
        "closed_at": "2014-08-27T15:11:54Z",
        "merged_at": null,
        "body": "for..in will return the index instead of value in Array\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2014-08-26T13:55:42Z",
        "closed_at": "2016-04-26T20:17:46Z",
        "merged_at": null,
        "body": "I needed to build a quadtree that can allows to delete/add nodes.\n\nIt is a first naive implementation :\n- each nodes keep a reference to its parent\n- delete method is called on root and accepts only leaf node at the moment\n- users should keep a reference to all nodes (typically via the visit method)\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 25,
        "changed_files": 5,
        "created_at": "2014-08-15T21:36:36Z",
        "closed_at": "2014-11-14T20:59:50Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-13T05:52:01Z",
        "closed_at": "2014-10-10T17:05:48Z",
        "merged_at": "2014-10-10T17:05:49Z",
        "body": "As it's missing from d3 and we need it.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-08-12T09:48:36Z",
        "closed_at": "2014-10-10T17:05:48Z",
        "merged_at": "2014-10-10T17:05:48Z",
        "body": "Adding german locale as it seems to be missing.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-08-11T21:13:14Z",
        "closed_at": "2014-08-28T14:44:00Z",
        "merged_at": null,
        "body": "I added some tests to catch the bug described in #1972, and implemented the fix proposed by @jasondavies, i.e. don't group into thousands in exponent notation mode.\n\nP.S.: First ever pull request attempt. Please be gentle.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 298,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2014-08-11T20:12:22Z",
        "closed_at": "2016-10-20T17:53:41Z",
        "merged_at": null,
        "body": "Working example: http://bl.ocks.org/rkophs/d6292eb6453981dc3821\n\nThis is somewhat similar to the existing D3 Chord layout (http://bl.ocks.org/mbostock/4062006). However this allows one to show relationships or translocations between specific areas of a group/entity. This is especially useful in trans-location graphs used by many research areas in genetics. Examples at http://circos.ca/intro/published_images/.\n\nI tried to implement this layout similarly to the existing Chord layout for simplicity.\n\nHowever I also understand if this is better seen fit as a plugin rather than baked into the D3 source. I'm up for suggestions.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 17,
        "changed_files": 3,
        "created_at": "2014-08-07T13:49:29Z",
        "closed_at": "2014-10-17T06:07:06Z",
        "merged_at": null,
        "body": "Fixes #1968.  For example, when switching from a linear scale to a logarithmic scale, some of the exiting ticks might be positioned at Infinity in the new scale (zero and negative numbers).  This can cause a warning to be logged in the console due to the resulting invalid transform attribute.  The warning doesn\u2019t prevent the rest of the axis from functioning normally (even though it is logged as an \u201cerror\u201d), but it is preferable to avoid setting invalid attributes.\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-08-06T19:19:59Z",
        "closed_at": "2014-08-06T20:23:01Z",
        "merged_at": null,
        "body": "In firefox versions <= 23  **transition** is undefined because  id0 has an unexpected behavior and give a value that doesn't exist in node.**transition**  property. First check if id0 exist in the node.**transition** key\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 3,
        "changed_files": 6,
        "created_at": "2014-08-06T17:44:23Z",
        "closed_at": "2014-08-06T17:53:49Z",
        "merged_at": null,
        "body": "This will permit to append childs (siblings between them) to a element in chaining (without set a var with the parent).\n\nNow:\n\n``` javascript\nvar div = d3.select( 'body' ).append( 'div' );\ndiv.append( 'p' ).text( 'I\\'m a P' );\ndiv.append( 'a' ).text( 'I\\'m an A' )\n        .append( 'span' ).text( 'with a SPAN' );\ndiv.append( 'span' ).text( 'I\\'m just a SPAN' );\n```\n\nWith this:\n\n``` javascript\nd3.select( 'body' )\n    .append( 'div' )\n        .append( 'p' ).text( 'I\\'m a P' )\n    .parent( )\n        .append( 'a' ).text( 'I\\'m an A' )\n            .append( 'span' ).text( 'with a SPAN' )\n        .parent( )\n    .parent( )\n        .append( 'span' ).text( 'I\\'m just a SPAN' );\n```\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 80,
        "deletions": 80,
        "changed_files": 14,
        "created_at": "2014-08-06T16:58:11Z",
        "closed_at": "2014-10-08T14:49:17Z",
        "merged_at": null,
        "body": "Slice is shorter and more intuitive: negative arguments are treated as\nbeing relative to the end of the string, similar to arrays.\n\nThe only place it made sense to keep substring was in\nd3_locale_numberFormat, where the first argument can be negative but\nsubstring automatically treats this as zero.\n\n_Saves a whopping 148 bytes!_\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 19,
        "changed_files": 6,
        "created_at": "2014-08-06T15:08:33Z",
        "closed_at": "2015-10-21T20:00:25Z",
        "merged_at": null,
        "body": "Change array.min and array.max to return the element of array when is passed a function.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 63,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2014-08-03T19:58:50Z",
        "closed_at": "2014-11-14T22:14:50Z",
        "merged_at": null,
        "body": "Adds ability to shuffle for a subset of an array as desired by #1865.  First argument in shuffle is the array, second argument (i0) is the desired starting index the third argument (i1) is the desired ending index.\n\nIf shuffle(array): Shuffle operates on the entire array.\nIf shuffle(array, i0): Shuffle operates on the array starting at index i0 and continues for the remainder of the array.\nIf shuffle(array, i0, i1) and i0 < i1: Shuffle operate on the array starting at index i1 and continues until index i1.\nIf shuffle(array, i0, i1) and i0 >= i1: Shuffle operate on the array starting at index 0 and continues until index i1.\nIf shuffle(array, i0, i1) and either i0 or i1 are < 0: Shuffle does not operate correctly and substitutes undefined as a value for some indices in the array.\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-07-29T19:41:34Z",
        "closed_at": "2014-10-10T17:11:11Z",
        "merged_at": null,
        "body": "Confirmed by @jspeis and @dsmilkov, who are native speakers of Hebrew and Macedonian respectively.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2014-07-29T13:46:04Z",
        "closed_at": "2014-10-08T14:48:15Z",
        "merged_at": null,
        "body": "Fixes a regression introduced when XDomainRequest support was added in\n2eeb2057b2a058a15f9b4d155a4650dcab4ef070.  XDomainRequest only supports\nrequest.responseText, not request.response, but XMLHttpRequest throws an\nerror if request.responseText is read for non-text response types.\n\nA status code of 0 can mean either a local file was accessed, or there\nwas an error.  The response is checked to see if the error flag was set:\n- In the case of request.responseType being \"text\" or \"\",\n  request.responseText should be \"\".  Unfortunately it\u2019s impossible to\n  distinguish between an empty local text file and an error state, but\n  wanting to load empty local files seems rare.\n  XDomainRequest doesn\u2019t have a responseType and it only has\n  responseText, so we handle it here too.\n- For other response types, request.response should be null.  At the\n  moment, Safari 7.0.5 doesn\u2019t respect this, e.g. the response will be a\n  zero-length blob for the \"blob\" response type if the local file wasn\u2019t\n  found, but this seems to be fixed as of WebKit r171650.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-29T02:41:33Z",
        "closed_at": "2014-07-29T13:50:20Z",
        "merged_at": null,
        "body": "d3.xhr tests `request.responseText` which throws an uncaught \"InvalidStateError\" exception if responseType is not the empty string or \"text\". ([spec](http://xhr.spec.whatwg.org/#the-responsetext-attribute))\n\nSee [this example](http://bl.ocks.org/gmaclennan/520b8ccf857a36db5cf3) (open the console to see uncaught error).\n\nI think this PR should catch the error.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 58,
        "changed_files": 11,
        "created_at": "2014-07-18T17:00:28Z",
        "closed_at": "2014-10-08T14:58:44Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2014-07-17T05:22:32Z",
        "closed_at": "2014-07-17T22:58:52Z",
        "merged_at": "2014-07-17T22:58:51Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-07-09T20:45:26Z",
        "closed_at": "2016-03-17T16:26:02Z",
        "merged_at": null,
        "body": "When the shift key is down, zoom scrolling behavior ceases to work because only d3.event.deltaY is being checked for the delta.  This behavior is typically only noticeably in Chrome as holding the shift key while scrolling, in Chrome, scrolls horizontally, which causes the deltaX property to be set and the deltaY property to be 0.\n\nTo reproduce this behavior:\n1. Navigate to http://bl.ocks.org/mbostock/3892919 in Chrome\n2. Place the mouse over the grey grid and hold down the Shift key while scrolling.\n3. Try without the Shift key pressed.\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 23,
        "changed_files": 3,
        "created_at": "2014-07-07T04:38:08Z",
        "closed_at": "2014-07-12T06:02:22Z",
        "merged_at": "2014-07-12T06:02:22Z",
        "body": "Rather than set the zoom center on the first mousewheel following a mousemove, we now set the zoom center on the first mousewheel event of a zoom gesture. This is slightly simpler logic and avoids confusing behavior during constrained momentum scrolling.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 57,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2014-07-04T20:04:54Z",
        "closed_at": "2014-07-12T04:53:10Z",
        "merged_at": null,
        "body": "A keyName option for d3.nest, whereby you can name the keys that come out when you call .entries(). the default key is \"key\". For example, \n\n```\n  d3.nest()\n      .key(function(d) { return d[0]; })\n      .keyName('state')\n      .sortKeys(d3.descending)\n      .entries([['AL', 1999, 200], ['CA', 1999, 350], ['CA', 2009, 550], ['AL', 2009, 250]]);\n```\n\nwill give you:\n\n```\n  [\n   {state: \"CA\", values:  [['CA', 1999, 350], ['CA', 2009, 550]]},\n   {state: \"AL\", values:  [['AL', 1999, 200], ['AL', 2009, 250]]}\n  ]\n```\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2014-07-02T09:58:33Z",
        "closed_at": "2014-07-12T04:48:15Z",
        "merged_at": null,
        "body": "...error. Just try catch is added in order to ignore prevent IE9 to throw exception\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-07-01T10:10:28Z",
        "closed_at": "2014-07-12T04:48:40Z",
        "merged_at": "2014-07-12T04:48:40Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2014-06-30T10:42:42Z",
        "closed_at": "2014-06-30T17:17:58Z",
        "merged_at": "2014-06-30T17:17:58Z",
        "body": "Fixes #1625.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2014-06-27T16:21:25Z",
        "closed_at": "2014-06-30T17:17:58Z",
        "merged_at": "2014-06-30T17:17:58Z",
        "body": "This reverts commit 2b148070553c9493cae01d4960d283ec5bdf957f.\n\nFixes #1903.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 87,
        "deletions": 144,
        "changed_files": 8,
        "created_at": "2014-06-24T23:45:08Z",
        "closed_at": "2014-06-30T17:17:58Z",
        "merged_at": "2014-06-30T17:17:58Z",
        "body": "This also makes it possible to create a subclass of d3.color outside of the core library, which would then support automatic interpolation.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-06-24T14:42:09Z",
        "closed_at": "2014-07-12T06:02:22Z",
        "merged_at": "2014-07-12T06:02:22Z",
        "body": "With regards to #1689 adding AMD compatibility, it seemed odd to me that\nD3 opt'd out of exposing itself globally for third-party plugins.\n\nWithin a discussion about this very problem, found here:\nhttps://github.com/jakevdp/mpld3/issues/33#issuecomment-32101013\n\nthe argument is made that exposing the global defeats the point of\nmodule systems.  I agree that module systems help avoid global\npollution, but that is not something I'd consider the point of module\nsystems, especially since they are registered in a global namespace\nthemselves.\n\nThis patch will fix third-party modules that are shimmed.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-06-19T18:30:06Z",
        "closed_at": "2014-06-19T18:42:46Z",
        "merged_at": null,
        "body": "Prevent breaking when minified\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 133,
        "deletions": 42,
        "changed_files": 8,
        "created_at": "2014-06-12T17:53:17Z",
        "closed_at": "2016-05-14T16:30:50Z",
        "merged_at": null,
        "body": "Proof-of-concept for #866.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 155,
        "deletions": 90,
        "changed_files": 5,
        "created_at": "2014-06-12T11:14:00Z",
        "closed_at": "2014-07-02T23:31:25Z",
        "merged_at": null,
        "body": "This is a workaround for a strict Content-Security-Policy such as:\n\n  Content-Security-Policy: script-src 'self';\n\nThis policy prevents new Function(<string>), which we rely upon for a\nperformance optimisation in d3.dsv.  Fortunately, we can simply check if\nan exception is thrown and fall back to the slower implementation.\n\nFixes #1904.\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2014-06-09T11:59:45Z",
        "closed_at": "2014-06-12T11:14:18Z",
        "merged_at": null,
        "body": "Content-Security-Policy does not allow eval-like mechanisms, unless the\n'unsafe-eval' keyword is specified.\n\nFixes issue  #1904.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 117,
        "deletions": 16,
        "changed_files": 4,
        "created_at": "2014-06-06T17:04:25Z",
        "closed_at": "2014-11-14T21:15:06Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2014-06-04T14:25:27Z",
        "closed_at": "2014-07-12T05:42:27Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 108,
        "deletions": 13,
        "changed_files": 4,
        "created_at": "2014-05-30T16:00:39Z",
        "closed_at": "2014-11-14T20:59:55Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2014-05-29T18:25:09Z",
        "closed_at": "2014-06-12T12:35:01Z",
        "merged_at": null,
        "body": "Many thanks for supporting AMD! This PR makes one small amendment - changing `define(d3)` to `define(function () {return d3;})`. While it's perfectly valid, unfortunately `define(d3)` causes problems for source code transformers such as AMDClean ([see this issue](https://github.com/gfranko/amdclean/issues/48)), which incorrectly assume `d3` is a factory function. Creating an anonymous factory function is a fairly common pattern, and it eliminates this ambiguity.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-05-28T09:31:21Z",
        "closed_at": "2014-06-30T17:17:52Z",
        "merged_at": "2014-06-30T17:17:52Z",
        "body": "Spec:\nhttp://dom.spec.whatwg.org/#dom-element-matches\n\nSupport in Chromium:\nhttps://code.google.com/p/chromium/issues/detail?id=326652\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2014-05-28T06:05:11Z",
        "closed_at": "2016-05-14T16:32:04Z",
        "merged_at": null,
        "body": "Updated the tests for hierarchy to have them be flare.json based as per #1888.\n\nNot sure if the data should be inline or not.  \n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-05-22T10:33:22Z",
        "closed_at": "2014-06-30T17:17:52Z",
        "merged_at": "2014-06-30T17:17:52Z",
        "body": "A nicer package manager: http://spmjs.io\nDocumentation: http://spmjs.io/documentation\n\nhttp://spmjs.io/package/d3\n\n---\n\nIt is a package manager based on [Sea.js](https://github.com/seajs/seajs) which is a popular module loader in China.\n\nspmjs focus in browser side. We supply a complete lifecycle managment of package by using [spm](https://github.com/spmjs/spm/tree/master).\n\n> If you need ownership of d3 in spmjs, I can add it for your account after signing in http://spmjs.io.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 29,
        "changed_files": 1,
        "created_at": "2014-05-21T03:25:55Z",
        "closed_at": "2014-05-21T04:10:56Z",
        "merged_at": null,
        "body": "- Since null == undefined // returns true\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 11,
        "changed_files": 4,
        "created_at": "2014-05-19T18:03:05Z",
        "closed_at": "2014-05-19T18:26:19Z",
        "merged_at": "2014-05-19T18:26:19Z",
        "body": "Post-order traversal alone causes all parent values to be reset to zero\n_after_ accumulating child values.\n\nAn additional pre-order traversal resets all parent values to zero\nfirst, and the post-order traversal can then accumulate child values in\ntheir parents.\n\nThis only affects sticky treemaps.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 470,
        "deletions": 471,
        "changed_files": 7,
        "created_at": "2014-05-18T06:28:03Z",
        "closed_at": "2014-05-19T04:43:28Z",
        "merged_at": "2014-05-19T04:43:28Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 136,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-05-15T06:00:11Z",
        "closed_at": "2014-05-19T04:37:33Z",
        "merged_at": null,
        "body": "Tests copy-pasted from the `ca-ES` tests :)\n\nFor anyone wondering how to use the locales as of `v3.4.6` (49ba8afebb2ae813ab66dc2f48f533aa7f333c3c), I just patched [`src/format/format.js`](https://github.com/mbostock/d3/blob/master/src/format/format.js) and [`src/time/format.js`](https://github.com/mbostock/d3/blob/master/src/time/format.js):\n\n```\n~/d3 \u276f\u276f\u276f git diff src/format/format.js\ndiff --git a/src/format/format.js b/src/format/format.js\nindex bf740db..f103287 100644\n--- a/src/format/format.js\n+++ b/src/format/format.js\n@@ -1,3 +1,3 @@\n-import \"../locale/en-US\";\n+import \"../locale/fi-FI\";\n\n-d3.format = d3_locale_enUS.numberFormat;\n+d3.format = d3.locale.fi_FI.numberFormat;\n~/d3 \u276f\u276f\u276f git diff src/time/format.js\ndiff --git a/src/time/format.js b/src/time/format.js\nindex 3ad7f5f..e23fe63 100644\n--- a/src/time/format.js\n+++ b/src/time/format.js\n@@ -1,4 +1,4 @@\n-import \"../locale/en-US\";\n+import \"../locale/fi-FI\";\n import \"time\";\n\n-var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n+var d3_time_format = d3_time.format = d3.locale.fi_FI.timeFormat;\n```\n\nAs locale data is public domain, I doubt there's need for the Contributor License Agreement, right?\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-05-13T21:22:26Z",
        "closed_at": "2014-05-19T03:52:11Z",
        "merged_at": "2014-05-19T03:52:11Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 151,
        "deletions": 91,
        "changed_files": 3,
        "created_at": "2014-05-13T01:22:13Z",
        "closed_at": "2014-05-18T06:30:05Z",
        "merged_at": null,
        "body": "Tree layout now implemented using stacks instead of recursive calls to fix stack overflows caused by very deep trees (see #1868).\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-05-11T20:02:49Z",
        "closed_at": "2014-05-11T20:25:10Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2014-05-10T16:41:41Z",
        "closed_at": "2014-11-15T22:36:05Z",
        "merged_at": null,
        "body": "d3.shuffle takes two extra optional arguments that work on array\nsubsets: d3.shuffle(array[, i0[, i1]]). If given just array, then\nshuffles entire array. If given array and i0, shuffles from index i0 to\nthe end of the array. If given array, i0, and i1, shuffles between i0\nand i1. Tests for d3.shuffle also added.\n\nSee #1865.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2014-05-07T06:33:42Z",
        "closed_at": "2014-05-19T04:43:28Z",
        "merged_at": "2014-05-19T04:43:28Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 22,
        "changed_files": 6,
        "created_at": "2014-04-25T18:29:19Z",
        "closed_at": "2014-04-25T19:09:52Z",
        "merged_at": null,
        "body": "I'm working on an app that will include d3 for a data visualization piece. Our process of minifying d3.js into our app was causing several 'Invalid left-hand side expression in postfix operation' errors caused by sequences of '+ +' and '+ -'. In order to avoid this issue, wrapping the modified variables in parenthesis prevents '+ ++' from becoming '+++' and '+ -' from becoming '+-' in the minified code and resolves the issue.\n\nThere is no functional change to the library in this update; it's simply a slight syntax change.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 24,
        "changed_files": 4,
        "created_at": "2014-04-23T09:15:54Z",
        "closed_at": "2016-10-20T17:53:41Z",
        "merged_at": null,
        "body": "This removes all listeners (namespaced or not) for all elements in a given selection.\n\nRelated discussion in #894.  I haven\u2019t personally needed to use this but we can discuss further in this pull request whether it\u2019s worth supporting.\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1430,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-04-22T20:56:40Z",
        "closed_at": "2014-04-22T21:10:42Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 15,
        "changed_files": 4,
        "created_at": "2014-04-11T13:11:02Z",
        "closed_at": "2014-04-14T03:56:08Z",
        "merged_at": "2014-04-14T03:56:08Z",
        "body": "Originally we were using Welford\u2019s algorithm, but this is primarily useful when computing the variance in a numerically stable manner, since Welford\u2019s approach requires an incremental mean.\n\nI\u2019ve removed a test for the mean of more than one instance of Number.MAX_VALUE as this is unlikely to occur in practice; most likely this was the reason I used Welford\u2019s algorithm in the first place.\n\nThere\u2019s a paper [1] comparing various algorithms for computing the mean, and Welford\u2019s is actually slightly less accurate than the na\u00efve approach.  There are some more accurate approaches but I think it\u2019s overkill for d3.mean.\n\n[1] Youngs, Edward A., and Elliot M. Cramer. \"Some results relevant to choice of sum and sum-of-product algorithms.\" Technometrics 13.3 (1971): 657-665.\n\nRelated: #1842.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 9,
        "changed_files": 6,
        "created_at": "2014-04-10T23:44:11Z",
        "closed_at": "2014-04-14T03:56:08Z",
        "merged_at": "2014-04-14T03:56:08Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2014-04-08T15:04:15Z",
        "closed_at": "2014-04-14T03:56:08Z",
        "merged_at": "2014-04-14T03:56:08Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 105,
        "deletions": 131,
        "changed_files": 5,
        "created_at": "2014-04-06T05:46:50Z",
        "closed_at": "2014-04-08T04:43:53Z",
        "merged_at": "2014-04-08T04:43:53Z",
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 32,
        "changed_files": 1,
        "created_at": "2014-04-06T00:27:06Z",
        "closed_at": "2014-04-06T05:58:05Z",
        "merged_at": null,
        "body": "_This affects the time spent in d3.interpolateString while building the interpolator, not time spent on interpolator execution._\n\nFixes  #1826 and #1827.\n\nTwo major changes here:\n 1) Use algorithm with compexity O(n) instead of O(n^2).\n 2) Replace calls to `splice()` with constructing a new array. `splice()` is not guaranteed to be fast and it's compexity could vary between implementations, `push()` is always fast.\n\n**First change** makes the algorithm a lot faster, it was incredibly slow when some of the corresponding numbers in a and b were equal.\n\nThe new algorithm:\n1. Linear pass, using `b`: fill `s` and `q`, no significant changes.\n2. Linear pass, using `a`:\n   - fill `o.x` with interpolators for not matching values\n   - replace `s[o.i]` with strings `o.x` for matching values, removing elements only from `q`.\n3. Linear pass, using the remaning of `q`:\n   - replace `s[o.i]` with strings `o.x` and pop data from `q`.\n4. Linear pass on `s`, coalescing non-null values while accumulating the number of elements removed till the current moment in a counter, for example `rc`. Null values correspond to elements from `q`, for each null value perform a single `q[j++].i -= rc`. This efficiently fixes all references to elements from `s`.\n\n**The second change** makes the algorithm much faster for cases when many small intervals have to be removed or coalesced, but makes the algorithm about 10% slower for the case when no elements have to be removed (keeping the whole array).\n\nThe interpolator complexity and execution time have not increased.\n\n**The test results** are not too precise, I ran each one only a few times.\n\nWorst-case for the old algorithm (0% different numbers between a and b):\n  12000 numbers:  20 ms instead of 300 ms.\n  60000 numbers:  90 ms instead of 13 seconds.\n 300000 numbers: 300 ms instead of 9 minutes.\n1500000 numbers: 1.6 seconds.\n\nAverage-case for the old algorithm (93% different numbers between a and b):\n  12000 numbers:  50 ms instead of   60 ms.\n  60000 numbers: 130 ms instead of 1250 ms.\n 300000 numbers: 520 ms instead of 41 seconds.\n1500000 numbers: 2.8 seconds.\n\nBest-case for the old algorithm (100% different numbers between a and b):\n  12000 numbers:  25 ms instead of 20 ms.\n  60000 numbers: 100 ms instead of 90 ms.\n 300000 numbers: 550 ms instead of 510 ms.\n1500000 numbers: 4.4 s. instead of 4.4 s.\n\n1500000 numbers is a string with 2.1e7 chars, that's 20 MiB in one-byte encoding.\n\n_Chromium 33, x86_64 GNU/Linux, i5-3317U. The results in Firefox are similar._\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 16,
        "changed_files": 4,
        "created_at": "2014-04-04T13:33:08Z",
        "closed_at": "2014-04-08T04:43:53Z",
        "merged_at": "2014-04-08T04:43:53Z",
        "body": "Fixes #1823; spurious closePath events were being generated for degenerate polygons due to generation of empty polygons and rings in rare cases.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 120,
        "deletions": 16,
        "changed_files": 3,
        "created_at": "2014-04-02T04:09:18Z",
        "closed_at": "2016-01-16T00:18:56Z",
        "merged_at": null,
        "body": "",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 21,
        "changed_files": 4,
        "created_at": "2014-03-26T19:00:49Z",
        "closed_at": "2016-10-20T17:53:41Z",
        "merged_at": null,
        "body": "Rather than clamping latitudes to \u00b1(\u03c0/2 - \u03b5), we preserve infinite coordinates and correct the issue where 0 \\* Infinity resulted in NaN; instead we substitute 0, which appears to fix the problem in #1802.\n\nIncludes tests and a fix for the inverse projection.\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 59,
        "deletions": 7,
        "changed_files": 5,
        "created_at": "2014-03-26T16:33:30Z",
        "closed_at": "2016-10-20T17:53:40Z",
        "merged_at": null,
        "body": "Provides a time.format directive for a signed 4-digit year\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 94,
        "deletions": 45,
        "changed_files": 7,
        "created_at": "2014-03-24T04:40:38Z",
        "closed_at": "2014-03-24T05:40:12Z",
        "merged_at": null,
        "body": "When a SI-prefix format (type \"s\") is passed to scale.tickFormat, compute a suitable SI-prefix based on the maximum value in the range, and then use that prefix for all ticks rather than computing the SI-prefix on a per-tick basis.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 28,
        "changed_files": 1,
        "created_at": "2014-03-24T00:49:33Z",
        "closed_at": "2014-03-24T03:00:28Z",
        "merged_at": null,
        "body": "Put everything in an IIFE, in the case of a name clash\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2014-03-23T00:19:07Z",
        "closed_at": "2014-03-23T21:21:40Z",
        "merged_at": null,
        "body": "The Lambert conic conformal projection extends to infinity along the outer edge of the projection, and thus the latitude must be clamped either at -\u03c0/2 or +\u03c0/2 depending on the parallels. Fixes #1802.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 31,
        "changed_files": 3,
        "created_at": "2014-03-22T19:38:13Z",
        "closed_at": "2014-03-23T03:25:45Z",
        "merged_at": null,
        "body": "Work-in-progress for #1802.\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2014-03-22T04:56:09Z",
        "closed_at": "2014-03-22T14:35:26Z",
        "merged_at": "2014-03-22T14:35:26Z",
        "body": "Currently, the quadtree tests try to check the children of a node like so:\n\n```\nassert.isUndefined(node[2]);\n```\n\nHowever, node is the result of d3_geom_quadtreeNode, not an array, so that assert is just checking the '2' property of the node object, which, indeed happens to be undefined.\n\nI think these tests mean to check the `nodes` property of the node, which _is_ an array, so this updates those statements like so:\n\n```\nassert.isUndefined(node.nodes[2]);\n```\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 136,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-03-21T21:12:12Z",
        "closed_at": "2014-03-24T03:24:32Z",
        "merged_at": "2014-03-24T03:24:32Z",
        "body": "Add catalan language for localization.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 33,
        "changed_files": 3,
        "created_at": "2014-03-20T19:52:27Z",
        "closed_at": "2015-12-03T17:32:17Z",
        "merged_at": null,
        "body": "",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 131,
        "deletions": 99,
        "changed_files": 6,
        "created_at": "2014-03-20T19:09:09Z",
        "closed_at": "2014-03-20T19:52:52Z",
        "merged_at": null,
        "body": "This adds Win8 support on top of the recent multiple finger improvements. Supersedes both #1792 and #1795.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2014-03-19T21:54:17Z",
        "closed_at": "2014-03-20T19:11:05Z",
        "merged_at": null,
        "body": "This makes `d3.behavior.drag` track unified Pointer Events when available, instead of mouse and touch. Enables dragging on touchscreen Win8 devices.\n\nNote this also includes a fix for \"different finger\" move/end events on all platforms, I can split out if desired but this was especially needed for the Pointer Events for correct multiple finger support.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 194,
        "deletions": 183,
        "changed_files": 7,
        "created_at": "2014-03-19T17:03:30Z",
        "closed_at": "2014-03-23T21:27:03Z",
        "merged_at": null,
        "body": "This fixes a bug where all touches would ending on any touch ending.\n\nThe drag behavior registers a touchend listener for each started touch; however, a touchend event is dispatched to ALL listeners when any touch ends, not just for the corresponding starting touch. The drag behavior must therefore detect whenever the ending touch is the corresponding starting touch, and ignore other ending touches.\n\nThis fixes the drag behavior during multitouch, as discussed in #1786.\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 136,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2014-03-17T13:12:49Z",
        "closed_at": "2014-03-17T15:10:35Z",
        "merged_at": "2014-03-17T15:10:35Z",
        "body": "Taken into account multiple locales support, and not custom build.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2014-03-17T04:07:27Z",
        "closed_at": "2014-03-23T21:24:53Z",
        "merged_at": null,
        "body": "Objects that are coercible to numbers, such as Dates, are often more usefully interpolated as numbers rather than as objects. Related #1779.\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 13,
        "changed_files": 5,
        "created_at": "2014-03-16T17:43:56Z",
        "closed_at": "2014-03-23T21:25:08Z",
        "merged_at": null,
        "body": "This enhances the built-in interpolation routine to correctly handle Date objects.\n\nThis is how it can be used:\n\n``` javascript\n> date1 = new Date(2010, 1, 0)\nSun Jan 31 2010 00:00:00 GMT-0800 (PST)\n> date2 = new Date(2014, 1, 0)\nFri Jan 31 2014 00:00:00 GMT-0800 (PST)\n> d3.interpolate(date1, date2)(0.3)\nThu Apr 14 2011 08:12:00 GMT-0700 (PDT)\n```\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2014-03-13T13:57:30Z",
        "closed_at": "2014-03-13T15:07:42Z",
        "merged_at": "2014-03-13T15:07:42Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 173,
        "deletions": 32,
        "changed_files": 8,
        "created_at": "2014-03-06T18:04:29Z",
        "closed_at": "2014-03-23T21:25:24Z",
        "merged_at": null,
        "body": "Fixes #1766. Unlike d3.bisector(accessor), this allows you to define a bisector that works in reverse order.\n\nAn awkward aspect of implementing bisection on top of a comparator is that it is often the case that the sorted array contains objects (e.g., rows from a TSV), while the search value is a primitive value (e.g., a number). Thus, you want to apply an accessor to the array elements but not to the search value.\n\nThe solution here is to invoke the comparator deterministically: the first argument is always an element from the array, and the second argument is always the search value. This lets a comparator apply an accessor to array elements but not to search values.\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2014-03-04T21:04:19Z",
        "closed_at": "2014-03-05T01:06:36Z",
        "merged_at": null,
        "body": "almond.js will choke on anonymous modules, hence\n\n```\ndefine(function() {})\n```\n\nshould look like this instead:\n\n```\ndefine(\"someName\", function() {})\n```\n\nMore information here: https://github.com/jrburke/almond#common-errors\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 249,
        "deletions": 304,
        "changed_files": 26,
        "created_at": "2014-03-04T16:39:34Z",
        "closed_at": "2014-03-24T03:08:54Z",
        "merged_at": null,
        "body": "If the target value of d3.interpolate exposes an `interpolate` property, use that as the interpolator rather than the default. Also define custom interpolators for colors.\n\nThis commit has two notable ramifications. First, it changes the behavior of interpolation when the target value is an instance of d3.hcl, d3.hsl or d3.lab: rather than using the RGB colorspace for interpolation, the colorspace of the target color is used. (Note that for HSL colors expressed as strings like \"hsl(\u2026)\", RGB interpolation is still used.) Second, if the target value has an \"interpolate\" property that is truthy but not a function, a TypeError is thrown.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 513,
        "deletions": 299,
        "changed_files": 30,
        "created_at": "2014-03-01T19:25:33Z",
        "closed_at": "2014-03-25T14:43:16Z",
        "merged_at": "2014-03-25T14:43:16Z",
        "body": "Work-in-progress branch for the next patch release.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2014-02-27T22:49:48Z",
        "closed_at": "2014-03-01T19:25:51Z",
        "merged_at": null,
        "body": "Rather than starting the ticks on the minimum domain value, round up based on the step size. Fixes #1757.\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2014-02-27T22:29:25Z",
        "closed_at": "2014-03-01T19:32:44Z",
        "merged_at": null,
        "body": "To be able to do something like this:\n\n``` javascript\nvar format = d3.format.multi([\n    ['%Y',         function(d, resolution) { return resolution === 'year'; }],\n    ['%b, %Y',     function(d, resolution) { return resolution === 'month'; }],\n    ['%-d %b, %Y', function()              { return true; }]\n]);\nformat(date, 'month');\n```\n\nThe performance and file size impact (+ 19 chars when minified) is minimal and it's 100% backwards compatible.\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2014-02-27T00:34:10Z",
        "closed_at": "2014-02-27T15:50:49Z",
        "merged_at": "2014-02-27T15:50:49Z",
        "body": "Due to a recent regression in Chrome 33, we can\u2019t necessarily rely on Math.sin(x) being symmetric about zero, so we need some minor workarounds where it matters.\n\nThis fixes area calculations for degenerate zero-area polygons such as the one mentioned in #1753, and any potential impact this could have for the point-in-polygon algorithm (used for clipping).\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 18,
        "changed_files": 4,
        "created_at": "2014-02-22T19:39:40Z",
        "closed_at": "2014-11-15T17:00:58Z",
        "merged_at": null,
        "body": "Allows control of the sweep direction on paths generated with d3.svg.arc.  This is particularly useful when the path will be used for an `<svg:textPath>`, since the sweep direction controls which side of the path the text will attach to (see http://bl.ocks.org/telic/9160262).\n\nFor compatibility with existing uses of d3.svg.arc, I've made the negativeSweep accessor fallback to a `false` value when a data object is not supplied and the accessor has not been overridden.\n",
        "comments": 3
    }
]