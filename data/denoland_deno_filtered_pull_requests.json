[
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-18T05:09:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This pr fix #20923\r\n\r\nI use the implementation in 02_timers.js.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 175,
        "deletions": 84,
        "changed_files": 8,
        "created_at": "2023-10-18T01:57:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Prerequisite for https://github.com/denoland/deno/pull/20876",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-10-17T23:17:44Z",
        "closed_at": "2023-10-17T23:38:24Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-10-17T20:29:56Z",
        "closed_at": "2023-10-17T23:51:40Z",
        "merged_at": "2023-10-17T23:51:39Z",
        "body": "Fixes https://github.com/denoland/deno/issues/20924",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-16T23:55:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Nothing to see here yet",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 1,
        "changed_files": 8,
        "created_at": "2023-10-16T07:40:16Z",
        "closed_at": "2023-10-16T15:26:39Z",
        "merged_at": "2023-10-16T15:26:39Z",
        "body": "Makes type checking octokit work.\r\n\r\nCloses #20854",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 71,
        "deletions": 18,
        "changed_files": 4,
        "created_at": "2023-10-16T00:57:36Z",
        "closed_at": "2023-10-16T19:21:57Z",
        "merged_at": "2023-10-16T19:21:57Z",
        "body": "Coupled with https://github.com/denoland/vscode_deno/pull/978. If you open a yet-to-be-saved file, maybe through `code file.ts` for VSCode, that file wouldn't show diagnostics until it was saved to the FS. That's because we weren't handling `untitled:///` specifiers passed from VSCode.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-15T14:19:26Z",
        "closed_at": "2023-10-17T01:40:50Z",
        "merged_at": null,
        "body": "## Description\r\n\r\nI have added the LICENSE section in the README file with enhanced presentation. Also I have added a MIT logo, license badge and updated text with a cleaner format, including a hyperlink to the LICENSE file.\r\n\r\n## Screenshot\r\n\r\n![MIT](https://user-images.githubusercontent.com/66154908/275214103-f26ee346-74b9-4aa9-8912-d2de23f02e4e.png)\r\n\r\n### Issue fix\r\n- resolves #20912",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-10-15T13:02:31Z",
        "closed_at": "2023-10-17T04:13:07Z",
        "merged_at": "2023-10-17T04:13:07Z",
        "body": "Fixes #10897. The LSP client will reset the version index to 1 if the file is deleted, which prevented tsc from refreshing diagnostics. This includes the `Document::fs_version()` (mtime) in the version that we pass to tsc.\r\n\r\nIn theory this shouldn't solve the issue for the duration where the new file is still unsaved, because there's no mtime to apply. But it seems no diagnostics are published or shown for unsaved files anyway so I can't reproduce an issue.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-10-14T22:11:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 128,
        "deletions": 17,
        "changed_files": 6,
        "created_at": "2023-10-14T21:43:32Z",
        "closed_at": null,
        "merged_at": null,
        "body": "```\r\n$ deno run urlpattern_bench_exec.js\r\ntook 2037 ms\r\n$ deno run urlpattern_bench_test.js\r\ntook 2004 ms\r\n\r\n$ ./target/release/deno run urlpattern_bench_exec.js\r\ntook 1727 ms\r\n$ ./target/release/deno run urlpattern_bench_test.js\r\ntook 1101 ms\r\n```\r\n\r\nThat\u2019s about 15% speed up for exec and about 40% speed up for test.\r\nI didn\u2019t do anything magical, just switched from serializing structs (ie. JS objects) to serializing arrays (and turning them into objects in JS if needed).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-10-13T10:53:19Z",
        "closed_at": "2023-10-13T13:38:35Z",
        "merged_at": "2023-10-13T13:38:34Z",
        "body": "Fixes #17235.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 117,
        "deletions": 74,
        "changed_files": 29,
        "created_at": "2023-10-13T00:36:17Z",
        "closed_at": "2023-10-13T03:12:07Z",
        "merged_at": "2023-10-13T03:12:07Z",
        "body": "**THIS PR HAS GIT CONFLICTS THAT MUST BE RESOLVED**\n\nThis is the release commit being forwarded back to main for 1.37.2\n\nPlease ensure:\n- [x] Everything looks ok in the PR\n- [x] The release has been published\n\nTo make edits to this PR:\n```shell\ngit fetch upstream forward_v1.37.2 && git checkout -b forward_v1.37.2 upstream/forward_v1.37.2\n```\n\nDon't need this PR? Close it.\n\ncc @bartlomieju",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 117,
        "deletions": 74,
        "changed_files": 29,
        "created_at": "2023-10-12T23:09:28Z",
        "closed_at": "2023-10-13T00:14:52Z",
        "merged_at": "2023-10-13T00:14:52Z",
        "body": "Bumped versions for 1.37.2\n\nPlease ensure:\n- [x] Target branch is correct (`vX.XX` if a patch release, `main` if minor)\n- [x] Crate versions are bumped correctly\n- [x] deno_std version is incremented in the code (see `cli/deno_std.rs`)\n- [x] Releases.md is updated correctly (think relevancy and remove reverts)\n\nTo make edits to this PR:\n```shell\ngit fetch upstream release_1_37.2 && git checkout -b release_1_37.2 upstream/release_1_37.2\n```\n\ncc @bartlomieju",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 76,
        "deletions": 74,
        "changed_files": 29,
        "created_at": "2023-10-12T23:04:36Z",
        "closed_at": "2023-10-12T23:06:48Z",
        "merged_at": null,
        "body": "Bumped versions for 1.37.2\n\nPlease ensure:\n- [x] Target branch is correct (`vX.XX` if a patch release, `main` if minor)\n- [ ] Crate versions are bumped correctly\n- [ ] deno_std version is incremented in the code (see `cli/deno_std.rs`)\n- [ ] Releases.md is updated correctly (think relevancy and remove reverts)\n\nTo make edits to this PR:\n```shell\ngit fetch upstream release_1_37.2 && git checkout -b release_1_37.2 upstream/release_1_37.2\n```\n\ncc @bartlomieju",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 134,
        "deletions": 113,
        "changed_files": 6,
        "created_at": "2023-10-12T12:10:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Closes https://github.com/denoland/deno/issues/20855\r\n\r\nFixes https://github.com/denoland/deno/issues/20890\r\nFixes https://github.com/denoland/deno/issues/20611\r\nFixes https://github.com/denoland/deno/issues/20336\r\nFixes `create-svelte` from https://github.com/denoland/deno/issues/17248 \r\n\r\nFixes more reports here:\r\n- https://github.com/denoland/deno/issues/6529#issuecomment-1432690559\r\n- https://github.com/denoland/deno/issues/6529#issuecomment-1522059006\r\n- https://github.com/denoland/deno/issues/6529#issuecomment-1695803570",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 250,
        "deletions": 36,
        "changed_files": 4,
        "created_at": "2023-10-12T12:05:31Z",
        "closed_at": "2023-10-17T01:51:42Z",
        "merged_at": "2023-10-17T01:51:42Z",
        "body": "Closes #15487.\r\n\r\nAlso better aligns the defaults passed to tsc format settings with `deno fmt`.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 13,
        "changed_files": 9,
        "created_at": "2023-10-11T07:33:44Z",
        "closed_at": "2023-10-12T06:33:59Z",
        "merged_at": "2023-10-12T06:33:59Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2023-10-11T04:53:20Z",
        "closed_at": "2023-10-11T05:48:03Z",
        "merged_at": "2023-10-11T05:48:03Z",
        "body": "Markdown:\r\n\r\n* fix: hard break in list was incorrectly being converted to soft with hard break https://github.com/dprint/dprint-plugin-markdown/commit/6678390b27f05fd23a972eab7918e8badca60505\r\n\r\nTypeScript:\r\n\r\n* fix: multi-line string indent was broken in some cases (https://github.com/dprint/dprint-plugin-typescript/pull/566)\r\n* feat: add parens around unary expressions in in/instanceof (https://github.com/dprint/dprint-plugin-typescript/pull/564)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 57,
        "changed_files": 5,
        "created_at": "2023-10-11T04:27:37Z",
        "closed_at": "2023-10-11T05:31:06Z",
        "merged_at": "2023-10-11T05:31:06Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 32,
        "changed_files": 13,
        "created_at": "2023-10-11T02:35:11Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Closes #20266",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 839,
        "deletions": 156,
        "changed_files": 24,
        "created_at": "2023-10-10T23:34:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This commit adds `--hmr` flag, that enabled Hot Module Replacement.\r\n\r\nThis flag works like `--watch` and accepts the same arguments. If\r\nHMR is not possible the process will be restarted instead.\r\n\r\nCurrently HMR is only supported in `deno run` subcommand.\r\n\r\nUpon HMR a `CustomEvent(\"hmr\")` will be dispatched that contains\r\ninformation which file was changed in its `details` property.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-10T19:59:49Z",
        "closed_at": "2023-10-11T14:43:42Z",
        "merged_at": "2023-10-11T14:43:42Z",
        "body": "Fixes #20873",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 136,
        "deletions": 120,
        "changed_files": 1,
        "created_at": "2023-10-10T15:36:16Z",
        "closed_at": "2023-10-10T18:17:11Z",
        "merged_at": "2023-10-10T18:17:11Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2023-10-10T12:12:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "- Enables SO_REUSEPORT on macOS\r\n- All Node `net.Socket` TCP sockets are set to `SO_REUSEPORT`.\r\n\r\nFixes #20618 \r\nFixes #18301 \r\n\r\nModules working: `npm:http-server`, `npm:portfinder` and Vuepress dev server",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 28,
        "changed_files": 1,
        "created_at": "2023-10-10T10:58:23Z",
        "closed_at": "2023-10-10T18:32:23Z",
        "merged_at": "2023-10-10T18:32:23Z",
        "body": "Fixes #11232. Basically when you open a remote file with F12, and then restart the language server while it's open, you wouldn't get intellisense for that file until you 'navigated to' it again.\r\n\r\nWhen we denormalize a `https:` specifier to a `deno:` URL, we cache the result so it can be reverse-mapped on a roundtrip. The cache entry was _required_ to do that reverse-mapping, this makes it stateless.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2023-10-10T00:07:57Z",
        "closed_at": "2023-10-10T13:40:36Z",
        "merged_at": "2023-10-10T13:40:36Z",
        "body": "Fixes #20853.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-10-09T20:46:02Z",
        "closed_at": "2023-10-17T14:08:21Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2023-10-09T18:37:17Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Upstream some changes from https://github.com/nodejs/node/pull/49205\r\n\r\n<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 74,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-10-09T11:30:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The lack of issue templates has the unfortunate result that most bug reports are lacking key information about the reporters setup.\r\n\r\nThis adds templates for:\r\n\r\n- Bug report (Github ticket - `bug` label)\r\n- Deno land Feature request (Github ticket - `enhancement` label)\r\n- Community Feature Requets (Discord -> Ideas)\r\n- Ask a Question, Discuss and learn how others are using Deno (Discord)\r\n\r\nNote: Because I'm not so experienced in writing these, and didn't want to introduce bugs, I used the Bun issue templates as a starting point as I like that bug report workflow.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2023-10-09T11:25:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Implements https://github.com/whatwg/streams/pull/1145. Have to wait for WPT to land first (https://github.com/web-platform-tests/wpt/pull/29723). Needed for https://github.com/denoland/deno_std/pull/1985",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-10-09T10:51:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes https://github.com/denoland/deno/issues/20847\r\n@bartlomieju I couldn't find a way to add tests for this.\r\nWould appreciate some help here, thanks.\r\n\r\n<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-10-09T10:40:57Z",
        "closed_at": "2023-10-09T11:23:41Z",
        "merged_at": "2023-10-09T11:23:41Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 177,
        "deletions": 36,
        "changed_files": 16,
        "created_at": "2023-10-09T09:28:46Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This commit implements Symbol.dispose and Symbol.asyncDispose for\nthe relevant resources.\n\nCloses #20839",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 82,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-10-09T08:53:03Z",
        "closed_at": "2023-10-09T22:43:33Z",
        "merged_at": "2023-10-09T22:43:33Z",
        "body": "Fixes #20308.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-10-09T08:06:33Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Keeps the old name around for backwards compat.\r\n\r\nCloses #20840",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-09T08:03:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Minor improvements to the documentation for https://deno.com/api",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1064,
        "deletions": 307,
        "changed_files": 24,
        "created_at": "2023-10-09T02:24:55Z",
        "closed_at": "2023-10-10T03:01:01Z",
        "merged_at": "2023-10-10T03:01:01Z",
        "body": "Fixes a WPT in `URL` and `ReadableStream`.\r\n\r\nSome unrelated WPT expectation changes due to WPT update.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-10-08T22:34:17Z",
        "closed_at": "2023-10-09T08:57:32Z",
        "merged_at": "2023-10-09T08:57:32Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 21,
        "changed_files": 5,
        "created_at": "2023-10-08T22:11:44Z",
        "closed_at": "2023-10-09T00:08:11Z",
        "merged_at": "2023-10-09T00:08:11Z",
        "body": "This is dead code that was not used in any way.\r\n\r\nRef https://github.com/denoland/deno/pull/20797",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-10-08T18:00:46Z",
        "closed_at": "2023-10-08T18:43:14Z",
        "merged_at": "2023-10-08T18:43:14Z",
        "body": "https://github.com/denoland/deno/pull/20808 broke benchmarks, this commit should fix it.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2023-10-08T16:56:42Z",
        "closed_at": "2023-10-09T03:39:52Z",
        "merged_at": "2023-10-09T03:39:52Z",
        "body": "Fixes #20754. Uses one big text edit if the formatter produces a substantial change in line count. Also moves diff generation to the blocking thread.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 318,
        "deletions": 22,
        "changed_files": 5,
        "created_at": "2023-10-08T15:22:20Z",
        "closed_at": "2023-10-12T15:07:28Z",
        "merged_at": "2023-10-12T15:07:28Z",
        "body": "Half of https://github.com/denoland/vscode_deno/issues/963. Coupled with https://github.com/denoland/vscode_deno/pull/964. Also sends the `deno.json` file URI with each task def in `deno/task` responses.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 25,
        "changed_files": 6,
        "created_at": "2023-10-08T04:58:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Ref https://github.com/denoland/deno/issues/18071\r\n\r\nWaiting on new rustls release to fully upgrade to 0.17",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2023-10-08T00:20:32Z",
        "closed_at": "2023-10-10T04:53:41Z",
        "merged_at": "2023-10-10T04:53:41Z",
        "body": "Coupled with https://github.com/denoland/vscode_deno/pull/962.\r\n\r\nMoves custom request `deno/reloadImportRegistries` to command `deno.reloadImportRegistries`.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 863,
        "deletions": 721,
        "changed_files": 8,
        "created_at": "2023-10-07T20:39:41Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Use HttpRecord as response body so requests can be tracked all the way to response body completion.\r\n\r\nThis allows Request properties to be accessed while the response body is streaming.\r\n\r\nGraceful shutdown now awaits a future instead of async spinning waiting for requests to finish.\r\n\r\nOn the minimal benchmark this refactor improves performance an additional 2% over pooling alone for a net 3% increase over the previous deno main branch.\r\n\r\nBuilds upon https://github.com/denoland/deno/pull/20809 and https://github.com/denoland/deno/pull/20770.\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-10-07T12:48:49Z",
        "closed_at": "2023-10-08T05:02:07Z",
        "merged_at": "2023-10-08T05:02:07Z",
        "body": "Fixes #20817",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4218,
        "deletions": 148,
        "changed_files": 5,
        "created_at": "2023-10-07T07:34:50Z",
        "closed_at": "2023-10-12T22:32:39Z",
        "merged_at": "2023-10-12T22:32:39Z",
        "body": "This brings in [`display`](https://github.com/rgbkrk/display.js) as part of the `Deno.jupyter` namespace. I went ahead and hooked up our `execute_result` handling to use `Deno.jupyter.format` so that DataFrames, Canvas, and other objects can be displayed nicely (even without implementation in the respective libraries).\r\n \r\n<img width=\"742\" alt=\"image\" src=\"https://github.com/denoland/deno/assets/836375/0abb3614-9599-47dd-9044-e713395b0704\">\r\n\r\n* [x] Write the types in `cli/tsc/dts/lib.deno.unstable.d.ts`\r\n* [x] Emit execute result \r\n* [x] Write tests (port over from https://github.com/rgbkrk/display.js)",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 32,
        "changed_files": 1,
        "created_at": "2023-10-06T22:03:34Z",
        "closed_at": "2023-10-08T19:00:41Z",
        "merged_at": "2023-10-08T19:00:41Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 112,
        "deletions": 34,
        "changed_files": 3,
        "created_at": "2023-10-06T12:47:54Z",
        "closed_at": "2023-10-10T09:42:32Z",
        "merged_at": "2023-10-10T09:42:32Z",
        "body": "Fixes https://github.com/denoland/deno/issues/20741",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 14981,
        "deletions": 2,
        "changed_files": 43,
        "created_at": "2023-10-06T10:01:57Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Requires a wgpu release before it can be landed.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-10-06T09:36:45Z",
        "closed_at": "2023-10-06T13:46:44Z",
        "merged_at": "2023-10-06T13:46:44Z",
        "body": "Fixes #18460.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 630,
        "deletions": 496,
        "changed_files": 8,
        "created_at": "2023-10-06T06:31:47Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Reuse existing existing allocations for HttpRecord and response HeaderMap where possible.\r\n\r\nAt request end used allocations are returned to the pool and the pool and the pool sized to 1/8th the current number of inflight requests.\r\n\r\nFor http1 hyper will reuse the response HeaderMap for the following request on the connection.\r\n\r\nBuilds upon https://github.com/denoland/deno/pull/20770",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 33,
        "changed_files": 7,
        "created_at": "2023-10-05T22:59:31Z",
        "closed_at": "2023-10-07T15:34:04Z",
        "merged_at": "2023-10-07T15:34:04Z",
        "body": "Getting closer...",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-10-05T20:43:13Z",
        "closed_at": "2023-10-06T21:26:11Z",
        "merged_at": "2023-10-06T21:26:11Z",
        "body": "Allows `Jupyter.display` to return a promise.\r\n\r\n\r\nSilly example:\r\n\r\n```javascript\r\nclass WikiPage {\r\n    constructor(public name) {}\r\n    async [Symbol.for(\"Jupyter.display\")]() {\r\n        let response = await fetch(\"https://en.wikipedia.org/wiki/\" + this.name);\r\n        return { \"text/html\": await response.text() }\r\n    }\r\n}\r\n\r\nnew WikiPage(\"Deno_(software)\")\r\n```\r\n\r\n<img width=\"788\" alt=\"image\" src=\"https://github.com/denoland/deno/assets/24403730/edb7c67f-e7f8-44b7-9236-28af62e51956\">\r\n\r\n<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-10-05T20:29:07Z",
        "closed_at": "2023-10-06T20:31:13Z",
        "merged_at": "2023-10-06T20:31:12Z",
        "body": "Changes logo prefix from `icon-*` to `logo-*` so they are correctly discovered by Jupyter\r\n\r\n<img width=\"774\" alt=\"image\" src=\"https://github.com/denoland/deno/assets/24403730/1b9fae53-c586-4077-a29d-96b8b122dadc\">\r\n\r\n\r\n<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 73,
        "deletions": 68,
        "changed_files": 2,
        "created_at": "2023-10-05T18:59:14Z",
        "closed_at": "2023-10-05T22:16:36Z",
        "merged_at": "2023-10-05T22:16:36Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-10-05T18:44:33Z",
        "closed_at": "2023-10-08T22:13:00Z",
        "merged_at": "2023-10-08T22:13:00Z",
        "body": "Closes https://github.com/denoland/deno/issues/20750\r\n\r\nThis matches what browsers do: https://developer.mozilla.org/en-US/docs/Web/API/Window/name\r\n\r\nIn the future we might want to change the behavior to actually update\r\nthe process name, but that needs a bit of discussion regarding if\r\nit needs a permission flag (that would make polyfiling `process.title`\r\nsetter really easy too).",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2023-10-05T17:43:27Z",
        "closed_at": "2023-10-12T14:37:56Z",
        "merged_at": "2023-10-12T14:37:56Z",
        "body": "When populating `FileSystemDocs`, we read files into it here: https://github.com/denoland/deno/blob/v1.37.1/cli/lsp/documents.rs#L762. But this was being invoked redundantly all over the place because we were unnecessarily invalidating the existing entry. In particular `Document::open()` was setting the `fs_version` to `\"1\"` invariably. Now it's set according to the file's mtime and updated whenever a save notification is received.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2023-10-05T16:07:50Z",
        "closed_at": "2023-10-05T17:28:44Z",
        "merged_at": "2023-10-05T17:28:44Z",
        "body": "fixes https://github.com/denoland/deno/issues/20793",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 29,
        "changed_files": 5,
        "created_at": "2023-10-05T15:14:22Z",
        "closed_at": "2023-10-05T20:18:30Z",
        "merged_at": "2023-10-05T20:18:30Z",
        "body": "Adds a `referrer` parameter to this function instead of using a fake one.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 125,
        "deletions": 45,
        "changed_files": 20,
        "created_at": "2023-10-05T00:45:36Z",
        "closed_at": "2023-10-12T15:55:51Z",
        "merged_at": "2023-10-12T15:55:51Z",
        "body": "Towards https://github.com/denoland/deno/issues/20779.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2023-10-04T23:21:29Z",
        "closed_at": null,
        "merged_at": null,
        "body": "I'm not sure what was the purpose of trying to be so clever with the args were (maybe an optimization?), but it breaks variadic args as pointed out in #20054.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-04T21:26:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This addresses https://github.com/denoland/deno/issues/20613#issuecomment-1739962483, however it doesn't make\r\n`parcel` work - now the CPU is spinning at 100% and doing Ctrl+C doesn't do anything besides print a message to terminal.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2023-10-04T20:33:45Z",
        "closed_at": "2023-10-05T08:44:38Z",
        "merged_at": "2023-10-05T08:44:38Z",
        "body": "Closes #20701",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 119,
        "deletions": 126,
        "changed_files": 7,
        "created_at": "2023-10-04T19:40:09Z",
        "closed_at": "2023-10-05T03:05:12Z",
        "merged_at": "2023-10-05T03:05:12Z",
        "body": "We had two methods that did the same functionality.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 92,
        "deletions": 83,
        "changed_files": 2,
        "created_at": "2023-10-04T19:25:33Z",
        "closed_at": "2023-10-04T21:08:57Z",
        "merged_at": "2023-10-04T21:08:57Z",
        "body": "This fixes #20767.\r\n\r\n![image](https://github.com/denoland/deno/assets/836375/89781768-1c2b-4804-b5e8-a31fd08cae6f)\r\n\r\nWe were losing `this` and then when an exception was happening, it didn't show up in the output because we weren't bubbling up exceptions from within a user defined function for displaying. I thought about doing a `.call(object)` but didn't want to get in the way of a bound `this` that a user or library was already putting on the function.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-10-04T18:51:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-10-04T15:55:50Z",
        "closed_at": "2023-10-05T18:27:21Z",
        "merged_at": "2023-10-05T18:27:20Z",
        "body": "Fixes https://github.com/denoland/deno/issues/20617\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 284,
        "deletions": 184,
        "changed_files": 7,
        "created_at": "2023-10-04T14:48:26Z",
        "closed_at": "2023-10-05T10:25:15Z",
        "merged_at": "2023-10-05T10:25:15Z",
        "body": "Extracted from #20778.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 40,
        "changed_files": 10,
        "created_at": "2023-10-04T13:29:59Z",
        "closed_at": "2023-10-05T18:49:09Z",
        "merged_at": "2023-10-05T18:49:09Z",
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n\r\nUpdate to Rust 1.73\r\n\r\nIf this PR has any problem, please tell me.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-10-04T07:25:19Z",
        "closed_at": "2023-10-05T00:38:11Z",
        "merged_at": "2023-10-05T00:38:11Z",
        "body": "Example:\r\n```ts\r\nimport colorName, { type RGB } from 'npm:color-name';\r\nconst color: RGB = colorName.black;\r\nconsole.log(color);\r\n```\r\nThis now shows a diagnostic on the import for `RGB`, since that package has no included type declarations. It already does with `deno check`.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 239,
        "deletions": 13,
        "changed_files": 9,
        "created_at": "2023-10-04T02:43:14Z",
        "closed_at": "2023-10-05T20:45:12Z",
        "merged_at": "2023-10-05T20:45:12Z",
        "body": "Blocked by #20783.\r\n\r\n![image](https://github.com/denoland/deno/assets/29990554/9f6c59c9-23a1-4eeb-855f-5f7c3a1af421)\r\n\r\n\r\n![image](https://github.com/denoland/deno/assets/29990554/906c62eb-c288-4022-9cf2-d7aec6da0239)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 384,
        "deletions": 305,
        "changed_files": 19,
        "created_at": "2023-10-03T21:28:44Z",
        "closed_at": "2023-10-03T23:05:06Z",
        "merged_at": "2023-10-03T23:05:06Z",
        "body": "Part of https://github.com/denoland/deno/issues/18967",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-10-03T21:08:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "reverts https://github.com/denoland/deno/pull/12265/files, see @robpalme's reply. https://v8.dev/blog/faster-class-features references Deno for why they made the class fields faster in V8 v10. Deno uses V8 v11+ by now, so we can safely revert.\r\n\r\nPlease add the label ci-bench so we see if it's really faster for Deno.\r\n\r\n<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-10-03T16:27:43Z",
        "closed_at": "2023-10-03T17:35:47Z",
        "merged_at": "2023-10-03T17:35:47Z",
        "body": "* fix: handle optional deps not found in dependencies map (https://github.com/denoland/deno_npm/pull/38)\r\n* fix: resolve a version requirement to the latest dist tag if it matches (https://github.com/denoland/deno_npm/pull/37)\r\n\r\nCloses #20771",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 554,
        "deletions": 485,
        "changed_files": 8,
        "created_at": "2023-10-03T05:49:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Makes the JavaScript Request use a v8:External opaque pointer to directly refer to the Rust HttpRecord.\r\n\r\nThe HttpRecord is now reference counted. To avoid leaks the strong count is checked at request completion.\r\n\r\nPerformance seems unchanged on the minimal benchmark. 118614 req/s this branch vs 118564 req/s on main, but variance between runs on my laptop is pretty high.\r\n\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 67,
        "deletions": 120,
        "changed_files": 9,
        "created_at": "2023-10-03T02:41:33Z",
        "closed_at": "2023-10-08T02:09:51Z",
        "merged_at": "2023-10-08T02:09:51Z",
        "body": "`utf8ToBytes` was in a different file from the other `ToBytes` functions, which lead to it being missed in my earlier performance refactoring of Buffer internal APIs. It was the only one (yes, I made sure :) ) like this so I decided to move it into the same helper file as the other functions.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-10-02T22:23:15Z",
        "closed_at": "2023-10-03T23:01:34Z",
        "merged_at": "2023-10-03T23:01:34Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 65,
        "deletions": 200,
        "changed_files": 16,
        "created_at": "2023-10-02T20:20:21Z",
        "closed_at": "2023-10-04T19:42:18Z",
        "merged_at": "2023-10-04T19:42:18Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 894,
        "deletions": 847,
        "changed_files": 23,
        "created_at": "2023-10-02T20:13:13Z",
        "closed_at": "2023-10-02T21:53:55Z",
        "merged_at": "2023-10-02T21:53:55Z",
        "body": "More work towards https://github.com/denoland/deno/issues/18967",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2023-10-02T12:35:03Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 216,
        "deletions": 15,
        "changed_files": 7,
        "created_at": "2023-10-02T10:10:11Z",
        "closed_at": "2023-10-04T02:37:39Z",
        "merged_at": "2023-10-04T02:37:39Z",
        "body": "This PR adds unix domain socket support to `Deno.serve`.\r\n\r\ncloses #20369",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 81,
        "deletions": 25,
        "changed_files": 5,
        "created_at": "2023-10-02T03:32:00Z",
        "closed_at": "2023-10-04T11:05:20Z",
        "merged_at": "2023-10-04T11:05:20Z",
        "body": "Adds `buffers` to the `Deno.jupyter.broadcast` API to send binary data via comms. This affords the ability to send binary data via websockets to the jupyter widget frontend.\n\nCurrently, this just implements the correct messaging on the Rust side. I couldn't figure out how to correctly serialize `Array<Uint8Array>`\nfrom JS to Rust via the op call. Any help there would be greatly appreciated!\n\n<!--\nBefore submitting a PR, please read https://deno.com/manual/contributing\n\n1. Give the PR a descriptive title.\n\n  Examples of good title:\n    - fix(std/http): Fix race condition in server\n    - docs(console): Update docstrings\n    - feat(doc): Handle nested reexports\n\n  Examples of bad title:\n    - fix #7123\n    - update docs\n    - fix bugs\n\n2. Ensure there is a related issue and it is referenced in the PR text.\n3. Ensure there are tests that cover the changes.\n4. Ensure `cargo test` passes.\n5. Ensure `./tools/format.js` passes without changing files.\n6. Ensure `./tools/lint.js` passes.\n7. Open as a draft PR if your work is still in progress. The CI won't run\n   all steps, but you can add '[ci]' to a commit message to force it to.\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\n-->\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-01T16:48:49Z",
        "closed_at": null,
        "merged_at": null,
        "body": "I believe this change is valid because of https://github.com/denoland/deno/issues/20090#issuecomment-1675419655.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-30T13:49:34Z",
        "closed_at": "2023-09-30T14:34:40Z",
        "merged_at": "2023-09-30T14:34:40Z",
        "body": "Use the `core.byteLength` op for string utf8 length calculation in `node:buffer`\r\n\r\n```\r\n# This patch\r\nfile:///Users/divy/gh/deno/buffer.mjs\r\nbenchmark        time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------- -----------------------------\r\nBuffer#from     272.11 ns/iter   3,675,029.3 (268.41 ns \u2026 301.15 ns) 271.62 ns  295.5 ns 301.15 ns\r\n\r\n# Deno 1.37.1\r\nfile:///Users/divy/gh/deno/buffer.mjs\r\nbenchmark        time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------- -----------------------------\r\nBuffer#from     411.28 ns/iter   2,431,428.8 (393.82 ns \u2026 439.92 ns) 418.85 ns  434.4 ns 439.92 ns\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-30T12:31:03Z",
        "closed_at": "2023-09-30T14:21:07Z",
        "merged_at": "2023-09-30T14:21:07Z",
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\nAdd `os.availableParallelism()`, which is introduced in Node.js v19.4.0 and v18.14.0.\r\nIt just wraps `navigator.hardwareConcurrency`.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 519,
        "deletions": 1354,
        "changed_files": 4,
        "created_at": "2023-09-30T09:22:42Z",
        "closed_at": "2023-10-02T06:32:06Z",
        "merged_at": "2023-10-02T06:32:06Z",
        "body": "We have two useless intermediate representation of requests between the `TsServer::<method>()` args and the typescript `languageService[method]()` args. Namely the `RequestMethod` enum and the 'serializations' returned by `RequestMethod::to_value()`, which still need to be parsed into the final TS API args. The latter also has type declarations in `compiler.d.ts`.\r\n\r\nSo there are 4 different places in our tsc abstraction layer that need to be changed if I wanted to, say, add a new workspace setting and pass that into TSC.\r\n\r\nThis reduces that to 1. Now things like the specifier denormalization and normalization are near each other, and located at each respective `TsServer` method.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 316,
        "deletions": 278,
        "changed_files": 20,
        "created_at": "2023-09-29T20:23:05Z",
        "closed_at": "2023-09-30T16:06:38Z",
        "merged_at": "2023-09-30T16:06:38Z",
        "body": "Creates the `cli::npm::managed` module and starts moving more functionality into it.\r\n\r\n* `PackageJsonDepsInstaller` - Moved into managed module\r\n* `NpmResolution` - Not yet complete. Will be done in a separate pr. This is kind of a part 1/2 for moving that in and just wanted to get what I worked on today in.\r\n\r\nPart of #18967",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 532,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-09-29T17:01:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n\r\nThis PR enhances the built in `console` inspector to detect JSX and to format it accordingly. Currently, only Preact and React are supported.\r\n\r\n<img width=\"347\" alt=\"Screenshot 2023-09-29 at 19 00 30\" src=\"https://github.com/denoland/deno/assets/1062408/290d5b69-08fc-405d-9888-5384b67fbbc2\">\r\n\r\n\r\n## Todos\r\n\r\n- [ ] add tests, I've written them already in isolation, but need to figure out how to integrate with the cli test suite\r\n- [x] some primodal stuff",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 417,
        "deletions": 237,
        "changed_files": 19,
        "created_at": "2023-09-28T20:55:41Z",
        "closed_at": "2023-09-29T13:26:25Z",
        "merged_at": "2023-09-29T13:26:25Z",
        "body": "This makes `CliNpmResolver` a trait. The terminology used is:\r\n\r\n- **managed** - Deno manages the node_modules folder and does an auto-install (ex. `ManagedCliNpmResolver`)\r\n- **byonm** - \"Bring your own node_modules\" (ex. `ByonmCliNpmResolver`, which is in this PR, but unimplemented at the moment)\r\n\r\nNext PR after this will be moving `NpmResolution` into `ManagedCliNpmResolver`, which is maybe something I should have done before this PR, but I didn't realize it until after.\r\n\r\nPart of #18967",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 41,
        "changed_files": 1,
        "created_at": "2023-09-28T18:08:03Z",
        "closed_at": "2023-10-06T21:21:48Z",
        "merged_at": "2023-10-06T21:21:48Z",
        "body": "This PR optimizes `structuredClone` when it's called without transferables.\r\n\r\n### Benchmarks\r\n\r\n**main**\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.37.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark                          time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------------------------- -----------------------------\r\nstructuredClone object              1.64 \u00b5s/iter     611,086.0     (1.58 \u00b5s \u2026 1.84 \u00b5s)   1.66 \u00b5s   1.84 \u00b5s   1.84 \u00b5s\r\nstructuredClone transferables       2.82 \u00b5s/iter     354,281.4     (2.78 \u00b5s \u2026 2.92 \u00b5s)   2.84 \u00b5s   2.92 \u00b5s   2.92 \u00b5s\r\n```\r\n\r\n**this PR**\r\n\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.37.1 (x86_64-unknown-linux-gnu)\r\n\r\nstructuredClone object                 1 \u00b5s/iter     998,383.5    (971.28 ns \u2026 1.2 \u00b5s)      1 \u00b5s    1.2 \u00b5s    1.2 \u00b5s\r\nstructuredClone transferables       2.82 \u00b5s/iter     355,087.5      (2.7 \u00b5s \u2026 3.07 \u00b5s)   2.83 \u00b5s   3.07 \u00b5s   3.07 \u00b5s\r\n```\r\n\r\n```js\r\nDeno.bench(\"structuredClone object\", () => {\r\n  structuredClone({ foo: \"bar\" });\r\n});\r\n\r\nDeno.bench(\"structuredClone transferables\", () => {\r\n  const buf = new Uint8Array([97]);\r\n  structuredClone(buf, {\r\n    transfer: [buf.buffer],\r\n  });\r\n});\r\n```",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 319,
        "deletions": 57,
        "changed_files": 17,
        "created_at": "2023-09-28T15:43:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR allows using bare specifiers for importing builtin node modules (ex. \"fs\" resolves to \"node:fs\"). When such resolution happens, the warnings like the below are shown.\r\n\r\n```\r\nWarning: Resolving \"fs\" as \"node:fs\" at file:///path/to/script.ts:1:16. If you want to use a built-in Node module, add a \"node:\" prefix.\r\n```\r\n\r\ncloses #20566 ",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-09-28T06:57:22Z",
        "closed_at": "2023-10-02T12:13:58Z",
        "merged_at": "2023-10-02T12:13:58Z",
        "body": "The `process` global is not defined in this file.\n\nFixes #20441",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-09-28T06:48:56Z",
        "closed_at": "2023-10-09T03:43:15Z",
        "merged_at": "2023-10-09T03:43:15Z",
        "body": "Otherwise you can not return `Deno.Server` from async functions.\n\nFixes #20446",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 18,
        "changed_files": 3,
        "created_at": "2023-09-28T06:09:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #19776 and #20676 .\r\n\r\nNode implements `previewEntries` as C++ binding, so I moved this function to internal binding.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 623,
        "deletions": 135,
        "changed_files": 7,
        "created_at": "2023-09-28T01:02:05Z",
        "closed_at": "2023-09-29T19:45:00Z",
        "merged_at": "2023-09-29T19:45:00Z",
        "body": "All of our analysis and editor features will work in vscode notebook cells with this.\r\n\r\nAbout 5/6 of this PR is making sure we re-normalize module specifiers that come out of tsc, since notebook cell URIs have to be transformed on the way in.\r\n\r\nCoupled with https://github.com/denoland/vscode_deno/pull/949.\r\nFixes #20657.\r\n~~Fixes .. #20662.~~\r\n\r\nTodo (not in this PR):\r\n- Local variables aren't remembered between cells. They're essentially different modules.\r\n  Ref: https://github.com/denoland/vscode_deno/issues/932.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 360,
        "deletions": 263,
        "changed_files": 25,
        "created_at": "2023-09-27T22:11:17Z",
        "closed_at": "2023-09-28T20:43:45Z",
        "merged_at": "2023-09-28T20:43:45Z",
        "body": "This is required from BYONM (bring your own node_modules).\r\n\r\nPart of #18967",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 23,
        "changed_files": 5,
        "created_at": "2023-09-27T21:06:19Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2023-09-27T20:52:39Z",
        "closed_at": "2023-10-02T00:18:34Z",
        "merged_at": "2023-10-02T00:18:34Z",
        "body": "This PR optimizes `DOMException` constructor increasing performance of all Web APIs that throw a `DOMException` (ie: `AbortSignal`)\r\n\r\n**main**\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.37.1 (x86_64-unknown-linux-gnu)\r\n\r\nnew DOMException()            9.66 \u00b5s/iter     103,476.8   (8.47 \u00b5s \u2026 942.71 \u00b5s)   9.62 \u00b5s  11.29 \u00b5s  14.04 \u00b5s\r\nabort writeTextFileSync      16.45 \u00b5s/iter      60,775.5    (13.65 \u00b5s \u2026 1.33 ms)  16.39 \u00b5s  20.59 \u00b5s  24.12 \u00b5s\r\nabort readFile               16.25 \u00b5s/iter      61,542.2  (15.12 \u00b5s \u2026 621.14 \u00b5s)  16.18 \u00b5s  19.59 \u00b5s  22.33 \u00b5s\r\n```\r\n\r\n**this PR**\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.37.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark                    time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------------------- -----------------------------\r\nnew DOMException()            2.37 \u00b5s/iter     421,657.0     (2.33 \u00b5s \u2026 2.58 \u00b5s)   2.37 \u00b5s   2.58 \u00b5s   2.58 \u00b5s\r\nabort writeTextFileSync        7.1 \u00b5s/iter     140,760.1     (6.94 \u00b5s \u2026 7.68 \u00b5s)   7.13 \u00b5s   7.68 \u00b5s   7.68 \u00b5s\r\nabort readFile                5.48 \u00b5s/iter     182,648.2      (5.3 \u00b5s \u2026 5.69 \u00b5s)   5.56 \u00b5s   5.69 \u00b5s   5.69 \u00b5\r\n```\r\n\r\n```js\r\nDeno.bench(\"new DOMException()\", () => {\r\n  new DOMException();\r\n});\r\n\r\nDeno.bench(\"abort writeTextFileSync\", () => {\r\n  const ac = new AbortController();\r\n  ac.abort();\r\n  try {\r\n    Deno.writeTextFileSync(\"/tmp/out\", \"x\", { signal: ac.signal });\r\n  } catch {}\r\n});\r\n\r\nDeno.bench(\"abort readFile\", async () => {\r\n  const ac = new AbortController();\r\n  ac.abort();\r\n  try {\r\n    await Deno.readFile(\"/tmp/out\", { signal: ac.signal });\r\n  } catch {}\r\n});\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2023-09-27T18:43:38Z",
        "closed_at": "2023-09-29T22:24:09Z",
        "merged_at": "2023-09-29T22:24:09Z",
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n\r\nWill rebase following merge of #20710 in to `main`.\r\n\r\nExposes [`metadata`](https://jupyter-client.readthedocs.io/en/latest/messaging.html#metadata) to the `Deno.jupyter.broadcast` API.\r\n\r\n```js\r\nawait Deno.jupyter.broadcast(msgType, content, metadata);\r\n```\r\n\r\nThe metadata is required for [`\"comm_open\"`](https://github.com/jupyter-widgets/ipywidgets/blob/main/packages/schema/messages.md#instantiating-a-widget-object-1) for with `jupyter.widget` target. With this PR I can successfully communicate with the [`anywidget`](https://github.com/manzt/anywidget) frontend, sending frontend ESM via comms with updates :)\r\n\r\n\r\n### Example \r\nMake sure you have anywidget installed:\r\n\r\n```sh\r\npip install jupyterlab anywidget\r\n```\r\n\r\n```javascript\r\nimport { display } from \"https://deno.land/x/display/mod.ts\";\r\n\r\nlet comm_id = crypto.randomUUID();\r\n\r\nawait Deno.jupyter.broadcast(\"comm_open\", {\r\n    \"comm_id\": comm_id,\r\n    \"target_name\": \"jupyter.widget\",\r\n    \"data\": { \r\n        \"state\": {\r\n            \"_model_module\": \"anywidget\",\r\n            \"_model_name\": \"AnyModel\",\r\n            \"_model_module_version\": \"0.6.5\",\r\n            \"_view_module\": \"anywidget\",\r\n            \"_view_name\": \"AnyView\",\r\n            \"_view_module_version\": \"0.6.5\",\r\n            \"_view_count\": null,\r\n        }\r\n    }\r\n}, {\r\n    \"version\": \"2.1.0\"\r\n});\r\n\r\n// Create an anywidget module (export a \"render\" function) for the front end\r\n// The `model` is synchronized with `update` messages sent from the comm_msg\r\nlet esm = `export ${async function render({ model, el }) {\r\n  let { default: confetti } = await import (\"https://esm.sh/canvas-confetti@1.6.0\");\r\n  model.on(\"change:value\", () => confetti({ angle: model.get(\"value\") }));\r\n  confetti();\r\n}.toString()}`;\r\n\r\n// Send initial widget state\r\nawait Deno.jupyter.broadcast(\"comm_msg\", {\r\n    \"comm_id\": comm_id,\r\n    \"data\": { \"method\": \"update\", \"state\": { \"_esm\": esm, \"_anywidget_id\": comm_id } }\r\n});\r\n\r\ndisplay({\r\n    \"application/vnd.jupyter.widget-view+json\": {\r\n        \"version_major\": 2,\r\n        \"version_minor\": 1,\r\n        \"model_id\": comm_id,\r\n    }\r\n})\r\n```\r\n\r\n```javascript\r\nawait Deno.jupyter.broadcast(\"comm_msg\", {\r\n    \"comm_id\": comm_id,\r\n    \"data\": { \"method\": \"update\", \"state\": { \"value\": 50 } },\r\n});\r\n\r\nawait new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\nawait Deno.jupyter.broadcast(\"comm_msg\", {\r\n    \"comm_id\": comm_id,\r\n    \"data\": { \"method\": \"update\", \"state\": { \"value\": 100 } },\r\n});\r\n\r\nawait new Promise(resolve => setTimeout(resolve, 1000));\r\n```\r\n\r\n\r\nThis is sooo cool!!\r\n\r\n\r\n\r\nhttps://github.com/denoland/deno/assets/24403730/cebeeb7a-3be5-4e95-bdd5-5ebab864b647\r\n\r\n\r\n\r\n",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-27T18:31:45Z",
        "closed_at": "2023-09-27T19:22:39Z",
        "merged_at": "2023-09-27T19:22:39Z",
        "body": "Accidentally removed in https://github.com/denoland/deno/commit/69b7166c20b47d320fc85e33dca9414c92ec9c6f",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 163,
        "deletions": 31,
        "changed_files": 3,
        "created_at": "2023-09-27T15:03:16Z",
        "closed_at": "2023-10-12T14:03:19Z",
        "merged_at": "2023-10-12T14:03:19Z",
        "body": "This commit improves \"node:http2\" module implementation, by enabling\r\nto use \"options.createConnection\" callback when starting an HTTP2 session.\r\nThis change enables to pass basic client-side test with \"grpc-js/grpc\" package.\r\nSmaller fixes like \"Http2Session.unref()\" and \"Http2Session.setTimeout()\"\r\nwere handled as well.\r\n\r\nFixes #16647 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 22,
        "changed_files": 1,
        "created_at": "2023-09-27T14:05:39Z",
        "closed_at": "2023-09-27T21:57:59Z",
        "merged_at": "2023-09-27T21:57:59Z",
        "body": "This is what we do for deno install, so it should be fine here https://github.com/denoland/deno_install/pull/219\r\n\r\nCloses https://github.com/denoland/deno/issues/20683",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 82,
        "deletions": 63,
        "changed_files": 4,
        "created_at": "2023-09-27T10:37:28Z",
        "closed_at": "2023-09-28T14:51:44Z",
        "merged_at": "2023-09-28T14:51:44Z",
        "body": "Blocked by https://github.com/denoland/deno/pull/20704",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 103,
        "deletions": 74,
        "changed_files": 29,
        "created_at": "2023-09-27T06:44:42Z",
        "closed_at": "2023-09-27T09:13:49Z",
        "merged_at": "2023-09-27T09:13:49Z",
        "body": "This is the release commit being forwarded back to main for 1.37.1\r\n\r\nPlease ensure:\r\n- [x] Everything looks ok in the PR\r\n- [x] The release has been published\r\n\r\nTo make edits to this PR:\r\n```shell\r\ngit fetch upstream forward_v1.37.1 && git checkout -b forward_v1.37.1 upstream/forward_v1.37.1\r\n```\r\n\r\nDon't need this PR? Close it.\r\n\r\ncc @littledivy",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-27T05:25:47Z",
        "closed_at": "2023-09-27T13:54:19Z",
        "merged_at": "2023-09-27T13:54:19Z",
        "body": "For the following example, if I set the encoding to `base64url`, it'll throw an unexpected TypeError:\r\n\r\n```ts\r\nimport { Buffer } from \"node:buffer\";\r\n\r\nBuffer.from(\"IntcImhlbGxvXCI6XCJoZGQvZStpXCJ9Ig\", \"base64url\").toString();\r\n\r\n// error: Uncaught TypeError: src.subarray is not a function\r\n// const buf = Buffer.from(\r\n//                    ^\r\n//     at blitBuffer (ext:deno_node/internal/buffer.mjs:1779:15)\r\n//     at Uint8Array.base64urlWrite (ext:deno_node/internal/buffer.mjs:691:10)\r\n//     at Object.write (ext:deno_node/internal/buffer.mjs:2195:11)\r\n//     at Uint8Array.write (ext:deno_node/internal/buffer.mjs:794:14)\r\n//     at fromString (ext:deno_node/internal/buffer.mjs:214:22)\r\n//     at _from (ext:deno_node/internal/buffer.mjs:119:12)\r\n//     at Function.from (ext:deno_node/internal/buffer.mjs:157:10)\r\n//     at file:///Users/foodieats/temp/buffer1.ts:3:20\r\n```\r\n\r\nThe error caused by `base64urlWrite` function, it should call `forgivingBase64UrlDecode` not `forgivingBase64UrlEncode`\r\n\r\nAlso fixed #20563 .",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-09-27T05:16:40Z",
        "closed_at": "2023-09-27T10:55:55Z",
        "merged_at": "2023-09-27T10:55:55Z",
        "body": "Also a drive-by cleanup elsewhere (removing unused enum).\r\n\r\nFixes #20702\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 103,
        "deletions": 74,
        "changed_files": 29,
        "created_at": "2023-09-27T05:03:19Z",
        "closed_at": "2023-09-27T06:24:44Z",
        "merged_at": "2023-09-27T06:24:44Z",
        "body": "Bumped versions for 1.37.1\n\nPlease ensure:\n- [x] Target branch is correct (`vX.XX` if a patch release, `main` if minor)\n- [x] Crate versions are bumped correctly\n- [x] deno_std version is incremented in the code (see `cli/deno_std.rs`)\n- [x] Releases.md is updated correctly (think relevancy and remove reverts)\n\nTo make edits to this PR:\n```shell\ngit fetch upstream release_1_37.1 && git checkout -b release_1_37.1 upstream/release_1_37.1\n```\n\ncc @littledivy",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 74,
        "changed_files": 5,
        "created_at": "2023-09-27T00:28:50Z",
        "closed_at": "2023-09-27T13:54:43Z",
        "merged_at": "2023-09-27T13:54:43Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-26T22:13:09Z",
        "closed_at": "2023-09-27T00:48:35Z",
        "merged_at": "2023-09-27T00:48:35Z",
        "body": "Half of https://github.com/denoland/vscode_deno/issues/944. Coupled with https://github.com/denoland/vscode_deno/pull/946. This allows us to add an incremented index in the query string for each status request.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 24,
        "changed_files": 2,
        "created_at": "2023-09-26T21:50:33Z",
        "closed_at": "2023-09-26T23:38:44Z",
        "merged_at": "2023-09-26T23:38:44Z",
        "body": "```\r\n    Updating deno_core v0.217.0 -> v0.218.0\r\n    Updating deno_ops v0.93.0 -> v0.94.0\r\n    Updating deno_semver v0.5.0 -> v0.5.1\r\n    Updating fastrand v2.0.0 -> v2.0.1\r\n    Updating serde_v8 v0.126.0 -> v0.127.0\r\n    Updating sha2 v0.10.7 -> v0.10.8\r\n    Updating time v0.3.28 -> v0.3.29\r\n    Updating time-core v0.1.1 -> v0.1.2\r\n    Updating time-macros v0.2.14 -> v0.2.15\r\n```",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 210,
        "deletions": 21,
        "changed_files": 4,
        "created_at": "2023-09-26T21:09:08Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Closes https://github.com/denoland/deno/issues/16771",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 97,
        "deletions": 156,
        "changed_files": 9,
        "created_at": "2023-09-26T19:52:44Z",
        "closed_at": "2023-09-26T20:57:14Z",
        "merged_at": "2023-09-26T20:57:14Z",
        "body": "Also replace deprecated `deno/cache` request usages in tests with `deno.cache` command.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 28,
        "changed_files": 6,
        "created_at": "2023-09-26T19:16:30Z",
        "closed_at": "2023-09-26T20:42:39Z",
        "merged_at": "2023-09-26T20:42:39Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-26T18:51:39Z",
        "closed_at": "2023-09-26T21:52:47Z",
        "merged_at": "2023-09-26T21:52:47Z",
        "body": "For #20683",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 97,
        "deletions": 30,
        "changed_files": 9,
        "created_at": "2023-09-26T17:35:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "When `commit()` returns `KvCommitError`, a `failedChecks` field is included to help determine which keys have caused the failure.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-09-26T17:04:08Z",
        "closed_at": "2023-09-27T05:34:10Z",
        "merged_at": "2023-09-27T05:34:10Z",
        "body": "This patch adds support for [key expiration](https://docs.deno.com/kv/manual/key_expiration) in the remote backend.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-26T11:05:37Z",
        "closed_at": "2023-09-26T15:34:54Z",
        "merged_at": "2023-09-26T15:34:53Z",
        "body": "This API is providing hoops to jump through with undergoing migration to \r\n`#[op2]` macro. \r\n\r\nThe overhead of supporting this API is non-trivial and besides internal use \r\nof it in test sanitizers is very rarely used in the wild.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2023-09-26T04:02:04Z",
        "closed_at": "2023-09-26T04:41:08Z",
        "merged_at": "2023-09-26T04:41:08Z",
        "body": "Right now, if one of the linters fails, the all other ones continue\nrunning in the background. This fixes this by waiting until all linters\nare done before settling.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 53,
        "changed_files": 4,
        "created_at": "2023-09-26T01:49:39Z",
        "closed_at": "2023-09-26T10:46:07Z",
        "merged_at": "2023-09-26T10:46:06Z",
        "body": "This helps reduce flakes where a test starts an HTTP server and makes a\nrequest using fetch, then shuts down the server, then starting a new\ntest with a new server, but the connection pool still has a \"not quite\nclosed yet\" connection to the old server, and a new request to the new\nserver gets sent on the closed connection, which obviously errors out.\n\nFixes #20678",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 395,
        "deletions": 171,
        "changed_files": 4,
        "created_at": "2023-09-25T20:34:48Z",
        "closed_at": "2023-09-26T02:54:08Z",
        "merged_at": "2023-09-26T02:54:08Z",
        "body": "This supports more settings from VSCode's `typescript` and `javascript` sections. Note that most of these are enabled by default for us, so really it's a way to disable features.\r\n\r\nThis will work with vscode_deno 3.24.0 onwards.\r\n\r\n### 1.37.0\r\n\r\n<details>\r\n<summary>\r\nNo <code>typescript</code> or <code>javascript</code> settings are supported. Some are supported under mirroring settings in the `deno` section:\r\n</summary>\r\n\r\n```js\r\n{\r\n  \"deno.inlayHints.enumMemberValues.enabled\": false,\r\n  \"deno.inlayHints.functionLikeReturnTypes.enabled\": false,\r\n  \"deno.inlayHints.parameterNames.enabled\": \"none\",\r\n  \"deno.inlayHints.parameterNames.suppressWhenArgumentMatchesName\": true,\r\n  \"deno.inlayHints.parameterTypes.enabled\": false,\r\n  \"deno.inlayHints.propertyDeclarationTypes.enabled\": false,\r\n  \"deno.inlayHints.variableTypes.enabled\": false,\r\n  \"deno.inlayHints.variableTypes.suppressWhenTypeMatchesName\": true,\r\n  \"deno.suggest.autoImports\": true,\r\n  \"deno.suggest.completeFunctionCalls\": false,\r\n  \"deno.suggest.names\": true, // JS only\r\n  \"deno.suggest.paths\": true,\r\n}\r\n```\r\n</details>\r\n\r\n### `main` (as of #20593)\r\n\r\n<details>\r\n<summary>\r\nThe above settings are supported under their original keys, along with their <code>javascript</code> equivalents:\r\n</summary>\r\n\r\n```js\r\n{\r\n  \"typescript.inlayHints.enumMemberValues.enabled\": false,\r\n  \"typescript.inlayHints.functionLikeReturnTypes.enabled\": false,\r\n  \"typescript.inlayHints.parameterNames.enabled\": \"none\",\r\n  \"typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName\": true,\r\n  \"typescript.inlayHints.parameterTypes.enabled\": false,\r\n  \"typescript.inlayHints.propertyDeclarationTypes.enabled\": false,\r\n  \"typescript.inlayHints.variableTypes.enabled\": false,\r\n  \"typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName\": true,\r\n  \"typescript.suggest.autoImports\": true,\r\n  \"typescript.suggest.completeFunctionCalls\": false,\r\n  \"javascript.suggest.names\": true, // JS only\r\n  \"typescript.suggest.paths\": true,\r\n}\r\n```\r\n</details>\r\n\r\n### This PR\r\n\r\nAdded piping for more settings, along with their `javascript` equivalents:\r\n\r\n```js\r\n{\r\n  \"typescript.preferences.autoImportFileExcludePatterns\": [],\r\n  \"typescript.preferences.importModuleSpecifier\": \"shortest\",\r\n  \"typescript.preferences.jsxAttributeCompletionStyle\": \"auto\",\r\n  \"typescript.preferences.useAliasesForRenames\": true,\r\n  \"typescript.suggest.classMemberSnippets.enabled\": true,\r\n  \"typescript.suggest.enabled\": true,\r\n  \"typescript.suggest.includeAutomaticOptionalChainCompletions\": true,\r\n  \"typescript.suggest.includeCompletionsForImportStatements\": true,\r\n  \"typescript.suggest.objectLiteralMethodSnippets.enabled\": true,\r\n  \"typescript.updateImportsOnFileMove.enabled\": \"prompt\",\r\n}\r\n```\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 49,
        "changed_files": 2,
        "created_at": "2023-09-25T12:30:35Z",
        "closed_at": "2023-09-26T12:07:04Z",
        "merged_at": "2023-09-26T12:07:04Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 26,
        "changed_files": 1,
        "created_at": "2023-09-25T07:51:24Z",
        "closed_at": "2023-09-26T02:12:12Z",
        "merged_at": "2023-09-26T02:12:12Z",
        "body": "Previously could flake on the op sanitizer because the\n`await makeTempFile()` promise could leak out of the test. Now we ensure\nthe request is fully handled before returning.\n\n<!--\nBefore submitting a PR, please read https://deno.com/manual/contributing\n\n1. Give the PR a descriptive title.\n\n  Examples of good title:\n    - fix(std/http): Fix race condition in server\n    - docs(console): Update docstrings\n    - feat(doc): Handle nested reexports\n\n  Examples of bad title:\n    - fix #7123\n    - update docs\n    - fix bugs\n\n2. Ensure there is a related issue and it is referenced in the PR text.\n3. Ensure there are tests that cover the changes.\n4. Ensure `cargo test` passes.\n5. Ensure `./tools/format.js` passes without changing files.\n6. Ensure `./tools/lint.js` passes.\n7. Open as a draft PR if your work is still in progress. The CI won't run\n   all steps, but you can add '[ci]' to a commit message to force it to.\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\n-->\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 139,
        "deletions": 84,
        "changed_files": 2,
        "created_at": "2023-09-25T07:03:17Z",
        "closed_at": "2023-09-26T02:21:19Z",
        "merged_at": "2023-09-26T02:21:18Z",
        "body": "Use fast ops for test registration. This speeds up `Deno.test` and `t.step()`\r\nsignificantly (2x over Deno 1.37.0).\r\n\r\nDepends on #20669\r\n\r\n# `Deno.test`\r\n\r\n```ts\r\nfor (let i = 0; i < 10000; i++) {\r\n  Deno.test(`test ${i}`, () => {});\r\n}\r\n```\r\n\r\n```\r\n~/p/g/d/deno \u276f\u276f\u276f hyperfine --warmup=3 -- \"deno test --no-check -A test.ts\"  \"./target/release/deno test --no-check -A test.ts\"\r\nBenchmark 1: deno test --no-check -A test.ts\r\n  Time (mean \u00b1 \u03c3):     587.4 ms \u00b1   2.8 ms    [User: 594.9 ms, System: 131.3 ms]\r\n  Range (min \u2026 max):   584.2 ms \u2026 593.1 ms    10 runs\r\n\r\nBenchmark 2: ./target/release/deno test --no-check -A test.ts\r\n  Time (mean \u00b1 \u03c3):     288.1 ms \u00b1   2.5 ms    [User: 280.7 ms, System: 105.0 ms]\r\n  Range (min \u2026 max):   286.6 ms \u2026 295.1 ms    10 runs\r\n\r\n  Warning: Statistical outliers were detected. Consider re-running this benchmark on a quiet PC without any interferences from other programs. It might help to use the '--warmup' or '--prepare' options.\r\n\r\nSummary\r\n  './target/release/deno test --no-check -A test.ts' ran\r\n    2.04 \u00b1 0.02 times faster than 'deno test --no-check -A test.ts'\r\n```\r\n\r\n\r\n# `Deno.test` with `await t.step()`\r\n\r\n```ts\r\nfor (let i = 0; i < 100; i++) {\r\n  Deno.test(`test ${i}`, async (t) => {\r\n    for (let j = 0; j < 100; j++) {\r\n      await t.step(`step ${j}`, async () => {});\r\n    }\r\n  });\r\n}\r\n```\r\n\r\n```\r\n~/p/g/d/deno \u276f\u276f\u276f hyperfine --warmup=3 -- \"deno test --no-check -A test.ts\"  \"./target/release/deno test --no-check -A test.ts\"\r\nBenchmark 1: deno test --no-check -A test.ts\r\n  Time (mean \u00b1 \u03c3):      1.085 s \u00b1  0.018 s    [User: 0.987 s, System: 0.310 s]\r\n  Range (min \u2026 max):    1.071 s \u2026  1.128 s    10 runs\r\n\r\nBenchmark 2: ./target/release/deno test --no-check -A test.ts\r\n  Time (mean \u00b1 \u03c3):     524.4 ms \u00b1   3.1 ms    [User: 399.1 ms, System: 238.2 ms]\r\n  Range (min \u2026 max):   518.9 ms \u2026 527.8 ms    10 runs\r\n\r\nSummary\r\n  './target/release/deno test --no-check -A test.ts' ran\r\n    2.07 \u00b1 0.04 times faster than 'deno test --no-check -A test.ts'\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 25,
        "changed_files": 2,
        "created_at": "2023-09-25T06:58:15Z",
        "closed_at": "2023-09-26T01:01:56Z",
        "merged_at": "2023-09-26T01:01:56Z",
        "body": "Speeds up `Deno.test` calls by a bit.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-25T02:23:35Z",
        "closed_at": "2023-09-25T12:09:28Z",
        "merged_at": "2023-09-25T12:09:28Z",
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 63,
        "changed_files": 4,
        "created_at": "2023-09-24T20:57:54Z",
        "closed_at": "2023-09-24T22:07:23Z",
        "merged_at": "2023-09-24T22:07:22Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 267,
        "deletions": 68,
        "changed_files": 4,
        "created_at": "2023-09-24T20:02:02Z",
        "closed_at": "2023-09-24T22:33:52Z",
        "merged_at": "2023-09-24T22:33:52Z",
        "body": "Closes #16082.\r\nCloses #20658.\r\n\r\nDoes some refactors suggested by @dsherret in #20632:\r\n- Extract `DiagnosticsServer::state` to a `language_server::Inner::state`, which is passed to `DiagnosticsServer::new()`.\r\n- Internalize `DiagnosticsState`'s locking and mutability.\r\n\r\nI haven't done https://github.com/denoland/deno/pull/20632#discussion_r1335221178. Not sure what design to go for and I don't want to mess with the publishing logic in the same PR.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2023-09-24T18:11:10Z",
        "closed_at": "2023-10-06T21:33:15Z",
        "merged_at": "2023-10-06T21:33:15Z",
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n\r\nFixes #20525",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 226,
        "deletions": 50,
        "changed_files": 13,
        "created_at": "2023-09-24T16:03:38Z",
        "closed_at": "2023-09-27T00:21:07Z",
        "merged_at": "2023-09-27T00:21:07Z",
        "body": "Closes https://github.com/denoland/deno/issues/20591",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-09-24T02:10:04Z",
        "closed_at": "2023-09-24T07:18:51Z",
        "merged_at": "2023-09-24T07:18:51Z",
        "body": "Fixes #15472.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-23T23:45:54Z",
        "closed_at": "2023-09-24T09:23:25Z",
        "merged_at": "2023-09-24T09:23:25Z",
        "body": "`Array.from` has optional second argument. Calling `map` is not required for this case.\r\n<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 52,
        "changed_files": 5,
        "created_at": "2023-09-23T23:11:43Z",
        "closed_at": "2023-09-26T11:42:49Z",
        "merged_at": "2023-09-26T11:42:49Z",
        "body": "Use the [scopeguard](https://docs.rs/scopeguard/) defer macro to run cleanup code for `new_slab_future`.\r\nThis means it can be a single async function, avoiding the need to create a struct and implement `PinnedDrop`\r\n\r\nAsync cleanup in Rust is awkward because async functions may be cancelled at any await point when their Future is dropped.\r\nThe scopeguard approach comes from the following articles:\r\n* [How to think about `async`/`await` in Rust](http://cliffle.com/blog/async-inversion/)\r\n* [Async Cancellation I](https://blog.yoshuawuyts.com/async-cancellation-1/) (Reddit [discussion](https://www.reddit.com/r/rust/comments/qrhg39/blog_post_async_cancellation/))",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 54,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2023-09-23T21:18:41Z",
        "closed_at": "2023-09-24T17:00:16Z",
        "merged_at": "2023-09-24T17:00:16Z",
        "body": "Fixes https://github.com/denoland/vscode_deno/issues/936.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-09-23T17:05:10Z",
        "closed_at": "2023-09-23T17:51:45Z",
        "merged_at": "2023-09-23T17:51:45Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 274,
        "deletions": 199,
        "changed_files": 2,
        "created_at": "2023-09-23T16:39:56Z",
        "closed_at": "2023-10-13T12:30:09Z",
        "merged_at": "2023-10-13T12:30:09Z",
        "body": "This PR introduces several optimizations to streams\r\n\r\n### Highlights:\r\n- `ReadableStream` constructor: +20% iter/s.\r\n- `WritableStream` constructor: +50% iter/s.\r\n- `TransformStream` constructor: +30% iter/s.\r\n- `ReadableStream` iterator (both 2 and 20 chunks): +42% and +25% iter/s.\r\n- `ReadableByteStream` iterator (both 2 and 20 chunks): +39% and +20% iter/s.\r\n\r\n### Benchmarks\r\n**main**\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.37.0 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark                                      time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------------------------------------- -----------------------------\r\nReadableStream constructor                    294.52 ns/iter   3,395,392.9 (277.92 ns \u2026 618.26 ns) 292.66 ns 353.87 ns 618.26 ns\r\nWritableStream constructor                    235.51 ns/iter   4,246,065.3 (213.04 ns \u2026 306.35 ns) 236.77 ns 279.08 ns 281.32 ns\r\nTransformStream constructor                   672.52 ns/iter   1,486,938.7 (652.15 ns \u2026 880.74 ns) 670.11 ns 880.74 ns 880.74 ns\r\nReadableStream - iterator (2 chunks)           10.44 \u00b5s/iter      95,757.9   (8.97 \u00b5s \u2026 830.91 \u00b5s)  10.22 \u00b5s  14.74 \u00b5s  18.93 \u00b5s\r\nReadableStream - iterator (20 chunks)          21.93 \u00b5s/iter      45,593.4   (18.8 \u00b5s \u2026 864.97 \u00b5s)  20.57 \u00b5s  57.15 \u00b5s 137.16 \u00b5s\r\nReadableStream - reader (2 chunks)              7.09 \u00b5s/iter     140,987.2     (7.03 \u00b5s \u2026 7.18 \u00b5s)   7.13 \u00b5s   7.18 \u00b5s   7.18 \u00b5s\r\nReadableStream - reader (20 chunks)            18.41 \u00b5s/iter      54,324.2    (15.7 \u00b5s \u2026 252.7 \u00b5s)  17.14 \u00b5s  68.88 \u00b5s  94.08 \u00b5s\r\nReadableByteStream - iterator (2 chunks)       11.06 \u00b5s/iter      90,375.1   (9.75 \u00b5s \u2026 404.69 \u00b5s)  10.88 \u00b5s   16.6 \u00b5s  29.69 \u00b5s\r\nReadableByteStream - iterator (20 chunks)      26.71 \u00b5s/iter      37,435.0  (22.98 \u00b5s \u2026 508.34 \u00b5s)  25.25 \u00b5s  85.28 \u00b5s 155.65 \u00b5s\r\nReadableByteStream - reader (2 chunks)          7.99 \u00b5s/iter     125,131.1     (7.92 \u00b5s \u2026 8.13 \u00b5s)   8.01 \u00b5s   8.13 \u00b5s   8.13 \u00b5s\r\nReadableByteStream - reader (20 chunks)        23.46 \u00b5s/iter      42,618.5  (20.28 \u00b5s \u2026 414.66 \u00b5s)  21.94 \u00b5s  90.52 \u00b5s 147.38 \u00b5s\r\n```\r\n\r\n**this PR**\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.37.0 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark                                      time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------------------------------------- -----------------------------\r\nReadableStream constructor                    235.48 ns/iter   4,246,584.3 (223.12 ns \u2026 504.65 ns)  234.3 ns 290.84 ns 311.12 ns\r\nWritableStream constructor                    156.31 ns/iter   6,397,537.3 (148.54 ns \u2026 211.13 ns) 157.49 ns 199.82 ns 208.23 ns\r\nTransformStream constructor                   471.29 ns/iter   2,121,815.3 (452.53 ns \u2026 791.41 ns) 468.62 ns 540.36 ns 791.41 ns\r\nReadableStream - iterator (2 chunks)            7.32 \u00b5s/iter     136,705.4   (6.35 \u00b5s \u2026 639.97 \u00b5s)    7.1 \u00b5s  12.12 \u00b5s  20.98 \u00b5s\r\nReadableStream - iterator (20 chunks)          17.48 \u00b5s/iter      57,195.1  (14.48 \u00b5s \u2026 289.06 \u00b5s)  16.06 \u00b5s  76.98 \u00b5s 114.61 \u00b5s\r\nReadableStream - reader (2 chunks)              6.86 \u00b5s/iter     145,847.9      (6.8 \u00b5s \u2026 6.97 \u00b5s)   6.88 \u00b5s   6.97 \u00b5s   6.97 \u00b5s\r\nReadableStream - reader (20 chunks)            16.88 \u00b5s/iter      59,227.7  (14.04 \u00b5s \u2026 311.29 \u00b5s)  15.39 \u00b5s  74.95 \u00b5s  97.45 \u00b5s\r\nReadableByteStream - iterator (2 chunks)        7.94 \u00b5s/iter     125,881.2   (6.86 \u00b5s \u2026 811.16 \u00b5s)   7.69 \u00b5s  11.43 \u00b5s   16.6 \u00b5s\r\nReadableByteStream - iterator (20 chunks)      22.23 \u00b5s/iter      44,978.2  (18.98 \u00b5s \u2026 590.11 \u00b5s)  20.73 \u00b5s  45.13 \u00b5s  159.8 \u00b5s\r\nReadableByteStream - reader (2 chunks)           7.4 \u00b5s/iter     135,206.9     (7.36 \u00b5s \u2026 7.42 \u00b5s)    7.4 \u00b5s   7.42 \u00b5s   7.42 \u00b5s\r\nReadableByteStream - reader (20 chunks)        21.03 \u00b5s/iter      47,555.6  (17.75 \u00b5s \u2026 357.66 \u00b5s)  19.52 \u00b5s  98.69 \u00b5s  146.5 \u00b5s\r\n```",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-23T15:28:53Z",
        "closed_at": "2023-09-24T10:48:23Z",
        "merged_at": "2023-09-24T10:48:23Z",
        "body": "My previous work with buffer optimisations / reworks included a mistaken reference to a `length` variable that probably existed at one point or another but was since (likely) renamed to be the \u00b4bytesToWrite`.\r\n\r\nAt the same time I joined two `src.length` accesses into a single one.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 35,
        "changed_files": 4,
        "created_at": "2023-09-23T10:20:56Z",
        "closed_at": "2023-09-23T12:04:47Z",
        "merged_at": "2023-09-23T12:04:47Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2023-09-23T10:15:06Z",
        "closed_at": "2023-09-23T14:30:16Z",
        "merged_at": "2023-09-23T14:30:16Z",
        "body": "I believe this fixes https://github.com/denoland/deno/issues/20528.\r\n\r\nThere are a few things happening here:\r\n1. primitive values are not going through formatting for Jupyter MIME bunndle\r\n2. evaluation of `object[Symbol.for(\"Jupyter.display\")]` is wrapped in a `try/catch` block\r\n3. evaluation of `object[Symbol.for(\"Jupyter.display\")]` is awaited\r\n\r\nI was unable to reproduce the \"Promise was collected\" error with this change.\r\n\r\n ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 106,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2023-09-22T21:07:12Z",
        "closed_at": "2023-09-25T15:23:56Z",
        "merged_at": "2023-09-25T15:23:55Z",
        "body": "Builds on top of #20622 to fix #10854 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-22T18:35:42Z",
        "closed_at": "2023-09-24T00:59:02Z",
        "merged_at": "2023-09-24T00:59:01Z",
        "body": "fixes #20635\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-22T16:14:18Z",
        "closed_at": "2023-09-22T17:20:35Z",
        "merged_at": "2023-09-22T17:20:35Z",
        "body": "Bumps [aes-gcm](https://github.com/RustCrypto/AEADs) from 0.10.2 to 0.10.3.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/RustCrypto/AEADs/commit/7e82b01cd4901f6a35b5153536f11b87f5e4e622\"><code>7e82b01</code></a> aes-gcm v0.10.3 (<a href=\"https://redirect.github.com/RustCrypto/AEADs/issues/552\">#552</a>)</li>\n<li><a href=\"https://github.com/RustCrypto/AEADs/commit/b587b27270cc300d39c496a1ab06be80d72ac107\"><code>b587b27</code></a> aes-gcm: avoid exposing plaintext on tag verification failure (<a href=\"https://redirect.github.com/RustCrypto/AEADs/issues/551\">#551</a>)</li>\n<li><a href=\"https://github.com/RustCrypto/AEADs/commit/2209bcaa9edc65e9a60498e7ece5b50e66f32ebf\"><code>2209bca</code></a> build(deps): bump actions/checkout from 3 to 4 (<a href=\"https://redirect.github.com/RustCrypto/AEADs/issues/548\">#548</a>)</li>\n<li><a href=\"https://github.com/RustCrypto/AEADs/commit/035ec25362886735a0f44098f85ba0501a9b4038\"><code>035ec25</code></a> build(deps): bump ascon from 0.3.1 to 0.4.0 (<a href=\"https://redirect.github.com/RustCrypto/AEADs/issues/545\">#545</a>)</li>\n<li><a href=\"https://github.com/RustCrypto/AEADs/commit/e94ba5ab9fb2c7f3a18c92fb9dc8df14ac36f06b\"><code>e94ba5a</code></a> xsalsa20poly1305: remove source code (<a href=\"https://redirect.github.com/RustCrypto/AEADs/issues/543\">#543</a>)</li>\n<li><a href=\"https://github.com/RustCrypto/AEADs/commit/31240c1285144aeabef3e80eb9a1b4137dc2b43f\"><code>31240c1</code></a> Update Cargo.lock</li>\n<li><a href=\"https://github.com/RustCrypto/AEADs/commit/40240c4a852df21048830de4eed4782c0fbddaef\"><code>40240c4</code></a> Update Cargo.lock</li>\n<li><a href=\"https://github.com/RustCrypto/AEADs/commit/be4ea6fd3bcc1c8a5a23974a43e0fc35104d8cba\"><code>be4ea6f</code></a> Update Cargo.lock</li>\n<li><a href=\"https://github.com/RustCrypto/AEADs/commit/2aef39e90d39c247cc89ccc31628468c9a9f60de\"><code>2aef39e</code></a> Update Clippy version (<a href=\"https://redirect.github.com/RustCrypto/AEADs/issues/534\">#534</a>)</li>\n<li><a href=\"https://github.com/RustCrypto/AEADs/commit/50710da0cbd47a4614b6d37119877f206c207e95\"><code>50710da</code></a> Update Cargo.lock</li>\n<li>Additional commits viewable in <a href=\"https://github.com/RustCrypto/AEADs/compare/aes-gcm-v0.10.2...aes-gcm-v0.10.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=aes-gcm&package-manager=cargo&previous-version=0.10.2&new-version=0.10.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/denoland/deno/network/alerts).\n\n</details>",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 111,
        "deletions": 99,
        "changed_files": 6,
        "created_at": "2023-09-22T15:03:31Z",
        "closed_at": "2023-09-23T08:04:55Z",
        "merged_at": "2023-09-23T08:04:55Z",
        "body": "Fixes https://github.com/denoland/deno/issues/20634",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 42,
        "changed_files": 3,
        "created_at": "2023-09-22T14:48:47Z",
        "closed_at": "2023-09-22T19:51:59Z",
        "merged_at": "2023-09-22T19:51:59Z",
        "body": "```\r\n    Updating aes-gcm v0.10.2 -> v0.10.3\r\n    Updating aho-corasick v1.1.0 -> v1.1.1\r\n    Updating curve25519-dalek v4.1.0 -> v4.1.1\r\n    Updating deno_core v0.214.0 -> v0.215.0\r\n    Updating deno_ops v0.90.0 -> v0.91.0\r\n    Updating deno_unsync v0.2.1 -> v0.3.0\r\n    Updating md-5 v0.10.5 -> v0.10.6\r\n    Updating rustix v0.38.13 -> v0.38.14\r\n    Updating rustls-webpki v0.101.5 -> v0.101.6\r\n    Updating serde_v8 v0.123.0 -> v0.124.0\r\n    Updating sha1 v0.10.5 -> v0.10.6\r\n    Updating smallvec v1.11.0 -> v1.11.1\r\n    Updating tokio-util v0.7.8 -> v0.7.9\r\n    Updating v8 v0.76.0 -> v0.77.0\r\n    Updating winapi-util v0.1.5 -> v0.1.6\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 190,
        "deletions": 11,
        "changed_files": 6,
        "created_at": "2023-09-22T05:50:29Z",
        "closed_at": "2023-09-24T16:59:43Z",
        "merged_at": "2023-09-24T16:59:43Z",
        "body": "Closes #20587. Will do an accompanying change in vscode_deno to disable the [client-side implementation](https://github.com/denoland/vscode_deno/blob/82224e56b1afdd8d93b4f38bd4a39e5c72c6445c/client/src/extension.ts#L217-L237) when connected to Deno >1.37.0. Though even if both are enabled, it doesn't seem to be duplicating any work.\r\n\r\nCheck if the `DiagnosticsState` structure looks good. It's a way to save lightweight, up-to-date and useful diagnostics information for each module, without needing to save every diagnostic for every version and coordinating the cleanup for that. Related: #16082.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-22T02:28:54Z",
        "closed_at": "2023-09-23T16:23:26Z",
        "merged_at": null,
        "body": "Implements `Out`, but not `In`.\r\n\r\n~This should fix https://github.com/denoland/deno/issues/20528~\r\n\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 32,
        "changed_files": 1,
        "created_at": "2023-09-21T22:46:51Z",
        "closed_at": "2023-09-23T16:25:36Z",
        "merged_at": "2023-09-23T16:25:36Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 48,
        "changed_files": 3,
        "created_at": "2023-09-21T22:40:53Z",
        "closed_at": "2023-09-23T19:33:32Z",
        "merged_at": "2023-09-23T19:33:32Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 79,
        "deletions": 62,
        "changed_files": 7,
        "created_at": "2023-09-21T21:49:28Z",
        "closed_at": "2023-09-27T03:06:58Z",
        "merged_at": "2023-09-27T03:06:58Z",
        "body": "This fixes the `TypeError: Database closed` error during shutdown.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-09-21T19:57:43Z",
        "closed_at": "2023-09-22T16:40:36Z",
        "merged_at": "2023-09-22T16:40:36Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2023-09-21T18:27:08Z",
        "closed_at": "2023-09-22T02:06:43Z",
        "merged_at": "2023-09-22T02:06:43Z",
        "body": "This PR optimizes `fromInner*` methods of `Request` / `Header` / `Response` used by `Deno.serve` and `fetch` by using `new` instead of `ObjectCreate` from `createBranded`.\r\n\r\nThe \"brand\" is created by passing `webidl.brand` to the constructor instead.\r\n\r\nhttps://github.com/denoland/deno/blob/142449ecab20006c5cfd15462814650596bc034d/ext/webidl/00_webidl.js#L1001-L1005\r\n\r\n### Benchmark\r\n```js\r\nconst createBranded = Symbol(\"create branded\");\r\nconst brand = Symbol(\"brand\");\r\nclass B {\r\n  constructor(init) {\r\n    if (init === createBranded) {\r\n      this[brand] = brand;\r\n    }\r\n  }\r\n}\r\n\r\nDeno.bench(\"Object.create(protoype)\", () => {\r\n  Object.create(B.prototype);\r\n});\r\n\r\nDeno.bench(\"new Class\", () => {\r\n  new B(createBranded);\r\n});\r\n```\r\n\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.37.0 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark                    time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------------------- -----------------------------\r\nObject.create(protoype)       8.74 ns/iter 114,363,610.3    (7.32 ns \u2026 26.02 ns)   8.65 ns  13.39 ns  14.47 ns\r\nnew Class                     3.05 ns/iter 328,271,012.2      (2.78 ns \u2026 9.1 ns)   3.06 ns   3.46 ns    3.5 ns\r\n```\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 212,
        "deletions": 53,
        "changed_files": 4,
        "created_at": "2023-09-21T16:34:16Z",
        "closed_at": "2023-09-23T14:55:28Z",
        "merged_at": "2023-09-23T14:55:28Z",
        "body": "We can go one level down in abstraction and avoid using the public `ReadableStream` APIs.\r\n\r\nThis patch ~5% perf boost on small ReadableStream:\r\n\r\n```\r\nRunning 10s test @ http://localhost:8080/\r\n  2 threads and 10 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency   148.32us  108.95us   3.88ms   95.71%\r\n    Req/Sec    33.24k     2.68k   37.94k    73.76%\r\n  668188 requests in 10.10s, 77.74MB read\r\nRequests/sec:  66162.91\r\nTransfer/sec:      7.70MB\r\n```\r\n\r\nmain:\r\n\r\n```\r\nRunning 10s test @ http://localhost:8080/\r\n  2 threads and 10 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency   150.23us   67.61us   4.39ms   94.80%\r\n    Req/Sec    31.81k     1.55k   35.56k    83.17%\r\n  639078 requests in 10.10s, 74.36MB read\r\nRequests/sec:  63273.72\r\nTransfer/sec:      7.36MB\r\n```",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-09-21T15:59:23Z",
        "closed_at": "2023-09-22T04:32:45Z",
        "merged_at": null,
        "body": "Blocked by:\r\n\r\n- [ ] i64 & u64 arguments that can be both `bigint | number`\r\n- [ ] buffer pointers https://github.com/denoland/deno_core/issues/229",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 37,
        "changed_files": 8,
        "created_at": "2023-09-21T07:40:17Z",
        "closed_at": "2023-09-21T14:08:24Z",
        "merged_at": "2023-09-21T14:08:24Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-21T03:36:51Z",
        "closed_at": "2023-09-21T06:44:38Z",
        "merged_at": "2023-09-21T06:44:38Z",
        "body": "Fixes https://github.com/denoland/deno/issues/20590",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 501,
        "deletions": 185,
        "changed_files": 7,
        "created_at": "2023-09-20T23:34:07Z",
        "closed_at": "2023-09-21T05:46:39Z",
        "merged_at": "2023-09-21T05:46:39Z",
        "body": "Addresses most of https://github.com/denoland/vscode_deno/issues/928. Coupled with https://github.com/denoland/vscode_deno/pull/929.\r\n\r\nWhen sending configuration requests to the client, reads `javascript` and `typescript` sections in addition to `deno`.\r\n\r\nThe LSP's initialization options now accepts `javascript` and `typescript` namespaces. To provide this properly, editors must do something like:\r\n```ts\r\nconst initOptions = workspace.getConfiguration(\"deno\");\r\ninitOptions.javascript = workspace.getConfiguration(\"javascript\");\r\ninitOptions.typescript = workspace.getConfiguration(\"typescript\");\r\n```\r\nA bit awkward to nest them but needed for backward-compat.\r\n\r\nSimilarly, these sections are stored in `WorkspaceSettings::javascript` and `WorkspaceSettings::typescript`. `WorkspaceSettings::inlayHints` and most of `WorkspaceSettings::suggest` are removed in favour of these. However the corresponding raw inputs for those (e.g. `deno.inlayHints`) are still read and copied into `WorkspaceSettings::{javascript,typescript}.inlayHints`. If they are detected, a deprecation warning is logged.\r\n\r\n---\r\n\r\nInstead of needing `deno.suggest.completeFunctionCalls`, `typescript.suggest.completeFunctionCalls` will work (cc @lucacasonato). This also opens the door to respecting a lot more of VSCode's built-in settings for JS and TS files.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-09-20T20:15:30Z",
        "closed_at": "2023-09-22T09:21:39Z",
        "merged_at": "2023-09-22T09:21:39Z",
        "body": "Fixes #20558\r\n\r\nImplementation: when package.json `exports` field is `null`, treat it as if it was not set",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 23,
        "changed_files": 4,
        "created_at": "2023-09-20T03:16:57Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Working on this in concert with https://github.com/denoland/fastwebsockets/pull/48",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-09-20T00:02:57Z",
        "closed_at": "2023-09-20T00:47:52Z",
        "merged_at": "2023-09-20T00:47:52Z",
        "body": "<!--\nBefore submitting a PR, please read https://deno.com/manual/contributing\n\n1. Give the PR a descriptive title.\n\n  Examples of good title:\n    - fix(std/http): Fix race condition in server\n    - docs(console): Update docstrings\n    - feat(doc): Handle nested reexports\n\n  Examples of bad title:\n    - fix #7123\n    - update docs\n    - fix bugs\n\n2. Ensure there is a related issue and it is referenced in the PR text.\n3. Ensure there are tests that cover the changes.\n4. Ensure `cargo test` passes.\n5. Ensure `./tools/format.js` passes without changing files.\n6. Ensure `./tools/lint.js` passes.\n7. Open as a draft PR if your work is still in progress. The CI won't run\n   all steps, but you can add '[ci]' to a commit message to force it to.\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\n-->\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-19T20:54:59Z",
        "closed_at": "2023-09-20T00:24:20Z",
        "merged_at": "2023-09-20T00:24:20Z",
        "body": "Closes https://github.com/denoland/deno/issues/20576",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 147,
        "deletions": 74,
        "changed_files": 29,
        "created_at": "2023-09-19T19:12:08Z",
        "closed_at": "2023-09-19T20:29:17Z",
        "merged_at": "2023-09-19T20:29:17Z",
        "body": "Bumped versions for 1.37.0\n\nPlease ensure:\n- [x] Target branch is correct (`vX.XX` if a patch release, `main` if minor)\n- [x] Crate versions are bumped correctly\n- [x] deno_std version is incremented in the code (see `cli/deno_std.rs`)\n- [x] Releases.md is updated correctly (think relevancy and remove reverts)\n\nTo make edits to this PR:\n```shell\ngit fetch upstream release_1_37.0 && git checkout -b release_1_37.0 upstream/release_1_37.0\n```\n\ncc @dsherret",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 58,
        "changed_files": 2,
        "created_at": "2023-09-19T18:44:53Z",
        "closed_at": "2023-09-20T01:48:36Z",
        "merged_at": "2023-09-20T01:48:36Z",
        "body": "To merge after release.\r\n\r\n> 1.72.1 resolves a few regressions introduced in 1.72.0:\r\n\r\n> - [Partially revert codegen change, improving codegen](https://github.com/rust-lang/rust/pull/115236)\r\n> - [rustdoc: Fix self ty params in objects with lifetimes](https://github.com/rust-lang/rust/pull/115276)\r\n> - [Fix regression in compile times](https://github.com/rust-lang/rust/pull/114948)\r\n> - Resolve some ICEs in the compiler:\r\n>   - [#115215](https://github.com/rust-lang/rust/pull/115215)\r\n>   - [#115559](https://github.com/rust-lang/rust/pull/115559)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 456,
        "deletions": 84,
        "changed_files": 1,
        "created_at": "2023-09-19T16:24:38Z",
        "closed_at": "2023-09-20T17:23:58Z",
        "merged_at": "2023-09-20T17:23:58Z",
        "body": "Fixes: #20569 by introducing a custom replacement for the tokio mpsc channel that is byte-size backpressure-aware. \r\n\r\nUsing the testcase in the linked bug, we see all the small writes aggregated into a single packet and HTTP frame.\r\n\r\n```\r\n10:39 $ nc localhost 8000\r\nGET / HTTP/1.1\r\n\r\nHTTP/1.1 200 OK\r\ncontent-type: text/plain\r\nvary: Accept-Encoding\r\ntransfer-encoding: chunked\r\ndate: Tue, 19 Sep 2023 16:39:13 GMT\r\n\r\nA\r\n0\r\n1\r\n2\r\n3\r\n4\r\n```\r\n\r\nThis patch:\r\n\r\n```\r\nRunning 10s test @ http://localhost:8080/\r\n  2 threads and 10 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency   157.47us  194.89us   9.53ms   98.97%\r\n    Req/Sec    31.37k     1.56k   34.73k    85.15%\r\n  630407 requests in 10.10s, 73.35MB read\r\nRequests/sec:  62428.12\r\nTransfer/sec:      7.26MB\r\n```\r\n\r\nmain:\r\n\r\n```\r\nRunning 10s test @ http://localhost:8080/\r\n  2 threads and 10 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency   343.75us  200.48us  10.41ms   98.25%\r\n    Req/Sec    14.64k   806.52    16.98k    84.65%\r\n  294018 requests in 10.10s, 39.82MB read\r\nRequests/sec:  29109.91\r\nTransfer/sec:      3.94MB\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-19T15:49:07Z",
        "closed_at": "2023-09-19T18:24:19Z",
        "merged_at": "2023-09-19T18:24:19Z",
        "body": "Fixes #20561 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-19T11:23:41Z",
        "closed_at": "2023-09-19T12:01:06Z",
        "merged_at": "2023-09-19T12:01:06Z",
        "body": "I think this is the proper way to use `is_incomplete` here. Setting it to false results in infrequent refreshes and a poor experience, but this stops it from hammering the API for junk searches.\r\n\r\ncc @lucacasonato ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 82,
        "deletions": 22,
        "changed_files": 2,
        "created_at": "2023-09-19T05:07:41Z",
        "closed_at": "2023-09-19T15:37:28Z",
        "merged_at": "2023-09-19T15:37:28Z",
        "body": "Fixes #16230.\r\n\r\nDetects cases where `MediaType::from_specifier(s)` gives a different result from what tsc would do: ~`MediaType::from_path(Path::new(s.as_str()))`, and dumbly appends an extension to force them to have the same result. Doesn't account for out-of-band media types (e.g. headers) at the moment. That gets more complicated because it depends on external state. But this fixes common cases.\r\n\r\nAffects the following cases:\r\n```ts\r\nimport json1 from \"./deno.json?1\" assert { \"type\": \"json\" };\r\nimport json2 from \"./deno.json#1\" assert { \"type\": \"json\" };\r\nimport json3 from \"data:application/json;,{}\" assert { \"type\": \"json\" };\r\n```\r\nwhich previously would all give a diagnostic like `Module '...' has no default export.`.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 107,
        "deletions": 31,
        "changed_files": 5,
        "created_at": "2023-09-18T17:43:13Z",
        "closed_at": "2023-09-18T20:40:41Z",
        "merged_at": "2023-09-18T20:40:41Z",
        "body": "Closes #20554",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-09-18T14:44:20Z",
        "closed_at": "2023-09-18T15:39:40Z",
        "merged_at": "2023-09-18T15:39:40Z",
        "body": "Fixes #20534  \r\n\r\nAn op2 needs to be overloaded by an op2, not an op1.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 257,
        "deletions": 63,
        "changed_files": 4,
        "created_at": "2023-09-18T11:41:30Z",
        "closed_at": "2023-09-19T10:10:21Z",
        "merged_at": "2023-09-19T10:10:21Z",
        "body": "<!--\nBefore submitting a PR, please read https://deno.com/manual/contributing\n\n1. Give the PR a descriptive title.\n\n  Examples of good title:\n    - fix(std/http): Fix race condition in server\n    - docs(console): Update docstrings\n    - feat(doc): Handle nested reexports\n\n  Examples of bad title:\n    - fix #7123\n    - update docs\n    - fix bugs\n\n2. Ensure there is a related issue and it is referenced in the PR text.\n3. Ensure there are tests that cover the changes.\n4. Ensure `cargo test` passes.\n5. Ensure `./tools/format.js` passes without changing files.\n6. Ensure `./tools/lint.js` passes.\n7. Open as a draft PR if your work is still in progress. The CI won't run\n   all steps, but you can add '[ci]' to a commit message to force it to.\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\n-->\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 260,
        "deletions": 20,
        "changed_files": 5,
        "created_at": "2023-09-18T04:26:30Z",
        "closed_at": "2023-09-18T19:48:33Z",
        "merged_at": "2023-09-18T19:48:33Z",
        "body": "Fixes #16083. Follow up to #20184. Quote config was in `UserPreferences` rather than `FormatCodeSettings` so I missed it before.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-09-17T23:39:42Z",
        "closed_at": "2023-09-18T16:31:20Z",
        "merged_at": "2023-09-18T16:31:20Z",
        "body": "Fast follow up to #20537.\r\n\r\nBefore:\r\n\r\n![image](https://github.com/denoland/deno/assets/836375/8a12e83d-9008-419b-bd1f-24c0ac90afd3)\r\n\r\nAfter:\r\n\r\n<img width=\"235\" alt=\"image\" src=\"https://github.com/denoland/deno/assets/836375/467bf381-278e-4577-a980-7b0ddb08d2af\">\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 70,
        "deletions": 78,
        "changed_files": 2,
        "created_at": "2023-09-17T22:32:35Z",
        "closed_at": "2023-09-18T16:39:29Z",
        "merged_at": "2023-09-18T16:39:29Z",
        "body": "Fixes #20544. Reverts the unrelated test fixture changes from #17221, so it works.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 30,
        "changed_files": 1,
        "created_at": "2023-09-17T15:15:09Z",
        "closed_at": "2023-09-17T15:54:40Z",
        "merged_at": "2023-09-17T15:54:40Z",
        "body": "This PR optimizes `ReadableStream` async iterator\r\n\r\n### Benchmarks\r\n\r\n```js\r\nDeno.bench(\"Stream - iterator\", async () => {\r\n  const stream = new ReadableStream({\r\n    start(controller) {\r\n      controller.enqueue(new Uint8Array([97]));\r\n      controller.enqueue(new Uint8Array([97]));\r\n      controller.close();\r\n    },\r\n  });\r\n\r\n  for await (const chunk of stream) {}\r\n});\r\n```\r\n\r\n**main**\r\n\r\n`2 chunks`\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.4 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark              time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------------- -----------------------------\r\nStream - iterator      12.45 \u00b5s/iter      80,295.5   (10.5 \u00b5s \u2026 281.12 \u00b5s)  12.13 \u00b5s  26.71 \u00b5s  33.63 \u00b5s\r\n```\r\n`20 chunks`\r\n\r\n```\r\nbenchmark              time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------------- -----------------------------\r\nStream - iterator      32.99 \u00b5s/iter      30,312.2    (28.13 \u00b5s \u2026 1.21 ms)   31.8 \u00b5s  81.82 \u00b5s 179.93 \u00b5s\r\n```\r\n---\r\n\r\n**this PR**\r\n\r\n`2 chunks`\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.4 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark              time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------------- -----------------------------\r\nStream - iterator       9.37 \u00b5s/iter     106,700.8   (8.35 \u00b5s \u2026 730.71 \u00b5s)   9.15 \u00b5s  13.12 \u00b5s  18.17 \u00b5s\r\n```\r\n`20 chunks`\r\n```\r\nbenchmark              time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------------- -----------------------------\r\nStream - iterator      16.59 \u00b5s/iter      60,270.0    (12.08 \u00b5s \u2026 1.37 ms)  15.06 \u00b5s  83.03 \u00b5s 123.52 \u00b5s\r\n```\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 5,
        "changed_files": 9,
        "created_at": "2023-09-17T08:14:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 5
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2023-09-17T07:13:09Z",
        "closed_at": "2023-09-18T18:55:24Z",
        "merged_at": "2023-09-18T18:55:24Z",
        "body": "Fixes #10440.\r\n\r\nGive auto-import completion entries a sort-text suffix depending on if the specifier parses as a URL. This will favour relative and bare (likely import-mapped) specifiers.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 117,
        "changed_files": 1,
        "created_at": "2023-09-17T06:41:06Z",
        "closed_at": "2023-09-18T23:59:27Z",
        "merged_at": "2023-09-18T23:59:27Z",
        "body": "Follow up to #20523.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 38,
        "changed_files": 1,
        "created_at": "2023-09-17T03:15:13Z",
        "closed_at": "2023-09-17T16:38:52Z",
        "merged_at": "2023-09-17T16:38:52Z",
        "body": "Closes #20535.\r\n\r\n# Screenshots\r\n\r\n## JSON\r\n<img width=\"779\" alt=\"image\" src=\"https://github.com/denoland/deno/assets/836375/668bb1a6-3f76-4b36-974e-cdc6c93f94c3\">\r\n\r\n## Vegalite\r\n\r\n<img width=\"558\" alt=\"image\" src=\"https://github.com/denoland/deno/assets/836375/a5e70908-6b87-42d8-85c3-1323ad52a00f\">\r\n\r\n# Implementation\r\n\r\nInstead of going the route of recursively getting all the objects under `application/.*json` keys, I went with `JSON.stringify`ing in denospace then parsing it from rust. One of the key benefits of serializing and deserializing is that non-JSON-able entries will get stripped automatically. This also keeps the code pretty simple.\r\n\r\nIn the future we should _only_ do this for `application/.*json` keys.\r\n\r\ncc @mmastrac ",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 66,
        "deletions": 31,
        "changed_files": 5,
        "created_at": "2023-09-17T03:08:39Z",
        "closed_at": "2023-09-17T06:50:31Z",
        "merged_at": "2023-09-17T06:50:31Z",
        "body": "Fixes #13100.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-17T00:32:12Z",
        "closed_at": "2023-09-17T16:06:51Z",
        "merged_at": "2023-09-17T16:06:51Z",
        "body": "<https://github.com/denoland/deno/issues/20281>\r\n\r\n<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-16T23:59:24Z",
        "closed_at": "2023-09-17T02:02:22Z",
        "merged_at": "2023-09-17T02:02:22Z",
        "body": "\"Fixes\" the exception display issue of #20524 on older versions of Jupyter that required `evalue` to be truthy. For now, until we can do proper processing of the `ExceptionDetails` this will make Jupyter Notebook 6.5.1 and below happy.\r\n\r\nThis is the alternative \"just work now\" PR to #20530 \r\n\r\ncc @mmastrac \r\n\r\n<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 197,
        "deletions": 53,
        "changed_files": 2,
        "created_at": "2023-09-16T23:54:11Z",
        "closed_at": "2023-09-18T22:07:34Z",
        "merged_at": "2023-09-18T22:07:33Z",
        "body": "Partial fix for https://github.com/denoland/deno/issues/20524.\r\n\r\nI'm posting this PR in draft state to come back to later and instead\r\njust file a fast PR that will allow older Jupyter versions to display\r\nour error messages.\r\n\r\nWhat I was hoping to do here was pluck off `message` from a real Error.\r\nSince I'm completely new to Rust, serde_json, and v8 this did not go\r\ngreat. In Jupyter it's expected that you'll have fields comprising a\r\nlayout like this:\r\n\r\n```\r\n{ename}: {evalue}\r\n\r\n{traceback}\r\n```\r\n\r\nWhen it's a bonafide error, the ename can be the classname. When it's\r\nanything else (everyone should `throw \"a party\"` at least once), we want to call it\r\nan Unknown error of some kind and stick the value on `evalue`.\r\n\r\n<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2023-09-16T19:19:19Z",
        "closed_at": "2023-09-16T21:15:16Z",
        "merged_at": "2023-09-16T21:15:16Z",
        "body": "This PR introduces an optimization to `set_response` to reduce the overhead for responses with a payload size less than 64 bytes. Performance gains are more noticeable when `is_request_compressible` enters the slow path, ie: `-H 'Accept-Encoding: unknown'`\r\n\r\n### Benchmarks\r\n```js\r\nDeno.serve({ port: 3000 }, () => new Response(\"hello\"));\r\n```\r\n```\r\nwrk -d 10s --latency -H 'Accept-Encoding: slow' http://127.0.0.1:3000\r\n```\r\n---\r\n**main**\r\n```\r\nRunning 10s test @ http://127.0.0.1:3000\r\n  2 threads and 10 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency    44.72us   28.12us   3.10ms   97.95%\r\n    Req/Sec   112.73k     8.25k  123.66k    91.09%\r\n  2264092 requests in 10.10s, 308.77MB read\r\nRequests/sec: 224187.08\r\nTransfer/sec:     30.57MB\r\n```\r\n**this PR**\r\n```\r\nRunning 10s test @ http://127.0.0.1:3000\r\n  2 threads and 10 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency    42.91us   20.57us   2.04ms   97.36%\r\n    Req/Sec   116.61k     7.95k  204.81k    88.56%\r\n  2330970 requests in 10.10s, 317.89MB read\r\nRequests/sec: 230806.32\r\nTransfer/sec:     31.48MB\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-16T18:51:03Z",
        "closed_at": "2023-09-16T21:54:29Z",
        "merged_at": "2023-09-16T21:54:29Z",
        "body": "Fixing a broken link to the contributing docs\r\n\r\n<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-09-16T04:50:53Z",
        "closed_at": "2023-09-16T14:51:35Z",
        "merged_at": "2023-09-16T14:51:35Z",
        "body": "Closes https://github.com/denoland/vscode_deno/issues/783.\r\n\r\n![image](https://github.com/denoland/deno/assets/29990554/d0bf853b-5ae1-4174-bacf-c3bb12376ff2)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 66,
        "deletions": 143,
        "changed_files": 4,
        "created_at": "2023-09-15T21:22:38Z",
        "closed_at": "2023-09-18T19:58:16Z",
        "merged_at": "2023-09-18T19:58:16Z",
        "body": "When preparing a list of enabled and disabled paths for `PreloadDocumentFinder`, we were doing a useless back-and-forth conversion from URLs to paths. Also we were filtering disabled entries twice, we don't need to do it in `Config::enabled_urls() -> Config::get_enabled_paths()` since it's filtered during the walk.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 105,
        "deletions": 153,
        "changed_files": 10,
        "created_at": "2023-09-15T18:28:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Use new https://github.com/denoland/rustls-tokio-stream project instead of tokio-rustls for direct websocket connections. This library was written from the ground up to be more reliable and should help with various bugs that may occur due to underlying bugs in the old library.\r\n\r\nThis is blocked on some fastwebsockets work to split the read/write halves of a WebSocket.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 419,
        "deletions": 119,
        "changed_files": 44,
        "created_at": "2023-09-15T16:42:35Z",
        "closed_at": "2023-09-18T14:46:44Z",
        "merged_at": "2023-09-18T14:46:44Z",
        "body": "Note: **Extremely experimental**\r\n\r\nAs discussed in https://deno.com/blog/package-json-support#a-new-major-version and https://github.com/denoland/deno/issues/17495 but making the specifiers non-Deno specific.\r\n\r\nThis PR adds an unstable built-in package manager to Deno, but it is currently not usable because the registry infrastructure hasn't been setup and it points to a non-existent url by default. The default registry url can be configured via the `DENO_REGISTRY_URL` environment variable.\r\n\r\n## Using and installing packages\r\n\r\nPackages are referenced via semvered specifiers, which can be defined in an application or package's [import map](https://html.spec.whatwg.org/multipage/webappapis.html#import-maps):\r\n\r\n```jsonc\r\n// deno.jsonc\r\n{\r\n  \"imports\": {\r\n    \"path\": \"jsr:@std/path@1/mod.ts\"\r\n  }\r\n}\r\n```\r\n\r\nNext, use the specifier in a JavaScript or TypeScript file:\r\n\r\n```ts\r\n// main.ts\r\nimport * as path from \"path\";\r\n\r\nconsole.log(path.join(\"folder\", \"main.json\"));\r\n```\r\n\r\nThen it's as simple as:\r\n\r\n```shellsession\r\n$ deno run main.ts\r\nfolder/main.json\r\n```\r\n\r\n## Inline specifiers\r\n\r\nOf course, these specifiers can be directly used inline in the code, which is useful for single file scripts or when distributing code:\r\n\r\n```ts\r\nimport { readInt } from \"jsr:@std/io@1/read_int.ts\";\r\n// ...etc...\r\n```\r\n\r\n## Details\r\n\r\n1. There is no separate install command.\r\n   - Packages are automatically updated based on what's in the code. This works similarly to Rust's `cargo run`.\r\n   - There is no need to have to remember to run a separate install command on first run or when the dependencies are upgraded (a significant source of wasted time other ecosystems)\r\n1. These specifiers resolve to `https:` specifiers.\r\n   - The underlying `https:` specifiers can be imported without duplication of a module.\r\n   - Tooling to generate an import map that can then be used in browsers and other tooling will be added in the future.\r\n   - All existing Deno tooling works well with these because everything is still `https:` specifiers under the hood.\r\n1. These specifiers are much faster on first run than `https:` specifiers because there is no waterfalling within a package and the module graph information is computed ahead of time and distributed by the registry.\r\n1. These specifiers are efficient because only the imported code is downloaded.\r\n\r\nThe specific details on how packages might be created and distributed will be outlined soon for further discussion before stabilization. Again, to emphasize, this is all unstable experimental work.\r\n\r\nRef https://github.com/denoland/deno/issues/17475\r\nRef https://github.com/denoland/deno/issues/17495 -- won't close that one until this is fully functional",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2023-09-15T15:08:09Z",
        "closed_at": "2023-09-15T15:46:48Z",
        "merged_at": "2023-09-15T15:46:48Z",
        "body": "Fixes #20512.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-09-15T14:09:57Z",
        "closed_at": "2023-09-15T14:53:39Z",
        "merged_at": "2023-09-15T14:53:39Z",
        "body": "Use `assertRejects` to actually catch errors.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 120,
        "deletions": 79,
        "changed_files": 5,
        "created_at": "2023-09-14T20:01:08Z",
        "closed_at": "2023-10-05T13:35:22Z",
        "merged_at": "2023-10-05T13:35:21Z",
        "body": "Migrate to op2. Making a few decisions to get this across the line:\r\n\r\n - Empty slices, no matter where the come from, are null pointers. The v8 bugs (https://bugs.chromium.org/p/v8/issues/detail?id=13489) and (https://bugs.chromium.org/p/v8/issues/detail?id=13488) make passing around zero-length slice pointers too dangerous as they might be uninitialized or null data.\r\n - Offsets and lengths are `#[number] isize` and `#[number] usize` respectively -- 53 bits should be enough for anyone\r\n - Pointers are bigints. This is a u64 in the fastcall world, and can accept Integer/Int32/Number/BigInt v8 types in the slow world.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 31,
        "changed_files": 3,
        "created_at": "2023-09-14T18:25:35Z",
        "closed_at": "2023-09-14T19:17:39Z",
        "merged_at": "2023-09-14T19:17:39Z",
        "body": "Fixes the last dependabot security warning",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2023-09-14T18:14:06Z",
        "closed_at": "2023-09-14T19:00:26Z",
        "merged_at": "2023-09-14T19:00:26Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 3,
        "changed_files": 6,
        "created_at": "2023-09-14T17:25:11Z",
        "closed_at": "2023-09-14T18:09:00Z",
        "merged_at": "2023-09-14T18:09:00Z",
        "body": "This adds support for `using` and `await using` declarations in TypeScript only. We need to wait for v8 to support it for this to work in JS.\r\n\r\nFollow-up to https://github.com/denoland/deno/pull/20425",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 92,
        "deletions": 78,
        "changed_files": 26,
        "created_at": "2023-09-14T16:26:35Z",
        "closed_at": "2023-09-14T17:51:29Z",
        "merged_at": "2023-09-14T17:51:29Z",
        "body": "https://github.com/denoland/deno/pull/20488 enables us to remove this functionality. This is better because our test suite is now not testing a separate code path.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2023-09-14T16:24:57Z",
        "closed_at": "2023-09-15T14:08:22Z",
        "merged_at": "2023-09-15T14:08:22Z",
        "body": "Fixes #20502 -- ensure that Hyper errors make it through to JS.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 185,
        "deletions": 37,
        "changed_files": 12,
        "created_at": "2023-09-14T16:08:23Z",
        "closed_at": "2023-09-16T05:48:32Z",
        "merged_at": "2023-09-16T05:48:32Z",
        "body": "This commit improves async op sanitizer speed by only delaying metrics\r\ncollection if there are `op_sleep` ops in the resource table. This\r\nresults in a speedup of around 30% for small CPU bound unit tests.\r\n\r\nIt performs this check and possible delay on every collection now,\r\nfixing an issue with parent test leaks into steps. Fixes #20498\r\n\r\nBefore:\r\n\r\n```\r\n/m/a/P/g/d/deno \u276f\u276f\u276f deno test -A --unstable ./cli/tests/unit/abort_controller_test.ts\r\nrunning 6 tests from ./cli/tests/unit/abort_controller_test.ts\r\nbasicAbortController ... ok (5ms)\r\nsignalCallsOnabort ... ok (4ms)\r\nsignalEventListener ... ok (3ms)\r\nonlyAbortsOnce ... ok (4ms)\r\ncontrollerHasProperToString ... ok (3ms)\r\nabortReason ... ok (3ms)\r\n\r\nok | 6 passed | 0 failed (44ms)\r\n```\r\n\r\nAfter:\r\n\r\n```\r\n/m/a/P/g/d/deno \u276f\u276f\u276f ./target/release/deno test -A --unstable ./cli/tests/unit/abort_controller_test.ts\r\nrunning 6 tests from ./cli/tests/unit/abort_controller_test.ts\r\nbasicAbortController ... ok (3ms)\r\nsignalCallsOnabort ... ok (2ms)\r\nsignalEventListener ... ok (1ms)\r\nonlyAbortsOnce ... ok (1ms)\r\ncontrollerHasProperToString ... ok (1ms)\r\nabortReason ... ok (1ms)\r\n\r\nok | 6 passed | 0 failed (29ms)\r\n```\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 19,
        "changed_files": 2,
        "created_at": "2023-09-14T16:01:47Z",
        "closed_at": "2023-09-15T15:08:42Z",
        "merged_at": null,
        "body": "Experiment: checking to see if WPT tests fail.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-14T10:50:48Z",
        "closed_at": "2023-09-14T22:17:02Z",
        "merged_at": "2023-09-14T22:17:02Z",
        "body": "This is a mitigation for segfaults happening in V8 on CPU with MPK (memory protected keys).\r\nAfter much trail and error we found that unless V8 platform is initialized on main thread the\r\nsegfaults start appears once JIT kicks in. \"deno test\" and \"deno bench\" were impacted by\r\nthis problem.\r\n\r\nFixes https://github.com/denoland/deno/issues/19926\r\nFixes https://github.com/denoland/deno/issues/20243\r\nFixes https://github.com/denoland/deno/issues/20450",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 15,
        "changed_files": 6,
        "created_at": "2023-09-14T10:06:54Z",
        "closed_at": "2023-09-14T14:38:16Z",
        "merged_at": "2023-09-14T14:38:16Z",
        "body": "This adds traces for the \"started outside test, closed inside test\"\ncase.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-09-14T07:16:19Z",
        "closed_at": "2023-09-14T19:28:42Z",
        "merged_at": null,
        "body": "Fixes https://github.com/denoland/deno/issues/19926\r\nFixes https://github.com/denoland/deno/issues/20243\r\nFixes https://github.com/denoland/deno/issues/20450",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 221,
        "deletions": 164,
        "changed_files": 5,
        "created_at": "2023-09-14T03:42:38Z",
        "closed_at": "2023-09-14T06:29:44Z",
        "merged_at": "2023-09-14T06:29:44Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 402,
        "deletions": 105,
        "changed_files": 43,
        "created_at": "2023-09-14T02:43:36Z",
        "closed_at": "2023-09-14T16:21:58Z",
        "merged_at": "2023-09-14T16:21:57Z",
        "body": "This adds the ability to pattern match unordered lines. For example, the downloading messages may appear in any order\r\n\r\n```\r\n[UNORDERED_START]\r\nDownload https://localhost:4546/a.ts\r\nDownload https://localhost:4546/b.ts\r\n[UNORDERED_END]\r\nHello!\r\n```\r\n\r\nAdditionally, I've made the pattern matching slightly more strict.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 22,
        "changed_files": 2,
        "created_at": "2023-09-14T02:20:38Z",
        "closed_at": "2023-09-20T02:39:27Z",
        "merged_at": "2023-09-20T02:39:27Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 35,
        "changed_files": 3,
        "created_at": "2023-09-13T23:01:34Z",
        "closed_at": "2023-09-14T03:36:25Z",
        "merged_at": "2023-09-14T03:36:25Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 211,
        "changed_files": 2,
        "created_at": "2023-09-13T21:24:20Z",
        "closed_at": "2023-09-13T22:09:44Z",
        "merged_at": "2023-09-13T22:09:44Z",
        "body": "Running `tools/wpt.ts` with a filter would cause an error if there were extra, leftover expectations in expectations.json. These errors would not appear if no filter was passed, often leaving the filtered version of the test runner broken.\r\n\r\nThis also introduces a smarter bit of logic where filters can be specified with a leading slash (`tools/wpt.ts run  -- /url` is equivalent to `tools/wpt.ts run  -- url`)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 263,
        "deletions": 7,
        "changed_files": 5,
        "created_at": "2023-09-13T20:39:55Z",
        "closed_at": "2023-09-13T21:53:07Z",
        "merged_at": "2023-09-13T21:53:07Z",
        "body": "TaskQueue is being removed from `deno_core` and replaced with an unsync version in deno_unsyc.\r\n\r\nhttps://github.com/denoland/deno_core/pull/193\r\n\r\nThis is a change in preparation for that. The remaining `deno_core::TaskQueue` usage in this repo should be replaced with `deno_core::unsync::TaskQueue` once upgraded.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 257,
        "deletions": 411,
        "changed_files": 10,
        "created_at": "2023-09-13T18:39:13Z",
        "closed_at": "2023-09-13T22:01:31Z",
        "merged_at": "2023-09-13T22:01:31Z",
        "body": "Bump deno_core, pulling in new rusty_v8. Requires some op2/deprecation fixes.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 83,
        "deletions": 65,
        "changed_files": 6,
        "created_at": "2023-09-13T14:50:47Z",
        "closed_at": "2023-09-14T21:05:18Z",
        "merged_at": "2023-09-14T21:05:18Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 113,
        "deletions": 78,
        "changed_files": 8,
        "created_at": "2023-09-13T14:24:03Z",
        "closed_at": "2023-09-13T15:54:19Z",
        "merged_at": "2023-09-13T15:54:19Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 146,
        "deletions": 22,
        "changed_files": 7,
        "created_at": "2023-09-12T20:50:54Z",
        "closed_at": "2023-09-13T16:30:28Z",
        "merged_at": "2023-09-13T16:30:28Z",
        "body": "Addresses most of https://github.com/denoland/vscode_deno/issues/817.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-09-12T17:11:21Z",
        "closed_at": "2023-09-14T16:05:14Z",
        "merged_at": null,
        "body": "In the case of a single-argument string, Uint8Array, or ResponseStream, bypass init machinery. For Uint8Array or ArrayBuffer responses, don't perform a copy.\r\n\r\nTest w/short string:\r\n\r\nmain: \r\n\r\n```\r\n  1322955 requests in 10.10s, 189.25MB read\r\nRequests/sec: 131024.63\r\nTransfer/sec:     18.74MB\r\n```\r\n\r\nthis patch:\r\n\r\n```\r\n  1357711 requests in 10.10s, 194.22MB read\r\nRequests/sec: 134423.96\r\nTransfer/sec:     19.23MB\r\n```\r\n\r\nTest w/large buffer:\r\n\r\nmain:\r\n\r\n```\r\n  53292 requests in 10.10s, 52.05GB read\r\nRequests/sec:   5274.71\r\nTransfer/sec:      5.15GB\r\n```\r\n\r\nthis patch:\r\n\r\n```\r\n  72226 requests in 10.10s, 70.54GB read\r\nRequests/sec:   7150.93\r\nTransfer/sec:      6.98GB\r\n```",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 248,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2023-09-12T14:13:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR introduces `ServeHandlerResponse` as a return value option for `ServeHandler`. The goal is to optimize response times and minimize overhead associated with using the `Response` constructor.\r\n\r\n## Performance Improvements:\r\n- Approximately **12-16%** faster for string/Uint8Array responses.\r\n- Roughly **20% improvement** when providing headers.\r\n- For larger (>1mb) `Uint8Array` responses, the performance gains are even better since it avoids a copy https://github.com/denoland/deno/blob/08d2a32060a66e47dcccd99428d2ad13d7af29a9/ext/fetch/22_body.js#L415\r\n\r\nThis enhancement is based on [fast-response](https://github.com/marcosc90/fast-response).\r\n\r\n### Examples\r\n\r\n```javascript\r\nDeno.serve(() => ({ body: 'hello' }));\r\n```\r\n```javascript\r\nDeno.serve(() => ({ body: 'hello', status: 200, headers: [[\"content-type\", \"text/plain\"]] }));\r\n```\r\n\r\n\r\n\r\n---\r\n\r\n### Benchmarks\r\n\r\n```wrk -d 10s --latency http://127.0.0.1:3000```\r\n\r\n| Type                        | `Response` (req/s)     | `ServeHandlerResponse`  (req/s)   | Improvement     |\r\n|-----------------------------|------------------|------------------|-----------------|\r\n| \"hello world\" u8      | 241,594       | 282,483      | +40,889     |\r\n| \"hello world\"         | 253,721       | 269,206      | +15,485    |\r\n| 1mb Uint8Array      | 222,288       | 275,132      | +52,844     |\r\n| 2 headers       | 216,248      | 247,430      | +31,182     |\r\n\r\n\r\n\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 97,
        "deletions": 77,
        "changed_files": 3,
        "created_at": "2023-09-12T10:50:04Z",
        "closed_at": "2023-09-12T13:39:22Z",
        "merged_at": "2023-09-12T13:39:22Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-09-12T02:58:10Z",
        "closed_at": "2023-09-12T13:36:50Z",
        "merged_at": "2023-09-12T13:36:50Z",
        "body": "Fixes https://github.com/denoland/vscode_deno/issues/917. Will do an accompanying change in vscode_deno. It's an edgecase so cross-compat won't matter too much.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-12T01:02:50Z",
        "closed_at": "2023-09-12T15:33:08Z",
        "merged_at": "2023-09-12T15:33:08Z",
        "body": "* Installs `cmake` and `protoc` build dependencies in the docker container.\r\n* Replaced deprecated TOML extension with its suggested alternative.\r\n\r\nNote: At least 16GB is required to build Deno, so ensure you use 'New with options' and select at least the 4-core/16GB machine type when starting in GitHub Codespaces.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 83,
        "deletions": 57,
        "changed_files": 3,
        "created_at": "2023-09-11T23:42:50Z",
        "closed_at": "2023-09-12T00:55:57Z",
        "merged_at": "2023-09-12T00:55:57Z",
        "body": "Removes usage of `serde_json::Value` in several ops used in TSC, in favor\r\nof using strongly typed structs. This will unblock more changes in https://github.com/denoland/deno/pull/20462.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 165,
        "deletions": 34,
        "changed_files": 4,
        "created_at": "2023-09-11T22:53:58Z",
        "closed_at": "2023-09-29T18:40:37Z",
        "merged_at": "2023-09-29T18:40:37Z",
        "body": "fixes #20454\r\n\r\nCurrent KV queues implementation assumes that `enqueue` and `listenQueue` are called on the same instance of `Deno.Kv`. It's possible that the same Deno process opens multiple KV instances pointing to the same fs path, and in that case `listenQueue` should still get notified of messages enqueued through a different KV instance.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2023-09-11T22:38:44Z",
        "closed_at": "2023-09-11T23:12:33Z",
        "merged_at": "2023-09-11T23:12:33Z",
        "body": "Functions should generally be annotated with `#[allow]` blocks rather than using inner `#![allow]` annotations.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 70,
        "deletions": 50,
        "changed_files": 6,
        "created_at": "2023-09-11T21:59:20Z",
        "closed_at": "2023-09-12T11:14:45Z",
        "merged_at": "2023-09-12T11:14:45Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 17,
        "changed_files": 3,
        "created_at": "2023-09-11T21:48:46Z",
        "closed_at": "2023-09-12T10:42:05Z",
        "merged_at": "2023-09-12T10:42:05Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 75,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-09-11T21:19:44Z",
        "closed_at": "2023-09-18T17:48:55Z",
        "merged_at": "2023-09-18T17:48:55Z",
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n\r\nFixes #20351 with checks for the path and its type.\r\n\r\nRaises a `AnyError` if either the path doesn't exist OR if the path is NOT a directory\r\n\r\n![image](https://github.com/denoland/deno/assets/94926409/37eb0402-ec18-4c69-bb9c-bce9bc5f837b)\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 90,
        "deletions": 65,
        "changed_files": 7,
        "created_at": "2023-09-11T21:10:40Z",
        "closed_at": "2023-09-11T22:10:43Z",
        "merged_at": "2023-09-11T22:10:43Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 478,
        "deletions": 9,
        "changed_files": 10,
        "created_at": "2023-09-11T21:09:17Z",
        "closed_at": "2023-09-30T08:14:48Z",
        "merged_at": "2023-09-30T08:14:48Z",
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\nadd `test-http-url.parse*`\r\nnone logical change",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 126,
        "deletions": 102,
        "changed_files": 8,
        "created_at": "2023-09-11T20:58:18Z",
        "closed_at": "2023-10-05T12:34:38Z",
        "merged_at": "2023-10-05T12:34:38Z",
        "body": "Rewrites following extensions:\r\n- `ext/web`\r\n- `ext/url`\r\n- `ext/webstorage`\r\n- `ext/io`",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 77,
        "changed_files": 1,
        "created_at": "2023-09-11T10:06:57Z",
        "closed_at": "2023-09-11T18:38:57Z",
        "merged_at": "2023-09-11T18:38:57Z",
        "body": "Fixes performance regression introduced by https://github.com/denoland/deno/pull/20223 and https://github.com/denoland/deno/pull/20314. It's enough to have one \"shared\" buffer per socket\r\nand no locking mechanism is required.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 87,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-09-11T08:13:38Z",
        "closed_at": "2023-09-11T13:53:42Z",
        "merged_at": "2023-09-11T13:53:42Z",
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\nThis PR changes the `deno test --coverage=...` behavior so that internal deno JS files are excluded.\r\n\r\nFixes #20447",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-09-10T18:34:44Z",
        "closed_at": "2023-09-10T19:09:46Z",
        "merged_at": "2023-09-10T19:09:46Z",
        "body": "Fixes https://github.com/denoland/vscode_deno/issues/486.\r\n\r\nThis isn't a perfect solution. We want these requests to go to the Deno LSP for enabled modules and the regular TS server for disabled ones. But the language client's document selector isn't granular enough so they all must go to one. As a result, in a project with `\"deno.enable\": false`, you might not get semantic highlighting for e.g. Node built-in classes or require-imports.\r\n\r\nBut this is an objective improvement. Since these requests were being sent to our LSP anyway, we may as well give a best-effort response irrespective of `deno.enable`. Most things will work like `const` references in https://github.com/denoland/vscode_deno/issues/486#issue-963079667.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-10T11:20:10Z",
        "closed_at": "2023-09-10T12:07:00Z",
        "merged_at": "2023-09-10T12:07:00Z",
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n\r\nThis PR speeds up our test name escape function. Found this in #20438 . The most common scenario is that the name doesn't need to be escaped, so this PR optimizes for that. However, it turns out that the current implementation for escaping strings is pretty good, even better than I thought. Could only beat it for very short strings, but my approaches were slower for longer ones. So I decided to keep the current way for escaping. Since that's the uncommon case, it shouldn't matter much for performance anyway if we optimize that.\r\n\r\nWhen name doesn't need to be escaped:\r\n\r\n```sh\r\nbenchmark       time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n---------------------------------------------------------------- -----------------------------\r\nbefore       439.08 ns/iter   2,277,490.1 (434.48 ns \u2026 459.64 ns) 439.11 ns 448.88 ns 459.64 ns\r\nafter         12.32 ns/iter  81,192,975.9   (12.27 ns \u2026 15.54 ns)  12.29 ns   12.8 ns  13.39 ns\r\n```\r\n\r\nThere is a super tiny overhead for names that need escaping, but to me that seems worth it.\r\n\r\nWith name that needs escaping (250 chars):\r\n\r\n```sh\r\nbenchmark      time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n--------------------------------------------------------------- -----------------------------\r\nbefore          1.59 \u00b5s/iter     630,643.5     (1.57 \u00b5s \u2026 1.64 \u00b5s)   1.59 \u00b5s   1.64 \u00b5s   1.64 \u00b5s\r\nafter           1.65 \u00b5s/iter     606,076.1     (1.62 \u00b5s \u2026 1.69 \u00b5s)   1.66 \u00b5s   1.69 \u00b5s   1.69 \u00b5s\r\n```\r\n\r\nWith name that needs escaping (1000 chars):\r\n\r\n```sh\r\nbenchmark      time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n--------------------------------------------------------------- -----------------------------\r\nbefore          4.65 \u00b5s/iter     214,979.5     (4.61 \u00b5s \u2026 4.68 \u00b5s)   4.66 \u00b5s   4.68 \u00b5s   4.68 \u00b5s\r\nafter            4.7 \u00b5s/iter     212,613.8      (4.66 \u00b5s \u2026 4.8 \u00b5s)   4.72 \u00b5s    4.8 \u00b5s    4.8 \u00b5s\r\n```\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 167,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-09T18:49:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n\r\nThis PR speeds up test collection when the `--filter \"some-filter\"` argument is set. Before this PR we'd run load all JS/TS test files and run them, only to then realize that none of the tests in a file matched. If the user is supplying the `--filter` argument, then there is a very high likelihood that the number of ignored test files is higher than the ones the user cares about.\r\n\r\nSo this PR changes that behavior, so that during test collection we check if we can statically determine that the test file contains no tests that match the filter. If none match in a file, we skip running this file in the first place. If we cannot statically determine the name of a test for cases like `Deno.test(`foo ${something}`, ...)`, then we are forced to load this test file regardless.\r\n\r\nWith the reproduction case in #20384 I get the following numbers on my M1 Air:\r\n\r\n| What | Time |\r\n|---|--:|\r\n| main | 15.00s |\r\n| this PR | 0.09s |\r\n\r\nThat's roughly a **166x** speed up.\r\n\r\nBefore:\r\n\r\n\r\nhttps://github.com/denoland/deno/assets/1062408/99575140-eceb-4416-a793-205d586e48b5\r\n\r\nAfter:\r\n\r\n\r\nhttps://github.com/denoland/deno/assets/1062408/925207bd-1b47-4b97-88b4-53ed80a7dd37\r\n\r\nThis PR needs a couple of tests and I probably need help to make the code more \"rust-like\". Marking as draft for that reason.\r\n\r\nFixes #20384",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-09-09T18:23:00Z",
        "closed_at": "2023-09-12T10:55:26Z",
        "merged_at": "2023-09-12T10:55:26Z",
        "body": "### What\nSkip writing files from the template if the files already exist in the project directory.\n\n### Why\nWhen I run deno init in a directory that already has a main.ts, or one of the other template files, I usually want to initialize a workspace around a file I've started working in. A hard error in this case seems counter productive. An informational message about what's being skipped seems sufficient.\n\nClose #20433",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 117,
        "deletions": 78,
        "changed_files": 2,
        "created_at": "2023-09-09T05:25:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Implement lazy scheduling and avoid massive GC pressure from promises\r\n\r\nFixes https://github.com/denoland/deno/issues/20356",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 163,
        "deletions": 37,
        "changed_files": 8,
        "created_at": "2023-09-09T03:02:51Z",
        "closed_at": "2023-09-09T18:37:02Z",
        "merged_at": "2023-09-09T18:37:02Z",
        "body": "Fixes https://github.com/denoland/vscode_deno/issues/836.\r\n\r\nLSP testing APIs now obey the various file inclusion settings:\r\n- Modules shown in the text explorer now respect the `exclude`, `test.exclude` and `test.include` fields in `deno.json`, as well as `deno.enablePaths` in VSCode settings.\r\n- Modules with testing code lens now respect the `\"exclude\"`, `test.exclude` and `test.include` fields in `deno.json`. Code lens already respects `deno.enablePaths`.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-09-09T02:30:49Z",
        "closed_at": "2023-09-09T18:03:20Z",
        "merged_at": "2023-09-09T18:03:20Z",
        "body": "This allows us to opt in to extremely detailed tracing from dependency libraries, like so:\r\n\r\n```\r\ncargo run --features tracing/log,tracing/max_level_trace -- test --log-level=trace -A --unstable ./cli/tests/unit/serve_test.ts \r\n```\r\n\r\nIt will not impact normal operation as it requires the `tracing/max_level_trace` and `tracing/log` to be active. \r\n\r\nNote that tracing is already a dependency -- this just makes it a direct dep of cli so we can access its features more easily.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13415,
        "deletions": 9701,
        "changed_files": 23,
        "created_at": "2023-09-08T19:56:21Z",
        "closed_at": "2023-09-09T19:03:21Z",
        "merged_at": "2023-09-09T19:03:21Z",
        "body": "Without `using` declarations or decorator metadata (waiting for that in v8).\r\n\r\nhttps://github.com/denoland/TypeScript/pull/8\r\n\r\nFollow-up PR for `using` declarations: https://github.com/denoland/deno/pull/20506",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 52,
        "changed_files": 8,
        "created_at": "2023-09-08T17:44:20Z",
        "closed_at": "2023-09-08T18:34:58Z",
        "merged_at": "2023-09-08T18:34:58Z",
        "body": "Details: https://github.com/denoland/deno_lockfile/pull/8",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 283,
        "deletions": 241,
        "changed_files": 6,
        "created_at": "2023-09-08T16:51:09Z",
        "closed_at": "2023-09-09T14:04:22Z",
        "merged_at": "2023-09-09T14:04:22Z",
        "body": "Relands #20388, reverted in #20419.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-08T16:20:57Z",
        "closed_at": "2023-09-08T17:15:00Z",
        "merged_at": "2023-09-08T17:15:00Z",
        "body": "Closes #20413",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-09-08T15:58:32Z",
        "closed_at": "2023-09-08T16:38:43Z",
        "merged_at": "2023-09-08T16:38:43Z",
        "body": "Two bug fixes:\r\n\r\n* https://github.com/dprint/dprint-plugin-markdown/pull/85\r\n* https://github.com/dprint/dprint-plugin-markdown/pull/84",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 241,
        "deletions": 260,
        "changed_files": 5,
        "created_at": "2023-09-08T15:13:30Z",
        "closed_at": "2023-09-08T15:48:27Z",
        "merged_at": "2023-09-08T15:48:27Z",
        "body": "This reverts commit 4a11603c76b13ecf92ce3141ec317a42ae9f8d1d (#20388). \r\n\r\nTest failing on main on windows: https://github.com/denoland/deno/actions/runs/6115897398/job/16600239775.\r\n\r\nI know what's wrong with the test. Let's fix CI to run all tests on PR workflows and then I'll try to reland this.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-08T11:19:04Z",
        "closed_at": "2023-09-14T05:06:59Z",
        "merged_at": "2023-09-14T05:06:59Z",
        "body": "Fixes https://github.com/denoland/deno/issues/20414\r\n\r\n![image](https://github.com/denoland/deno/assets/26078826/cb0e5c36-64d7-41d2-b1a0-316c4783ef41)\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 856,
        "deletions": 553,
        "changed_files": 15,
        "created_at": "2023-09-08T06:03:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2023-09-08T02:06:06Z",
        "closed_at": "2023-09-08T11:47:58Z",
        "merged_at": "2023-09-08T11:47:58Z",
        "body": "Dead code, ref https://github.com/denoland/vscode_deno/issues/864#issuecomment-1710970751.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 39,
        "changed_files": 9,
        "created_at": "2023-09-07T20:49:01Z",
        "closed_at": "2023-09-08T14:04:45Z",
        "merged_at": "2023-09-08T14:04:45Z",
        "body": "Fixes #20393.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 188,
        "deletions": 167,
        "changed_files": 1,
        "created_at": "2023-09-07T17:23:50Z",
        "closed_at": "2023-09-07T19:19:20Z",
        "merged_at": "2023-09-07T19:19:20Z",
        "body": "Port as many of these ops as we can to `op2`. Waiting on a few `deno_core` updates to complete this file.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 57,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-07T16:41:43Z",
        "closed_at": "2023-09-07T17:13:11Z",
        "merged_at": "2023-09-07T17:13:11Z",
        "body": "Makes the prebuilt installation a bit more reliable:\r\n\r\n - Check for 200\r\n - Check for an executable header (MZ, ELF, etc)\r\n - Download to a .temp file until we're certain the file is valid\r\n - If multiple requests for a tool are made, only run one task",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 124,
        "deletions": 89,
        "changed_files": 5,
        "created_at": "2023-09-07T16:13:33Z",
        "closed_at": "2023-09-07T16:56:02Z",
        "merged_at": "2023-09-07T16:56:02Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-09-07T12:54:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "sendBeacon api implementation\r\nspec: https://w3c.github.io/beacon/#sendbeacon-method\r\nCloses https://github.com/denoland/deno/issues/14307",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2023-09-07T08:39:04Z",
        "closed_at": "2023-09-08T15:20:29Z",
        "merged_at": "2023-09-08T15:20:29Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-09-07T05:46:54Z",
        "closed_at": "2023-09-07T07:07:04Z",
        "merged_at": "2023-09-07T07:07:04Z",
        "body": "Keys are expensive metadata. We track it for various purposes, e.g. transaction conflict check, and key expiration.\r\n\r\nThis patch limits the total key size in an atomic operation to 80 KiB (81920 bytes). This helps ensure efficiency in implementations.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2023-09-06T07:37:22Z",
        "closed_at": "2023-09-06T16:07:37Z",
        "merged_at": "2023-09-06T16:07:37Z",
        "body": "Fixes https://github.com/denoland/vscode_deno/issues/909.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 260,
        "deletions": 241,
        "changed_files": 5,
        "created_at": "2023-09-06T07:10:34Z",
        "closed_at": "2023-09-07T23:50:34Z",
        "merged_at": "2023-09-07T23:50:34Z",
        "body": "Previously we pre-computed enabled paths into `Config::enabled_paths`, and had to keep updating it. Now we determine enabled paths directly from `Config::settings` on demand as a single source of truth.\r\n\r\nRemoves `Config::root_uri`. If `InitializeParams::rootUri` is given, and it doesn't correspond to a folder in `InitializeParams::workspaceFolders`, prepend it to `Config::workspace_folders` as a mocked folder.\r\n\r\nIncludes groundwork for https://github.com/denoland/vscode_deno/issues/908. In a minor version cycle or two we can fix that in vscode_deno, and it won't break for Deno versions post this patch due to the corrected deserialization logic for `enablePaths`.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 500,
        "deletions": 81,
        "changed_files": 9,
        "created_at": "2023-09-05T23:58:00Z",
        "closed_at": "2023-09-12T00:06:39Z",
        "merged_at": "2023-09-12T00:06:39Z",
        "body": "This PR implements a graceful shutdown API for Deno.serve, allowing all current connections to drain from the server before shutting down, while preventing new connections from being started or new transactions on existing connections from being created.\r\n\r\nWe split the cancellation handle into two parts: a listener handle, and a connection handle. A graceful shutdown cancels the listener only, while allowing the connections to drain. The connection handle aborts all futures. If the listener handle is cancelled, we put the connections into graceful shutdown mode, which disables keep-alive on http/1.1 and uses http/2 mechanisms for http/2 connections.\r\n\r\nIn addition, we now guarantee that all connections are complete or cancelled, and all resources are cleaned up when the server `finished` promise resolves -- we use a Rust-side server refcount for this.\r\n\r\nPerformance impact: does not appear to affect basic serving performance by more than 1% (~126k -> ~125k)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-05T19:43:22Z",
        "closed_at": "2023-09-06T04:07:55Z",
        "merged_at": "2023-09-06T04:07:55Z",
        "body": "<!--\nBefore submitting a PR, please read https://deno.com/manual/contributing\n\n1. Give the PR a descriptive title.\n\n  Examples of good title:\n    - fix(std/http): Fix race condition in server\n    - docs(console): Update docstrings\n    - feat(doc): Handle nested reexports\n\n  Examples of bad title:\n    - fix #7123\n    - update docs\n    - fix bugs\n\n2. Ensure there is a related issue and it is referenced in the PR text.\n3. Ensure there are tests that cover the changes.\n4. Ensure `cargo test` passes.\n5. Ensure `./tools/format.js` passes without changing files.\n6. Ensure `./tools/lint.js` passes.\n7. Open as a draft PR if your work is still in progress. The CI won't run\n   all steps, but you can add '[ci]' to a commit message to force it to.\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\n-->\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2023-09-05T16:46:56Z",
        "closed_at": "2023-09-06T12:54:22Z",
        "merged_at": "2023-09-06T12:54:22Z",
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\nNoticed that when running `deno test --filter <filter>` that the output is a little noisy. Test suites that are filtered out were logged to the console as \"running\" despite 0 tests being run. So this PR stops printing that line.\r\n\r\nBefore:\r\n\r\n<img width=\"799\" alt=\"Screenshot 2023-09-05 at 18 35 45\" src=\"https://github.com/denoland/deno/assets/1062408/a5683f97-5228-4b79-a39f-81c4b7f8f5fc\">\r\n\r\nAfter:\r\n\r\n<img width=\"815\" alt=\"Screenshot 2023-09-05 at 18 45 54\" src=\"https://github.com/denoland/deno/assets/1062408/f284ca29-1331-473d-a5fc-2e5bb98102cf\">\r\n\r\n\r\nOf note is that the summary line still shows the number of tests that have been filtered out. That hasn't changed with this PR.\r\n\r\n<img width=\"616\" alt=\"Screenshot 2023-09-05 at 18 48 13\" src=\"https://github.com/denoland/deno/assets/1062408/78dfd3ce-e108-4bf7-a9ff-67e087f295fc\">\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-09-05T10:53:23Z",
        "closed_at": "2023-09-05T17:08:06Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 64,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-09-05T06:50:00Z",
        "closed_at": "2023-09-05T10:42:35Z",
        "merged_at": "2023-09-05T10:42:35Z",
        "body": "\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n- [x] 1. Give the PR a descriptive title.\r\n\r\n- [x] 2. Ensure there is a related issue and it is referenced in the PR text.\r\n- [x] 3. Ensure there are tests that cover the changes.\r\n- [x] 4. Ensure `cargo test` passes.\r\n- [x] 5. Ensure `./tools/format.js` passes without changing files.\r\n- [x] 6. Ensure `./tools/lint.js` passes.\r\n- [x] 7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n- [ ] 8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n\r\n\r\nfix #20373",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-04T22:49:37Z",
        "closed_at": "2023-09-05T10:12:17Z",
        "merged_at": null,
        "body": "Closes https://github.com/denoland/deno/issues/20373",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 14,
        "changed_files": 4,
        "created_at": "2023-09-04T09:56:12Z",
        "closed_at": "2023-09-04T21:05:06Z",
        "merged_at": "2023-09-04T21:05:06Z",
        "body": "This reverts commit https://github.com/denoland/deno/commit/83426be6eead06c680ae527468aeaf8723543ff2.\r\n\r\nIncludes a regression test.\r\n\r\nCloses https://github.com/denoland/deno/issues/20367",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 109097,
        "deletions": 27,
        "changed_files": 10,
        "created_at": "2023-09-04T03:59:07Z",
        "closed_at": "2023-09-06T05:31:50Z",
        "merged_at": "2023-09-06T05:31:50Z",
        "body": "Adds support for AES-GCM 128/256 bit keys in `node:crypto` and `setAAD()`, `setAuthTag()` and `getAuthTag()`\r\n\r\nUses https://github.com/littledivy/aead-gcm-stream\r\n\r\nFixes https://github.com/denoland/deno/issues/19836 https://github.com/denoland/deno/issues/20353",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-03T22:40:56Z",
        "closed_at": "2023-09-04T10:33:16Z",
        "merged_at": "2023-09-04T10:33:16Z",
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n\r\nWhen trying to run\r\n```\r\ndeno run -A --unstable npm:astro dev\r\n```\r\nin my Astro project it fails with:\r\n```\r\nNode.js v18.12.1 is not supported by Astro!\r\nPlease upgrade Node.js to a supported version: \">=18.14.1\"\r\n```\r\nMy current version is:\r\n```\r\n~ \u276f node --version\r\nv20.5.1\r\n```\r\n\r\nBumping the version to the latest stable Release of node in `ext/node/polyfills/_process/process.ts` fixes this.\r\nI don't know if this causes any conflicts, so please feel free to correct me here.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 535,
        "deletions": 308,
        "changed_files": 6,
        "created_at": "2023-09-03T19:07:43Z",
        "closed_at": "2023-09-06T12:17:33Z",
        "merged_at": "2023-09-06T12:17:33Z",
        "body": "Closes https://github.com/denoland/deno/issues/17106\r\n\r\n@marvinhagemeister would you be interested in adding proper\r\nTS typings in `lib.deno.ns.d.ts`?",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 111,
        "deletions": 16,
        "changed_files": 4,
        "created_at": "2023-09-02T05:14:50Z",
        "closed_at": "2023-09-02T15:36:04Z",
        "merged_at": "2023-09-02T15:36:04Z",
        "body": "Fixes #19802.\r\n\r\nProperly respect when clients do not have the `workspace/configuration` capability, a.k.a. when an editor cannot provide scoped settings on request from the LSP.\r\n\r\n- Fix one spot where we weren't checking for the capability before sending this request.\r\n- For `enablePaths`, fall back to the settings passed in the initialization options in more cases.\r\n- Respect the `workspace/configuration` capability in the test harness client.\r\n\r\nSee: https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspace_configuration.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-02T03:43:39Z",
        "closed_at": "2023-09-03T04:39:15Z",
        "merged_at": "2023-09-03T04:39:15Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 100,
        "deletions": 74,
        "changed_files": 29,
        "created_at": "2023-09-01T16:44:07Z",
        "closed_at": "2023-09-01T18:08:58Z",
        "merged_at": "2023-09-01T18:08:58Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-01T14:44:57Z",
        "closed_at": "2023-09-01T16:41:35Z",
        "merged_at": "2023-09-01T16:41:35Z",
        "body": "`cargo publish` for v1.36.4 failed due to missing `serde` feature on `uuid` dependency.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 53,
        "deletions": 24,
        "changed_files": 9,
        "created_at": "2023-09-01T13:56:28Z",
        "closed_at": "2023-09-01T20:13:13Z",
        "merged_at": "2023-09-01T20:13:13Z",
        "body": "Refs:\r\n- https://github.com/denoland/deno/pull/20334\r\n- https://github.com/denoland/deno/actions/runs/6047722006/job/16411706360\r\n- https://github.com/denoland/deno/pull/20347\r\n- https://github.com/denoland/deno_config/pull/6\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 102,
        "deletions": 76,
        "changed_files": 30,
        "created_at": "2023-09-01T12:39:16Z",
        "closed_at": "2023-09-01T14:15:50Z",
        "merged_at": "2023-09-01T14:15:50Z",
        "body": "Bumped versions for 1.36.4\n\nPlease ensure:\n- [x] Target branch is correct (`vX.XX` if a patch release, `main` if minor)\n- [x] Crate versions are bumped correctly\n- [x] deno_std version is incremented in the code (see `cli/deno_std.rs`)\n- [x] Releases.md is updated correctly (think relevancy and remove reverts)\n\nTo make edits to this PR:\n```shell\ngit fetch upstream release_1_36.4 && git checkout -b release_1_36.4 upstream/release_1_36.4\n```\n\ncc @littledivy",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 47,
        "changed_files": 5,
        "created_at": "2023-09-01T11:29:48Z",
        "closed_at": "2023-09-01T12:01:20Z",
        "merged_at": "2023-09-01T12:01:20Z",
        "body": "This reverts commit c0dcf6a3571ee04b4826c52d1329804e7c2b02c4.\r\n\r\nCC @nayeemrmn ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 9,
        "changed_files": 5,
        "created_at": "2023-09-01T10:10:30Z",
        "closed_at": "2023-09-01T14:27:06Z",
        "merged_at": null,
        "body": "Update \"deno_config\" to 0.2.2 and remove dependency on \"indexmap\" 1.X where applicable.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 114,
        "changed_files": 3,
        "created_at": "2023-09-01T09:23:47Z",
        "closed_at": "2023-09-04T21:23:02Z",
        "merged_at": "2023-09-04T21:23:02Z",
        "body": "\u2026d of `Transfer-Encoding: chunked` (#20127)\"\r\n\r\nThis reverts commit c2547ba039096d2f8e07a2fd89360956ac94014a.\r\n\r\nAfter merging that PR there's quite a lot of flakiness in Node compat tests that\r\nfail like so:\r\n```\r\nNode.js compatibility ... Node.js compatibility \"parallel/test-http-content-length.js\" => ./cli/tests/node_compat/test.ts:58:11\r\nerror: AssertionError: Failed assertion: \"parallel/test-http-content-length.js\" failed:\r\n\r\nerror: Uncaught (in promise) TypeError: error sending request for url (http://localhost:50029/multiple-writes): connection error: Connection reset by peer (os error 54)\r\n    at async Promise.all (index 0)\r\n    at async node:http:432:26\r\n\r\n\r\nYou can repeat only this test with the command:\r\n\r\n  ./target/debug/deno test -A cli/tests/node_compat/test.ts -- parallel/test-http-content-length.js\r\n\r\n    throw new AssertionError(msg);\r\n          ^\r\n    at assert (file:///Users/runner/work/deno/deno/test_util/std/testing/asserts.ts:141:11)\r\n    at fail (file:///Users/runner/work/deno/deno/test_util/std/testing/asserts.ts:602:3)\r\n    at fn (file:///Users/runner/work/deno/deno/cli/tests/node_compat/test.ts:122:9)\r\n    at eventLoopTick (ext:core/01_core.js:183:11)\r\n    at async innerWrapped (ext:cli/40_testing.js:483:5)\r\n    at async Object.outerWrapped [as fn] (ext:cli/40_testing.js:428:14)\r\n    at async TestContext.step (ext:cli/40_testing.js:1241:22)\r\n    at async runTest (file:///Users/runner/work/deno/deno/cli/tests/node_compat/test.ts:58:3)\r\n    at async file:///Users/runner/work/deno/deno/test_util/std/async/pool.ts:76:11\r\n\r\n FAILURES \r\n\r\nNode.js compatibility ... Node.js compatibility \"parallel/test-http-content-length.js\" => ./cli/tests/node_compat/test.ts:58:11\r\n\r\n```\r\n\r\nCC @osddeitf ",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 433,
        "deletions": 224,
        "changed_files": 61,
        "created_at": "2023-08-31T22:01:55Z",
        "closed_at": "2023-09-07T13:09:17Z",
        "merged_at": "2023-09-07T13:09:17Z",
        "body": "Upgrades to deno_ast 0.29.\r\n\r\nNo idea if these tests will pass because I can't run the test suite locally.\r\n\r\nCloses #20294\r\nCloses #20345",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-08-31T20:14:46Z",
        "closed_at": "2023-09-04T00:47:53Z",
        "merged_at": "2023-09-04T00:47:53Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-08-31T19:09:38Z",
        "closed_at": "2023-08-31T19:56:25Z",
        "merged_at": "2023-08-31T19:56:25Z",
        "body": "Adds import attributes support.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2364,
        "deletions": 106,
        "changed_files": 18,
        "created_at": "2023-08-31T16:05:26Z",
        "closed_at": "2023-09-16T00:42:10Z",
        "merged_at": "2023-09-16T00:42:10Z",
        "body": "This is https://github.com/denoland/deno/pull/13122 rebased against `main`.\r\n\r\nCloses https://github.com/denoland/deno/issues/13016",
        "comments": 45
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 16,
        "changed_files": 5,
        "created_at": "2023-08-31T02:45:04Z",
        "closed_at": "2023-08-31T18:10:09Z",
        "merged_at": "2023-08-31T18:10:09Z",
        "body": "With https://github.com/denoland/vscode_deno/pull/902 for https://github.com/denoland/vscode_deno/issues/880.\r\n\r\nFor multi-folder workspaces, note that this only scans the first one and applies the result to all. That means users would have to still have to specify `\"deno.enable\": true/false` for their secondary folders if the preference is different for those.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2023-08-30T16:59:49Z",
        "closed_at": "2023-08-30T19:45:47Z",
        "merged_at": "2023-08-30T19:45:47Z",
        "body": "rusty_v8 -> \"0.75.1\"\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2023-08-30T12:02:11Z",
        "closed_at": "2023-08-31T12:56:26Z",
        "merged_at": "2023-08-31T12:56:26Z",
        "body": "As per https://github.com/WICG/webcrypto-secure-curves/pull/24 this removes the check for Ed25519 JWK `alg` during importKey and removes the `alg` for Ed25519 keys during JWK exportKey.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 820,
        "deletions": 646,
        "changed_files": 5,
        "created_at": "2023-08-30T03:17:38Z",
        "closed_at": "2023-08-30T15:31:32Z",
        "merged_at": "2023-08-30T15:31:32Z",
        "body": "Previously:\r\n```rust\r\npub struct TestDefinition {\r\n  pub id: String,\r\n  pub name: String,\r\n  pub range: SourceRange,\r\n  pub steps: Vec<TestDefinition>,\r\n}\r\n\r\npub struct TestDefinitions {\r\n  pub discovered: Vec<TestDefinition>,\r\n  pub injected: Vec<lsp_custom::TestData>,\r\n  pub script_version: String,\r\n}\r\n```\r\nNow:\r\n```rust\r\npub struct TestDefinition {\r\n  pub id: String,\r\n  pub name: String,\r\n  pub range: Option<Range>,\r\n  pub is_dynamic: bool, // True for 'injected' module, not statically detected but added at runtime.\r\n  pub parent_id: Option<String>,\r\n  pub step_ids: HashSet<String>,\r\n}\r\n\r\npub struct TestModule {\r\n  pub specifier: ModuleSpecifier,\r\n  pub script_version: String,\r\n  pub defs: HashMap<String, TestDefinition>,\r\n}\r\n```\r\n\r\nStoring the test tree as a literal tree diminishes the value of IDs, even though vscode stores them that way. This makes all data easily accessible from `TestModule`. It unifies the interface between 'discovered' and 'injected' tests. This unblocks some enhancements wrt syncing tests between the LSP and extension, such as this TODO: https://github.com/denoland/vscode_deno/blob/61f08d5a71536a0a5f7dce965955b09e6bd957e1/client/src/testing.ts#L251-L259 and https://github.com/denoland/vscode_deno/issues/900. We should also get more flexibility overall.\r\n\r\n`TestCollector` is cleaned up, now stores a `&mut TestModule` directly and registers tests as it comes across them with `TestModule::register()`. This method ensures sanity in the redundant data from having both of `TestDefinition::{parent_id,step_ids}`.\r\n\r\nAll of the messy conversions between `TestDescription`, `LspTestDescription`, `TestDefinition`, `TestData` and `TestIdentifier` are cleaned up. They shouldn't have been using `impl From` and now the full list of tests is available to their implementations.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 72,
        "deletions": 3,
        "changed_files": 11,
        "created_at": "2023-08-29T15:58:22Z",
        "closed_at": "2023-09-18T20:02:58Z",
        "merged_at": "2023-09-18T20:02:58Z",
        "body": "fix #20302 \r\n\r\n\r\n\r\n<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-29T15:52:55Z",
        "closed_at": "2023-08-29T16:24:19Z",
        "merged_at": "2023-08-29T16:24:19Z",
        "body": "I was just looking into if there was a way to extract out the file fetcher construction (going to punt on that), but then noticed this was missing. The code for how we need to recreate lsp structs is very error prone at the moment. We need to redesign it eventually.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 50,
        "changed_files": 4,
        "created_at": "2023-08-29T14:33:16Z",
        "closed_at": "2023-08-29T19:58:56Z",
        "merged_at": "2023-08-29T19:58:56Z",
        "body": "- Don't include benchmark file - most people won't need this.\n- Use deno.json instead of deno.jsonc, because it's a more common file\n  format.\n\n<!--\nBefore submitting a PR, please read https://deno.com/manual/contributing\n\n1. Give the PR a descriptive title.\n\n  Examples of good title:\n    - fix(std/http): Fix race condition in server\n    - docs(console): Update docstrings\n    - feat(doc): Handle nested reexports\n\n  Examples of bad title:\n    - fix #7123\n    - update docs\n    - fix bugs\n\n2. Ensure there is a related issue and it is referenced in the PR text.\n3. Ensure there are tests that cover the changes.\n4. Ensure `cargo test` passes.\n5. Ensure `./tools/format.js` passes without changing files.\n6. Ensure `./tools/lint.js` passes.\n7. Open as a draft PR if your work is still in progress. The CI won't run\n   all steps, but you can add '[ci]' to a commit message to force it to.\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\n-->\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-29T13:39:40Z",
        "closed_at": "2023-08-30T03:34:56Z",
        "merged_at": "2023-08-30T03:34:56Z",
        "body": "Ref https://github.com/denoland/deno/issues/20072",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-29T00:29:01Z",
        "closed_at": "2023-08-29T08:43:11Z",
        "merged_at": "2023-08-29T08:43:11Z",
        "body": "Fixes https://github.com/denoland/vscode_deno/issues/899.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 1,
        "changed_files": 7,
        "created_at": "2023-08-28T23:18:23Z",
        "closed_at": "2023-08-29T19:02:55Z",
        "merged_at": "2023-08-29T19:02:55Z",
        "body": "We never want tests to hit the real npm registry because this causes test flakes. In addition, we set a sentinal \"unset\" value for `NPM_CONFIG_REGISTRY` to ensure that all tests requiring npm go through the test server.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2023-08-28T20:42:56Z",
        "closed_at": "2023-08-29T18:24:44Z",
        "merged_at": "2023-08-29T18:24:44Z",
        "body": "fixes #20312",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 103,
        "deletions": 22,
        "changed_files": 3,
        "created_at": "2023-08-28T18:30:17Z",
        "closed_at": "2023-08-28T19:29:35Z",
        "merged_at": "2023-08-28T19:29:35Z",
        "body": "When a TCP connection is force-closed (ie: browser refresh), the underlying future we pass to Hyper is dropped which may cause us to try to drop the body resource while the OpState lock is still held.\r\n\r\nPreconditions for this bug to trigger:\r\n\r\n - The body resource must have been taken\r\n - The response must return a resource (which requires us to take the OpState lock)\r\n - The TCP connection must have been dropped before this\r\n\r\nFixes #20315 and #20298",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 73,
        "deletions": 38,
        "changed_files": 2,
        "created_at": "2023-08-28T15:47:05Z",
        "closed_at": "2023-08-28T21:28:40Z",
        "merged_at": "2023-08-28T21:28:39Z",
        "body": "The fix for #20188 was not entirely correct -- we were unlocking the global buffer incorrectly. This PR introduces a lock state that ensures we only unlock a lock we have taken out.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 46,
        "changed_files": 1,
        "created_at": "2023-08-28T14:48:55Z",
        "closed_at": "2023-08-28T19:45:56Z",
        "merged_at": null,
        "body": "Ref https://github.com/denoland/deno/pull/20223#discussion_r1307167591\r\n\r\nFixes https://github.com/denoland/deno/issues/19831\r\n\r\nReverts:\r\n - https://github.com/denoland/deno/pull/19678\r\n - https://github.com/denoland/deno/pull/20223",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-28T12:36:45Z",
        "closed_at": "2023-08-28T15:07:23Z",
        "merged_at": "2023-08-28T15:07:23Z",
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\nI got annoyed by having to manually delete the automatically inserted completions and tracked the behaviour down to a single line in the lsp code. Played around with the fix enabled for a while this morning in vscode and didn't run into any downsides to this change. Quite the opposite actually, it makes the integration much nicer to use.\r\n\r\nFixes https://github.com/denoland/deno/issues/20160",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-08-28T11:50:14Z",
        "closed_at": "2023-08-28T12:28:06Z",
        "merged_at": "2023-08-28T12:28:06Z",
        "body": "Let's wait for 1.37 before merging this one.\r\n\r\nCloses #20309",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2023-08-28T09:19:57Z",
        "closed_at": null,
        "merged_at": null,
        "body": "These errors shouldn't have enumerable `toString` properties.\r\n\r\nThe implementation is identical to the inherited from `NodeErrorAbstraction`, so overrides look redundant.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-08-28T08:38:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR adds `webkitRelativePath` property to `File` interface.\r\n\r\n- MDN https://developer.mozilla.org/en-US/docs/Web/API/File/webkitRelativePath\r\n- spec https://wicg.github.io/entries-api/#file-interface\r\n  - See also https://github.com/WICG/entries-api/issues/42\r\n- lib.dom already has this https://github.com/denoland/deno/blob/c2547ba039096d2f8e07a2fd89360956ac94014a/cli/tsc/dts/lib.dom.d.ts#L8226C8-L8226C8\r\n- There's WPT case https://github.com/web-platform-tests/wpt/blob/99995985f35d81a4c929464ae43151996b001d0a/entries-api/file-webkitRelativePath-manual.html#L27",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-08-28T07:04:53Z",
        "closed_at": "2023-08-29T03:18:25Z",
        "merged_at": "2023-08-29T03:18:25Z",
        "body": "closes #18305\r\n\r\nThis PR fixes `process.argv[1]` in Worker context.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-08-27T15:22:38Z",
        "closed_at": "2023-08-27T20:22:23Z",
        "merged_at": "2023-08-27T20:22:23Z",
        "body": "https://github.com/denoland/deno/actions/runs/5990043261/job/16246927846?pr=18642\r\n\r\nThe test is just `b.start(); b.end()` where the time measured between must be less 10 \u03bcs during warmup. Can't improve it.\r\nAlso fixes doc mistake.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2023-08-27T11:52:58Z",
        "closed_at": "2023-09-02T06:48:21Z",
        "merged_at": "2023-09-02T06:48:21Z",
        "body": "Rewrites 3 ops that used \"op(deferred)\" to use \"op2(async(lazy))\" instead.\r\nThis will allow us to remove codepath for handling \"deferred\" ops in \"deno_core\".",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 30,
        "changed_files": 2,
        "created_at": "2023-08-27T01:41:32Z",
        "closed_at": "2023-09-08T03:41:33Z",
        "merged_at": "2023-09-08T03:41:33Z",
        "body": "See issue https://github.com/denoland/deno/issues/19816\r\n\r\nIn that issue, I suggest switching over the other brotli functionality to the Rust API provided by the `brotli` crate. Here, I only do that with the `brotli_decompress` function to fix the bug with buffers longer than 4096 bytes.\r\n\r\nA good follow-up might be to repeat this change throughout the rest of the module. That will involve some actual work though, because the Node.js Brotli API is presumably based on the C `google/brotli` API, so an adapter layer in this module to map a Node.js Brotli API to the Rust API would end up being a little more complicated.\r\n\r\n<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 110,
        "deletions": 4,
        "changed_files": 9,
        "created_at": "2023-08-27T00:44:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This change adds the `--env=[FILE]` flag to the `run`, `compile`, `eval`, `install` and `repl` subcommands. Environment variables set in the CLI overwrite those defined in the `.env` file.",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 123,
        "deletions": 197,
        "changed_files": 7,
        "created_at": "2023-08-26T21:46:15Z",
        "closed_at": "2023-08-28T21:30:46Z",
        "merged_at": "2023-08-28T21:30:46Z",
        "body": "Adds `runtime/shared.rs` which is imported by both `build.rs` and the rest of the crate, containing utilities used by both.\r\nRenames the `snapshot_from_snapshot` feature to `exclude_runtime_main_js` since that's what it does and it's relevant outside of snapshotting when `__runtime_js_sources` is specified.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 171,
        "deletions": 134,
        "changed_files": 4,
        "created_at": "2023-08-26T17:53:35Z",
        "closed_at": "2023-08-27T09:16:10Z",
        "merged_at": "2023-08-27T09:16:10Z",
        "body": "Fixes https://github.com/denoland/vscode_deno/issues/656.\r\n\r\nTest steps were ID'd by a checksum of `[origin, level, step_name]` which is incorrect.\r\nNow it's `[origin, ...ancestor_names, step_name]`.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 101,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2023-08-26T17:44:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Currently a POC. Rewrite `urlpattern::quirks` in JS to avoid Rust<->JS trips.\r\n\r\n2.5x faster in simple pathname matching.\r\n\r\n```\r\nbenchmark       time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n---------------------------------------------------------------- -----------------------------\r\nURLPattern      3.11 \u00b5s/iter      321,443.2      (3.05 \u00b5s \u2026 3.49 \u00b5s)    3.11 \u00b5s   3.49 \u00b5s   3.49 \u00b5s\r\nURLPattern      1.24 \u00b5s/iter     803,437.8      (1.23 \u00b5s \u2026 1.3 \u00b5s)       1.25 \u00b5s    1.3 \u00b5s    1.3 \u00b5s\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 172,
        "deletions": 110,
        "changed_files": 2,
        "created_at": "2023-08-25T18:22:48Z",
        "closed_at": "2023-08-25T21:32:22Z",
        "merged_at": "2023-08-25T21:32:22Z",
        "body": "Fixes https://github.com/denoland/vscode_deno/issues/843.\r\n\r\nPrevents step results from being reported twice. Refactors `LspTestReporter` to use a complete `(test_id, descriptor)` map instead of a brittle `LspTestReporter::stack`.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 27,
        "changed_files": 4,
        "created_at": "2023-08-25T17:08:03Z",
        "closed_at": "2023-08-25T17:40:21Z",
        "merged_at": "2023-08-25T17:40:21Z",
        "body": "This fully removes the `atty` crate from deno by bumping `env_logger` and removing the now-unused `atty` dep for runtime.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 389,
        "deletions": 138,
        "changed_files": 5,
        "created_at": "2023-08-25T16:28:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Closes https://github.com/denoland/deno/issues/14064\r\nAdded unstable `upgradeWebSocketStream` to enable server-side `WebSocketStream` usage. I took some inspiration from https://github.com/denoland/deno/pull/16732, which seemed to have gone stale and had some issues. Idle timeout (ping interval) didn't work as `[_serverHandleIdleTimeout]` was never called, and op calls were outdated.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-25T16:12:06Z",
        "closed_at": "2023-08-25T16:46:19Z",
        "merged_at": "2023-08-25T16:46:19Z",
        "body": "\r\nReference from the FreeBSD port\r\nhttps://github.com/freebsd/freebsd-ports/blob/3afa24c6e301832f76304bb55f4e9ee72858c254/www/deno/files/patch-ext_node_ops_os.rs\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 47,
        "changed_files": 5,
        "created_at": "2023-08-25T16:11:51Z",
        "closed_at": "2023-08-25T21:40:26Z",
        "merged_at": "2023-08-25T21:40:26Z",
        "body": "This removes a webpki version that was showing up as vulnerable to https://github.com/briansmith/webpki/issues/69.\r\n\r\nNeeded to upgrade `reqwest` as part of this.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-25T05:26:03Z",
        "closed_at": "2023-08-26T05:15:37Z",
        "merged_at": "2023-08-26T05:15:37Z",
        "body": "Fixes https://github.com/denoland/deno/issues/19002",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2023-08-25T00:11:54Z",
        "closed_at": "2023-08-25T09:12:11Z",
        "merged_at": "2023-08-25T09:12:11Z",
        "body": "Fixes https://github.com/denoland/vscode_deno/issues/890.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2023-08-25T00:10:28Z",
        "closed_at": "2023-09-01T09:21:24Z",
        "merged_at": "2023-09-01T09:21:24Z",
        "body": "`getpriority` and `setpriority` on musl libc accepts `int` / `c_int` / `i32` as the first argument, not `u32`.\r\n\r\nSince the `PRIO_PROCESS` constant is imported from the same crate (libc) as the `getpriority` and `setpriority` functions, this type cast seems to be completely unnecessary here.\r\n\r\nIt was introduced in aa8078b6888ee4d55ef348e336e076676dffc25f by @crowlKats.\r\n\r\nRelevant sources:\r\n\r\n- https://github.com/rust-lang/libc/blob/835661543db1ec42a6d9a809d69c3c5b5b978b81/src/unix/linux_like/linux/musl/mod.rs#L739-L740\r\n- https://git.musl-libc.org/cgit/musl/tree/src/misc/setpriority.c\r\n- https://git.musl-libc.org/cgit/musl/tree/src/misc/getpriority.c",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 39,
        "changed_files": 10,
        "created_at": "2023-08-24T18:46:52Z",
        "closed_at": "2023-08-25T13:43:07Z",
        "merged_at": "2023-08-25T13:43:07Z",
        "body": "Removes a crate with an outstanding vulnerability.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-24T16:57:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\nBefore submitting a PR, please read https://deno.com/manual/contributing\n\n1. Give the PR a descriptive title.\n\n  Examples of good title:\n    - fix(std/http): Fix race condition in server\n    - docs(console): Update docstrings\n    - feat(doc): Handle nested reexports\n\n  Examples of bad title:\n    - fix #7123\n    - update docs\n    - fix bugs\n\n2. Ensure there is a related issue and it is referenced in the PR text.\n3. Ensure there are tests that cover the changes.\n4. Ensure `cargo test` passes.\n5. Ensure `./tools/format.js` passes without changing files.\n6. Ensure `./tools/lint.js` passes.\n7. Open as a draft PR if your work is still in progress. The CI won't run\n   all steps, but you can add '[ci]' to a commit message to force it to.\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\n-->\n\nFixes #20154",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 5,
        "changed_files": 7,
        "created_at": "2023-08-24T16:39:58Z",
        "closed_at": "2023-08-26T09:29:45Z",
        "merged_at": "2023-08-26T09:29:45Z",
        "body": "Addresses https://discord.com/channels/684898665143206084/688040863313428503/1143302080602325064.\r\n\r\nDisables `BenchContext::start()` and `BenchContext::end()` for low precision benchmarks (less than 0.01s per iteration). Prints a warning when they are used in such benchmarks, suggesting to remove them.\r\n\r\n```ts\r\nDeno.bench(\"noop\", { group: \"noops\" }, () => {});\r\n\r\nDeno.bench(\"noop with start/end\", { group: \"noops\" }, (b) => {\r\n  b.start();\r\n  b.end();\r\n});\r\n```\r\n\r\nBefore:\r\n```\r\ncpu: 12th Gen Intel(R) Core(TM) i9-12900K\r\nruntime: deno 1.36.2 (x86_64-unknown-linux-gnu)\r\n\r\nfile:///home/nayeem/projects/deno/temp3.ts\r\nbenchmark                    time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------------------- -----------------------------\r\n\r\n\r\nnoop                          2.63 ns/iter 380,674,131.4    (2.45 ns \u2026 27.78 ns)   2.55 ns   4.03 ns   5.33 ns\r\nnoop with start and end     302.47 ns/iter   3,306,146.0     (200 ns \u2026 151.2 \u00b5s)    300 ns    400 ns    400 ns\r\n\r\nsummary\r\n  noop\r\n   115.14x faster than noop with start and end\r\n```\r\n\r\nAfter:\r\n```\r\ncpu: 12th Gen Intel(R) Core(TM) i9-12900K\r\nruntime: deno 1.36.1 (x86_64-unknown-linux-gnu)\r\n\r\nfile:///home/nayeem/projects/deno/temp3.ts\r\nbenchmark                    time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------------------- -----------------------------\r\n\r\n\r\nnoop                          3.01 ns/iter 332,565,561.7    (2.73 ns \u2026 29.54 ns)   2.93 ns   5.29 ns   7.45 ns\r\nnoop with start and end       7.73 ns/iter 129,291,091.5    (6.61 ns \u2026 46.76 ns)   7.87 ns  13.12 ns  15.32 ns\r\nWarning: start() and end() calls in \"noop with start and end\" are ignored because it averages less\r\nthan 0.01s per iteration. Remove them for better results.\r\n\r\nsummary\r\n  noop\r\n   2.57x faster than noop with start and end\r\n```",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 128,
        "deletions": 74,
        "changed_files": 29,
        "created_at": "2023-08-24T16:19:05Z",
        "closed_at": "2023-08-24T17:53:02Z",
        "merged_at": "2023-08-24T17:53:02Z",
        "body": "**THIS PR HAS GIT CONFLICTS THAT MUST BE RESOLVED**\n\nThis is the release commit being forwarded back to main for 1.36.3\n\nPlease ensure:\n- [x] Everything looks ok in the PR\n- [x] The release has been published\n\nTo make edits to this PR:\n```shell\ngit fetch upstream forward_v1.36.3 && git checkout -b forward_v1.36.3 upstream/forward_v1.36.3\n```\n\nDon't need this PR? Close it.\n\ncc @mmastrac",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 84,
        "deletions": 74,
        "changed_files": 29,
        "created_at": "2023-08-24T15:58:35Z",
        "closed_at": "2023-08-24T16:01:52Z",
        "merged_at": "2023-08-24T16:01:52Z",
        "body": "Bumped versions for 1.36.3\n\nPlease ensure:\n- [x] Target branch is correct (`vX.XX` if a patch release, `main` if minor)\n- [x] Crate versions are bumped correctly\n- [x] deno_std version is incremented in the code (see `cli/deno_std.rs`)\n- [x] Releases.md is updated correctly (think relevancy and remove reverts)\n\nTo make edits to this PR:\n```shell\ngit fetch upstream release_1_36.3 && git checkout -b release_1_36.3 upstream/release_1_36.3\n```\n\ncc @mmastrac",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 123,
        "deletions": 74,
        "changed_files": 29,
        "created_at": "2023-08-24T15:55:15Z",
        "closed_at": "2023-08-24T15:57:07Z",
        "merged_at": null,
        "body": "Bumped versions for 1.36.2\n\nPlease ensure:\n- [x] Target branch is correct (`vX.XX` if a patch release, `main` if minor)\n- [ ] Crate versions are bumped correctly\n- [ ] deno_std version is incremented in the code (see `cli/deno_std.rs`)\n- [ ] Releases.md is updated correctly (think relevancy and remove reverts)\n\nTo make edits to this PR:\n```shell\ngit fetch upstream release_1_36.2 && git checkout -b release_1_36.2 upstream/release_1_36.2\n```\n\ncc @mmastrac",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 709,
        "deletions": 653,
        "changed_files": 6,
        "created_at": "2023-08-24T15:18:27Z",
        "closed_at": "2023-08-26T13:10:43Z",
        "merged_at": "2023-08-26T13:10:43Z",
        "body": "Skipping for a later follow-up:\r\n\r\n - base64: #20266\r\n - notify\r\n - indexmap (will require follow-up in upstream projects)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 136,
        "deletions": 9,
        "changed_files": 5,
        "created_at": "2023-08-24T12:12:01Z",
        "closed_at": "2023-08-29T17:03:03Z",
        "merged_at": "2023-08-29T17:03:03Z",
        "body": "Closes #19512",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 107,
        "deletions": 1936,
        "changed_files": 11,
        "created_at": "2023-08-24T08:04:26Z",
        "closed_at": "2023-08-24T09:21:35Z",
        "merged_at": "2023-08-24T09:21:35Z",
        "body": "Moved the configuration file to https://github.com/denoland/deno_config as we will have to use it\r\nin other projects.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 212,
        "deletions": 190,
        "changed_files": 28,
        "created_at": "2023-08-24T04:30:41Z",
        "closed_at": "2023-08-27T04:04:13Z",
        "merged_at": "2023-08-27T04:04:13Z",
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n\r\nAs the title.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-08-23T22:03:20Z",
        "closed_at": "2023-08-27T09:17:41Z",
        "merged_at": "2023-08-27T09:17:41Z",
        "body": "The motivation is If I'm using deno lint --rules, I want to see all the rules especially the one that have no tags, since the recommend ones are already active\r\n\r\nThis pr also prints the tags associated with the rule inline \r\n\r\n![image](https://github.com/denoland/deno/assets/22427111/99158390-ab11-46ae-97b9-5bbd771badae)\r\n\r\nSide question: we can filter with --rules-tags, but what If I want to see only the rules with no tags (not possible currently)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-23T19:32:43Z",
        "closed_at": "2023-08-23T23:03:34Z",
        "merged_at": null,
        "body": "Fixes #20253 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 191,
        "deletions": 72,
        "changed_files": 43,
        "created_at": "2023-08-23T19:07:38Z",
        "closed_at": "2023-08-23T23:03:06Z",
        "merged_at": "2023-08-23T23:03:06Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 221,
        "deletions": 31,
        "changed_files": 5,
        "created_at": "2023-08-22T23:32:35Z",
        "closed_at": "2023-08-26T00:50:48Z",
        "merged_at": "2023-08-26T00:50:48Z",
        "body": "Closes https://github.com/denoland/vscode_deno/issues/410.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-22T21:34:27Z",
        "closed_at": "2023-08-23T07:31:13Z",
        "merged_at": "2023-08-23T07:31:13Z",
        "body": "Reference: https://developer.mozilla.org/en-US/docs/Web/API/URL/canParse_static",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-22T18:22:42Z",
        "closed_at": "2023-08-24T15:09:20Z",
        "merged_at": "2023-08-24T15:09:20Z",
        "body": "Bumps [rustls-webpki](https://github.com/rustls/webpki) from 0.100.1 to 0.100.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/rustls/webpki/releases\">rustls-webpki's releases</a>.</em></p>\n<blockquote>\n<h2>v/0.100.2</h2>\n<h2>Release notes</h2>\n<ul>\n<li>certificate path building and verification is now capped at 100 signature validation operations to avoid the risk of CPU usage denial-of-service attack when validating crafted certificate chains producing quadratic runtime. This risk affected both clients, as well as servers that verified client certificates.</li>\n</ul>\n<h2>What's Changed</h2>\n<ul>\n<li>v0.100.2 prep by <a href=\"https://github.com/cpu\"><code>@\u200bcpu</code></a> in <a href=\"https://redirect.github.com/rustls/webpki/pull/154\">rustls/webpki#154</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/rustls/webpki/compare/v/0.100.1...v/0.100.2\">https://github.com/rustls/webpki/compare/v/0.100.1...v/0.100.2</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/rustls/webpki/commit/c8b821450be5659be75c2a8ba663fc9fb0f8726c\"><code>c8b8214</code></a> Bump MSRV to 1.60</li>\n<li><a href=\"https://github.com/rustls/webpki/commit/855752292e97c1caada65e7b53ecc5df010ea88a\"><code>8557522</code></a> Avoid testing MSRV of dev-dependencies</li>\n<li><a href=\"https://github.com/rustls/webpki/commit/73a7f0c7d7eaaea038d2a1a48c18c47bcb487cc4\"><code>73a7f0c</code></a> Cargo: version 0.100.1 -&gt; 0.100.2</li>\n<li><a href=\"https://github.com/rustls/webpki/commit/4ea052366f342a06344aab589565179b59b342d3\"><code>4ea0523</code></a> verify_cert: enforce maximum number of signatures.</li>\n<li>See full diff in <a href=\"https://github.com/rustls/webpki/compare/v/0.100.1...v/0.100.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=rustls-webpki&package-manager=cargo&previous-version=0.100.1&new-version=0.100.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/denoland/deno/network/alerts).\n\n</details>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 69,
        "deletions": 26,
        "changed_files": 3,
        "created_at": "2023-08-22T15:15:17Z",
        "closed_at": "2023-08-22T22:16:35Z",
        "merged_at": "2023-08-22T22:16:35Z",
        "body": "Improves error handling when the Resource is closed in various phases of the ReadableStream. Ensure that we send a consistent `cancel` reason.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 295,
        "deletions": 34,
        "changed_files": 6,
        "created_at": "2023-08-22T14:14:52Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The TLS protocol comes with extensions like ALPN and SNI. Deno already supports ALPN, but unfortunately doesn't support SNI. Why is SNI so important for Deno *now*? Deno's big focus on 'web services' (like Deno Deploy and Deno Fresh) means Deno has to be a good web server to catch on with e.g. Node. Unfortunately without SNI there can't be multiple virtual hosts for one listener, which means that one can only have one hostname / one TLS certificate per IP and port. This PR adds the possibility to create a TLS listener with multiple hostnames / TLS certificates.\r\n\r\nIf there is interest in this PR and the biggest shortcomings are resolved, I will start working on the missing bits listed below.\r\n\r\nAlso, please, call out any mistakes and misuses that I did in the Rust code.\r\n\r\nWhat's missing for now:\r\n\r\n- Node wrapper\r\n- Docs\r\n- A more fitting name than `sniInfo` \r\n\r\nNote: This is my first time using Rust, please be gentle. Thank you.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-22T13:56:48Z",
        "closed_at": "2023-08-24T14:46:57Z",
        "merged_at": "2023-08-24T14:46:57Z",
        "body": "Supercedes #20230 \r\n\r\nAssists with https://github.com/Homebrew/homebrew-core/pull/140079\r\n\r\n```\r\n# To run a build using a local tree:\r\n# \r\n# 0. Check out these repositories as siblings:\r\n#\r\n#     - https://github.com/denoland/deno\r\n#     - https://github.com/denoland/deno_core\r\n#     - https://github.com/denoland/rusty_v8\r\n#\r\n# 1. From `deno`, run: cargo --config .cargo/local-build.toml build\r\n```",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-08-22T08:33:13Z",
        "closed_at": "2023-08-22T10:16:36Z",
        "merged_at": "2023-08-22T10:16:36Z",
        "body": "Closes #20229",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-21T23:20:54Z",
        "closed_at": "2023-08-24T14:47:25Z",
        "merged_at": null,
        "body": "this v8 workspace dependency got removed in #20135, which breaks [the homebrew build](https://github.com/Homebrew/homebrew-core/pull/140079), adding this explicit dependency back to unblock the downstream package manager builds.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-21T17:33:57Z",
        "closed_at": "2023-08-22T13:25:38Z",
        "merged_at": "2023-08-22T13:25:38Z",
        "body": "I believe this test locked up on this run below:\r\n\r\nhttps://github.com/denoland/deno/actions/runs/5928630684/job/16074661291",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 21,
        "changed_files": 3,
        "created_at": "2023-08-21T16:16:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Issue can be found here: https://github.com/denoland/deno/issues/20047\r\n\r\nOpened as a draft PR as requested by @bartlomieju\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 105,
        "deletions": 40,
        "changed_files": 2,
        "created_at": "2023-08-21T15:58:40Z",
        "closed_at": "2023-08-22T14:45:10Z",
        "merged_at": "2023-08-22T14:45:10Z",
        "body": "Reported in #20188\r\n\r\nA bug in the node.js runtime allows for cross-session data contamination during simultaneous asynchronous reads from Node.js streams. The issue arises from the re-use of a global buffer (BUF) during these asynchronous read operations. This can lead to data intended for one session being received by another session, potentially resulting in data corruption and unexpected behavior.\r\n\r\nThis does not affect Deno network streams. This may also affect reads from non-network resources as well.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 118,
        "deletions": 74,
        "changed_files": 29,
        "created_at": "2023-08-21T12:55:51Z",
        "closed_at": "2023-08-21T13:39:22Z",
        "merged_at": "2023-08-21T13:39:22Z",
        "body": "Bumped versions for 1.36.2\n\nPlease ensure:\n- [x] Target branch is correct (`vX.XX` if a patch release, `main` if minor)\n- [x] Crate versions are bumped correctly\n- [x] deno_std version is incremented in the code (see `cli/deno_std.rs`)\n- [x] Releases.md is updated correctly (think relevancy and remove reverts)\n\nTo make edits to this PR:\n```shell\ngit fetch upstream release_1_36.2 && git checkout -b release_1_36.2 upstream/release_1_36.2\n```\n\ncc @littledivy",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 97,
        "deletions": 74,
        "changed_files": 29,
        "created_at": "2023-08-21T12:37:07Z",
        "closed_at": "2023-08-21T12:38:39Z",
        "merged_at": "2023-08-21T12:38:39Z",
        "body": "Bumped versions for 1.36.1\r\n\r\n(Recover the 1.36.1 commit)\r\n<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4197,
        "deletions": 18389,
        "changed_files": 168,
        "created_at": "2023-08-21T11:53:33Z",
        "closed_at": "2023-08-21T12:39:20Z",
        "merged_at": null,
        "body": "Bumped versions for 1.36.1\n\nPlease ensure:\n- [x] Target branch is correct (`vX.XX` if a patch release, `main` if minor)\n- [x] Crate versions are bumped correctly\n- [x] deno_std version is incremented in the code (see `cli/deno_std.rs`)\n- [x] Releases.md is updated correctly (think relevancy and remove reverts)\n\nTo make edits to this PR:\n```shell\ngit fetch upstream release_1_36.1 && git checkout -b release_1_36.1 upstream/release_1_36.1\n```\n\ncc @littledivy",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 184,
        "deletions": 294,
        "changed_files": 7,
        "created_at": "2023-08-20T21:28:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Not working yet\r\n\r\nSwitch `ext/fetch` over to `resourceForReadableStream` to simplify and unify implementation with `ext/serve`. This allows us to work in Rust with resources only.\r\n\r\nTODO: \r\n\r\n - [ ] node/http - Use `TransformStream` to replace response body rid\r\n - [ ] Blob handling\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-08-20T14:58:48Z",
        "closed_at": "2023-08-20T15:43:50Z",
        "merged_at": "2023-08-20T15:43:50Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 215,
        "deletions": 80,
        "changed_files": 2,
        "created_at": "2023-08-20T14:00:11Z",
        "closed_at": "2023-08-21T08:06:26Z",
        "merged_at": "2023-08-21T08:06:26Z",
        "body": "Few improvements to FFI types:\r\n1. Export `PointerObject` for convenience. It's fairly commonly used in library code and thus should be exported.\r\n2. Fix various comments around `PointerValue` and `UnsafePointer` and expand upon them to better reflect reality.\r\n3. Instead of using a `Record<\"value\", type>[T]` for determining the type of an FFI symbol parameter use direct `T extends \"value\" ? type : never` comparison.\r\n\r\nThe last part enables smuggling extra information into the parameter and return value string declarations at the type level. eg. Instead of just `\"u8\"` the parameter can be `\"u8\" & { [brand]: T }` for some `T extends number`. That `T` can then be extracted from the parameter to form the TypeScript function's parameter or return value type. Essentially, this enables type-safe FFI!\r\n\r\nThe foremost use-cases for this are enums and pointer safety. These are implemented in the second commit which should enable, in a backwards compatible way, for pointer parameters to declare what sort of pointer they mean, functions to declare what the API definition of the native function is, and for numbers to declare what Enum they stand for (if any).",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 134,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-08-20T08:22:59Z",
        "closed_at": "2023-08-26T00:53:45Z",
        "merged_at": "2023-08-26T00:53:45Z",
        "body": "Fixes https://github.com/denoland/vscode_deno/issues/743.\r\n```ts\r\nconst items: string[] = ['foo', 'bar', 'baz'];\r\n\r\nitems.map\r\n// ->\r\nitems.map(callbackfn) // auto-completes with argument placeholders.\r\n```\r\n\r\n---\r\n\r\nWe have our own setting for `suggest.completeFunctionCalls`, which must be enabled:\r\n```js\r\n{\r\n    \"deno.suggest.completeFunctionCalls\": true,\r\n    // Re-implementation of:\r\n    // \"javascript.suggest.completeFunctionCalls\": true,\r\n    // \"typescript.suggest.completeFunctionCalls\": true,\r\n}\r\n```\r\nBut the actual implementation had been left as a TODO until now.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-08-20T06:30:32Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n\r\nFixed remove Deno permissions for Env variables. Fixed Issue #18665 \r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-08-19T07:50:23Z",
        "closed_at": "2023-08-19T10:52:21Z",
        "merged_at": "2023-08-19T10:52:21Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 172,
        "deletions": 53,
        "changed_files": 5,
        "created_at": "2023-08-18T19:12:52Z",
        "closed_at": "2023-08-21T01:35:27Z",
        "merged_at": "2023-08-21T01:35:26Z",
        "body": "Deno.serve's fast streaming implementation was not keeping the request body resource ID alive. We were taking the `Rc<Resource>` from the resource table during the response, so a hairpin duplex response that fed back the request body would work.\r\n\r\nHowever, if any JS code attempted to read from the request body (which requires the resource ID to be valid), the response would fail with a difficult-to-diagnose \"EOF\" error.\r\n\r\nThis was affecting more complex duplex uses of `Deno.fetch` (though as far as I can tell was unreported).\r\n\r\nSimple test:\r\n\r\n```ts\r\n        const reader = request.body.getReader();\r\n        return new Response(\r\n          new ReadableStream({\r\n            async pull(controller) {\r\n              const { done, value } = await reader.read();\r\n              if (done) {\r\n                controller.close();\r\n              } else {\r\n                controller.enqueue(value);\r\n              }\r\n            },\r\n          }),\r\n```\r\n\r\nAnd then attempt to use the stream in duplex mode:\r\n\r\n```ts\r\n\r\nasync function testDuplex(\r\n  reader: ReadableStreamDefaultReader<Uint8Array>,\r\n  writable: WritableStreamDefaultWriter<Uint8Array>,\r\n) {\r\n  await writable.write(new Uint8Array([1]));\r\n  const chunk1 = await reader.read();\r\n  assert(!chunk1.done);\r\n  assertEquals(chunk1.value, new Uint8Array([1]));\r\n  await writable.write(new Uint8Array([2]));\r\n  const chunk2 = await reader.read();\r\n  assert(!chunk2.done);\r\n  assertEquals(chunk2.value, new Uint8Array([2]));\r\n  await writable.close();\r\n  const chunk3 = await reader.read();\r\n  assert(chunk3.done);\r\n}\r\n```\r\n\r\nIn older versions of Deno, this would just lock up. I believe after 23ff0e722e3c4b0827940853c53c5ee2ede5ec9f, it started throwing a more explicit error:\r\n\r\n```\r\nhttpServerStreamDuplexJavascript => ./cli/tests/unit/serve_test.ts:1339:6\r\nerror: TypeError: request or response body error: error reading a body from connection: Connection reset by peer (os error 54)\r\n    at async Object.pull (ext:deno_web/06_streams.js:810:27)\r\n```",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-18T14:22:46Z",
        "closed_at": "2023-08-18T15:01:42Z",
        "merged_at": "2023-08-18T15:01:42Z",
        "body": "The \"Are you sure you want to continue\" was outputting before the `await Deno.writeTextFile` could run.\r\n\r\n```\r\nnew Worker(url, *** type: \\\"module\\\" ***); await Deno.writeTextFile(\\\"./text.txt\\\", \\\"some code\\\");\\r\\u***1b***[11C\\u***1b***[?2004l\\r\\nAre you sure you want to continue?\\r\\n\u250c \u26a0\\u***fe0f***  Deno requests write access to \\\"./text.txt\\\".\\r\\n\u251c Requested by `Deno.writeFile()` API.\\r\\n\u251c Run again with --allow-write to bypass this prompt.\\r\\n\u2514 Allow? [y/n/A] (y = yes, allow; n = no, deny; A = allow all write permissions) > invalid\\r\\n\\u***1b***[1A\\u***1b***[0J\u2514 Unrecognized option. Allow? [y/n/A] (y = yes, allow; n = no, deny; A = allow all write permissions) > y\\r\\n\\u***1b***[4A\\u***1b***[0J\u2705 Granted write access to \\\"./text.txt\\\".\\r\\nundefined\\r\\n\\u***1b***[?2004h\\r\\u***1b***[K> \\r\\u***1b***[2C\r\n```\r\n\r\nThe attempt to make it less flaky is to add a slight delay on outputting the \"Are you sure you want to continue?\" prompt.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 39,
        "changed_files": 1,
        "created_at": "2023-08-18T14:00:03Z",
        "closed_at": "2023-08-20T09:30:58Z",
        "merged_at": "2023-08-20T09:30:58Z",
        "body": "This PR optimizes `addEventListener` by replacing `webidl.createDictionaryConverter(\"AddEventListenerOptions\", ...)` with a custom options parsing function to avoid the overhead of `webidl` methods\r\n\r\n**this PR**\r\n\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark                                           time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n---------------------------------------------------------------------------------------------------- -----------------------------\r\naddEventListener options converter (undefined)       4.87 ns/iter 205,248,660.8     (4.7 ns \u2026 13.18 ns)   4.91 ns    5.4 ns    5.6 ns\r\naddEventListener options converter (signal)         13.02 ns/iter  76,782,031.2   (11.74 ns \u2026 18.84 ns)  13.08 ns  16.22 ns  16.57 ns\r\n```\r\n\r\n**main**\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark                                           time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n---------------------------------------------------------------------------------------------------- -----------------------------\r\naddEventListener options converter (undefined)     108.36 ns/iter   9,228,688.6  (103.5 ns \u2026 129.88 ns) 109.69 ns 115.61 ns 125.28 ns\r\naddEventListener options converter (signal)        134.03 ns/iter   7,460,878.1 (129.14 ns \u2026 144.54 ns) 135.68 ns 141.13 ns  144.1 ns\r\n```\r\n\r\n```js\r\nconst tg = new EventTarget();\r\nconst signal = new AbortController().signal;\r\n\r\nDeno.bench(\"addEventListener options converter (undefined)\", () => {\r\n  tg.addEventListener(\"foo\", null); // null callback to only bench options converter\r\n});\r\n\r\nDeno.bench(\"addEventListener options converter (signal)\", () => {\r\n  tg.addEventListener(\"foo\", null, { signal });\r\n});\r\n```\r\n\r\nTowards https://github.com/denoland/deno/issues/20167",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 132,
        "deletions": 16537,
        "changed_files": 25,
        "created_at": "2023-08-18T06:14:38Z",
        "closed_at": "2023-08-19T04:26:13Z",
        "merged_at": "2023-08-19T04:26:13Z",
        "body": "removes third_party submodule, tools are installed on-demand.\r\n\r\n- removed `load_test` and websocket benchmark (covered by benchy)\r\n- removed node/bun http benchmarks (covered by benchy)\r\n- `dlint` & `dprint` downloaded on-demand. \r\n- `wrk` & `hyperfine` downloaded before CI benchmark run. \r\n   Install locally using: `./tools/install_prebuilt.js wrk hyperfine`\r\n\r\n#### updating dlint/dprint\r\n\r\nupdate version in `tools/util.js` and place binary in `denoland/deno_third_party`. \r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2023-08-17T23:11:50Z",
        "closed_at": "2023-08-18T11:48:19Z",
        "merged_at": "2023-08-18T11:48:19Z",
        "body": "Closes https://github.com/denoland/deno/issues/20186",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 883,
        "deletions": 473,
        "changed_files": 38,
        "created_at": "2023-08-17T17:43:27Z",
        "closed_at": "2023-08-21T09:53:52Z",
        "merged_at": "2023-08-21T09:53:52Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-08-17T14:38:44Z",
        "closed_at": "2023-08-17T15:25:00Z",
        "merged_at": "2023-08-17T15:25:00Z",
        "body": "Fixes this error message:\r\n\r\n```\r\nerror: missing field `now` at line 32 column 1\r\n```\r\n\r\nThis would occur if someone used an old version of the deno_cache library to cache information in the cache then tried to load it with the latest CLI. Regression in the last patch when migrating to the deno_cache_dir crate.\r\n\r\nTests are in the deno_cache repo.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 23,
        "changed_files": 2,
        "created_at": "2023-08-17T14:29:04Z",
        "closed_at": "2023-08-20T10:02:48Z",
        "merged_at": "2023-08-20T10:02:48Z",
        "body": "```js\r\nDeno.bench(function eventNew() {\r\n  new Event(\"foo\");\r\n});\r\n```\r\n\r\n<b>main</b>\r\n```\r\n./target/release/deno bench event_bench.js\r\ncpu: Apple M1 Max\r\nruntime: deno 1.36.1 (aarch64-apple-darwin)\r\n\r\nfile:///Users/ib/dev/deno/event_bench.js\r\nbenchmark      time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n--------------------------------------------------------------- -----------------------------\r\neventNew       36.43 ns/iter  27,451,874.9   (35.15 ns \u2026 46.98 ns)  37.68 ns   40.7 ns  41.69 ns\r\n\r\n```\r\n\r\n<b>this PR</b>\r\n```\r\n./target/release/deno bench event_bench.js\r\ncpu: Apple M1 Max\r\nruntime: deno 1.36.1 (aarch64-apple-darwin)\r\n\r\nfile:///Users/ib/dev/deno/event_bench.js\r\nbenchmark      time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n--------------------------------------------------------------- -----------------------------\r\neventNew       13.71 ns/iter  72,958,970.0   (12.85 ns \u2026 31.79 ns)  15.11 ns  16.49 ns   17.5 ns\r\n\r\n```\r\n\r\nTowards #20167",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2023-08-17T12:14:38Z",
        "closed_at": "2023-08-18T12:44:57Z",
        "merged_at": "2023-08-18T12:44:57Z",
        "body": "This PR optimizes event dispatch by replacing `ReflectHas` with object lookup. I also made `isSlottable` return `false` since AFAIK there aren't any slottables nodes in Deno\r\n\r\n**This PR**\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark            time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n--------------------------------------------------------------------- -----------------------------\r\nevent dispatch       80.46 ns/iter  12,428,739.4  (73.84 ns \u2026 120.07 ns)  81.82 ns  86.34 ns  91.18 ns\r\n```\r\n\r\n**main**\r\n\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark            time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n--------------------------------------------------------------------- -----------------------------\r\nevent dispatch      102.66 ns/iter   9,741,319.6  (96.66 ns \u2026 132.88 ns) 104.18 ns 114.58 ns 118.45 ns\r\n```\r\n\r\n```js\r\nconst tg = new EventTarget();\r\nconst ev = new Event(\"foo\");\r\n\r\nconst listener = () => {};\r\ntg.addEventListener(\"foo\", listener);\r\n\r\nDeno.bench(\"event dispatch \", () => {\r\n  tg.dispatchEvent(ev);\r\n});\r\n```\r\n\r\ntowards https://github.com/denoland/deno/issues/20167\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 144,
        "deletions": 36,
        "changed_files": 4,
        "created_at": "2023-08-17T09:02:18Z",
        "closed_at": "2023-08-17T10:53:55Z",
        "merged_at": "2023-08-17T10:53:55Z",
        "body": "Properly handle the `SQLITE_BUSY` error code by retrying the transaction.\r\n\r\nAlso wraps database initialization logic in a transaction to protect against incomplete/concurrent initializations.\r\n\r\nFixes https://github.com/denoland/deno/issues/20116.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 213,
        "deletions": 19,
        "changed_files": 4,
        "created_at": "2023-08-17T05:01:11Z",
        "closed_at": "2023-08-17T14:46:12Z",
        "merged_at": "2023-08-17T14:46:11Z",
        "body": "Fixes https://github.com/denoland/vscode_deno/issues/856.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 7,
        "changed_files": 5,
        "created_at": "2023-08-16T18:57:39Z",
        "closed_at": "2023-08-17T14:39:07Z",
        "merged_at": "2023-08-17T14:39:07Z",
        "body": "Closes #19922",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 63,
        "changed_files": 3,
        "created_at": "2023-08-16T17:28:50Z",
        "closed_at": "2023-08-17T08:35:19Z",
        "merged_at": "2023-08-17T08:35:19Z",
        "body": "This PR optimizes `Event` constructor\r\n\r\n- ~Added a fast path for empty `eventInitDict`~ Removed `EventInit` dictionary converter\r\n- Don't make `isTrusted` a [LegacyUnforgeable](https://webidl.spec.whatwg.org/#LegacyUnforgeable) property. Doing so makes it non-spec compliant but calling `Object/Reflect.defineProperty` on the constructor is a big bottleneck. Node did the same a few months ago https://github.com/nodejs/node/pull/46974. In my opinion, the performance gains are worth deviating from the spec for a browser-related property.\r\n\r\n**This PR**\r\n\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark                      time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n------------------------------------------------------------------------------- -----------------------------\r\nevent constructor no init      36.69 ns/iter  27,257,504.6   (33.36 ns \u2026 42.45 ns)  37.71 ns  39.61 ns  40.07 ns\r\nevent constructor               36.7 ns/iter  27,246,776.6   (33.35 ns \u2026 56.03 ns)  37.73 ns  40.14 ns  41.74 ns\r\n```\r\n\r\n**main**\r\n\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark                      time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n------------------------------------------------------------------------------- -----------------------------\r\nevent constructor no init     380.48 ns/iter   2,628,275.8 (366.66 ns \u2026 399.39 ns) 384.58 ns 398.27 ns 399.39 ns\r\nevent constructor             480.33 ns/iter   2,081,882.6 (466.67 ns \u2026 503.47 ns) 484.27 ns 501.28 ns 503.47 ns\r\n```\r\n\r\n```js\r\nDeno.bench(\"event constructor no init\", () => {\r\n  const event = new Event(\"foo\");\r\n});\r\n\r\nDeno.bench(\"event constructor\", () => {\r\n  const event = new Event(\"foo\", { bubbles: true, cancelable: false });\r\n});\r\n```\r\n\r\ntowards https://github.com/denoland/deno/issues/20167",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 743,
        "deletions": 250,
        "changed_files": 13,
        "created_at": "2023-08-16T17:02:25Z",
        "closed_at": "2023-08-17T13:52:37Z",
        "merged_at": "2023-08-17T13:52:37Z",
        "body": "Extracted from fast streams work.\r\n\r\nThis is a resource wrapper for `ReadableStream`, allowing us to treat all `ReadableStream` instances as resources, and remove special paths in both `fetch` and `serve`. \r\n\r\nPerformance with a ReadableStream response yields ~18% improvement:\r\n\r\n```\r\n  return new Response(new ReadableStream({\r\n    start(controller) {\r\n      controller.enqueue(new Uint8Array([104, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100]));\r\n      controller.close();\r\n    }\r\n  })\r\n```\r\n\r\nThis patch:\r\n\r\n```\r\n12:36 $ third_party/prebuilt/mac/wrk http://localhost:8080\r\nRunning 10s test @ http://localhost:8080\r\n  2 threads and 10 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency    99.96us  100.03us   6.65ms   98.84%\r\n    Req/Sec    47.73k     2.43k   51.02k    89.11%\r\n  959308 requests in 10.10s, 117.10MB read\r\nRequests/sec:  94978.71\r\nTransfer/sec:     11.59MB\r\n```\r\n\r\nmain:\r\n\r\n```\r\nRunning 10s test @ http://localhost:8080\r\n  2 threads and 10 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency   163.03us  685.51us  19.73ms   99.27%\r\n    Req/Sec    39.50k     3.98k   66.11k    95.52%\r\n  789582 requests in 10.10s, 82.83MB read\r\nRequests/sec:  78182.65\r\nTransfer/sec:      8.20MB\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1492,
        "deletions": 12,
        "changed_files": 26,
        "created_at": "2023-08-16T14:14:26Z",
        "closed_at": "2023-08-22T05:56:00Z",
        "merged_at": "2023-08-22T05:56:00Z",
        "body": "This patch adds a `remote` backend for `ext/kv`. This supports connection to Deno Deploy and potentially other services compatible with the KV Connect protocol.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2023-08-16T01:02:11Z",
        "closed_at": "2023-08-17T21:41:29Z",
        "merged_at": "2023-08-17T21:41:29Z",
        "body": "Closes #20156\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 19,
        "changed_files": 2,
        "created_at": "2023-08-15T21:14:55Z",
        "closed_at": "2023-08-15T22:30:33Z",
        "merged_at": "2023-08-15T22:30:33Z",
        "body": "If  a `host` header is specified, use that for the generated websocket URLs.\r\n\r\nFixes #20087 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 19,
        "changed_files": 1,
        "created_at": "2023-08-15T20:57:20Z",
        "closed_at": "2023-08-16T10:58:04Z",
        "merged_at": "2023-08-16T10:58:04Z",
        "body": "This PR optimizes `URLPattern.exec` \r\n\r\n- Use component keys from constructor instead of calling it on every `.exec`. AFAIK keys should always be `protocol`,`username`,`password`,`hostname`,`port`,`pathname`,`search`,`hash`. Haven't looked much into it but I think it's safe to define these outside the constructor as well.\r\n- Add a fast path for `/^$/u` (default regexp) and empty input\r\n- Replaced `ArrayPrototypeMap` & `ObjectFromEntries` with a `for` loop.\r\n\r\n\r\n**this PR**\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark      time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n--------------------------------------------------------------- -----------------------------\r\nexec 1          2.17 \u00b5s/iter     461,022.8     (2.14 \u00b5s \u2026 2.27 \u00b5s)   2.18 \u00b5s   2.27 \u00b5s   2.27 \u00b5s\r\nexec 2          4.13 \u00b5s/iter     242,173.4     (4.08 \u00b5s \u2026 4.27 \u00b5s)   4.15 \u00b5s   4.27 \u00b5s   4.27 \u00b5s\r\nexec 3          2.55 \u00b5s/iter     391,508.1     (2.53 \u00b5s \u2026 2.68 \u00b5s)   2.56 \u00b5s   2.68 \u00b5s   2.68 \u00b5s\r\n```\r\n\r\n**main**\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark      time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n--------------------------------------------------------------- -----------------------------\r\nexec 1          2.45 \u00b5s/iter     408,092.4     (2.41 \u00b5s \u2026 2.55 \u00b5s)   2.46 \u00b5s   2.55 \u00b5s   2.55 \u00b5s\r\nexec 2          4.41 \u00b5s/iter     226,706.0   (3.49 \u00b5s \u2026 399.56 \u00b5s)   4.39 \u00b5s   5.49 \u00b5s   6.07 \u00b5s\r\nexec 3          2.99 \u00b5s/iter     334,833.4     (2.94 \u00b5s \u2026 3.21 \u00b5s)   2.99 \u00b5s   3.21 \u00b5s   3.21 \u00b5s\r\n```",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-08-15T16:43:14Z",
        "closed_at": "2023-08-16T09:28:49Z",
        "merged_at": "2023-08-16T09:28:49Z",
        "body": "The goal of this PR is to address issue #20106 where a `TypeError` occurs when the variables `uid` and `gid` from `userInfo()` in `node:os` are reassigned if the user is on Windows. Both `uid` and `gid` are marked as `const` therefore producing a `TypeError` when the two are reassigned.\r\n\r\nThis PR achieves that goal by marking `uid` and `gid` as `let`",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-08-15T14:06:35Z",
        "closed_at": "2023-08-15T14:59:35Z",
        "merged_at": "2023-08-15T14:59:35Z",
        "body": "This PR optimizes Node's `IncomingMessageForServer.headers` by replacing `Object.fromEntries()` with a loop and `headers.entries` with `headersEntries` which returns the internal array directly instead of an iterator\r\n\r\n## Benchmarks\r\n\r\nUsing `wrk` with 5 headers\r\n\r\n```\r\nwrk -d 10s --latency -H \"X-Deno: true\" -H \"Accept: application/json\" -H \"X-Foo: bar\" -H \"User-Agent: wrk\" -H \"Accept-Encoding: gzip, br\" http://127.0.0.1:3000\r\n```\r\n\r\n**this PR**\r\n\r\n```\r\nRunning 10s test @ http://127.0.0.1:3000\r\n  2 threads and 10 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency   167.53us  136.89us   2.75ms   97.33%\r\n    Req/Sec    31.98k     1.38k   36.39k    70.30%\r\n  Latency Distribution\r\n     50%  134.00us\r\n     75%  191.00us\r\n     90%  234.00us\r\n     99%  544.00us\r\n  642548 requests in 10.10s, 45.96MB read\r\nRequests/sec:  63620.36\r\nTransfer/sec:      4.55MB\r\n```\r\n\r\n**main**\r\n\r\n```\r\nRunning 10s test @ http://127.0.0.1:3000\r\n  2 threads and 10 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency   181.31us  132.54us   3.79ms   97.13%\r\n    Req/Sec    29.21k     1.45k   32.93k    79.21%\r\n  Latency Distribution\r\n     50%  148.00us\r\n     75%  198.00us\r\n     90%  261.00us\r\n     99%  545.00us\r\n  586939 requests in 10.10s, 41.98MB read\r\nRequests/sec:  58114.01\r\nTransfer/sec:      4.16MB\r\n```\r\n\r\n```js\r\nimport express from \"npm:express\";\r\n\r\nconst app = express();\r\napp.get(\"/\", function (req, res) {\r\n  req.headers;\r\n  res.end();\r\n});\r\napp.listen(3000);\r\n```",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 141,
        "changed_files": 5,
        "created_at": "2023-08-14T22:17:59Z",
        "closed_at": "2023-08-15T08:36:58Z",
        "merged_at": null,
        "body": "Attempting to revert https://github.com/denoland/deno/pull/12545\r\n\r\nSee the comment here: https://github.com/denoland/deno/issues/11925#issuecomment-1678084346",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 77,
        "deletions": 46,
        "changed_files": 3,
        "created_at": "2023-08-14T19:33:10Z",
        "closed_at": "2023-09-07T20:41:16Z",
        "merged_at": "2023-09-07T20:41:16Z",
        "body": "Extracted from https://github.com/denoland/deno/pull/17815\r\n\r\nOptimise Buffer's string operations, most significantly when dealing with ASCII and UTF-16. Base64 and HEX encodings are affected to much lesser degrees.\r\n\r\n## Performance\r\n\r\n### String length 15\r\nWith very small strings we're at break-even or sometimes even lose a tad bit of performance from creating a `DataView` that ends up not paying for itself.\r\n\r\n**This PR:**\r\n```\r\nbenchmark                                                     time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n-------------------------------------------------------------------------------------------------------------- -----------------------------\r\nBuffer.from ascii string                                       1.15 \u00b5s/iter     871,388.6   (728.78 ns \u2026 1.56 \u00b5s)   1.23 \u00b5s   1.56 \u00b5s   1.56 \u00b5s\r\nBuffer.from base64 string                                      1.63 \u00b5s/iter     612,790.9     (1.31 \u00b5s \u2026 1.96 \u00b5s)   1.77 \u00b5s   1.96 \u00b5s   1.96 \u00b5s\r\nBuffer.from utf16 string                                       1.41 \u00b5s/iter     707,396.3   (915.24 ns \u2026 1.93 \u00b5s)   1.61 \u00b5s   1.93 \u00b5s   1.93 \u00b5s\r\nBuffer.from hex string                                         1.87 \u00b5s/iter     535,357.9     (1.56 \u00b5s \u2026 2.19 \u00b5s)      2 \u00b5s   2.19 \u00b5s   2.19 \u00b5s\r\nBuffer.toString ascii string                                 154.58 ns/iter   6,469,162.8    (149.69 ns \u2026 198 ns) 154.51 ns 182.89 ns 191.91 ns\r\nBuffer.toString base64 string                                161.65 ns/iter   6,186,189.6 (150.91 ns \u2026 181.15 ns) 165.18 ns 171.87 ns 174.94 ns\r\nBuffer.toString utf16 string                                 292.74 ns/iter   3,415,959.8 (285.43 ns \u2026 312.47 ns) 295.25 ns 310.47 ns 312.47 ns\r\nBuffer.toString hex string                                    89.61 ns/iter  11,159,315.6  (81.09 ns \u2026 123.77 ns)  91.09 ns 113.62 ns 119.28 ns\r\n```\r\n\r\n**Main:**\r\n```\r\nbenchmark                                                     time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n-------------------------------------------------------------------------------------------------------------- -----------------------------\r\nBuffer.from ascii string                                       1.26 \u00b5s/iter     794,875.8     (1.07 \u00b5s \u2026 1.46 \u00b5s)   1.31 \u00b5s   1.46 \u00b5s   1.46 \u00b5s\r\nBuffer.from base64 string                                      1.65 \u00b5s/iter     607,853.3     (1.38 \u00b5s \u2026 2.01 \u00b5s)   1.69 \u00b5s   2.01 \u00b5s   2.01 \u00b5s\r\nBuffer.from utf16 string                                       1.34 \u00b5s/iter     744,894.6     (1.09 \u00b5s \u2026 1.55 \u00b5s)   1.45 \u00b5s   1.55 \u00b5s   1.55 \u00b5s\r\nBuffer.from hex string                                         2.01 \u00b5s/iter     496,345.8      (1.54 \u00b5s \u2026 2.6 \u00b5s)   2.26 \u00b5s    2.6 \u00b5s    2.6 \u00b5s\r\nBuffer.toString ascii string                                 150.16 ns/iter   6,659,630.5 (144.99 ns \u2026 166.68 ns)  152.4 ns 157.26 ns 159.14 ns\r\nBuffer.toString base64 string                                164.73 ns/iter   6,070,692.0 (158.77 ns \u2026 185.63 ns) 168.48 ns 175.74 ns 176.68 ns\r\nBuffer.toString utf16 string                                 150.61 ns/iter   6,639,864.0  (148.2 ns \u2026 168.29 ns) 150.93 ns 157.21 ns 168.15 ns\r\nBuffer.toString hex string                                    94.21 ns/iter  10,614,972.9   (86.21 ns \u2026 98.75 ns)  95.43 ns  97.99 ns  98.21 ns\r\n```\r\n\r\n### String length 1500\r\nWith moderate lengths we already see great upsides for `Buffer.from()` with ASCII and UTF-16.\r\n\r\n**This PR:**\r\n```\r\nbenchmark                                                     time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n-------------------------------------------------------------------------------------------------------------- -----------------------------\r\nBuffer.from ascii string                                       5.79 \u00b5s/iter     172,562.6     (4.72 \u00b5s \u2026 4.71 ms)   5.04 \u00b5s   10.3 \u00b5s  11.67 \u00b5s\r\nBuffer.from base64 string                                      5.08 \u00b5s/iter     196,678.9     (4.97 \u00b5s \u2026 5.76 \u00b5s)   5.08 \u00b5s   5.76 \u00b5s   5.76 \u00b5s\r\nBuffer.from utf16 string                                       9.68 \u00b5s/iter     103,316.5     (7.14 \u00b5s \u2026 3.44 ms)  10.32 \u00b5s  13.42 \u00b5s  15.21 \u00b5s\r\nBuffer.from hex string                                         53.7 \u00b5s/iter      18,620.2     (49.37 \u00b5s \u2026 2.2 ms)  54.74 \u00b5s   72.2 \u00b5s  81.07 \u00b5s\r\nBuffer.toString ascii string                                   6.63 \u00b5s/iter     150,761.3     (5.59 \u00b5s \u2026 1.11 ms)   6.08 \u00b5s  15.68 \u00b5s  24.77 \u00b5s\r\nBuffer.toString base64 string                                460.57 ns/iter   2,171,224.4 (448.33 ns \u2026 511.73 ns) 465.05 ns 495.54 ns 511.73 ns\r\nBuffer.toString utf16 string                                   6.52 \u00b5s/iter     153,287.0     (6.47 \u00b5s \u2026 6.66 \u00b5s)   6.53 \u00b5s   6.66 \u00b5s   6.66 \u00b5s\r\nBuffer.toString hex string                                     3.68 \u00b5s/iter     271,965.4     (3.64 \u00b5s \u2026 3.82 \u00b5s)   3.68 \u00b5s   3.82 \u00b5s   3.82 \u00b5s\r\n```\r\n\r\n**Main:**\r\n```\r\nbenchmark                                                     time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n-------------------------------------------------------------------------------------------------------------- -----------------------------\r\nBuffer.from ascii string                                      11.46 \u00b5s/iter      87,298.1    (8.53 \u00b5s \u2026 834.1 \u00b5s)   9.61 \u00b5s  83.31 \u00b5s   87.3 \u00b5s\r\nBuffer.from base64 string                                       5.4 \u00b5s/iter     185,027.8     (5.07 \u00b5s \u2026 7.49 \u00b5s)   5.44 \u00b5s   7.49 \u00b5s   7.49 \u00b5s\r\nBuffer.from utf16 string                                       20.3 \u00b5s/iter      49,270.8  (13.55 \u00b5s \u2026 649.11 \u00b5s)   18.8 \u00b5s 113.93 \u00b5s 125.17 \u00b5s\r\nBuffer.from hex string                                        52.03 \u00b5s/iter      19,218.9    (48.74 \u00b5s \u2026 2.59 ms)  52.84 \u00b5s  67.05 \u00b5s  73.56 \u00b5s\r\nBuffer.toString ascii string                                   6.46 \u00b5s/iter     154,822.5     (6.32 \u00b5s \u2026 6.69 \u00b5s)   6.52 \u00b5s   6.69 \u00b5s   6.69 \u00b5s\r\nBuffer.toString base64 string                                440.19 ns/iter   2,271,764.6    (427 ns \u2026 490.77 ns) 444.74 ns 484.64 ns 490.77 ns\r\nBuffer.toString utf16 string                                   6.89 \u00b5s/iter     145,106.7     (6.81 \u00b5s \u2026 7.24 \u00b5s)   6.91 \u00b5s   7.24 \u00b5s   7.24 \u00b5s\r\nBuffer.toString hex string                                     3.66 \u00b5s/iter     273,456.5      (3.6 \u00b5s \u2026 4.02 \u00b5s)   3.64 \u00b5s   4.02 \u00b5s   4.02 \u00b5s\r\n```\r\n\r\n### String length 2^20\r\nWith massive lengths we the difference in ASCII and UTF-16 parsing performance is enormous.\r\n\r\n**This PR:**\r\n```\r\nbenchmark                                                           time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n-------------------------------------------------------------------------------------------------------------------- -----------------------------\r\nBuffer.from ascii string                                              4.1 ms/iter         243.7     (2.64 ms \u2026 6.74 ms)   4.43 ms   6.26 ms   6.74 ms\r\nBuffer.from base64 string                                            3.74 ms/iter         267.6     (2.91 ms \u2026 4.92 ms)   3.96 ms   4.31 ms   4.92 ms\r\nBuffer.from utf16 string                                             7.72 ms/iter         129.5    (5.91 ms \u2026 11.03 ms)   7.97 ms  11.03 ms  11.03 ms\r\nBuffer.from hex string                                              35.72 ms/iter          28.0   (34.71 ms \u2026 38.42 ms)  35.93 ms  38.42 ms  38.42 ms\r\nBuffer.toString ascii string                                        78.92 ms/iter          12.7   (42.72 ms \u2026 94.13 ms)  91.64 ms  94.13 ms  94.13 ms\r\nBuffer.toString base64 string                                      833.62 \u00b5s/iter       1,199.6   (638.05 \u00b5s \u2026 5.97 ms) 826.86 \u00b5s   2.45 ms   2.48 ms\r\nBuffer.toString utf16 string                                        79.35 ms/iter          12.6    (69.72 ms \u2026 88.9 ms)  86.66 ms   88.9 ms   88.9 ms\r\nBuffer.toString hex string                                          31.04 ms/iter          32.2      (4.3 ms \u2026 46.9 ms)  37.21 ms   46.9 ms   46.9 ms\r\n```\r\n\r\n**Main:**\r\n```\r\nbenchmark                                                           time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n-------------------------------------------------------------------------------------------------------------------- -----------------------------\r\nBuffer.from ascii string                                            18.66 ms/iter          53.6   (15.61 ms \u2026 23.26 ms)  20.62 ms  23.26 ms  23.26 ms\r\nBuffer.from base64 string                                             4.7 ms/iter         212.9     (2.94 ms \u2026 9.07 ms)   4.65 ms   9.06 ms   9.07 ms\r\nBuffer.from utf16 string                                            33.49 ms/iter          29.9   (31.24 ms \u2026 35.67 ms)  34.08 ms  35.67 ms  35.67 ms\r\nBuffer.from hex string                                              39.38 ms/iter          25.4   (38.66 ms \u2026 42.36 ms)  39.58 ms  42.36 ms  42.36 ms\r\nBuffer.toString ascii string                                        77.68 ms/iter          12.9   (67.46 ms \u2026 95.68 ms)  84.71 ms  95.68 ms  95.68 ms\r\nBuffer.toString base64 string                                      825.53 \u00b5s/iter       1,211.3   (655.38 \u00b5s \u2026 6.69 ms) 816.62 \u00b5s   3.07 ms   3.13 ms\r\nBuffer.toString utf16 string                                        76.54 ms/iter          13.1    (66.9 ms \u2026 85.26 ms)  83.63 ms  85.26 ms  85.26 ms\r\nBuffer.toString hex string                                          38.56 ms/iter          25.9   (33.83 ms \u2026 46.56 ms)  45.33 ms  46.56 ms  46.56 ms\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-08-14T19:13:51Z",
        "closed_at": "2023-08-15T00:11:13Z",
        "merged_at": "2023-08-15T00:11:12Z",
        "body": "The goal of this PR is to address issue #19520 where Deno panics when encountering an invalid SSL certificate. \r\n\r\nThis PR achieves that goal by removing an `.expect()` statement and implementing a match statement on `tsl_config` (found in [/ext/net/ops_tsl.rs](https://github.com/denoland/deno/blob/e071382768fa57b5288a6a5ba90e73bf5870b169/ext/net/ops_tls.rs#L1058)) to check whether the desired configuration is valid\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-08-14T18:28:40Z",
        "closed_at": "2023-08-14T19:13:55Z",
        "merged_at": "2023-08-14T19:13:55Z",
        "body": "This PR makes more optimizations to headers iterable by removing `ObjectEntries` which was consistently prominent in the flame graph when benchmarking an express server. \r\n\r\n**this PR**\r\n\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark         time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n------------------------------------------------------------------ -----------------------------\r\nheaders iter        9.6 \u00b5s/iter     104,134.1   (8.74 \u00b5s \u2026 131.31 \u00b5s)   9.47 \u00b5s  12.61 \u00b5s  17.81 \u00b5s\r\n```\r\n\r\n**main**\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark         time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n------------------------------------------------------------------ -----------------------------\r\nheaders iter      12.87 \u00b5s/iter      77,675.9  (11.97 \u00b5s \u2026 132.34 \u00b5s)  12.76 \u00b5s  16.49 \u00b5s   26.4 \u00b5s\r\n```\r\n\r\n\r\n```js\r\nconst headers = new Headers({\r\n  \"Content-Type\": \"application/json\",\r\n  \"X-Content-Type\": \"application/json\",\r\n  \"Date\": \"Thu, 14 Aug 2023 17:45:10 GMT\",\r\n  \"X-Deno\": \"Deno\",\r\n  \"Powered-By\": \"Deno\",\r\n  \"Content-Encoding\": \"gzip\",\r\n  \"Set-Cookie\": \"__Secure-ID=123; Secure; Domain=example.com\",\r\n  \"Content-Length\": \"150\",\r\n  \"Vary\": \"Accept-Encoding, Accept, X-Requested-With\",\r\n});\r\n\r\nDeno.bench('headers iter', () => {\r\n  [...headers]\r\n})\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 323,
        "deletions": 399,
        "changed_files": 15,
        "created_at": "2023-08-14T16:18:47Z",
        "closed_at": "2023-08-15T19:36:36Z",
        "merged_at": "2023-08-15T19:36:36Z",
        "body": "To fix bugs around detection of when node emulation is required, we will just eagerly initialize it. The improvements we make to reduce the impact of the startup time:\r\n\r\n - [x] Process stdin/stdout/stderr are lazily created\r\n - [x] node.js global proxy no longer allocates on each access check\r\n - [x] Process checks for `beforeExit` listeners before doing expensive shutdown work\r\n - [x] Process should avoid adding global event handlers until listeners are added\r\n - [ ] ~Create a proxy for process.argv rather than adding getters in init~ (deferred)\r\n - [ ] ~Process listeners should not pay webidl penalty~ (deferred)\r\n\r\nBenchmarking this PR (`89de7e1ff`) vs main (`41cad2179`)\r\n\r\n```\r\n12:36 $ third_party/prebuilt/mac/hyperfine --warmup 100 -S none './deno-41cad2179 run ./empty.js' './deno-89de7e1ff run ./empty.js'\r\nBenchmark 1: ./deno-41cad2179 run ./empty.js\r\n  Time (mean \u00b1 \u03c3):      24.3 ms \u00b1   1.6 ms    [User: 16.2 ms, System: 6.0 ms]\r\n  Range (min \u2026 max):    21.1 ms \u2026  29.1 ms    115 runs\r\n \r\nBenchmark 2: ./deno-89de7e1ff run ./empty.js\r\n  Time (mean \u00b1 \u03c3):      24.0 ms \u00b1   1.4 ms    [User: 16.3 ms, System: 5.6 ms]\r\n  Range (min \u2026 max):    21.3 ms \u2026  28.6 ms    126 runs\r\n```\r\n\r\nFixes https://github.com/denoland/deno/issues/20142\r\nFixes https://github.com/denoland/deno/issues/15826\r\nFixes https://github.com/denoland/deno/issues/20028",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-14T14:15:35Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fix- removeEventListener removes listeners with different capture #20101\r\n\r\n<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-13T15:27:48Z",
        "closed_at": "2023-08-14T13:14:02Z",
        "merged_at": "2023-08-14T13:14:02Z",
        "body": "This PR adds caching to node's `req.headers`\r\n\r\n```js\r\nimport express from \"npm:express\";\r\nconst app = express();\r\n\r\napp.get(\"/\", function (req, res) {\r\n  const ua = req.header(\"User-Agent\");\r\n  const auth = req.header(\"Authorization\");\r\n  const type = req.header(\"Content-Type\");\r\n  const ip = req.header(\"X-Forwarded-For\");\r\n  res.end();\r\n});\r\n\r\napp.listen(3000);\r\n```\r\n\r\n**this PR**\r\n```\r\nwrk -d 10s --latency http://127.0.0.1:3000\r\nRunning 10s test @ http://127.0.0.1:3000\r\n  2 threads and 10 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency   155.64us  152.14us   5.74ms   97.39%\r\n    Req/Sec    35.00k     1.97k   39.10k    80.69%\r\n  Latency Distribution\r\n     50%  123.00us\r\n     75%  172.00us\r\n     90%  214.00us\r\n     99%  563.00us\r\n  703420 requests in 10.10s, 50.31MB read\r\nRequests/sec:  69648.45\r\nTransfer/sec:      4.98MB\r\n```\r\n\r\n**main**\r\n```\r\nwrk -d 10s --latency http://127.0.0.1:3000\r\nRunning 10s test @ http://127.0.0.1:3000\r\n  2 threads and 10 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency   217.95us  786.89us  26.26ms   98.23%\r\n    Req/Sec    32.32k     2.54k   37.19k    87.13%\r\n  Latency Distribution\r\n     50%  130.00us\r\n     75%  191.00us\r\n     90%  232.00us\r\n     99%    1.88ms\r\n  649411 requests in 10.10s, 46.45MB read\r\nRequests/sec:  64300.44\r\nTransfer/sec:      4.60MB\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-08-13T01:17:25Z",
        "closed_at": "2023-08-13T02:04:17Z",
        "merged_at": "2023-08-13T02:04:17Z",
        "body": "Fix #20022, fix #19627 (duplicate)\r\n\r\n#17333 upgraded clap from version 3.1 to version 4. clap version 3.2.0 (intentionally) broke a behavior that deno was relying on to make `deno run --v8-flags=--help` work without specifying a file, see clap-rs/clap#3793. The workaround was to make the script argument required _unless_ `--v8-flags` is present. This broke the expectation that all successfully parsed `run` commands have the script argument set, leading to the panic on `matches.remove_many::<String>(\"script_arg\").unwrap()`.\r\n\r\nClap, as far as I was able to find out, does not currently offer a neat solution to this problem. This PR adds logic to create and return a custom clap error when a parsed run command does not have the script argument.\r\n\r\nI added an appropriate test.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 23,
        "changed_files": 1,
        "created_at": "2023-08-12T17:30:01Z",
        "closed_at": "2023-08-12T18:29:01Z",
        "merged_at": "2023-08-12T18:29:01Z",
        "body": "This PR optimizes `Request` constructor init method step. It doubles the speed for known lowercased methods. I also added `PATCH` to known methods\r\n\r\n**this patch**\r\n\r\n```\r\nbenchmark                   time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n---------------------------------------------------------------------------- -----------------------------\r\nmethod: GET                  1.49 \u00b5s/iter     669,336.9     (1.35 \u00b5s \u2026 2.02 \u00b5s)   1.54 \u00b5s   2.02 \u00b5s   2.02 \u00b5s\r\nmethod: PATCH                1.85 \u00b5s/iter     540,921.5     (1.65 \u00b5s \u2026 2.02 \u00b5s)   1.91 \u00b5s   2.02 \u00b5s   2.02 \u00b5s\r\nmethod: get                  1.49 \u00b5s/iter     669,067.9     (1.28 \u00b5s \u2026 1.69 \u00b5s)   1.55 \u00b5s   1.69 \u00b5s   1.69 \u00b5s\r\n```\r\n\r\n**main**\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark                   time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n---------------------------------------------------------------------------- -----------------------------\r\nmethod: GET                   1.5 \u00b5s/iter     665,232.3      (1.3 \u00b5s \u2026 2.02 \u00b5s)   1.54 \u00b5s   2.02 \u00b5s   2.02 \u00b5s\r\nmethod: PATCH                2.47 \u00b5s/iter     404,052.7     (2.06 \u00b5s \u2026 4.05 \u00b5s)   2.51 \u00b5s   4.05 \u00b5s   4.05 \u00b5s\r\nmethod: get                     3 \u00b5s/iter     333,277.2     (2.72 \u00b5s \u2026 4.04 \u00b5s)   3.05 \u00b5s   4.04 \u00b5s   4.04 \u00b5s\r\n```\r\n\r\n```js\r\nDeno.bench(\"method: GET\", () => {\r\n  const r = new Request(\"https://deno.land\", {\r\n    method: \"GET\",\r\n  });\r\n});\r\n\r\nDeno.bench(\"method: PATCH\", () => {\r\n  const r = new Request(\"https://deno.land\", {\r\n    method: \"PATCH\",\r\n    body: '{\"foo\": \"bar\"}',\r\n  });\r\n});\r\n\r\nDeno.bench(\"method: get\", () => {\r\n  const r = new Request(\"https://deno.land\", {\r\n    method: \"get\",\r\n  });\r\n});\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2023-08-12T11:48:40Z",
        "closed_at": "2023-08-12T16:41:07Z",
        "merged_at": "2023-08-12T16:41:07Z",
        "body": "This PR optimizes `Request` constructor when `init` is not empty. This path is also used by `fetch` when `options` argument is used\r\n```js\r\nfetch(\"https://deno.land\", {\r\n  method: \"POST\",\r\n  body: 'land'\r\n});\r\n```\r\n\r\n- Removed 3 extra calls to `headerListFromHeaders`\r\n- Avoid `Object.keys` & `headerList` clone if `init.headers` is set\r\n- Only empty `headersList` (`.splice`) if it's not already empty. \r\n\r\n## Benchmarks\r\n\r\n**this patch**\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark                    time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------------------- -----------------------------\r\nRequest without headers       1.86 \u00b5s/iter     536,440.7     (1.67 \u00b5s \u2026 2.76 \u00b5s)   1.89 \u00b5s   2.76 \u00b5s   2.76 \u00b5s\r\nRequest with headers          1.96 \u00b5s/iter     509,440.5     (1.83 \u00b5s \u2026 2.17 \u00b5s)   1.99 \u00b5s   2.17 \u00b5s   2.17 \u00b5s\r\n```\r\n\r\n**main**\r\n\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark                    time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------------------- -----------------------------\r\nRequest without headers       1.96 \u00b5s/iter     510,201.5     (1.81 \u00b5s \u2026 2.64 \u00b5s)      2 \u00b5s   2.64 \u00b5s   2.64 \u00b5s\r\nRequest with headers          2.03 \u00b5s/iter     493,526.6     (1.84 \u00b5s \u2026 2.31 \u00b5s)   2.08 \u00b5s   2.31 \u00b5s   2.31 \u00b5s\r\n```\r\n\r\n```js\r\nDeno.bench(\"Request without headers\", () => {\r\n  const r = new Request(\"https://deno.land\", {\r\n    method: \"POST\",\r\n    body: '{\"foo\": \"bar\"}',\r\n  });\r\n});\r\n\r\nDeno.bench(\"Request with headers\", () => {\r\n  const r = new Request(\"https://deno.land\", {\r\n    method: \"POST\",\r\n    body: '{\"foo\": \"bar\"}',\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n});\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 75,
        "deletions": 43,
        "changed_files": 6,
        "created_at": "2023-08-12T05:46:57Z",
        "closed_at": "2023-10-04T21:43:58Z",
        "merged_at": "2023-10-04T21:43:58Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-08-12T04:24:39Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 23,
        "changed_files": 6,
        "created_at": "2023-08-11T20:11:06Z",
        "closed_at": "2023-08-12T19:04:45Z",
        "merged_at": "2023-08-12T19:04:45Z",
        "body": " - Patches from `deno_core` work upstream\r\n - Removed explicit v8 dep from `Cargo.toml`\r\n - Pointer compression enabled - fixes #18935",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-11T15:32:59Z",
        "closed_at": "2023-08-15T07:10:54Z",
        "merged_at": "2023-08-15T07:10:54Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-11T12:07:29Z",
        "closed_at": "2023-08-12T16:42:06Z",
        "merged_at": "2023-08-12T16:42:06Z",
        "body": "This PR caches `_iterableHeaders` for immutable `Headers` increasing the performance of `fetch` & server if headers are iterated.\r\n\r\nShould close #19466 \r\n\r\nI only cached immutable headers to address this comment https://github.com/denoland/deno/issues/19466#issuecomment-1589892373 since I didn't find any occurrence of header mutation on immutable headers. We can discuss caching for non-immutable, but I think this is a great first step.\r\n\r\n## BENCHMARK\r\n\r\n### Server\r\n```js\r\nconst addr = Deno.args[0] ?? \"127.0.0.1:4500\";\r\nconst [hostname, port] = addr.split(\":\");\r\nconst { serve } = Deno;\r\n\r\nserve({ hostname, port: Number(port), reusePort: true }, (req) => {\r\n  const headers = [...req.headers]; // req.headers are immutable, cannot set/append/delete\r\n  return new Response(\"ok\");\r\n});\r\n\r\n```\r\nUsed `wrk` with 5 headers\r\n```\r\nwrk -d 10s --latency -H \"X-Deno: true\" -H \"Accept: application/json\" -H \"X-Foo: bar\" -H \"User-Agent: wrk\" -H \"Accept-Encoding: gzip, br\" http://127.0.0.1:4500\r\n```\r\n\r\n\r\n**This patch**\r\n```\r\nRunning 10s test @ http://127.0.0.1:4500\r\n  2 threads and 10 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency    70.18us   22.89us 679.00us   81.37%\r\n    Req/Sec    71.55k     9.69k   82.18k    89.60%\r\n  Latency Distribution\r\n     50%   59.00us\r\n     75%   89.00us\r\n     90%   98.00us\r\n     99%  159.00us\r\n  1437891 requests in 10.10s, 193.35MB read\r\nRequests/sec: 142369.83\r\nTransfer/sec:     19.14MB\r\n```\r\n**main**\r\n```\r\nRunning 10s test @ http://127.0.0.1:4500\r\n  2 threads and 10 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency   112.78us   36.47us   2.09ms   77.99%\r\n    Req/Sec    44.30k     1.65k   49.14k    74.26%\r\n  Latency Distribution\r\n     50%   99.00us\r\n     75%  136.00us\r\n     90%  162.00us\r\n     99%  213.00us\r\n  890588 requests in 10.10s, 118.91MB read\r\nRequests/sec:  88176.37\r\nTransfer/sec:     11.77MB\r\n```\r\n### fetch\r\n\r\n```js\r\nconst res = await fetch('http://127.0.0.1:4500');\r\nDeno.bench(\"Headers iterator\", () => {\r\n  const i = [...res.headers]; // res.headers are immutable, cannot set/append/delete\r\n});\r\n```\r\n\r\n**this patch**\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark             time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n---------------------------------------------------------------------- -----------------------------\r\nHeaders iterator      329.5 ns/iter   3,034,909.0 (318.55 ns \u2026 364.34 ns)  331.1 ns 355.72 ns 364.34 ns\r\n```\r\n**main**\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark             time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n---------------------------------------------------------------------- -----------------------------\r\nHeaders iterator       2.59 \u00b5s/iter     386,372.1     (2.56 \u00b5s \u2026 2.68 \u00b5s)   2.59 \u00b5s   2.68 \u00b5s   2.68 \u00b5s\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 16,
        "changed_files": 5,
        "created_at": "2023-08-11T05:01:07Z",
        "closed_at": "2023-08-15T15:04:37Z",
        "merged_at": "2023-08-15T15:04:37Z",
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\nfix https://github.com/denoland/deno/issues/20079",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-08-11T03:53:56Z",
        "closed_at": "2023-08-11T07:34:23Z",
        "merged_at": "2023-08-11T07:34:23Z",
        "body": "Fixes https://github.com/denoland/deno/issues/19935",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 361,
        "deletions": 77,
        "changed_files": 5,
        "created_at": "2023-08-11T02:07:15Z",
        "closed_at": "2023-08-28T07:32:55Z",
        "merged_at": "2023-08-28T07:32:55Z",
        "body": "<!--\r\nBefore submitting a PR, please read https://deno.com/manual/contributing\r\n\r\n1. Give the PR a descriptive title.\r\n\r\n  Examples of good title:\r\n    - fix(std/http): Fix race condition in server\r\n    - docs(console): Update docstrings\r\n    - feat(doc): Handle nested reexports\r\n\r\n  Examples of bad title:\r\n    - fix #7123\r\n    - update docs\r\n    - fix bugs\r\n\r\n2. Ensure there is a related issue and it is referenced in the PR text.\r\n3. Ensure there are tests that cover the changes.\r\n4. Ensure `cargo test` passes.\r\n5. Ensure `./tools/format.js` passes without changing files.\r\n6. Ensure `./tools/lint.js` passes.\r\n7. Open as a draft PR if your work is still in progress. The CI won't run\r\n   all steps, but you can add '[ci]' to a commit message to force it to.\r\n8. If you would like to run the benchmarks on the CI, add the 'ci-bench' label.\r\n-->\r\nFix #20063.\r\nI also added a customized node_compat test.\r\nThe test passed with this fix, but when I tried with v1.36.0, some `AssertionError` were thrown, but they were ignored and the test still passed. Need helps in that regard.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 73,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2023-08-10T22:35:15Z",
        "closed_at": "2023-08-27T01:26:09Z",
        "merged_at": "2023-08-27T01:26:09Z",
        "body": "fixes #19741\r\n\r\nImpose a limit on the total atomic payload size",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2023-08-10T21:08:13Z",
        "closed_at": "2023-08-12T16:42:23Z",
        "merged_at": "2023-08-12T16:42:23Z",
        "body": "This PR improves the performance of `Headers.get` by using `Regex.test` instead of `.exec`. Also replaced the `Map` used for caching with an object which is a bit faster\r\n\r\n**This patch**\r\n\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.1 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark              time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------------- -----------------------------\r\nHeaders.get           124.71 ns/iter   8,018,687.3 (115.11 ns \u2026 265.66 ns) 126.05 ns 136.12 ns 142.37 ns\r\n```\r\n\r\n**1.36.1**\r\n\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.0 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark              time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------------- -----------------------------\r\nHeaders.get           218.91 ns/iter   4,568,172.3 (165.37 ns \u2026 264.44 ns) 241.62 ns 260.94 ns 262.67 ns\r\n```\r\n\r\n```js\r\nconst headers = new Headers({\r\n  \"Content-Type\": \"application/json\",\r\n  \"Date\": \"Thu, 10 Aug 2023 07:45:10 GMT\",\r\n  \"X-Deno\": \"Deno\",\r\n  \"Powered-By\": \"Deno\",\r\n  \"Content-Encoding\": \"gzip\",\r\n  \"Set-Cookie\": \"__Secure-ID=123; Secure; Domain=example.com\",\r\n  \"Content-Length\": \"150\",\r\n  \"Vary\": \"Accept-Encoding, Accept, X-Requested-With\",\r\n});\r\n\r\nDeno.bench(\"Headers.get\", () => {\r\n  headers.get(\"x-deno\");\r\n});\r\n```",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-08-10T17:45:13Z",
        "closed_at": "2023-08-10T18:19:21Z",
        "merged_at": "2023-08-10T18:19:21Z",
        "body": "Closes https://github.com/denoland/deno/issues/20075",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-08-10T15:29:15Z",
        "closed_at": "2023-08-10T17:45:56Z",
        "merged_at": "2023-08-10T17:45:55Z",
        "body": "This PR improves performance of `Deno.Serve` when providing `info` argument by creating `ServeHandlerInfo` class instead of creating an object literal with a getter on every request.\r\n\r\n```js\r\nDeno.serve((_req, info) => new Response(info.remoteAddr.transport) });\r\n```\r\n\r\n### Benchmarks\r\n```\r\nwrk -d 10s --latency http://127.0.0.1:4500\r\nRunning 10s test @ http://127.0.0.1:4500\r\n  2 threads and 10 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency    42.34us   16.30us   1.66ms   95.88%\r\n    Req/Sec   118.17k     2.95k  127.38k    76.73%\r\n  Latency Distribution\r\n     50%   38.00us\r\n     75%   41.00us\r\n     90%   56.00us\r\n     99%   83.00us\r\n  2375298 requests in 10.10s, 319.40MB read\r\nRequests/sec: 235177.04\r\nTransfer/sec:     31.62MB\r\n```\r\n\r\n**main**\r\n```\r\nwrk -d 10s --latency http://127.0.0.1:4500\r\nRunning 10s test @ http://127.0.0.1:4500\r\n  2 threads and 10 connections\r\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\r\n    Latency    78.86us  211.06us   3.58ms   96.52%\r\n    Req/Sec   105.90k     4.35k  117.41k    78.22%\r\n  Latency Distribution\r\n     50%   41.00us\r\n     75%   53.00us\r\n     90%   62.00us\r\n     99%    1.18ms\r\n  2127534 requests in 10.10s, 286.09MB read\r\nRequests/sec: 210647.49\r\nTransfer/sec:     28.33MB\r\n```\r\n\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.0 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark                 time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n-------------------------------------------------------------------------- -----------------------------\r\nnew ServeHandlerInfo      3.43 ns/iter 291,508,889.3    (3.07 ns \u2026 12.21 ns)   3.42 ns   3.84 ns   3.87 ns\r\n{} with getter           133.84 ns/iter   7,471,528.9   (92.9 ns \u2026 458.95 ns) 132.45 ns 364.96 ns 429.43 ns\r\n```\r\n\r\n\r\n----\r\n### Drawbacks:\r\n\r\n`.remoteAddr` is now not enumerable\r\n\r\n```\r\nServeHandlerInfo {}\r\n```\r\nvs\r\n```\r\n{ remoteAddr: [Getter] }\r\n```\r\nIt'll break any code trying to iterate through `info` keys (Doubt there's anyone doing it though)\r\n\r\n```js\r\nDeno.serve((req, info) => {\r\n  console.log(Object.keys(info).length === 0) // true;\r\n  return new Response(\"yes\");\r\n});\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 516,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-08-10T14:10:28Z",
        "closed_at": "2023-08-29T15:22:05Z",
        "merged_at": "2023-08-29T15:22:05Z",
        "body": "Closes #15811.\r\n\r\nSnipping tool screen recorder isn't working so here's some screenshots:\r\n![image](https://github.com/denoland/deno/assets/29990554/a7cb1569-19c1-498f-b199-35fdd384f862)\r\n![image](https://github.com/denoland/deno/assets/29990554/584079a0-7310-4ede-a857-dfa18d4e4026)\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-08-10T12:51:05Z",
        "closed_at": "2023-08-11T11:57:41Z",
        "merged_at": "2023-08-11T11:57:41Z",
        "body": "Closes https://github.com/denoland/deno/issues/19983\r\nCloses https://github.com/denoland/deno/issues/18303\r\nCloses https://github.com/denoland/deno/issues/16681\r\nCloses https://github.com/denoland/deno/issues/19978",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 98,
        "deletions": 75,
        "changed_files": 29,
        "created_at": "2023-08-10T12:50:14Z",
        "closed_at": "2023-08-10T13:44:42Z",
        "merged_at": "2023-08-10T13:44:42Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 97,
        "deletions": 74,
        "changed_files": 29,
        "created_at": "2023-08-10T09:11:24Z",
        "closed_at": "2023-08-10T10:25:03Z",
        "merged_at": "2023-08-10T10:25:02Z",
        "body": "Bumped versions for 1.36.1\n\nPlease ensure:\n- [x] Target branch is correct (`vX.XX` if a patch release, `main` if minor)\n- [x] Crate versions are bumped correctly\n- [x] deno_std version is incremented in the code (see `cli/deno_std.rs`)\n- [x] Releases.md is updated correctly (think relevancy and remove reverts)\n\nTo make edits to this PR:\n```shell\ngit fetch upstream release_1_36.1 && git checkout -b release_1_36.1 upstream/release_1_36.1\n```\n\ncc @littledivy",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2023-08-10T07:51:59Z",
        "closed_at": "2023-08-10T17:41:09Z",
        "merged_at": "2023-08-10T17:41:09Z",
        "body": "This PR optimizes the `getHeader` function by replacing `.filter` and `.map` with a `for` loop\r\n\r\n**this patch**\r\n\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.0 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark        time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------- -----------------------------\r\nHeaders.get      132.2 ns/iter   7,564,093.4 (125.81 ns \u2026 147.66 ns) 133.79 ns 144.92 ns 145.36 ns\r\n```\r\n\r\n**main**\r\n\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.0 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark        time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n----------------------------------------------------------------- -----------------------------\r\nHeaders.get     191.48 ns/iter   5,222,523.6 (182.75 ns \u2026 212.22 ns)  193.5 ns 205.96 ns 211.51 ns\r\n```\r\n\r\n```js\r\n\r\nconst headers = new Headers({\r\n  \"Content-Type\": \"application/json\",\r\n  \"Date\": \"Thu, 10 Aug 2023 07:45:10 GMT\",\r\n  \"X-Deno\": \"Deno\",\r\n  \"Powered-By\": \"Deno\",\r\n  \"Content-Encoding\": \"gzip\",\r\n  \"Set-Cookie\": \"__Secure-ID=123; Secure; Domain=example.com\",\r\n  \"Content-Length\": \"150\",\r\n  \"Vary\": \"Accept-Encoding, Accept, X-Requested-With\",\r\n});\r\n\r\nDeno.bench(\"Headers.get\", () => {\r\n  const i = headers.get(\"x-deno\");\r\n});\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-08-10T04:30:19Z",
        "closed_at": "2023-08-24T15:10:26Z",
        "merged_at": "2023-08-24T15:10:26Z",
        "body": "Bumps [trust-dns-server](https://github.com/bluejekyll/trust-dns) from 0.22.0 to 0.22.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/bluejekyll/trust-dns/releases\">trust-dns-server's releases</a>.</em></p>\n<blockquote>\n<h2>v0.22.1 - Deny response requests on the server</h2>\n<h2>0.22.1</h2>\n<h3>Fixed</h3>\n<ul>\n<li>(server) drop response messages <a href=\"https://redirect.github.com/bluejekyll/trust-dns/issues/1952\">#1952</a> by <a href=\"https://github.com/djc\"><code>@\u200bdjc</code></a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/bluejekyll/trust-dns/blob/main/CHANGELOG.md\">trust-dns-server's changelog</a>.</em></p>\n<blockquote>\n<h2>0.22.1</h2>\n<h3>Fixed</h3>\n<ul>\n<li>(server) drop response messages <a href=\"https://redirect.github.com/bluejekyll/trust-dns/issues/1952\">#1952</a> by <a href=\"https://github.com/djc\"><code>@\u200bdjc</code></a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/bluejekyll/trust-dns/commit/9f344b54cdd90cd1fe435c603c5b97fb32eda3f2\"><code>9f344b5</code></a> bump server and bin crates to 0.22.1</li>\n<li><a href=\"https://github.com/bluejekyll/trust-dns/commit/9e6e77293bc75f961695eb95fb23d2a56600de87\"><code>9e6e772</code></a> update CHANGELOG for 0.22.1</li>\n<li><a href=\"https://github.com/bluejekyll/trust-dns/commit/5f6278154d4ceaec11ae6c1f91222faa7bd43838\"><code>5f62781</code></a> Regenerate the test SSL certificates</li>\n<li><a href=\"https://github.com/bluejekyll/trust-dns/commit/2fd26031711b00ec0c88aa88044716ffb2f0ef94\"><code>2fd2603</code></a> server: drop response messages</li>\n<li>See full diff in <a href=\"https://github.com/bluejekyll/trust-dns/compare/v0.22.0...v0.22.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=trust-dns-server&package-manager=cargo&previous-version=0.22.0&new-version=0.22.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/denoland/deno/network/alerts).\n\n</details>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-08-10T01:35:57Z",
        "closed_at": "2023-08-10T21:35:01Z",
        "merged_at": "2023-08-10T21:35:01Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 110,
        "deletions": 26,
        "changed_files": 6,
        "created_at": "2023-08-09T23:50:03Z",
        "closed_at": "2023-09-05T15:36:36Z",
        "merged_at": "2023-09-05T15:36:36Z",
        "body": "fix https://github.com/denoland/deno/issues/20110",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-09T17:19:15Z",
        "closed_at": "2023-08-09T18:49:05Z",
        "merged_at": "2023-08-09T18:49:05Z",
        "body": "Mac builds are occasionally flaking out on these.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-08-09T16:44:32Z",
        "closed_at": "2023-08-09T23:36:48Z",
        "merged_at": "2023-08-09T23:36:48Z",
        "body": "This PR slightly improves performance of `Header` iterator by using `.concat` instead of spread operator.\r\n\r\n**This patch**\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.0 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark             time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n---------------------------------------------------------------------- -----------------------------\r\nHeaders iterator       1.49 \u00b5s/iter     669,569.7     (1.48 \u00b5s \u2026 1.56 \u00b5s)    1.5 \u00b5s   1.56 \u00b5s   1.56 \u00b5s\r\n```\r\n\r\n**Main**\r\n```\r\ncpu: 13th Gen Intel(R) Core(TM) i9-13900H\r\nruntime: deno 1.36.0 (x86_64-unknown-linux-gnu)\r\n\r\nbenchmark             time (avg)        iter/s             (min \u2026 max)       p75       p99      p995\r\n---------------------------------------------------------------------- -----------------------------\r\nHeaders iterator       1.62 \u00b5s/iter     617,624.9     (1.59 \u00b5s \u2026 1.66 \u00b5s)   1.63 \u00b5s   1.66 \u00b5s   1.66 \u00b5s\r\n```\r\n\r\n```js\r\nconst headers = new Headers({\r\n  \"Content-Type\": \"application/json\",\r\n  \"Date\": \"Wed, 09 Aug 2023 11:37:57 GMT\",\r\n});\r\n\r\nDeno.bench(\"Headers iterator\", () => {\r\n  const i = [...headers];\r\n});\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 31,
        "changed_files": 3,
        "created_at": "2023-08-09T16:29:41Z",
        "closed_at": "2023-08-09T17:45:35Z",
        "merged_at": "2023-08-09T17:45:35Z",
        "body": "The original implementation of `Cache` used a custom `shutdown` method on the resource, but to simplify fast streams work we're going to move this to an op of its own.\r\n\r\nWhile we're in here, we're going to replace `opAsync` with `ensureFastOps`. `op2` work will have to wait because of some limitations to our async support, however.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 22,
        "changed_files": 2,
        "created_at": "2023-08-08T22:44:29Z",
        "closed_at": "2023-08-09T16:47:47Z",
        "merged_at": "2023-08-09T16:47:47Z",
        "body": "This is unused and will allow us to remove `FetchRequestBodyResource` in a future PR.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 32,
        "changed_files": 9,
        "created_at": "2023-08-08T18:50:17Z",
        "closed_at": "2023-08-08T20:28:18Z",
        "merged_at": "2023-08-08T20:28:18Z",
        "body": "Rename some of the helper methods on the Fs trait to be suffixed with `_sync` /\n`_async`, in preparation of the introduction of more async methods for some\nhelpers.\n\nAlso adds a `read_text_file_async` helper to complement the renamed\n`read_text_file_sync` helper.\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2023-08-08T08:55:09Z",
        "closed_at": "2023-08-08T10:05:42Z",
        "merged_at": "2023-08-08T10:05:42Z",
        "body": "This PR ensures that the original signal event is fired before any dependent signal events.\r\n\r\n---\r\nThe enabled tests fail on `main`:\r\n\r\n```\r\nassert_array_equals: Abort events fired in correct order expected property 0 to be \r\n\"original-aborted\" but got \"clone-aborted\" (expected array [\"original-aborted\", \"clone-aborted\"] \r\ngot [\"clone-aborted\", \"original-aborted\"])\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2023-08-08T04:00:19Z",
        "closed_at": "2023-08-08T07:21:55Z",
        "merged_at": "2023-08-08T07:21:55Z",
        "body": "Not sure why `40_testing.js` is there. The other two `00_typescript.js` and `99_main_compiler.js` should be covered by `files_loaded_during_snapshot` at the end.\r\n\r\nThis helps with `__runtime_js_sources` wrt changing `40_testing.js`.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2023-08-08T01:41:22Z",
        "closed_at": "2023-08-08T13:15:19Z",
        "merged_at": "2023-08-08T13:15:19Z",
        "body": "This is for when semiColons: false\r\n\r\nCloses #20089\r\n",
        "comments": 0
    }
]