[
    {
        "merged": false,
        "additions": 2,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-10-17T22:44:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Add a memory barrier on the failure case of the\r\ncompare-and-swap for mips, this avoids potential\r\nrace conditions.\r\n\r\nFor #63506",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-10-17T22:38:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Add a memory barrier on the failure case of the\r\ncompare-and-swap for arm, this avoids potential\r\nrace conditions.\r\n\r\nFor #63506",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-17T14:39:20Z",
        "closed_at": "2023-10-18T00:41:14Z",
        "merged_at": null,
        "body": "The function WriteTabs has been renamed WritePluginTable.",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 2907555,
        "deletions": 0,
        "changed_files": 12647,
        "created_at": "2023-10-17T14:16:17Z",
        "closed_at": "2023-10-17T14:24:51Z",
        "merged_at": null,
        "body": "The function WriteTabs has been renamed WritePluginTable in [this commit](https://github.com/golang/go/commit/f47cfd6cb55ce0ba6a3f77eeb33c60713f8493e9).\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-10-17T14:10:38Z",
        "closed_at": "2023-10-17T18:58:56Z",
        "merged_at": null,
        "body": "The current output for empty declarations such as var, const, import\r\nresults in \"var\", \"const\", \"import\" respectively. These are not valid\r\nand the parser will promptly reject them as invalid syntax.\r\n\r\nThis CL updates this behavior by adding \"()\" to the output of empty\r\ndecls so the syntax becomes valid, e.g \"var ()\" instead of \"var\".\r\n\r\nFixes #63566",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-17T07:31:14Z",
        "closed_at": null,
        "merged_at": null,
        "body": "When reading through the docs, I found that the sentence flows better with\r\nthe `to` present.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-10-16T21:51:17Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Changes trailing-NUL-counting behavior for abstract addresses\r\nstarting with the NUL character to be the same as abstract \r\naddresses starting with the @ character.\r\n\r\nFor #63579.",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2023-10-16T15:54:44Z",
        "closed_at": "2023-10-16T15:56:20Z",
        "merged_at": null,
        "body": "For https://github.com/golang/go/issues/23672\r\nUpdates https://github.com/golang/go/issues/63211\r\nFixes https://github.com/golang/go/issues/63213\r\nFixes https://github.com/advisories/GHSA-679v-hh23-h5jh\r\n\r\nCherry-pick https://github.com/golang/go/commit/31d5b604ac0adb58aec4870ac1b974c08312fd49 from release-branch.go1.20.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-15T23:25:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "DO NOT SUBMIT\r\n\r\nAfter CL 534295 was merged to fix a CVE it introduced\r\nan underflow when we try to decrement sc.curHandlers\r\nin handlerDone.\r\n\r\nPull in a fix from x/net/http2:\r\nhttp2: fix underflow in http2 server push\r\nhttps://go-review.googlesource.com/c/net/+/535595\r\n\r\nFixes #63511\r\n\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2023-10-15T19:06:55Z",
        "closed_at": null,
        "merged_at": null,
        "body": "There were a few Mercurial command line uses that could cause the wrong\r\ndata to be used:\r\n\r\n* The log command needs '-r.' to specify the currently checked out commit\r\n* HGPLAIN is needed to disable optional output on commands\r\n* '-S' is needed to for the 'status' command to recurse into any subrepos\r\n\r\nThe most likely issue to be seen here was the use of '-l1' instead of\r\n'-r.', which prints the most recent commit instead of the current checkout.\r\nSince tagging in Mercurial creates a new commit, this basically means the\r\ndata was wrong for every tagged build. \r\n\r\nThis also adds an hgrc config file to the test, with config options to\r\nkeep the time and author values fixed.  It's what's used in the Mercurial\r\ntest harness to keep the commit hashes stable, and allows the tests here to\r\nalso match the time and the revision ID, to prevent regressing.\r\n\r\nFixes #63532",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-10-15T08:26:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 8
    },
    {
        "merged": false,
        "additions": 176,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2023-10-14T23:59:48Z",
        "closed_at": "2023-10-15T21:18:52Z",
        "merged_at": null,
        "body": "Adding a cache to compiled expressions can increase performance when the same expression is used multiple times.\r\n\r\nThis commit is inspired by how JavaScript handles regexp with a cache.\r\n\r\nThis commit also includes an interval to periodically clear old cache items that have not been accessed in a while.\r\n\r\nThe loop runs every 10 minutes, and tracks the memory usage to determine if the cache needs to be cleared early.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 123,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-10-14T23:20:40Z",
        "closed_at": "2023-10-14T23:48:25Z",
        "merged_at": null,
        "body": "regexp: improved compile performance with a cache\r\n\r\nAdding a cache to compiled expressions can increase the performance when the same expression is used multiple times, even if used by different go modules. This commit is a similar idea to how JavaScript handles regexp with a cache. This commit also includes an interval to clear periodically clear old cache items that have not been accessed in a while. This loop runs every 10 minutes, and also tracks the memory usage and determines if the cache needs to be cleared early.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-10-14T20:01:30Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The previous TODO comments were somewhat ambiguous. This aims to\r\nprovide a clearer understanding of the behavior on Windows.\r\n\r\nWindows does not offer a way to peek at the current backlog length, this\r\nis explicitly stated in the winapi for `listen`. \r\n\r\nWhen set to `syscall.SOMAXCONN`, the OS dynamically adjusts the\r\nbacklog to a maximum reasonable value. It goes as far as the dotnet\r\nruntime itself introducing a new version of `listen` that does not accept a\r\nbacklog parameter to help eliminate the confusion when comparing the\r\nbehavior with UNIXes.\r\n\r\nThe docs also mention that `SOMAXCONN_HINT(N)` can be used, and that\r\nit clips the final computed value between (200, 65535), which suggests\r\nwindows might use a `uint16` to back this number. Either way it does not\r\nmatter since windows will adjust this value anyway, so I removed the\r\nwrapping TODO as well.\r\n\r\nSee https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-listen\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 43,
        "changed_files": 3,
        "created_at": "2023-10-14T13:54:57Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The forceGoDNS/forceCgoDNS functions currently return nil \r\nor an empty func on plan9, but they don't have to, because \r\nwe already support go resolver there (Dial field required).\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 138,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-10-14T09:54:47Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 8
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2023-10-14T09:53:49Z",
        "closed_at": "2023-10-16T19:39:46Z",
        "merged_at": null,
        "body": "Fixes golang/go#51261\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-10-14T09:21:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "IsZero does the same thing, using this rather than writing it again.\r\n\r\nFollow-up to https://github.com/golang/go/pull/63519",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-10-13T15:52:51Z",
        "closed_at": "2023-10-14T08:58:53Z",
        "merged_at": null,
        "body": "IsZero does the same thing, using this rather than writing it again.\r\n\r\nFollow-up to https://github.com/golang/go/pull/63519",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-13T12:33:31Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 8
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-10-12T15:43:11Z",
        "closed_at": "2023-10-12T21:05:18Z",
        "merged_at": null,
        "body": "IsZero does the same thing, using this rather than writing it again.",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 37,
        "changed_files": 1,
        "created_at": "2023-10-11T07:56:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 17,
        "changed_files": 2,
        "created_at": "2023-10-11T01:50:05Z",
        "closed_at": "2023-10-11T02:21:02Z",
        "merged_at": null,
        "body": "Currently, `go mod vendor` copy all files matched by //go:embed, even when it is in a _test.go file. According to the documentation, it should not include test code for vendored packages.\r\n\r\nFixes #63473",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-10T15:47:37Z",
        "closed_at": "2023-10-12T13:17:23Z",
        "merged_at": null,
        "body": null,
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-09T20:55:59Z",
        "closed_at": "2023-10-10T00:36:24Z",
        "merged_at": null,
        "body": "The \"by Cleanup\" detail about the removal mechanism is not necessary for\r\nusers. The previous wording could even cause confusion whether they\r\nshould do something for Cleanup to occur.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 21,
        "changed_files": 21,
        "created_at": "2023-10-09T20:47:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 10
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-10-09T16:30:16Z",
        "closed_at": "2023-10-10T00:43:32Z",
        "merged_at": null,
        "body": null,
        "comments": 7
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-09T14:15:39Z",
        "closed_at": "2023-10-12T01:04:42Z",
        "merged_at": null,
        "body": "Noticed CL 275992 added sys/unix support for zos/s390x, this CL extracts device\r\nmajor/minor number on zos/s390x and sets Devmajor and Devminor in Header.\r\n    \r\nCode based on the corresponding Major/Minor implementations in golang.org/x/sys/unix.",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-08T15:46:49Z",
        "closed_at": "2023-10-09T22:20:04Z",
        "merged_at": null,
        "body": null,
        "comments": 9
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-10-08T13:43:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #50856 ",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2023-10-08T12:15:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 24
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-10-07T17:03:36Z",
        "closed_at": "2023-10-12T01:05:02Z",
        "merged_at": null,
        "body": "Comparing to bytes.FieldsFunc, there is a difference in setting start\r\nto negative. Explicitly using -1 makes the code more clear and readable.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-07T16:09:15Z",
        "closed_at": "2023-10-09T22:05:21Z",
        "merged_at": null,
        "body": "Like sort.Search, use \"h := int(uint(i+j) >> 1)\" to compute the median h.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 351,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-07T13:10:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "For functions or methods without examples,\r\nexcept for those that implement specific interfaces such as MarshalText, \r\nthis CL ensures at least one example.\r\n\r\nFor #59321",
        "comments": 21
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2023-10-06T14:55:35Z",
        "closed_at": "2023-10-07T08:55:58Z",
        "merged_at": null,
        "body": null,
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-06T09:20:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The current runtime optimizes more for copy than append. See #57759 for details.\r\nThis might be not a worthy change, but it has no known drawbacks.\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-10-05T18:29:52Z",
        "closed_at": "2023-10-06T20:30:48Z",
        "merged_at": null,
        "body": "CL 469555 changed Compact to use append instead of bytes.Buffer.\r\n\r\nappendCompact iterates over input src slice and performs escaping\r\nof certain characters.\r\nTo optimize copying it does not copy characters one by one\r\nbut keeps track of the start offset of the data to copy when\r\nit reaches next character to escape or the end of the input.\r\n\r\nThis start offset may become greater than input character offset\r\nso copying of preceding data should check this condition.\r\n\r\nCL 469555 removed boundary checks for copying data preceding\r\nescaped characters and this change restores them.\r\n\r\nFixes https://github.com/golang/go/issues/63379",
        "comments": 16
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-10-05T13:19:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-10-05T09:29:58Z",
        "closed_at": "2023-10-06T21:07:58Z",
        "merged_at": null,
        "body": null,
        "comments": 28
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-10-04T02:24:31Z",
        "closed_at": "2023-10-10T15:05:46Z",
        "merged_at": null,
        "body": "Handwritten nonSpace help function is not needed.\r\n",
        "comments": 21
    },
    {
        "merged": false,
        "additions": 68,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-10-03T23:43:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Compare provides three-way comparison for Ordered types, which certain\r\nalgorithms benefit from.\r\n\r\nFloat comparisons require NaN handling that should be optimized away for\r\nall other types.\r\nString comparisons benefit from using != which short-circuits on\r\ndifferent length strings.\r\nIdeally the compiler would recognize the pattern and specialize on\r\nstrings, but this tries to improve the status quo.\r\n\r\ngoos: darwin\r\ngoarch: amd64\r\npkg: cmp\r\ncpu: Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz\r\n                   \u2502  base.txt   \u2502              patch.txt              \u2502\r\n                   \u2502   sec/op    \u2502   sec/op     vs base                \u2502\r\nCompare_int-12       1.638n \u00b1 1%   1.635n \u00b1 2%        ~ (p=0.698 n=10)\r\nCompare_float64-12   2.397n \u00b1 1%   2.206n \u00b1 0%   -7.99% (p=0.000 n=10)\r\nCompare_strings-12   8.054n \u00b1 1%   6.705n \u00b1 2%  -16.75% (p=0.000 n=10)\r\ngeomean              3.162n        2.892n        -8.56%\r\n\r\nUpdates #31187\r\nUpdates #61725",
        "comments": 20
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-03T17:49:18Z",
        "closed_at": "2023-10-03T18:10:47Z",
        "merged_at": null,
        "body": "Everytime we want to represent a \"Day\" duration, we need to define a const as 24 * time.Hour directly in the code, and it's kinda boring \r\n\r\nWhy don't define it directly in the time package? That's the point of this one line PR",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-10-03T10:30:41Z",
        "closed_at": "2023-10-03T19:58:39Z",
        "merged_at": null,
        "body": null,
        "comments": 13
    },
    {
        "merged": false,
        "additions": 118,
        "deletions": 115,
        "changed_files": 5,
        "created_at": "2023-10-03T10:14:20Z",
        "closed_at": "2023-10-03T17:00:33Z",
        "merged_at": null,
        "body": "For #48798",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 186,
        "deletions": 264,
        "changed_files": 10,
        "created_at": "2023-10-03T09:30:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #63116",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-10-03T05:55:35Z",
        "closed_at": "2023-10-04T04:28:20Z",
        "merged_at": null,
        "body": null,
        "comments": 15
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-03T02:43:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #49136\r\nFor #57752",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-10-01T19:44:11Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR adds an helper FileContentDisposition that builds multipart\r\nContent-Disposition header contents with field name and file name,\r\nescaping quotes and escape characters.\r\n\r\nThe  function is then called in the related helper CreateFormFile.\r\n\r\nThe new function allows users to add other custom MIMEHeaders,\r\nwithout having to rewrite the char escaping logic of field name and\r\nfile name, which is provided by the new helper.\r\n\r\nFixes #46771\r\n",
        "comments": 22
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 68,
        "changed_files": 10,
        "created_at": "2023-10-01T12:04:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 30
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 17,
        "changed_files": 2,
        "created_at": "2023-10-01T11:02:22Z",
        "closed_at": "2023-10-02T17:47:17Z",
        "merged_at": null,
        "body": null,
        "comments": 12
    },
    {
        "merged": false,
        "additions": 78,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-09-30T18:03:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "These primitives will be used by the new And/Or sync/atomic apis.\r\n\r\nFor #61395",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 82,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-09-30T15:28:38Z",
        "closed_at": null,
        "merged_at": null,
        "body": "These primitives will be used by the new And/Or sync/atomic apis.\r\n\r\nFor #61395",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2023-09-30T08:51:22Z",
        "closed_at": "2023-09-30T08:52:34Z",
        "merged_at": null,
        "body": "This enables publicationBarrier to be used as an intrinsic on riscv64, optimizing the required function call and return instructions for invoking the \"runtime.publicationBarrier\" function.\r\n\r\nThis function is called by mallocgc.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2023-09-30T08:49:27Z",
        "closed_at": "2023-09-30T08:50:57Z",
        "merged_at": null,
        "body": "This enables publicationBarrier to be used as an intrinsic on riscv64, optimizing the required function call and return instructions for invoking the \"runtime.publicationBarrier\" function.\r\n\r\nThis function is called by mallocgc.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2023-09-30T07:35:54Z",
        "closed_at": "2023-09-30T08:17:24Z",
        "merged_at": null,
        "body": "This enables publicationBarrier to be used as an intrinsic on riscv64, optimizing the required function call and return instructions for invoking the \"runtime.publicationBarrier\" function.\r\n\r\nThis function is called by mallocgc.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2023-09-30T07:19:44Z",
        "closed_at": "2023-09-30T07:35:24Z",
        "merged_at": null,
        "body": "This enables publicationBarrier to be used as an intrinsic on riscv64, optimizing the required function call and return instructions for invoking the \"runtime.publicationBarrier\" function.\r\n\r\nThis function is called by mallocgc.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2023-09-30T06:23:09Z",
        "closed_at": "2023-09-30T07:17:04Z",
        "merged_at": null,
        "body": "This enables publicationBarrier to be used as an intrinsic on riscv64, optimizing the required function call and return instructions for invoking the \"runtime.publicationBarrier\" function.\r\n\r\nThis function is called by mallocgc.\r\n\r\nChange-Id: I7d63657fde8d58a248ddb94d1ecbc6fc10a34266\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-30T06:08:47Z",
        "closed_at": "2023-10-04T05:01:15Z",
        "merged_at": null,
        "body": "While reading the source code, I noticed that bytes.FieldsFunc is\r\nlittle different from strings.FieldsFunc in assigning 'start'.\r\n    \r\nHowever I don't have an amd64 machine to verify this:\r\n\"Note: using -1 here consistently and reproducibly\r\nslows down this code by a several percent on amd64.\"\r\n    \r\nSo I think this CL is at least for consistency with strings.FieldsFunc.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-29T21:16:36Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This function will be useful mostly during testing. When we want to pass a string pointer to a struct member each time we have to create a separate variable and pass the address of that to the member variable, Which is a pain. This wrapper function will ease all those efforts.\r\nEg: \r\ntype Employee struct{\r\nName *string\r\n}\r\n\r\nTo pass a variable in testing , we have to\r\ntestName  := \"hello\"\r\n\r\nemp := Employee{\r\n  Name: &testName,\r\n}\r\n\r\nWith this function it is\r\n\r\nemp: = Employee{\r\n  Name: strings.StringPointerFrom(\"hello\")\r\n}\r\n\r\nIt is really helpful when we are using table tests.\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 154,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2023-09-29T19:45:35Z",
        "closed_at": null,
        "merged_at": null,
        "body": "These primitives will be used by the new And/Or sync/atomic apis.\r\n\r\nImplemented for mips/mipsle and mips64/mips64le.\r\n\r\nFor #61395",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 82,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-09-29T18:52:59Z",
        "closed_at": "2023-10-03T20:12:55Z",
        "merged_at": null,
        "body": "These primitives will be used by the new And/Or sync/atomic apis.\r\n\r\nFor #61395\r\n",
        "comments": 16
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-28T21:51:06Z",
        "closed_at": "2023-09-29T13:16:06Z",
        "merged_at": null,
        "body": "Reset r.buffer on Reset to avoid subsequent Read calls\r\nobserving previously decoded data.\r\n\r\nFor #62513\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 130,
        "deletions": 43,
        "changed_files": 5,
        "created_at": "2023-09-28T16:35:26Z",
        "closed_at": "2023-10-02T23:23:26Z",
        "merged_at": null,
        "body": "The cgo version (unix) is populating the GetAddrInfo hints\r\nbased on the network parameter, but windows not quite.\r\n\r\nThis change populates the hints the same way as the\r\ncgo unix version does now.\r\n\r\nThis bug was spotted by Bryan in CL 530415.\r\nhttps://go-review.googlesource.com/c/go/+/530415/comment/76640dc7_ed0409ca/",
        "comments": 46
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 28,
        "changed_files": 9,
        "created_at": "2023-09-28T05:25:27Z",
        "closed_at": "2023-09-29T18:56:43Z",
        "merged_at": null,
        "body": "Currently we are bootstrapping with Go 1.20, origRlimitNofile can\r\nbe changed to atomic.Pointer[Rlimit].",
        "comments": 31
    },
    {
        "merged": false,
        "additions": 59,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-09-28T03:04:05Z",
        "closed_at": null,
        "merged_at": null,
        "body": "These primitives will be used by the new And/Or sync/atomic apis.\r\n\r\nFor #61395",
        "comments": 34
    },
    {
        "merged": false,
        "additions": 95,
        "deletions": 18,
        "changed_files": 56,
        "created_at": "2023-09-28T02:43:47Z",
        "closed_at": null,
        "merged_at": null,
        "body": "**Introduction**\r\n\r\nIn the current Go math package, when the architecture has a Floating-Point Unit (FPU), it accelerates floating-point computations using assembly code tailored to take advantage of the architecture's FPU. While this approach offers excellent performance, it creates compatibility issues with softfloat.  To support softfloat, we can use `-gcflags=all=-d=softfloat`, which can convert floating-point calculations to softfloat within the compiler, but it doesn't impact any assembly code in the math package. (The related issue can be found here: [[link to GitHub issue #62470](https://github.com/golang/go/issues/62470)].)\r\n\r\nTo address this issue, we propose introducing a new build tag that disables the math package from utilizing FPU-related assembly code for performance optimization, thereby providing support for softfloat.\r\n\r\n**Proposed Solution**\r\n\r\nTo support softfloat in the Go math package, we propose adding a new build tag, let's call it `math_pure_go`, that users can apply to disable the use of FPU-specific assembly code in the math package. We can use the `math_pure_go` build tag to disable the assembly in `math` package. With the build tag `-tags=math_pure_go` and `-gcflags=all=-d=softfloat`, we can support softfloat for all platforms.\r\n\r\n```shell\r\ngo build -gcflags=all=-d=softfloat -tags=math_pure_go\r\n```\r\n\r\n**Benefit**\r\n\r\n- This enhancement will make the Go math package compatible with softfloat, allowing Go to be used in environments or on architectures where hardware FPU support is not available or desired.\r\n- Users who require softfloat support will be able to utilize the math package without encountering compatibility issues.\r\n- The softfloat support is necessary in many scenarios, such as blockchain and cryptographic technologyies. \r\n  - In blockchain technology, where determinism and consistency are critical, using softfloat ensures consistent results across various platforms. This is crucial for achieving consensus among nodes in a decentralized network. \r\n  - Zero-knowledge proofs are cryptographic techniques that rely on precise and consistent mathematical operations. Softfloat support is essential for achieving consistent and predictable results when implementing zero-knowledge proof systems.\r\n- The proposal aligns with Go's philosophy of providing flexibility and compatibility across various platforms and use cases.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-09-27T23:29:58Z",
        "closed_at": "2023-09-28T18:01:31Z",
        "merged_at": null,
        "body": "A value of 0 has same meaning as no Dictionary_ID,\r\nin which case the frame may or may not need a dictionary to be decoded,\r\nand the ID of such a dictionary is not specified.\r\n\r\nSee https://github.com/facebook/zstd/issues/2172\r\n\r\nFor #62513\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-27T12:44:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-09-26T22:56:57Z",
        "closed_at": "2023-09-27T13:12:43Z",
        "merged_at": null,
        "body": "For #62513\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-26T21:59:22Z",
        "closed_at": "2023-09-28T03:23:15Z",
        "merged_at": null,
        "body": "For #62513\r\n",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 26,
        "changed_files": 2,
        "created_at": "2023-09-26T20:21:58Z",
        "closed_at": "2023-09-28T18:09:21Z",
        "merged_at": null,
        "body": "For #62513",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-26T16:59:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "I got problem with XML title like this:\r\n`version=\"1.0\" encoding =\"utf-8\"`\r\nHopefully this will help somebody with xml parsing in Go.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-26T16:55:57Z",
        "closed_at": "2023-09-26T16:58:36Z",
        "merged_at": null,
        "body": "I got problem with XML title like this:\r\n`version=\"1.0\" encoding =\"utf-8\"`\r\nHopefully this will help somebody with xml parsing in Go.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-26T12:18:10Z",
        "closed_at": "2023-09-27T01:53:47Z",
        "merged_at": null,
        "body": "Take null-byte into account and trim only if needed. Fixes #63217\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2023-09-26T05:32:24Z",
        "closed_at": "2023-09-27T01:22:45Z",
        "merged_at": null,
        "body": "This is a follow up of CL 530120.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-26T05:19:43Z",
        "closed_at": "2023-09-26T16:40:01Z",
        "merged_at": null,
        "body": null,
        "comments": 10
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-09-26T05:11:49Z",
        "closed_at": "2023-09-28T23:38:38Z",
        "merged_at": null,
        "body": "Since #43684 made 'go get -d' the default behavior, just warn that\r\n-d is a no-op.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 58,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2023-09-25T23:37:16Z",
        "closed_at": "2023-09-27T14:43:34Z",
        "merged_at": null,
        "body": "Set window size to frame content size when single segment flag is set.\r\n\r\nFor #62513\r\n",
        "comments": 24
    },
    {
        "merged": false,
        "additions": 188,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2023-09-25T09:01:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Before, when the query failed we returned a simple \"server misbehaving\" \r\nerror, with this change the go resolver will report detailed errors\r\nwith the use of the EDE extension found in the OPT resource.\r\nGiven that resolvers are now starting to support this EDNS(0) option,\r\nI think it is worth to support it in the pure go resolver.\r\n\r\nFixes #63192",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-09-25T08:37:50Z",
        "closed_at": "2023-10-03T19:45:04Z",
        "merged_at": null,
        "body": null,
        "comments": 10
    },
    {
        "merged": false,
        "additions": 75,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-09-24T22:59:07Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes #63194",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-09-24T04:20:26Z",
        "closed_at": "2023-09-25T07:07:58Z",
        "merged_at": null,
        "body": "% go doc runtime/metrics.Description | grep 'whether or not'\r\n% go doc runtime/metrics | grep 'whether or not'\r\n\r\nUpdate these doc comments to use more idiomatic and common phrases\r\ninstead of \"whether or not\".\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 42,
        "changed_files": 3,
        "created_at": "2023-09-23T23:26:18Z",
        "closed_at": "2023-09-26T08:13:16Z",
        "merged_at": null,
        "body": "Change reverseBitReader.val return type to make it inlineable.\r\n\r\ngoos: linux\r\ngoarch: amd64\r\npkg: internal/zstd\r\n        \u2502 /tmp/BenchmarkLarge.old \u2502       /tmp/BenchmarkLarge.new       \u2502\r\n        \u2502         sec/op          \u2502   sec/op     vs base                \u2502\r\nLarge-8               7.201m \u00b1 2%   6.008m \u00b1 4%  -16.58% (p=0.000 n=10)\r\n\r\n        \u2502 /tmp/BenchmarkLarge.old \u2502       /tmp/BenchmarkLarge.new        \u2502\r\n        \u2502           B/s           \u2502     B/s       vs base                \u2502\r\nLarge-8              23.64Mi \u00b1 2%   28.33Mi \u00b1 3%  +19.87% (p=0.000 n=10)\r\n\r\n        \u2502 /tmp/BenchmarkLarge.old \u2502       /tmp/BenchmarkLarge.new        \u2502\r\n        \u2502          B/op           \u2502     B/op      vs base                \u2502\r\nLarge-8              31.99Ki \u00b1 3%   26.57Ki \u00b1 1%  -16.92% (p=0.000 n=10)\r\n\r\n        \u2502 /tmp/BenchmarkLarge.old \u2502    /tmp/BenchmarkLarge.new     \u2502\r\n        \u2502        allocs/op        \u2502 allocs/op   vs base            \u2502\r\nLarge-8                0.000 \u00b1 0%   0.000 \u00b1 0%  ~ (p=1.000 n=10)\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-23T08:38:25Z",
        "closed_at": "2023-09-25T14:53:15Z",
        "merged_at": null,
        "body": "When running crypto/tls tests with GOEXPERIMENT=boringcrypto, some\r\ntests are embedded with unreadable hexadecimal values:\r\n\r\n  === RUN   TestBoringServerSignatureAndHash/5053...3536\r\n\r\nThis corresponds to a string representation of SignatureScheme as it\r\nimplements fmt.Stringer.  With this change, the above will be printed\r\nas:\r\n\r\n  === RUN   TestBoringServerSignatureAndHash/PSSWithSHA256",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2023-09-23T04:11:11Z",
        "closed_at": "2023-09-27T14:27:08Z",
        "merged_at": null,
        "body": "Currently, the Go bootstrap toolchain is bumped to 1.20.",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 9,
        "changed_files": 9,
        "created_at": "2023-09-22T16:51:07Z",
        "closed_at": "2023-09-25T14:36:54Z",
        "merged_at": null,
        "body": null,
        "comments": 15
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-22T13:46:24Z",
        "closed_at": "2023-09-22T21:25:38Z",
        "merged_at": null,
        "body": "The https://go.dev/security is about: \"This page provides \r\nresources for Go developers to improve security for their \r\nprojects.\", https://go.dev/security/policy is about Go Security Policy.\r\n\r\ngo.dev/security links to go.dev/security/policy, \r\nbut I think it is better to link directly to go.dev/security/policy \r\nin this case.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 11,
        "changed_files": 8,
        "created_at": "2023-09-22T10:23:53Z",
        "closed_at": "2023-09-28T13:50:30Z",
        "merged_at": null,
        "body": null,
        "comments": 46
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-22T09:45:06Z",
        "closed_at": "2023-09-22T09:46:52Z",
        "merged_at": null,
        "body": "This PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-09-22T05:05:50Z",
        "closed_at": "2023-09-27T14:27:05Z",
        "merged_at": null,
        "body": "Also make 'cmd' a const for it is in fact immutable.",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2023-09-21T07:49:41Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #63136",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-20T23:31:54Z",
        "closed_at": "2023-09-21T16:22:13Z",
        "merged_at": null,
        "body": "After CL 528817, *sigctxt.fault of all arches return uintptr, so\r\nthere is no need to convert 'c.fault()' to uintptr anymore.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-20T12:52:35Z",
        "closed_at": "2023-09-22T04:21:03Z",
        "merged_at": null,
        "body": "Fixes #62719.",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-09-20T02:10:40Z",
        "closed_at": "2023-09-20T22:35:24Z",
        "merged_at": null,
        "body": "I created an interface Errors \r\n```\r\ntype Errors interface {\r\n\tError() string\r\n\tUnwrap() []error\r\n}\r\n\r\n```\r\nwith the purpose of utilizing the Unwrap() method without the need to declare an interface in the code.\r\n\r\n```\r\nerrors.Join(test.errs...).(interface{ Unwrap() []error }).Unwrap()\r\n``` \r\n\r\nIn this case, we can use:\r\n\r\n```\r\nerrors.Join(test.errs...).Unwrap()\r\n```",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-09-19T10:53:56Z",
        "closed_at": "2023-09-20T02:17:35Z",
        "merged_at": null,
        "body": "parseEscape and parseInt only parse the string 's' and do not use\r\nthe fields of 'parser', make them normal functions idiomatically.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-09-18T23:45:38Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #33038\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 31,
        "changed_files": 11,
        "created_at": "2023-09-18T22:50:48Z",
        "closed_at": "2023-09-22T16:30:07Z",
        "merged_at": null,
        "body": "This is a follow up of CL 528696.",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-09-18T20:34:33Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This allows the user to pass a ConPty handle to run a process on a ConPty session.\r\n\r\nSee https://learn.microsoft.com/en-us/windows/console/creating-a-pseudoconsole-session\r\nFixes #62708\r\n\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 198,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-18T03:20:07Z",
        "closed_at": "2023-09-18T04:18:34Z",
        "merged_at": null,
        "body": "Although the Min() and Max() functions in the math package are usable, they have 2 main drawbacks. First, the arguments must be float64 types, which makes the user cast their other numeric types to float64 like int before using the function. Second, the number of arguments is limited by two. If an user wants to find the maximum or minimum value among multiple arguments, he/she would have to implement in-house solutions.\r\n\r\nA possible solution is to add a couple functions like these MaxMany() and MinMany(), which are generic and variadic -- you may pass in any number data type argument, and as many as you like. An interface named Number with type constraints to all ints, uints, and floats, was added to help making the function generic.\r\n\r\nMax() and Min() cover specific cases like dealing with infinities and NaN, which were also implemented in MaxMany() and MinMany(). The Signbit() case is not covered because of unfamiliarity with the topic, but can be added if required.\r\n\r\nThe functions were thoroughly tested and the test cases were added to the all_test.go file. ",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-16T22:53:59Z",
        "closed_at": "2023-09-18T21:11:31Z",
        "merged_at": null,
        "body": "In deadcode removal in the linker, any use of \r\nreflect.Type.Method/MethodByName result in an increased amount of \r\nincorrectly assumed reachable code  (specifically methods), due to the\r\n intractability of knowing what methods might be used.\r\n\r\nIn https://github.com/golang/go/issues/62257 there was some compiler assisted improvement added to special\r\ncase MethodByName and Method with constant arguments, and avoid marking\r\nthose as AttrReflectMethod.\r\n\r\nAt Uber this optimisation has resulted in smaller binary sizes when\r\nthe the usage of reflect.Type.Method/ByName had constant arguments.\r\n\r\nHowever, there are still a number of less trivial cases which we would\r\nlike to easily identify in our codebase, and logging would be helpful\r\nhere.",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-16T22:40:33Z",
        "closed_at": "2023-09-16T22:41:43Z",
        "merged_at": null,
        "body": "In deadcode removal in the linker, use of .Method(int) and MethodByName(string)\r\ncause the deadcode analysis to give up, due to the intractability of knowing\r\nwhat methods might be used.\r\n    \r\nIn #62257 there was some compiler assisted optimisation added to special case\r\nMethodByName and Method with constant arguments, which at Uber has resulted\r\nin fewer transitive packages breaking DCE. However, there are still a number\r\nof non trivial cases which we would like to easily identify in our monorepos,\r\nand loggign would be useful here.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 34,
        "changed_files": 5,
        "created_at": "2023-09-16T03:28:41Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The cloneString function behaves the same as strings.Clone, but it was implemented here in order to avoid transitive dependencies.\r\n\r\nBy moving it to bytealg.CloneString we are able to expose this utility internally without encountering transitive dependency problems.\r\n\r\nWhile at it, also add bytealg.Clone that work on byte slices.\r\n\r\nFor #54098\r\n",
        "comments": 19
    },
    {
        "merged": false,
        "additions": 158,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2023-09-16T02:47:47Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This CL continues adding support for And/Or primitives to\r\nmore architectures, this time for arm/arm64.\r\n\r\nFor #61395",
        "comments": 20
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-16T02:27:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Complete TODO.\r\n\r\nFor #49431",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-09-15T23:57:10Z",
        "closed_at": "2023-09-20T18:29:08Z",
        "merged_at": null,
        "body": "Currently, *sigctxt.fault of freebsd-arm64 and openbsd-arm64 return\r\nuint64 which is different from other arches (return uintptr). Change\r\nthe method signature for consistency.",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-15T23:46:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 6
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-09-15T22:23:21Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Sum number of counters to obtain total number of coverable units\r\ninstead of using length of the section data.\r\n\r\nUpdates https://github.com/golang/go/issues/62212",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 41,
        "changed_files": 24,
        "created_at": "2023-09-15T14:23:11Z",
        "closed_at": "2023-09-18T20:09:23Z",
        "merged_at": null,
        "body": "Run 'unconvert -safe -apply' (https://github.com/mdempsky/unconvert)",
        "comments": 21
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-14T20:43:49Z",
        "closed_at": "2023-09-15T15:27:06Z",
        "merged_at": null,
        "body": "As pointed by @bcmills, upstream fixed this in 3.1.0 in https://github.com/breezy-team/breezy/commit/30143860ced0ad9f42cbf18a119f2800117decff\r\n\r\nFixes #62620.",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 2448,
        "deletions": 2652,
        "changed_files": 146,
        "created_at": "2023-09-14T20:42:11Z",
        "closed_at": "2023-09-14T20:42:21Z",
        "merged_at": null,
        "body": "testdata/vcstest/bzr: fix unit test with Ubuntu 2020 LTS bzr 3.0.2\r\n    \r\nAs pointed by @bcmills, upstream fixed this in 3.1.0 in https://github.com/breezy-team/breezy/commit/30143860ced0ad9f42cbf18a119f2800117decff\r\n    \r\nFixes #62620.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 14,
        "changed_files": 3,
        "created_at": "2023-09-14T18:11:45Z",
        "closed_at": "2023-09-15T13:08:09Z",
        "merged_at": null,
        "body": "There is no need to handwrite the \"last\" function, the bytealg package already provides \"LastIndexByteString\".\r\n",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-14T03:52:41Z",
        "closed_at": "2023-09-14T03:52:58Z",
        "merged_at": null,
        "body": "This PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 173,
        "deletions": 38,
        "changed_files": 5,
        "created_at": "2023-09-13T21:57:11Z",
        "closed_at": "2023-09-20T18:14:30Z",
        "merged_at": null,
        "body": "Use circular buffer to reduce data movements.\r\nThe CL also increases size of bigData to make changes of benchmark results apparent.\r\n\r\ngoos: linux\r\ngoarch: amd64\r\npkg: internal/zstd\r\n        \u2502 /tmp/BenchmarkLarge.old \u2502       /tmp/BenchmarkLarge.new       \u2502\r\n        \u2502         sec/op          \u2502   sec/op     vs base                \u2502\r\nLarge-8              12.672m \u00b1 1%   9.521m \u00b1 0%  -24.87% (p=0.000 n=10)\r\n\r\n        \u2502 /tmp/BenchmarkLarge.old \u2502       /tmp/BenchmarkLarge.new        \u2502\r\n        \u2502           B/s           \u2502     B/s       vs base                \u2502\r\nLarge-8              13.43Mi \u00b1 1%   17.88Mi \u00b1 0%  +33.08% (p=0.000 n=10)\r\n\r\n        \u2502 /tmp/BenchmarkLarge.old \u2502       /tmp/BenchmarkLarge.new        \u2502\r\n        \u2502          B/op           \u2502     B/op      vs base                \u2502\r\nLarge-8              58.23Ki \u00b1 5%   41.72Ki \u00b1 1%  -28.35% (p=0.000 n=10)\r\n\r\n        \u2502 /tmp/BenchmarkLarge.old \u2502    /tmp/BenchmarkLarge.new     \u2502\r\n        \u2502        allocs/op        \u2502 allocs/op   vs base            \u2502\r\nLarge-8                0.000 \u00b1 0%   0.000 \u00b1 0%  ~ (p=1.000 n=10)",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 262,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2023-09-13T20:26:58Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This CL adds the atomic primitives for the And/Or operators on x86-64.\r\nIt also includes missing benchmarks for the ops.\r\n\r\nNote that the race variants for those operators are not yet implemented\r\nsince we depend on an upstream llvm tsan patch as well as rebuilding the\r\nrace runtime with x/build/cmd/racebuild. See #62624.\r\n\r\nThe patch to update the race detector will come at a later time once the \r\ninfraestructure and upstream patches supporting it are ready. \r\n\r\nFor #61395",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-13T12:57:15Z",
        "closed_at": "2023-09-14T17:35:40Z",
        "merged_at": null,
        "body": null,
        "comments": 15
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-09-13T12:56:26Z",
        "closed_at": "2023-09-13T15:55:16Z",
        "merged_at": null,
        "body": "Change-Id: Ifb28dd08faa59d9186a4a2337aab0c536d9a885e\r\n\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-13T12:49:41Z",
        "closed_at": "2023-09-20T11:38:56Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-09-13T05:43:47Z",
        "closed_at": null,
        "merged_at": null,
        "body": "With the introduction of runtime.Pinner, returning a pointer to a pinned\r\nstruct that then points to an unpinned Go pointer is correctly caught.\r\n\r\nHowever, the error message remained as \"cgo result has Go pointer\",\r\nwhich should be updated to acknowledge that Go pointers to pinned\r\nmemory are allowed.\r\n\r\nThis also updates the comments for cgoCheckArg and cgoCheckResult\r\nto similarly clarify.\r\n\r\nUpdates #46787",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-09-12T13:48:24Z",
        "closed_at": "2023-09-13T13:05:05Z",
        "merged_at": null,
        "body": null,
        "comments": 4
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-09-12T13:13:57Z",
        "closed_at": "2023-09-12T20:20:22Z",
        "merged_at": null,
        "body": "This is a follow up of CL 526496.\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 58,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-09-12T10:28:51Z",
        "closed_at": "2023-09-27T14:26:57Z",
        "merged_at": null,
        "body": "In CL 197062, many errors related to go.sum were changed from base.Fatal\r\nto error returns. The malformed go.sum error was lost in the process.\r\nCurrently, when go encounters a malformed go.sum file, go will read the\r\nwell-formed part of the file and then silently ignore the rest.\r\n\r\nThe motivation behind moving away from base.Fatal was to make the errors\r\nshow up in -json output. Simply propagating the malformed go.sum error\r\nwould not achieve this:\r\n\r\n- For an argument-less 'go mod download -json' with a go>=1.17 module,\r\n  a malformed go.sum causes an error during LoadModGraph already, before\r\n  go ever starts downloading modules and printing their JSON.\r\n- In other cases, a malformed go.sum would be reported as Error for one\r\n  of the modules (presumably the one which gets downloaded first) but\r\n  none of the others.\r\n- In either case, 'go mod download' manages to download enough data to\r\n  succeed on a re-run, making the error look intermittent.\r\n\r\nSwitch the error back to a Fatal one, but give 'go mod tidy' an\r\nexception to let it fix broken go.sum files.\r\n\r\nFixes #62345\r\n",
        "comments": 33
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-12T06:52:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Support go version with patch release(e.g. 1.21.0)\r\nand release candidates(e.g. 1.21rc1)\r\nwhen parsing the go version in the fix command.\r\n\r\nFixes https://github.com/golang/go/issues/62584",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-12T05:50:05Z",
        "closed_at": "2023-09-13T01:08:14Z",
        "merged_at": null,
        "body": "Even better is slices.BinarySearch, leave a TODO to update to that when possible.",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-09-11T16:34:01Z",
        "closed_at": "2023-09-13T18:45:07Z",
        "merged_at": null,
        "body": "This tweaks the documentation for http.Client\nto use the list syntax introduced in Go 1.19.\n",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-11T06:12:05Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-11T05:37:14Z",
        "closed_at": "2023-09-11T05:48:26Z",
        "merged_at": null,
        "body": "This PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-11T05:26:51Z",
        "closed_at": "2023-09-11T05:36:52Z",
        "merged_at": null,
        "body": "This PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 97,
        "deletions": 95,
        "changed_files": 3,
        "created_at": "2023-09-10T14:00:09Z",
        "closed_at": "2023-09-10T14:04:58Z",
        "merged_at": null,
        "body": "This PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2023-09-10T12:30:03Z",
        "closed_at": "2023-09-10T13:01:05Z",
        "merged_at": null,
        "body": "This PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 79,
        "deletions": 7,
        "changed_files": 8,
        "created_at": "2023-09-10T12:24:16Z",
        "closed_at": "2023-09-10T12:26:03Z",
        "merged_at": null,
        "body": "This PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-10T04:20:52Z",
        "closed_at": "2023-09-10T23:30:29Z",
        "merged_at": null,
        "body": "Complete a TODO.\r\n\r\nChange-Id: I1bd23f0be725c9dd81b8316a7abba1bceecc346f",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 321,
        "deletions": 324,
        "changed_files": 4,
        "created_at": "2023-09-10T03:58:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Complete a TODO.\r\n\r\nChange-Id: Ic5d60674f79be3b439c35fe22ebb6e7e05ca21fb\r\n\r\n\r\n",
        "comments": 30
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2023-09-09T13:32:28Z",
        "closed_at": "2023-09-13T18:45:03Z",
        "merged_at": null,
        "body": "People may not know the details of a pointer, this makes the\r\nruntime.Pinner.Pin API easier to use.\r\n\r\nFixes #62356",
        "comments": 19
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-09-09T00:05:35Z",
        "closed_at": "2023-09-13T18:45:00Z",
        "merged_at": null,
        "body": "Incorrect window resizing led to checksum error and invalid result.\r\nTo demonstrate the problem bigData must be a bit bigger, 3x is enough.\r\n\r\nThis change fixes window resizing, increases bigData size and decouples\r\nTestLargeXXHash from bigData because it uses hardcoded hash value.\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 217,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-07T23:50:16Z",
        "closed_at": "2023-09-13T18:44:57Z",
        "merged_at": null,
        "body": "In the WebAssembly version of these operators we avoid using\r\na CAS loop since the Go wasm implementation is single-threaded.\r\n\r\nA new test file has been added that has build tags in order to\r\nonly test this feature on implemented architectures.\r\n\r\nThis is part of a series of CLs aimed to add the primitives\r\nfor And/Or atomic operations that will be used by the public\r\nsync/atomic apis.\r\n\r\nFor #61395",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2023-09-07T10:59:33Z",
        "closed_at": "2023-09-09T01:51:09Z",
        "merged_at": null,
        "body": "Like sort.Search, use \"h := int(uint(i+j) >> 1)\" style code to calculate\r\nthe median.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-07T10:55:28Z",
        "closed_at": "2023-09-13T13:05:56Z",
        "merged_at": null,
        "body": "As with code above, use *Range32 for consistency. Perhaps\r\ncould reduce some instructions at runtime.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-09-07T09:32:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes golang/go#62490",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 233612,
        "deletions": 142322,
        "changed_files": 4331,
        "created_at": "2023-09-07T03:54:27Z",
        "closed_at": "2023-09-07T11:54:20Z",
        "merged_at": null,
        "body": "There is a BUG in flag when analyzing the bool pointer value. The space format parameter is not fully supported\r\nUpdates #62496 ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 21,
        "changed_files": 1,
        "created_at": "2023-09-07T03:50:30Z",
        "closed_at": "2023-09-07T11:54:07Z",
        "merged_at": null,
        "body": "There is a BUG in flag when analyzing the bool pointer value. The space format parameter is not fully supported\r\nFixes #62494\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 36782,
        "deletions": 24111,
        "changed_files": 1256,
        "created_at": "2023-09-07T03:42:21Z",
        "closed_at": "2023-09-07T11:53:39Z",
        "merged_at": null,
        "body": "There is a BUG in flag when analyzing the bool pointer value. The space format parameter is not fully supported\r\nFixes #62494",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2023-09-05T12:39:46Z",
        "closed_at": "2023-09-05T13:19:33Z",
        "merged_at": null,
        "body": "### What happened\uff1f\nThere are 1 security vulnerabilities found in golang.org/x/sys v0.0.0-20211030160813-b3129d9d1021\n- [CVE-2022-29526](https://www.oscs1024.com/hd/CVE-2022-29526)\n\n\n### What did I do\uff1f\nUpgrade golang.org/x/sys from v0.0.0-20211030160813-b3129d9d1021 to 0.1.0 for vulnerability fix\n\n### What did you expect to happen\uff1f\nIdeally, no insecure libs should be used.\n\n### How can we automate the detection of these types of issues?\nBy using the [GitHub Actions](https://github.com/murphysecurity/actions) configurations provided by murphysec, we can conduct automatic code security checks in our CI pipeline.\n\n### The specification of the pull request\n[PR Specification](https://www.oscs1024.com/docs/pr-specification/) from OSCS",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-04T15:58:09Z",
        "closed_at": "2023-09-23T21:33:23Z",
        "merged_at": null,
        "body": "Unique function is included to support deduplication.\r\n\r\nThis PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-04T12:05:28Z",
        "closed_at": "2023-09-04T17:30:37Z",
        "merged_at": null,
        "body": null,
        "comments": 8
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-03T09:50:36Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Likely just a copy-paste error.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-02T00:08:21Z",
        "closed_at": "2023-09-02T02:22:39Z",
        "merged_at": null,
        "body": null,
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-01T07:12:43Z",
        "closed_at": "2023-09-05T22:34:01Z",
        "merged_at": null,
        "body": null,
        "comments": 26
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-01T01:21:13Z",
        "closed_at": "2023-09-01T22:45:32Z",
        "merged_at": null,
        "body": "After the change from CL 426074 the Range method on Map always \r\nescape the read variable, leading to an allocation.\r\n\r\nSince the compiler doesn't do live-range splitting for local variables we \r\nneed to use some hints to only escape in that particular branch.\r\n\r\nFixes #62404",
        "comments": 21
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-31T18:33:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This change fixes how the package's docs refer to a function from\r\nthe \"runtime/debug\" package.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-31T11:53:29Z",
        "closed_at": "2023-09-07T19:19:11Z",
        "merged_at": null,
        "body": null,
        "comments": 11
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-08-31T07:09:47Z",
        "closed_at": "2023-09-14T17:55:53Z",
        "merged_at": null,
        "body": "When slog.Record.Add(args) is called, with enough args to cause the\r\nRecord.back []Attr to be created, it is being created 1 too small, which\r\nresults in it immediately being grown again by append before the function\r\nexits (needless allocation and copying).\r\nThis is because it is created with a capacity equal to countAttrs(args),\r\nbut forgets that there is an additional attribute to be appended: a\r\n(args is just the remaining unconsumed attributes).\r\nThis PR fixes that by adding 1 to the capacity to account for the `a` attribute.\r\n\r\nAdditionally, when Record.back already exists, it will most likely be at\r\nmax capacity already. Rather than append to it and risk having it grown\r\nmultiple times, or grow too large, this adds a slices.Grow call to set it\r\nto the right capacity, similar to what is already done in the\r\nRecord.AddAttrs(attrs) function.\r\n",
        "comments": 24
    },
    {
        "merged": false,
        "additions": 133,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-08-31T03:33:50Z",
        "closed_at": "2023-09-11T20:31:35Z",
        "merged_at": null,
        "body": "Fixes #61642",
        "comments": 20
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-30T10:17:03Z",
        "closed_at": "2023-09-07T19:19:06Z",
        "merged_at": null,
        "body": null,
        "comments": 13
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 17,
        "changed_files": 9,
        "created_at": "2023-08-30T10:03:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "TLS 1.3 is permitted by NIST SP 800-52 Rev. 2 and will be required\r\nstarting January 1, 2024.\r\n\r\nUpdates #62372",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-08-30T05:44:52Z",
        "closed_at": "2023-08-30T20:00:32Z",
        "merged_at": null,
        "body": "For #60088\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-30T05:03:25Z",
        "closed_at": "2023-08-31T21:24:25Z",
        "merged_at": null,
        "body": "strings.ReplaceAll is currently available.",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 31,
        "changed_files": 7,
        "created_at": "2023-08-30T04:53:26Z",
        "closed_at": "2023-09-07T19:12:33Z",
        "merged_at": null,
        "body": "Currently we include these symbols in bootstrap code.",
        "comments": 16
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 27,
        "changed_files": 8,
        "created_at": "2023-08-30T04:19:13Z",
        "closed_at": "2023-08-31T00:37:41Z",
        "merged_at": null,
        "body": null,
        "comments": 12
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 56,
        "changed_files": 4,
        "created_at": "2023-08-29T09:03:38Z",
        "closed_at": "2023-09-12T20:33:02Z",
        "merged_at": null,
        "body": null,
        "comments": 13
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-28T13:55:54Z",
        "closed_at": "2023-08-31T00:37:39Z",
        "merged_at": null,
        "body": null,
        "comments": 15
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2023-08-28T12:24:39Z",
        "closed_at": "2023-08-29T15:37:48Z",
        "merged_at": null,
        "body": "Currently we include those relocation types in bootstrap code.",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-28T11:52:57Z",
        "closed_at": "2023-08-28T15:31:08Z",
        "merged_at": null,
        "body": null,
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-28T11:46:31Z",
        "closed_at": "2023-09-07T19:19:03Z",
        "merged_at": null,
        "body": null,
        "comments": 16
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-08-27T02:34:29Z",
        "closed_at": "2023-08-28T17:36:01Z",
        "merged_at": null,
        "body": "strings.ReplaceAll is currently available.\r\n",
        "comments": 16
    },
    {
        "merged": false,
        "additions": 63,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-26T23:47:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "writeLoop goroutine closes persistConn closech in case of request body\r\nwrite error which in turn finishes readLoop without removing request canceler.\r\n\r\nFixes #61708\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-26T11:48:17Z",
        "closed_at": "2023-08-28T15:31:01Z",
        "merged_at": null,
        "body": null,
        "comments": 6
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-26T04:44:48Z",
        "closed_at": "2023-08-28T16:40:09Z",
        "merged_at": null,
        "body": "case: passing a single Go string object to C function.\r\nresult: 87 ns vs 61 ns.\r\n\r\nBenchmarkCgoCall/string-pointer-escape\r\nBenchmarkCgoCall/string-pointer-escape-12        67731663   87.02 ns/op\r\nBenchmarkCgoCall/string-pointer-noescape\r\nBenchmarkCgoCall/string-pointer-noescape-12    99424776   61.30 ns/op\r\n\r\nFor #56378",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 77,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-26T03:06:29Z",
        "closed_at": null,
        "merged_at": null,
        "body": "A write error in pconn.writeLoop when channel waitForBodyRead in pconn.readLoop is still blocking will cause the request canceler never be removed. This would cause memory leak in http.Transport.\r\n\r\nNote that the write error could be either \"http: invalid Read on closed\" (issue 61708 case, req body was close by (*chunkWriter).writeHeader src/net/http/server.go:1405 while (*persistConn).writeLoop is still reading it. A reverseproxy specific problem.) or \"http: ContentLength=1048576 with Body length 1\" (PR unit test case). Without the fix: pending requests = 5; want 0. With the fix: ALL TESTS PASSED.\r\n\r\nThanks the previous works done by @AlexanderYastrebov.\r\n\r\nFixes #61708\r\n\r\nThis PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-25T15:42:00Z",
        "closed_at": "2023-08-29T15:11:33Z",
        "merged_at": null,
        "body": "There is no need to use atomic.Value, atomic.Pointer should also\r\nbe more performant here.",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-08-25T10:48:03Z",
        "closed_at": "2023-10-13T11:15:40Z",
        "merged_at": null,
        "body": null,
        "comments": 22
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-24T22:08:11Z",
        "closed_at": "2023-08-25T15:10:53Z",
        "merged_at": null,
        "body": "Corrects a couple of defined key descriptions.\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-24T09:58:47Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR contains a small fix in the documentation of Handler.WithGroup (missing context in example).",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 53,
        "changed_files": 2,
        "created_at": "2023-08-23T08:26:15Z",
        "closed_at": "2023-08-23T16:04:35Z",
        "merged_at": null,
        "body": "This reverts CL 515796 due to a flaking test.\r\n\r\nUpdates #61708\r\nFixes #62224\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 62,
        "deletions": 63,
        "changed_files": 1,
        "created_at": "2023-08-23T00:42:31Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Transport getConn creates wantConn w, tries to obtain idle connection for it\r\nbased on the w.key and, when there is no idle connection, puts wantConn into\r\nidleConnWait wantConnQueue.\r\n\r\nThen getConn dials connection for w in a goroutine and blocks.\r\nAfter dial succeeds getConn unblocks and returns connection to the caller.\r\n\r\nAt this point w is stored in the idleConnWait and will not be evicted\r\nuntil another wantConn with the same w.key is requested or alive\r\nconnection returned into the idle pool which may not happen e.g. if\r\nserver closes the connection.\r\n\r\nThe problem is that even after tryDeliver succeeds w references\r\npersistConn wrapper that allocates bufio.Reader and bufio.Writer and\r\nprevents them from being garbage collected.\r\n\r\nTo fix the problem this change removes persistConn and error references\r\nfrom wantConn and delivers them via channel to getConn.\r\n\r\nThis way wantConn could be kept in wantConnQueues arbitrary long.\r\n\r\nFixes #43966\r\nFixes #50798\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-22T16:18:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Sometimes (eg. distro packaging) it's required to pass go build flags down to the actual go compiler. GOFLAGS variable is intentionally ignored/cleared by the dist build tool, so user's global presets don't interfere here.\r\n\r\nFor those cases, where really some flags (eg. -buildvcs=false) need to be passed, introducing a new environment variable, where we set GOFLAGS from, instead of empty'ing it.\r\n\r\nThis PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-22T06:28:07Z",
        "closed_at": "2023-08-22T20:50:39Z",
        "merged_at": null,
        "body": "Add the flags -e and -v.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-08-21T09:16:20Z",
        "closed_at": "2023-08-24T18:19:42Z",
        "merged_at": null,
        "body": null,
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-21T08:39:15Z",
        "closed_at": "2023-08-24T18:19:40Z",
        "merged_at": null,
        "body": "Missed the length of the Fingerprint field.",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-08-19T10:00:20Z",
        "closed_at": "2023-08-19T23:35:20Z",
        "merged_at": null,
        "body": "For MoveBefore, we can do nothing if e == mark.prev.\r\nIn the same way, for MoveAfter, we can do nothing if e == mark.next.\r\n\r\nAs for other changes, the reason is that 'e.list != l' is unlikely to happen.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-08-19T07:45:52Z",
        "closed_at": "2023-08-19T23:45:49Z",
        "merged_at": null,
        "body": null,
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-19T00:17:48Z",
        "closed_at": "2023-08-21T23:35:25Z",
        "merged_at": null,
        "body": null,
        "comments": 9
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-17T17:23:07Z",
        "closed_at": "2023-09-13T13:06:42Z",
        "merged_at": null,
        "body": null,
        "comments": 26
    },
    {
        "merged": false,
        "additions": 457,
        "deletions": 14,
        "changed_files": 6,
        "created_at": "2023-08-17T15:18:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #60665",
        "comments": 43
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-17T09:17:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "goos: linux\r\ngoarch: amd64\r\npkg: crypto/hmac\r\ncpu: Intel(R) Core(TM) i5-4460  CPU @ 3.20GHz\r\n                \u2502    before    \u2502                after                 \u2502\r\n                \u2502    sec/op    \u2502    sec/op     vs base                \u2502\r\nHMACSHA256_1K-4   3.302\u00b5 \u00b1  1%   3.296\u00b5 \u00b1  1%        ~ (p=0.740 n=25)\r\nHMACSHA256_32-4   611.9n \u00b1  3%   613.5n \u00b1  2%        ~ (p=0.450 n=25)\r\nNewWriteSum-4     3.432\u00b5 \u00b1 27%   2.513\u00b5 \u00b1 18%  -26.78% (p=0.011 n=25)\r\ngeomean           1.907\u00b5         1.719\u00b5         -9.84%\r\n\r\n                \u2502    before     \u2502                 after                  \u2502\r\n                \u2502      B/s      \u2502      B/s        vs base                \u2502\r\nHMACSHA256_1K-4   295.8Mi \u00b1  1%    296.3Mi \u00b1  1%        ~ (p=0.740 n=25)\r\nHMACSHA256_32-4   49.87Mi \u00b1  3%    49.74Mi \u00b1  2%        ~ (p=0.461 n=25)\r\nNewWriteSum-4     8.888Mi \u00b1 38%   12.140Mi \u00b1 15%  +36.59% (p=0.011 n=25)\r\ngeomean           50.80Mi          56.35Mi        +10.93%\r\n\r\n                \u2502   before   \u2502                after                 \u2502\r\n                \u2502    B/op    \u2502    B/op     vs base                  \u2502\r\nHMACSHA256_1K-4   32.00 \u00b1 0%   32.00 \u00b1 0%        ~ (p=1.000 n=25) \u00b9\r\nHMACSHA256_32-4   32.00 \u00b1 0%   32.00 \u00b1 0%        ~ (p=1.000 n=25) \u00b9\r\nNewWriteSum-4     544.0 \u00b1 0%   448.0 \u00b1 0%  -17.65% (p=0.000 n=25)\r\ngeomean           82.28        77.12        -6.27%\r\n\u00b9 all samples are equal\r\n\r\n                \u2502   before   \u2502                after                 \u2502\r\n                \u2502 allocs/op  \u2502 allocs/op   vs base                  \u2502\r\nHMACSHA256_1K-4   1.000 \u00b1 0%   1.000 \u00b1 0%        ~ (p=1.000 n=25) \u00b9\r\nHMACSHA256_32-4   1.000 \u00b1 0%   1.000 \u00b1 0%        ~ (p=1.000 n=25) \u00b9\r\nNewWriteSum-4     7.000 \u00b1 0%   6.000 \u00b1 0%  -14.29% (p=0.000 n=25)\r\ngeomean           1.913        1.817        -5.01%\r\n\u00b9 all samples are equal\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-17T05:45:39Z",
        "closed_at": "2023-10-03T03:14:52Z",
        "merged_at": null,
        "body": "Implemented filepath.Localize using internal/safefilepath.FromFS.\r\n\r\nFixes #57151\r\n\r\nChange-Id: I98c6a211d77fa5c8733306b5ef39950bae07fb5c\r\n\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-16T12:18:57Z",
        "closed_at": "2023-08-17T16:30:55Z",
        "merged_at": null,
        "body": "\"buffer\" call the receiver \"b\" in other method, don't call it \"bp\" in\r\nanother. Keep the same receiver names, as prescribed in Go Code Review\r\nComments (https://go.dev/s/style#receiver-names).",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-16T10:51:08Z",
        "closed_at": "2023-08-16T19:05:44Z",
        "merged_at": null,
        "body": null,
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-16T10:50:12Z",
        "closed_at": "2023-08-17T16:42:32Z",
        "merged_at": null,
        "body": null,
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-15T10:34:09Z",
        "closed_at": "2023-08-15T19:45:50Z",
        "merged_at": null,
        "body": "The link was missing the /pkg/ prefix.\r\n\r\nFixes #62034.",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-15T04:27:17Z",
        "closed_at": "2023-08-16T02:10:20Z",
        "merged_at": null,
        "body": "For #60370.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-14T11:37:08Z",
        "closed_at": "2023-08-15T04:45:55Z",
        "merged_at": null,
        "body": "p is only used in this block, omit declaration to simplify code.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-08-14T11:25:14Z",
        "closed_at": "2023-08-15T10:11:54Z",
        "merged_at": null,
        "body": "See CL 462046.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-14T11:09:31Z",
        "closed_at": "2023-08-14T19:32:57Z",
        "merged_at": null,
        "body": "The documentation of io.EOF: Read must return EOF itself, not an error\r\nwrapping EOF, because callers will test for EOF using ==.\r\n\r\nencoding/json package provides an example \"ExampleDecoder\" which uses\r\n\"err == io.EOF\" as well, so I think it's more idiomatic to use == to test for io.EOF.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-14T11:06:42Z",
        "closed_at": "2023-08-14T21:34:06Z",
        "merged_at": null,
        "body": "hex is in fact immutable, declare it as a const to avoid accidental\r\nmodification, also for consistency with other packages.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 37,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-08-14T09:21:16Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This change adds a flag to the linker to allow it to embed info.plist data into the resulting binaries. This can, for example, be used to add code signing properties to binaries.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-08-14T06:26:43Z",
        "closed_at": "2023-08-21T19:59:56Z",
        "merged_at": null,
        "body": "Fix: #61992  #62027\r\n\r\nThe `memState` fails on a couple of false-negative cases during function expansion calls like:\r\n\r\n- passed structs with memState changes during expansion: eg: literals [slices, maps]. Interestingly 2nd violation of memState change triggers the ICE\r\n- Platforms affected: fails on playground/faketime, linux/amd64;\r\n-  Platforms not-affected: darwin/arm\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-12T14:59:57Z",
        "closed_at": "2023-08-16T14:56:36Z",
        "merged_at": null,
        "body": "This fixes a regression from CL 494181. \r\nThe traceEnabled function splits the stack and is being\r\ncalled by reentersyscall that shouldn't call anything\r\nthat splits the stack. Same with traceShuttingDown.\r\n\r\nFixes #61975",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-08-12T10:21:50Z",
        "closed_at": "2023-08-16T02:16:00Z",
        "merged_at": null,
        "body": "Fixes #43183.",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-12T10:07:06Z",
        "closed_at": "2023-08-16T15:41:51Z",
        "merged_at": null,
        "body": "Fixes #40924\r\n\r\nChange-Id: I249a278be1ec3c67088819af4456e6c393431724\r\n\r\n\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-08-12T09:48:47Z",
        "closed_at": "2023-09-07T16:29:18Z",
        "merged_at": null,
        "body": "Fixes #41555\r\n\r\nChange-Id: I46b9535b1687d481d2ac76296e8ba7de26d6e2e2\r\n\r\n",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-12T08:55:40Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #45197\r\n\r\nChange-Id: I61dff71ba02bfafd054408d73b8a15db745d0198\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-12T03:36:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "When calling user.Current() to get Username normally, everything is fine, but if the caller is a service user, err will be returned and Username cannot be obtained\r\n\r\nAfter checking the code, I found an error when calling GetUserProfileDirectory() in current() to obtain information. The service account does not have a profile directory, so there will be an error of The system cannot find the file specified., but it does not affect others The acquisition of information should not directly return err to cause all information to be invalid\r\n\r\nIf you'd like to reproduce what I said, please run user.Current()  in is\r\n\r\nfunc main() {\r\n\tusername, err := user.Current()\r\n\tif err != nil {\r\n\t\tfmt.Println(err.Error())\r\n\t} else {\r\n\t\tfmt.Println(username.Username)\r\n\t}\r\n}\r\n\r\ngo build -o current.exe\r\n\r\nCorrect\r\nC:\\>current.exe\r\nTEST\\Administrator\r\n\r\nIncorrect\r\nC:/inetpub/wwwroot/test/ >C:\\current.exe\r\nThe system cannot find the file specified.\r\n\r\n\r\nBut in fact, we have already obtained other information at this time, such as the username\r\n\r\nfunc lookupUsernameAndDomain(usid *syscall.SID) (username, domain string, e error) {\r\n\tusername, domain, t, e := usid.LookupAccount(\"\")\r\n\tif e != nil {\r\n\t\treturn \"\", \"\", e\r\n\t}\r\n\tif t != syscall.SidTypeUser {\r\n\t\treturn \"\", \"\", fmt.Errorf(\"user: should be user account type, not %d\", t)\r\n\t}\r\n\treturn username, domain, nil\r\n}\r\nfunc main() {\r\n\tt, e := syscall.OpenCurrentProcessToken()\r\n\tif e != nil {\r\n\t\treturn\r\n\t}\r\n\tdefer t.Close()\r\n\tu, e := t.GetTokenUser()\r\n\tif e != nil {\r\n\t\treturn\r\n\t}\r\n\r\n\tusername, domain, e := lookupUsernameAndDomain(u.User.Sid)\r\n\tfmt.Println(domain + `\\` + username)\r\n}\r\n\r\ngo build -o current.exe\r\n\r\nC:\\>current.exe\r\nTEST\\Administrator\r\n\r\nC:/inetpub/wwwroot/test/ >C:\\current.exe\r\nIIS APPPOOL\\test\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 148,
        "deletions": 148,
        "changed_files": 1,
        "created_at": "2023-08-12T01:17:19Z",
        "closed_at": "2023-08-12T14:32:04Z",
        "merged_at": null,
        "body": "This is a follow up for CL 518995 that regenerates the\r\nwindows zsyscalls to use SyscallN instead of the various\r\nSyscallX functions.\r\n\r\nFixes #57914\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2023-08-11T12:07:25Z",
        "closed_at": "2023-08-17T16:54:05Z",
        "merged_at": null,
        "body": null,
        "comments": 20
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-11T08:58:39Z",
        "closed_at": null,
        "merged_at": null,
        "body": "I think n=n-n/2 can be simplified as n=n/2\r\n\r\nThis PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-10T21:57:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "pkgsite and go doc print the doc comment *after* the code, resulting in:\r\n\r\n    const (\r\n            LevelDebug Level = -4\r\n            ...\r\n    )\r\n\r\n    Many paragraphs...\r\n\r\n    Names for common levels.\r\n\r\nThe \"Names for common levels.\" feels out of place and confusing at the bottom.\r\n\r\nThis is also consistent with the recommendation for the first sentence in doc comments to be the \"summary\".",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-09T12:02:55Z",
        "closed_at": "2023-08-10T01:28:46Z",
        "merged_at": null,
        "body": "Change-Id: I6b8a9b93a077dc433f928097f7a6d694255d11c0\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2023-08-09T09:32:24Z",
        "closed_at": "2023-08-17T21:44:03Z",
        "merged_at": null,
        "body": null,
        "comments": 18
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-09T00:23:24Z",
        "closed_at": "2023-09-15T19:12:10Z",
        "merged_at": null,
        "body": "When a filesystem with non-regular files is used\r\nthe resulting files inside the zip archive are empty.\r\n\r\nIn this case we can be explicit and return an error.\r\n\r\nFixes #61875",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 16,
        "changed_files": 6,
        "created_at": "2023-08-08T19:54:51Z",
        "closed_at": "2023-08-11T22:10:29Z",
        "merged_at": null,
        "body": "The Content-Length must be a valid numeric value, empty values should not be accepted.\r\n\r\nSee: https://www.rfc-editor.org/rfc/rfc9110.html#name-content-length\r\n\r\nFixes #61679",
        "comments": 26
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 29,
        "changed_files": 6,
        "created_at": "2023-08-08T19:53:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #61839\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-08-08T11:00:07Z",
        "closed_at": "2023-08-09T02:55:11Z",
        "merged_at": null,
        "body": "Fixes #61825.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-08-08T09:36:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Existing implementation did not allow setting both padding and minus flags at the same time because standard formatting does not allow that. But custom Formatter interface implementations might have use of it. This change moves the check from the place flags are parsed to where they are used in standard formatting.\r\n\r\nFixes #61784",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-08-08T05:48:07Z",
        "closed_at": "2023-08-08T22:09:17Z",
        "merged_at": null,
        "body": "This PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-08T04:58:44Z",
        "closed_at": "2023-08-09T15:20:26Z",
        "merged_at": null,
        "body": "Change-Id: I7658f2f1716f74b4ff0b4b9f8ccd386e99dd9d51\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-08-08T01:41:35Z",
        "closed_at": "2023-08-11T02:58:57Z",
        "merged_at": null,
        "body": "Change-Id: I9e95806116a8547ec782f66226d1b1382c6156de\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-08-08T01:38:04Z",
        "closed_at": "2023-08-11T03:26:45Z",
        "merged_at": null,
        "body": "Change-Id: Iab170943e6e80ffe08bb061e563c106b53740372\r\n\r\n\r\n",
        "comments": 20
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-08-07T17:06:33Z",
        "closed_at": "2023-08-08T15:46:14Z",
        "merged_at": null,
        "body": "Fixes #56353",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-08-07T13:40:14Z",
        "closed_at": "2023-08-07T15:32:15Z",
        "merged_at": null,
        "body": null,
        "comments": 7
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-08-07T13:39:09Z",
        "closed_at": "2023-08-07T18:57:46Z",
        "merged_at": null,
        "body": null,
        "comments": 6
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-08-07T13:37:40Z",
        "closed_at": "2023-08-07T18:57:43Z",
        "merged_at": null,
        "body": null,
        "comments": 6
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-08-07T13:36:11Z",
        "closed_at": "2023-08-07T18:57:40Z",
        "merged_at": null,
        "body": null,
        "comments": 7
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-08-07T13:30:02Z",
        "closed_at": "2023-08-07T13:33:06Z",
        "merged_at": null,
        "body": "Signed-off-by: Muhammad Falak R Wani <falakreyaz@gmail.com>\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-08-07T07:09:03Z",
        "closed_at": "2023-08-09T22:55:04Z",
        "merged_at": null,
        "body": "Makes the ParseBool function in the strconv package more versatile. It now accepts additional words to represent true values: \"y,\" \"Y,\" \"yes,\" and \"YES.\" Similarly, you can use \"n,\" \"N,\" \"no,\" and \"NO\" to indicate false values.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-08-07T05:45:32Z",
        "closed_at": "2023-08-07T21:26:46Z",
        "merged_at": null,
        "body": "This PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-08-07T02:45:32Z",
        "closed_at": "2023-08-07T05:02:58Z",
        "merged_at": null,
        "body": "This PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-07T00:50:25Z",
        "closed_at": "2023-08-07T23:23:02Z",
        "merged_at": null,
        "body": "Another optimization by aligning a hot loop.\r\n\r\n```\r\n                   \u2502   sec/op    \u2502   sec/op     vs base                \u2502\r\nCount/10-16          11.29n \u00b1 1%   10.50n \u00b1 1%   -7.04% (p=0.000 n=10)\r\nCount/32-16          11.06n \u00b1 1%   11.36n \u00b1 2%   +2.76% (p=0.000 n=10)\r\nCount/4K-16          2.852\u00b5 \u00b1 1%   1.953\u00b5 \u00b1 1%  -31.52% (p=0.000 n=10)\r\nCount/4M-16          2.884m \u00b1 1%   1.958m \u00b1 1%  -32.11% (p=0.000 n=10)\r\nCount/64M-16         46.27m \u00b1 1%   30.86m \u00b1 0%  -33.31% (p=0.000 n=10)\r\nCountEasy/10-16      9.873n \u00b1 1%   9.669n \u00b1 1%   -2.07% (p=0.000 n=10)\r\nCountEasy/32-16      11.07n \u00b1 1%   11.23n \u00b1 1%   +1.49% (p=0.000 n=10)\r\nCountEasy/4K-16      73.47n \u00b1 1%   54.20n \u00b1 0%  -26.22% (p=0.000 n=10)\r\nCountEasy/4M-16      61.12\u00b5 \u00b1 1%   49.42\u00b5 \u00b1 0%  -19.15% (p=0.000 n=10)\r\nCountEasy/64M-16     1.303m \u00b1 3%   1.082m \u00b1 4%  -16.97% (p=0.000 n=10)\r\nCountSingle/10-16    4.150n \u00b1 1%   3.679n \u00b1 1%  -11.36% (p=0.000 n=10)\r\nCountSingle/32-16    4.815n \u00b1 1%   4.588n \u00b1 1%   -4.71% (p=0.000 n=10)\r\nCountSingle/4M-16    72.18\u00b5 \u00b1 2%   75.38\u00b5 \u00b1 1%   +4.44% (p=0.000 n=10)\r\nCountHard3-16        462.6\u00b5 \u00b1 1%   484.4\u00b5 \u00b1 1%   +4.73% (p=0.000 n=10)\r\n\r\n                   \u2502   old.txt    \u2502               new.txt                \u2502\r\n                   \u2502     B/s      \u2502     B/s       vs base                \u2502\r\nCount/10-16          844.1Mi \u00b1 1%   908.3Mi \u00b1 1%   +7.60% (p=0.000 n=10)\r\nCount/32-16          2.695Gi \u00b1 1%   2.623Gi \u00b1 2%   -2.66% (p=0.000 n=10)\r\nCount/4K-16          1.337Gi \u00b1 1%   1.953Gi \u00b1 1%  +46.06% (p=0.000 n=10)\r\nCount/4M-16          1.355Gi \u00b1 1%   1.995Gi \u00b1 1%  +47.29% (p=0.000 n=10)\r\nCount/64M-16         1.351Gi \u00b1 1%   2.026Gi \u00b1 0%  +49.95% (p=0.000 n=10)\r\nCountEasy/10-16      965.9Mi \u00b1 1%   986.3Mi \u00b1 1%   +2.11% (p=0.000 n=10)\r\nCountEasy/32-16      2.693Gi \u00b1 1%   2.653Gi \u00b1 1%   -1.48% (p=0.000 n=10)\r\nCountEasy/4K-16      51.93Gi \u00b1 1%   70.38Gi \u00b1 0%  +35.54% (p=0.000 n=10)\r\nCountEasy/4M-16      63.91Gi \u00b1 1%   79.05Gi \u00b1 0%  +23.68% (p=0.000 n=10)\r\nCountEasy/64M-16     47.97Gi \u00b1 3%   57.77Gi \u00b1 4%  +20.44% (p=0.000 n=10)\r\nCountSingle/10-16    2.244Gi \u00b1 1%   2.532Gi \u00b1 1%  +12.80% (p=0.000 n=10)\r\nCountSingle/32-16    6.190Gi \u00b1 1%   6.496Gi \u00b1 1%   +4.94% (p=0.000 n=10)\r\nCountSingle/4M-16    54.12Gi \u00b1 2%   51.82Gi \u00b1 1%   -4.25% (p=0.000 n=10)\r\n```",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-06T23:26:43Z",
        "closed_at": "2023-08-07T00:25:47Z",
        "merged_at": null,
        "body": "Now with PCALIGN available on amd64 we can start optimizing some routines that benefit from instruction alignment.\r\n\r\n```\r\n                         \u2502    sec/op     \u2502    sec/op     vs base               \u2502\r\nIndexByte/4K-16             69.89n \u00b1 \u221e \u00b9   45.88n \u00b1 \u221e \u00b9  -34.35% (p=0.008 n=5)\r\nIndexByte/4M-16             65.36\u00b5 \u00b1 \u221e \u00b9   47.32\u00b5 \u00b1 \u221e \u00b9  -27.60% (p=0.008 n=5)\r\nIndexByte/64M-16            1.435m \u00b1 \u221e \u00b9   1.140m \u00b1 \u221e \u00b9  -20.57% (p=0.008 n=5)\r\n                         \u2502      B/s      \u2502      B/s       vs base               \u2502\r\nIndexByte/4K-16            54.58Gi \u00b1 \u221e \u00b9   83.14Gi \u00b1 \u221e \u00b9  +52.32% (p=0.008 n=5)\r\nIndexByte/4M-16            59.76Gi \u00b1 \u221e \u00b9   82.54Gi \u00b1 \u221e \u00b9  +38.12% (p=0.008 n=5)\r\nIndexByte/64M-16           43.56Gi \u00b1 \u221e \u00b9   54.84Gi \u00b1 \u221e \u00b9  +25.89% (p=0.008 n=5)\r\n```",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-05T21:06:15Z",
        "closed_at": "2023-08-07T00:25:45Z",
        "merged_at": null,
        "body": null,
        "comments": 6
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 6,
        "changed_files": 7,
        "created_at": "2023-08-05T17:24:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Added instructions LDTILECFG, STTILECFG, TDPBF16PS, TDPBSSD, TDPBSUD, TDPBUSD, TDPBUUD, TILELOADD,\r\nTILELOADDT1, TILESTORED, TILEZERO, TILERELEASE\r\n\r\nFixes: #61079\r\n",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-08-05T03:29:42Z",
        "closed_at": "2023-08-10T04:09:32Z",
        "merged_at": null,
        "body": "Recently I'm confused about using \"errors.Is(err, os.ErrProcessDone)\" because there is no documentation on how to use os.ErrProcessDone.\r\n\r\n\"Cancel\" func of \"os/exec.Cmd\" says it may return error that wraps os.ErrProcessDone, however TestErrProcessDone uses \"got != ErrProcessDone\". I searched all the usages of os.ErrProcessDone, found that std-lib also uses \"errors.Is\" to check it when calling Process.Signal().\r\n\r\nI think we shouldn't abuse \"errors.Is\", since Signal() doesn't return an error which wraps os.ErrProcessDone or implements the Is(error) bool method.",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-04T12:47:33Z",
        "closed_at": "2023-08-07T18:57:35Z",
        "merged_at": null,
        "body": "Specify that -benchtime can take the form Nx.",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-04T12:02:15Z",
        "closed_at": "2023-08-05T03:10:38Z",
        "merged_at": null,
        "body": null,
        "comments": 9
    },
    {
        "merged": false,
        "additions": 91,
        "deletions": 25,
        "changed_files": 2,
        "created_at": "2023-08-04T11:56:21Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The existing clobber-prevention logic can end up clobbering random file\r\ndescriptors, which can cause issues on Linux if a user wants to execute\r\na /proc/self/fd/$n handle that isn't included in attr.Files. Similar\r\nlogic already exists for the BSDs and Solaris.\r\n\r\nIn addition, the F_DUPFD_CLOEXEC makes the clobber-prevention logic much\r\nsimpler to follow.\r\n\r\nCloses #61751",
        "comments": 21
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-08-04T11:56:16Z",
        "closed_at": "2023-08-04T20:14:24Z",
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-04T04:55:28Z",
        "closed_at": "2023-08-07T00:42:28Z",
        "merged_at": null,
        "body": null,
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-04T03:21:31Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 22,
        "changed_files": 3,
        "created_at": "2023-08-04T03:11:44Z",
        "closed_at": "2023-08-07T00:31:18Z",
        "merged_at": null,
        "body": null,
        "comments": 6
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-04T01:25:35Z",
        "closed_at": "2023-08-22T22:27:40Z",
        "merged_at": null,
        "body": "Due to a race condition persistConn could be closed without removing request canceler.\r\n\r\nNote that without the fix test occasionally passes and to demonstrate the issue it has to be run multiple times, e.g. using -count=10.\r\n\r\nFixes #61708\r\n",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-03T16:45:05Z",
        "closed_at": "2023-08-07T00:31:15Z",
        "merged_at": null,
        "body": "If err is non-nil, use t.Fatalf to avoid panic when calling p.Wait().\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-03T12:05:46Z",
        "closed_at": "2023-08-10T06:07:40Z",
        "merged_at": null,
        "body": "Fix typo on UsageLine's text. To match with long description of debug flag `-x`. The `-v` flag doesn't effect.\r\n\r\nThe `-v` flag not working sample is below\r\nhttps://gist.github.com/miyataka/8af12f126943dcd8c6022251fdce1b71",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-08-03T09:28:28Z",
        "closed_at": "2023-08-04T02:53:08Z",
        "merged_at": null,
        "body": null,
        "comments": 7
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-08-02T22:10:18Z",
        "closed_at": "2023-08-21T18:11:53Z",
        "merged_at": null,
        "body": "Follows up on CL 245357 and adds missing returns in waitCondition (CL 477196)\r\n\r\nFixes #51354\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-02T12:27:25Z",
        "closed_at": "2023-08-02T15:28:36Z",
        "merged_at": null,
        "body": null,
        "comments": 5
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-08-01T20:21:39Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #61696",
        "comments": 96
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-01T20:16:59Z",
        "closed_at": "2023-08-01T20:59:30Z",
        "merged_at": null,
        "body": null,
        "comments": 5
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-08-01T15:16:45Z",
        "closed_at": "2023-08-03T15:59:17Z",
        "merged_at": null,
        "body": "For a while now we support EDNS, but the current\r\nimplementation only sends the OPT resource and doesn't\r\ndo anything with the response OPT resource.\r\n\r\nFor reference the miekg/dns updates the RCode in the\r\nheader when there is a OPT resource:\r\nhttps://github.com/miekg/dns/blob/48f38ebef989eedc6b57f1869ae849ccc8f5fe29/msg.go#L868-L872",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-01T11:10:15Z",
        "closed_at": "2023-08-01T14:00:39Z",
        "merged_at": null,
        "body": "Change in Documentation language.\r\n\r\nThis PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-07-31T08:46:53Z",
        "closed_at": "2023-07-31T17:18:57Z",
        "merged_at": null,
        "body": "Dups: #60856\r\nFor #60817\r\n\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 99,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-07-31T05:49:52Z",
        "closed_at": "2023-08-07T00:31:12Z",
        "merged_at": null,
        "body": "An optional interface FileInfoNames has been added.\r\n\r\nIf the parameter fi of FileInfoHeader implements the interface\r\nthe Gname and Uname of the return value Header are\r\nprovided by the method of the interface.\r\n\r\nAlso added testing.\r\n\r\nFixes #50102\r\n\r\nChange-Id: I6fd06c7c9aaf29b22b7384542fe57affed33009a\r\n",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 25,
        "changed_files": 3,
        "created_at": "2023-07-31T04:23:23Z",
        "closed_at": "2023-08-03T16:05:48Z",
        "merged_at": null,
        "body": "Change-Id: I23e0005071fcbafeaecaa05f51712dd1de6eed01",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-30T16:12:56Z",
        "closed_at": "2023-08-03T16:05:46Z",
        "merged_at": null,
        "body": "See CL 308769",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-07-30T07:24:00Z",
        "closed_at": "2023-07-30T08:15:46Z",
        "merged_at": null,
        "body": "This PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 23,
        "changed_files": 1,
        "created_at": "2023-07-29T12:06:18Z",
        "closed_at": "2023-07-31T18:44:09Z",
        "merged_at": null,
        "body": "Fixes #61644\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-29T02:15:32Z",
        "closed_at": "2023-08-02T15:35:25Z",
        "merged_at": null,
        "body": "Fixes #61495\r\n\r\nChange-Id: I9abaf3613c797006b803dcb1dbee16f25ffb7516",
        "comments": 20
    },
    {
        "merged": false,
        "additions": 160,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2023-07-28T18:18:56Z",
        "closed_at": "2023-08-07T17:17:28Z",
        "merged_at": null,
        "body": "These new apis are analogous to ServeFile, FileServer and NewFileTransport respectively. The main difference is that these functions operate on an fs.FS.\r\n\r\nFixes #51971",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-07-28T01:33:43Z",
        "closed_at": "2023-07-31T19:59:09Z",
        "merged_at": null,
        "body": "Currently the only named capture supported by regexp is (?P<name>a).\r\n\r\nThe syntax (?<name>a) is also widely used and there is currently an effort from\r\n the Rust regex and RE2 teams to also accept this syntax.\r\n\r\nFixes #58458",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2023-07-28T00:16:40Z",
        "closed_at": "2023-07-29T21:14:16Z",
        "merged_at": null,
        "body": "The method (*Section).Open automatically decompresses section contents when they are marked with SHF_COMPRESSED. This is the recommended approach in the ELF standard. Some tools use the older mechanism of prefixing the sections with a z as in .zdebug_str for example, this case was unhandled.\r\n\r\nThe new implementation will look for SHF_COMPRESSED as well as sniffing for ZLIB magic bytes and for sections starting with .z.\r\n\r\nFixes #58254",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 171,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-07-27T22:54:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #61572\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-27T22:23:39Z",
        "closed_at": null,
        "merged_at": null,
        "body": "When building go-bootstrap as part of the make.bash process, the cmd/dist invokes the bootstrap Go compiler to build the go_bootstrap tool:\r\n\r\n${GOROOT_BOOTSTRAP}/bin/go install -tags=math_big_pure_go compiler_bootstrap purego bootstrap/cmd/...\r\n\r\nIf there is an invalid .git directory in a parent of ${GOROOT_BOOTSTRAP}, make.bash will fail. Reproduction of the issue:\r\n\r\n  mkdir go-issue-61620\r\n  cd ./go-issue-61620\r\n  wget https://go.dev/dl/go1.19.11.src.tar.gz\r\n  mkdir go-bootstrap\r\n  tar -xf go1.19.11.src.tar.gz -C ./go-bootstrap --strip-components=1\r\n  cd ./go-bootstrap/src/\r\n  bash make.bash\r\n  cd ../../\r\n  wget https://go.dev/dl/go1.20.6.src.tar.gz\r\n  mkdir go\r\n  tar -xf go1.20.6.src.tar.gz -C ./go/ --strip-components=1\r\n  printf \"gitdir: ../../does/not/exist/.git\" > ./.git\r\n  cd ./go/src/\r\n  GOROOT_BOOTSTRAP=$(pwd)/../../go-bootstrap/ bash make.bash\r\n\r\nThe build fails with the following error:\r\n\r\n  Building Go toolchain1 using [snip]/go-1.19.10.\r\n  error obtaining VCS status: exit status 128\r\n    Use -buildvcs=false to disable VCS stamping.\r\n  go tool dist: FAILED: [snip]/go-1.19.10/bin/go install -tags=math_big_pure_go \\\r\n    compiler_bootstrap purego bootstrap/cmd/...: exit status 1\r\n\r\nThis change unconditionally sets -buildvcs=false when compiling go-bootstrap. We don't need the revision information in those binaries anyway. Setting this flag was previously not done as we were unsure if the go-bootstrap compiler would be new enough to support the buildvcs build flag. However, since Go 1.20.x, Go 1.19.x is the minimum version for go-bootstrap, and supports -buildvcs=false. We can now set -buildvcs=false without worrying about compatibility.\r\n\r\nRelated: #54852\r\nFixes: #61620\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-07-27T11:37:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This CL implementation rejects the import path suffix .test .\r\n\r\nChange-Id: Ice4039034de1552e182bbc1ed5869969985f595a\r\n\r\nFixes: #60454",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-07-27T07:39:07Z",
        "closed_at": "2023-08-02T15:22:01Z",
        "merged_at": null,
        "body": "Fixed the error reporting for an unknown command to\r\npreserve the name when displaying the error message.\r\n\r\nFixes #61604",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 83,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-07-26T23:33:37Z",
        "closed_at": "2023-07-31T18:17:50Z",
        "merged_at": null,
        "body": "The method AddFS can be used to add the contents of a fs.FS filesystem\r\nto a zip archive.\r\nThis method walks the directory tree starting at the root of the filesystem\r\nand adds each file to the archive.\r\n\r\nFixes #54898",
        "comments": 35
    },
    {
        "merged": false,
        "additions": 93,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-07-26T23:21:57Z",
        "closed_at": "2023-07-28T09:44:45Z",
        "merged_at": null,
        "body": "Fixes #61572\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 106,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-07-26T22:33:53Z",
        "closed_at": "2023-09-13T14:08:39Z",
        "merged_at": null,
        "body": "The method AddFS can be used to add the contents of a fs.FS filesystem \r\nto a tar archive. This method walks the directory tree starting at the root \r\nof the filesystem and adds each file to the archive.\r\n\r\nFixes #58000",
        "comments": 52
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-07-26T20:24:08Z",
        "closed_at": "2023-07-31T15:56:39Z",
        "merged_at": null,
        "body": "Fixes #60088",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-26T16:22:30Z",
        "closed_at": "2023-07-31T20:33:17Z",
        "merged_at": null,
        "body": "This function checks Request.Form, which now includes values parsed from a PATCH request.\r\n\r\nFixes #60585",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-25T11:41:21Z",
        "closed_at": "2023-08-07T17:10:29Z",
        "merged_at": null,
        "body": null,
        "comments": 4
    },
    {
        "merged": false,
        "additions": 71,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-07-25T07:16:09Z",
        "closed_at": "2023-08-07T08:54:35Z",
        "merged_at": null,
        "body": "TestNetworkSymbolicLink needs to enable the Workstation service, otherwise it will fail.\r\n\r\nThis CL avoids failure by skipping testing when the Workstation service is not enabled.\r\n\r\nFixes #61467\r\n\r\nChange-Id: I395952fc18329e0b0dfdec55c8a18f4007ea91de\r\n\r\n",
        "comments": 38
    },
    {
        "merged": false,
        "additions": 83,
        "deletions": 48,
        "changed_files": 2,
        "created_at": "2023-07-24T08:51:23Z",
        "closed_at": "2023-07-26T11:24:09Z",
        "merged_at": null,
        "body": "Same as https://go-review.googlesource.com/c/go/+/510635, reduces risk of overflow",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 28,
        "changed_files": 8,
        "created_at": "2023-07-24T04:52:35Z",
        "closed_at": "2023-07-27T22:12:08Z",
        "merged_at": null,
        "body": null,
        "comments": 17
    },
    {
        "merged": false,
        "additions": 59,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-07-23T01:55:52Z",
        "closed_at": "2023-07-24T17:19:34Z",
        "merged_at": null,
        "body": "The change to io.Copy in servefile caused a exponential increase in\r\nexecution time if the reader is a os.File.\r\n\r\nI'm not sure what the issue is, if it is something related to io.Copy or \r\nthe network stack, but if the benchmark takes the io.Copy path instead of \r\nCopyN it gets stuck and is killed after 10 minutes.\r\n\r\nWe could also revert the offending change: https://go-review.googlesource.com/c/go/+/446276\r\n\r\n```\r\nBenchmarkServeFile-16              25746             46767 ns/op\r\n```\r\n\r\nFixes: https://github.com/golang/go/issues/61530",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-07-22T23:58:29Z",
        "closed_at": null,
        "merged_at": null,
        "body": "New special cases have been added to the Rat testcase.\r\nUpdated the function quotToFloat32/64 to check for zero\r\nas well when determining if the value is infinite. This\r\nchange ensures that the exact flag is correctly set for\r\nthese edge cases, preventing test failures.\r\n\r\nThanks Johan Jansons (@jupj) for the proposed fix on\r\nthe ticket description.\r\n\r\nFixes: #56164\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-07-22T21:51:04Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Dwarf formal parameters appear more than once in the\r\nfinal dwarf symbols for some functions. I believe there is an error\r\nup the chain where the vars are created and some of them are pushed\r\nmore than once to the list.\r\n\r\nI ended up implementing a simple dedup mechanism to get rid of the\r\nduplicates up the chain, but this should be investigated deeper in\r\na follow up ticket in order to find the root cause.\r\n\r\nThe testing routine `findSubprogramDIE` was updated to panic in case it\r\nreceived duplicated formal parameters since this bug probably existed\r\nfor quite a while and it was never discovered since this function\r\nbasically pushes into a map indexed by the var name, overwriting the \r\nlast value.\r\n\r\nA test has been added to cover this case as reported in the original\r\nissue ticket.\r\n\r\nFixes #61357",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 53,
        "changed_files": 5,
        "created_at": "2023-07-22T11:39:30Z",
        "closed_at": "2023-08-26T22:57:14Z",
        "merged_at": null,
        "body": "This change removes the per GOOS hostLookupOrder wrappers.\r\npasses the correct hostname to hostLookupOrder (windows,\r\nplan9), so that the netdns+2 GODEBUG doesn't show empty \r\nhostnames.\r\n\r\nUses the mustUseGoResolver instead of hostLookupOrder,\r\nhostLookupOrder should only be used for hostname resolution,\r\nnot for lookups that do only DNS.",
        "comments": 33
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-07-22T11:32:29Z",
        "closed_at": "2023-08-21T20:23:55Z",
        "merged_at": null,
        "body": "Clears wannConn ctx and prevents pending dialConnFor after connection delivered or canceled.\r\n\r\nUpdates #50798\r\n",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-22T10:35:39Z",
        "closed_at": "2023-07-25T17:18:37Z",
        "merged_at": null,
        "body": null,
        "comments": 6
    },
    {
        "merged": false,
        "additions": 65,
        "deletions": 32,
        "changed_files": 5,
        "created_at": "2023-07-22T02:35:00Z",
        "closed_at": "2023-07-26T11:18:00Z",
        "merged_at": null,
        "body": "Follow up on CL 511458, see https://go-review.googlesource.com/c/go/+/511458/2..4/src/cmd/go/main.go#b270 .\r\n\r\nFor #36768.\r\n\r\nChange-Id: Icc2a4dbb1219b1d69dd10a900478957b0e975847",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 89,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-07-22T02:31:22Z",
        "closed_at": "2023-07-28T19:45:53Z",
        "merged_at": null,
        "body": "The PCALIGN asm directive was not supported on 386/amd64,\r\ncausing a compile-time error when used. The same directive\r\nis currently supported on arm64, loong64 and ppc64 architectures.\r\n\r\nThis has potential for noticeable performance improvements on \r\namd64 across multiple packages, I did a quick test aligning a hot \r\nloop on bytes.IndexByte:\r\n\r\n```\r\nIndexByte/10-16                 3.477n \u00b1 \u221e \u00b9   3.462n \u00b1 \u221e \u00b9        ~ (p=0.198 n=5)\r\nIndexByte/32-16                 4.675n \u00b1 \u221e \u00b9   4.834n \u00b1 \u221e \u00b9   +3.40% (p=0.008 n=5)\r\nIndexByte/4K-16                 67.47n \u00b1 \u221e \u00b9   44.44n \u00b1 \u221e \u00b9  -34.13% (p=0.008 n=5)\r\nIndexByte/4M-16                 61.98\u00b5 \u00b1 \u221e \u00b9   45.07\u00b5 \u00b1 \u221e \u00b9  -27.28% (p=0.008 n=5)\r\nIndexByte/64M-16               1206.6\u00b5 \u00b1 \u221e \u00b9   940.9\u00b5 \u00b1 \u221e \u00b9  -22.02% (p=0.008 n=5)\r\nIndexBytePortable/10-16         4.064n \u00b1 \u221e \u00b9   4.044n \u00b1 \u221e \u00b9        ~ (p=0.325 n=5)\r\nIndexBytePortable/32-16         9.999n \u00b1 \u221e \u00b9   9.934n \u00b1 \u221e \u00b9        ~ (p=0.151 n=5)\r\nIndexBytePortable/4K-16         975.8n \u00b1 \u221e \u00b9   965.5n \u00b1 \u221e \u00b9        ~ (p=0.151 n=5)\r\nIndexBytePortable/4M-16         973.3\u00b5 \u00b1 \u221e \u00b9   972.3\u00b5 \u00b1 \u221e \u00b9        ~ (p=0.222 n=5)\r\nIndexBytePortable/64M-16        15.68m \u00b1 \u221e \u00b9   15.89m \u00b1 \u221e \u00b9        ~ (p=0.310 n=5)\r\ngeomean                         1.478\u00b5         1.342\u00b5         -9.20%\r\n\r\nIndexByte/10-16                2.678Gi \u00b1 \u221e \u00b9   2.690Gi \u00b1 \u221e \u00b9        ~ (p=0.151 n=5)\r\nIndexByte/32-16                6.375Gi \u00b1 \u221e \u00b9   6.165Gi \u00b1 \u221e \u00b9   -3.30% (p=0.008 n=5)\r\nIndexByte/4K-16                56.54Gi \u00b1 \u221e \u00b9   85.85Gi \u00b1 \u221e \u00b9  +51.83% (p=0.008 n=5)\r\nIndexByte/4M-16                63.03Gi \u00b1 \u221e \u00b9   86.68Gi \u00b1 \u221e \u00b9  +37.52% (p=0.008 n=5)\r\nIndexByte/64M-16               51.80Gi \u00b1 \u221e \u00b9   66.42Gi \u00b1 \u221e \u00b9  +28.23% (p=0.008 n=5)\r\nIndexBytePortable/10-16        2.291Gi \u00b1 \u221e \u00b9   2.303Gi \u00b1 \u221e \u00b9        ~ (p=0.421 n=5)\r\nIndexBytePortable/32-16        2.980Gi \u00b1 \u221e \u00b9   3.000Gi \u00b1 \u221e \u00b9        ~ (p=0.151 n=5)\r\nIndexBytePortable/4K-16        3.909Gi \u00b1 \u221e \u00b9   3.951Gi \u00b1 \u221e \u00b9        ~ (p=0.151 n=5)\r\nIndexBytePortable/4M-16        4.013Gi \u00b1 \u221e \u00b9   4.017Gi \u00b1 \u221e \u00b9        ~ (p=0.222 n=5)\r\nIndexBytePortable/64M-16       3.987Gi \u00b1 \u221e \u00b9   3.933Gi \u00b1 \u221e \u00b9        ~ (p=0.310 n=5)\r\ngeomean                        8.183Gi         9.013Gi        +10.14%\r\n```\r\n\r\nFixes #56474",
        "comments": 24
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-21T10:50:39Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #26726\r\n\r\nChange-Id: I94cae97f96debfb443ead647e6de35febfe95da3\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-07-21T00:28:35Z",
        "closed_at": "2023-07-21T21:44:20Z",
        "merged_at": null,
        "body": "The go test flag -skip had no effect in example tests.\r\n\r\nFixes #61482 \r\n",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 65,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-07-20T09:58:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR implements the new API proposed with\r\nhttps://github.com/golang/go/issues/61472\r\n\r\nThis change set implements the NamedCookies function\r\non the net/http Request so that it's conveniently possible\r\nto retrieve all cookies from the Cookie header that match\r\na given name.\r\n\r\nIt does so by just wrapping the already existing readCookies\r\nfunction.\r\n\r\nFixes #61472\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 52,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-07-20T08:04:56Z",
        "closed_at": "2023-09-18T16:43:42Z",
        "merged_at": null,
        "body": "While it is possible to embed a GNU build ID into the linked\r\nexecutable by passing `-B 0xBUILDID` to the linker, the build ID will\r\nneed to be precomputed by the build system somehow. This makes it\r\nunnecessarily complex to generate a deterministic build ID as it\r\neither requires the build system to hash all inputs manually or to\r\nbuild the binary twice, once to compute its hash and once with the GNU\r\nbuild ID derived from that hash. Despite being complex, it is also\r\ninefficient as it requires the build system to duplicate some of the\r\nwork that the Go linker already performs anyway.\r\n\r\nIntroduce a new argument \"gobuildid\" that can be passed to `-B` that\r\ncauses the linker to automatically derive the GNU build ID from the Go\r\nbuild ID. Given that the Go build ID is deterministically computed\r\nfrom all of its inputs, the resulting GNU build ID should be\r\ndeterministic in the same way, which is the desired behaviour.\r\n\r\nFurthermore, given that the `-B` flag currently requires a \"0x\" prefix\r\nfor all values passed to it, using \"gobuildid\" as value is a backwards\r\ncompatible change.\r\n\r\nAn alternative would be to unconditionally calculate the GNU build ID\r\nunless otherwise specified. This would require some larger rework\r\nthough because building the Go toolchain would not converge anymore\r\ndue the GNU build ID changing on every stage, which in turn would\r\ncause the Go build ID to change as well.\r\n\r\nFixes #41004",
        "comments": 45
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 18,
        "changed_files": 13,
        "created_at": "2023-07-20T02:28:57Z",
        "closed_at": "2023-09-11T20:18:50Z",
        "merged_at": null,
        "body": "This CL package exec.LookPath to internal/cfg.LookPath and adds cache.\r\n\r\nBenchmarkLookPath-4     24149096                50.48 ns/op            0 B/op          0 allocs/op\r\n\r\nFixes #36768",
        "comments": 40
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-07-20T01:09:14Z",
        "closed_at": "2023-07-21T18:43:03Z",
        "merged_at": null,
        "body": "cmp/Compare: fixed \"-1\", \"+1\" from rendering as bullet point",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2023-07-20T00:11:18Z",
        "closed_at": "2023-08-07T05:02:45Z",
        "merged_at": null,
        "body": "List three cases of whence for convenient reading.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 496,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2023-07-19T22:00:18Z",
        "closed_at": "2023-07-20T01:01:55Z",
        "merged_at": null,
        "body": "backport: slices.SortFunc from exp/slices\r\n\r\nFor #61374",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-07-19T19:51:45Z",
        "closed_at": "2023-07-21T05:46:17Z",
        "merged_at": null,
        "body": "It is possible to call reflect.ValueOf(ch).Close() on a recv-only channel,\r\n while close(ch) is a compile-time error. Following the same reflect \r\nsemantics as send and recv this should result in a panic.\r\n\r\nFixes #61445",
        "comments": 30
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 59,
        "changed_files": 4,
        "created_at": "2023-07-19T12:28:16Z",
        "closed_at": "2023-08-07T00:31:03Z",
        "merged_at": null,
        "body": "sysctl kern.arandom has been supported since NetBSD 4.0, works inside a\r\nchroot, has no confusing bells and whistles like Linux getrandom,\r\nrequires no complicated querying to avoid SIGSYS traps, and is what\r\nNetBSD 10 will usee for the getentropy(3) library routine soon to\r\nappear in POSIX.",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2023-07-19T12:16:02Z",
        "closed_at": "2023-07-27T23:34:47Z",
        "merged_at": null,
        "body": "Replace reflect.PtrTo with reflect.PointerTo.\r\n\r\nFixes #59599\r\n\r\nChange-Id: I49407193e2050543ef983cd637703acc682d9f51\r\n",
        "comments": 37
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2023-07-19T09:59:34Z",
        "closed_at": "2023-09-20T18:28:43Z",
        "merged_at": null,
        "body": "The existing documentation for `go help build` does not match the current behavior of `go build`. This commit fixes inconsistency between documentation and behavior as suggested in #60836 ticket.\r\n\r\nFixes #60836\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2023-07-18T06:20:49Z",
        "closed_at": "2023-07-21T14:53:03Z",
        "merged_at": null,
        "body": null,
        "comments": 23
    },
    {
        "merged": false,
        "additions": 158,
        "deletions": 31,
        "changed_files": 2,
        "created_at": "2023-07-17T01:03:04Z",
        "closed_at": null,
        "merged_at": null,
        "body": "goos: linux\r\ngoarch: amd64\r\npkg: net/http\r\n             \u2502 /tmp/BenchmarkClientGzip.old \u2502  /tmp/BenchmarkClientGzip.new  \u2502\r\n             \u2502            sec/op            \u2502    sec/op     vs base          \u2502\r\nClientGzip-8                    509.6\u00b5 \u00b1 7%   545.5\u00b5 \u00b1 10%  ~ (p=0.218 n=10)\r\n\r\n             \u2502 /tmp/BenchmarkClientGzip.old \u2502     /tmp/BenchmarkClientGzip.new     \u2502\r\n             \u2502             B/op             \u2502     B/op      vs base                \u2502\r\nClientGzip-8                  48.943Ki \u00b1 0%   8.757Ki \u00b1 1%  -82.11% (p=0.000 n=10)\r\n\r\n             \u2502 /tmp/BenchmarkClientGzip.old \u2502   /tmp/BenchmarkClientGzip.new    \u2502\r\n             \u2502          allocs/op           \u2502 allocs/op   vs base               \u2502\r\nClientGzip-8                     51.00 \u00b1 0%   46.00 \u00b1 0%  -9.80% (p=0.000 n=10)\r\n\r\nAllocation saving comes from absent compress/flate.(*dictDecoder).init\r\n\r\nUpdates #61353",
        "comments": 23
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-16T10:21:54Z",
        "closed_at": "2023-07-20T17:39:05Z",
        "merged_at": null,
        "body": "The mode used in the os.OpenFile example (0755) has all executable bits set.  \r\nI suspect that this ill-advised usage propagates to other codebases (by means of people carelessly copying the usage example), which is why I suggest modifying the example.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2023-07-16T02:51:43Z",
        "closed_at": "2023-07-16T10:49:35Z",
        "merged_at": null,
        "body": "name              old time/op    new time/op    delta\r\nGzipReaderInit-8    9.15\u00b5s \u00b1 4%    2.38\u00b5s \u00b1 9%  -74.04%  (p=0.000 n=10+10)\r\n\r\nname              old alloc/op   new alloc/op   delta\r\nGzipReaderInit-8    45.5kB \u00b1 0%     4.3kB \u00b1 0%  -90.47%  (p=0.000 n=10+10)\r\n\r\nname              old allocs/op  new allocs/op  delta\r\nGzipReaderInit-8      10.0 \u00b1 0%       5.0 \u00b1 0%  -50.00%  (p=0.000 n=10+10)\r\n\r\nAllocation saving comes from absent compress/flate.(*dictDecoder).init\r\n\r\nFixes #61353\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-07-16T01:03:16Z",
        "closed_at": "2023-07-18T05:30:29Z",
        "merged_at": null,
        "body": "It is conventional to use `err` for error variables, so change the example to use `err` instead of `e`.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-07-14T21:32:59Z",
        "closed_at": "2023-09-23T21:35:31Z",
        "merged_at": null,
        "body": "Go is apparently no longer soliciting \"Go 2\" language proposals.\r\n\r\nSee discussion at https://github.com/golang/go/issues/61361#issuecomment-1636399995.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-14T03:08:47Z",
        "closed_at": "2023-07-20T18:10:33Z",
        "merged_at": null,
        "body": null,
        "comments": 10
    },
    {
        "merged": false,
        "additions": 345,
        "deletions": 178,
        "changed_files": 15,
        "created_at": "2023-07-10T16:52:29Z",
        "closed_at": null,
        "merged_at": null,
        "body": "When running a Go binary on a UNIX system, the model for launching processes is fairly simple:\r\n\r\n- You first call syscall.StartProcess(), which does a fork under the hood. This returns the PID.\r\n- You call syscall.Wait4(pid, [...]) to obtain the execution results.\r\n\r\nos.Process.Wait() extends upon this model a bit, where instead of calling syscall.Wait4() directly, it first calls waitid()/wait6() with WNOWAIT. This allows it to first complete all calls to os.Process.Kill() before destroying the process. This guarantees that signals are not sent to the wrong process when PIDs are recycled quickly.\r\n\r\nThe model above is perfect for the case where Go binaries are run as regular user processes. One major advantage is that it composes fairly well. Individual goroutines can launch subprocesses without interfering with each other. It may even work well if subprocesses are launched through cgo, assuming syscall.ForkLock is acquired.\r\n\r\nUnfortunately, this model is less ideal for environments where Go binaries are run as PID 1 (e.g., inside containers or on embedded devices). In those cases (great-)grandchildren may be reparented towards PID 1 if their parents terminate before they do. PID 1 does not get explicitly notified if such reparenting occurs. This means that PID 1 must use a different model, where it continously calls syscall.Wait4(-1) to get notified of any terminated child process. This does not play nicely with other parts of a program calling syscall.Wait4(pid), as those may see their wait results being stolen.\r\n\r\nThis commit changes the behavior of os.StartProcess() to use a process-wide goroutine that calls syscall.Wait4(-1) and delivers the wait results to the right instance of os.Process through channels. Launching this goroutine is done through syscall.StartProcess(). Delivery of wait results is performed though a ProcessHandle, which is returned through the 'handle' return value of this function. This return value has thus far only been used on Windows.\r\n\r\nCare has been taken to only change the system call behavior when a Go binary runs as PID 1. When running as any other PID, syscall.StartProcess() will return a ProcessHandle that calls syscall.Wait4(pid). This is done for two reasons:\r\n\r\n- It ensures that code that launches through alternative means (e.g., cgo) are unaffected.\r\n- Existing code that ignores the 'handle' return value can safely drop the handle and call syscall.Wait4() manually.\r\n\r\nThe goroutine that we launch also terminates when all known child processes launched through syscall.StartProcess() have terminated. This means that for code running as PID 1, it still remains safe to launch processes through alternative means, as long as it's not done at moments at which one or more processes launched through syscall.StartProcess() are running. syscall.ForkExec() is unaffected.\r\n\r\nAs the PID of the subprocess is only known after forking, there may be a race condition where registration of the subprocess is only done after the subprocess terminates. This could cause delivery of the wait results to fail. To prevent this from happening, the map of process handles used by the goroutine is protected using the ForkLock. As syscall.StartProcess() nowadays only acquires ForkLock for reading, we use an auxiliary lock to prevent a data race if syscall.StartProcess() is called in parallel.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-10T05:43:30Z",
        "closed_at": null,
        "merged_at": null,
        "body": "after StripPrefix ,the RequestURI is still origin value\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-07-09T07:30:35Z",
        "closed_at": null,
        "merged_at": null,
        "body": "When storing literal to JSON number v, if s is valid number, the slicebytetostring operation will be performed twice. In fact, the operation is unavoidable on any code path, so just perform it at the very beginning.\r\n\r\nThis is not a big optimization, but better than nothing:\r\n\r\n    $ ../bin/go test ./encoding/json/ -bench UnmarshalNumber -run NOTEST -benchtime 10000000x -count 16  > old.txt\r\n    $ ../bin/go test ./encoding/json/ -bench UnmarshalNumber -run NOTEST -benchtime 10000000x -count 16  > new.txt\r\n    $ benchstat old.txt new.txt\r\n                      \u2502   old.txt   \u2502              new.txt               \u2502\r\n                      \u2502   sec/op    \u2502   sec/op     vs base               \u2502\r\n    UnmarshalNumber-8   234.5n \u00b1 3%   228.2n \u00b1 4%  -2.67% (p=0.033 n=16)\r\n\r\n                      \u2502  old.txt   \u2502            new.txt             \u2502\r\n                      \u2502    B/op    \u2502    B/op     vs base            \u2502\r\n    UnmarshalNumber-8   168.0 \u00b1 0%   168.0 \u00b1 0%  ~ (p=1.000 n=16) \u00b9\r\n    \u00b9 all samples are equal\r\n\r\n                      \u2502  old.txt   \u2502            new.txt             \u2502\r\n                      \u2502 allocs/op  \u2502 allocs/op   vs base            \u2502\r\n    UnmarshalNumber-8   2.000 \u00b1 0%   2.000 \u00b1 0%  ~ (p=1.000 n=16) \u00b9\r\n    \u00b9 all samples are equal",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-07T04:06:45Z",
        "closed_at": "2023-07-12T23:44:51Z",
        "merged_at": null,
        "body": null,
        "comments": 15
    },
    {
        "merged": false,
        "additions": 59,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-07-05T23:06:22Z",
        "closed_at": "2023-07-21T03:44:54Z",
        "merged_at": null,
        "body": "slices: make Clone preallocate and copy instead of solely invoking append\r\n\r\nBy preallocating a slice of equal size then invoking copy, this\r\nchange results in a speedup:\r\n\r\n```\r\n                  \u2502   old.txt    \u2502               new.txt                \u2502\r\n                  \u2502    sec/op    \u2502    sec/op     vs base                \u2502\r\nIntClone_10B-12     41.18n \u00b1  1%   34.07n \u00b1  1%  -17.26% (p=0.000 n=10)\r\nIntClone_1Kb-12     719.5n \u00b1  2%   718.9n \u00b1  2%        ~ (p=0.912 n=10)\r\nIntClone_10Kb-12    7.032\u00b5 \u00b1 29%   6.946\u00b5 \u00b1 14%        ~ (p=1.000 n=10)\r\nIntClone_1Mb-12     239.6\u00b5 \u00b1  1%   238.9\u00b5 \u00b1  1%        ~ (p=0.353 n=10)\r\nIntClone_10Mb-12    2.431m \u00b1  1%   2.418m \u00b1  1%        ~ (p=0.143 n=10)\r\nByteClone_10B-12    35.86n \u00b1  0%   29.43n \u00b1  0%  -17.92% (p=0.000 n=10)\r\nByteClone_10Kb-12   689.2n \u00b1  6%   694.3n \u00b1  3%        ~ (p=0.912 n=10)\r\ngeomean             3.138\u00b5         2.964\u00b5         -5.56%\r\n\r\n                  \u2502   old.txt    \u2502                new.txt                \u2502\r\n                  \u2502     B/op     \u2502     B/op      vs base                 \u2502\r\nIntClone_10B-12       104.0 \u00b1 0%     104.0 \u00b1 0%       ~ (p=1.000 n=10) \u00b9\r\nIntClone_1Kb-12     8.023Ki \u00b1 0%   8.023Ki \u00b1 0%       ~ (p=1.000 n=10) \u00b9\r\nIntClone_10Kb-12    80.02Ki \u00b1 0%   80.02Ki \u00b1 0%       ~ (p=1.000 n=10) \u00b9\r\nIntClone_1Mb-12     8.000Mi \u00b1 0%   8.000Mi \u00b1 0%       ~ (p=0.350 n=10)\r\nIntClone_10Mb-12    80.00Mi \u00b1 0%   80.00Mi \u00b1 0%       ~ (p=0.173 n=10)\r\nByteClone_10B-12      40.00 \u00b1 0%     40.00 \u00b1 0%       ~ (p=1.000 n=10) \u00b9\r\nByteClone_10Kb-12   10.02Ki \u00b1 0%   10.02Ki \u00b1 0%       ~ (p=1.000 n=10) \u00b9\r\ngeomean             28.97Ki        28.97Ki       -0.00%\r\n\u00b9 all samples are equal\r\n\r\n                  \u2502  old.txt   \u2502               new.txt               \u2502\r\n                  \u2502 allocs/op  \u2502 allocs/op   vs base                 \u2502\r\nIntClone_10B-12     2.000 \u00b1 0%   2.000 \u00b1 0%       ~ (p=1.000 n=10) \u00b9\r\nIntClone_1Kb-12     2.000 \u00b1 0%   2.000 \u00b1 0%       ~ (p=1.000 n=10) \u00b9\r\nIntClone_10Kb-12    2.000 \u00b1 0%   2.000 \u00b1 0%       ~ (p=1.000 n=10) \u00b9\r\nIntClone_1Mb-12     2.000 \u00b1 0%   2.000 \u00b1 0%       ~ (p=1.000 n=10) \u00b9\r\nIntClone_10Mb-12    2.000 \u00b1 0%   2.000 \u00b1 0%       ~ (p=1.000 n=10) \u00b9\r\nByteClone_10B-12    2.000 \u00b1 0%   2.000 \u00b1 0%       ~ (p=1.000 n=10) \u00b9\r\nByteClone_10Kb-12   2.000 \u00b1 0%   2.000 \u00b1 0%       ~ (p=1.000 n=10) \u00b9\r\ngeomean             2.000        2.000       +0.00%\r\n\u00b9 all samples are equal\r\n\r\n```",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 76,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-07-05T11:19:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "- [ ] Allow recursive type parameters \r\n- [ ] fix anomaly arising from difference in order of declarations of types. [valid_ast](src/cmd/compile/testdata/issue60880/valid_ast.go) vs [should_pass](src/cmd/compile/testdata/issue60880/should_pass.go)\r\n\r\n\r\nRelates to -  #61169, #60880, #60817, #60856, #49439",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-07-05T10:49:16Z",
        "closed_at": "2023-07-06T20:53:48Z",
        "merged_at": null,
        "body": "style: performance and readability\r\n\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-07-05T10:41:53Z",
        "closed_at": "2023-07-05T14:43:12Z",
        "merged_at": null,
        "body": "allow: self referencing-constraints\r\n\r\nfix: invalid recursive type: T0 refers to itself\r\n\r\nreverting some changes made as fix  for  #49439\r\n\r\nRelates to #60880\r\nRelates to #60817\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-07-05T01:55:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This avoids relatively expensive `%` operations and `copy` is much easier to optimize.\r\n\r\nI've used https://gist.github.com/ttsugriy/45db22b2564745bedda05574c033c0b0 to get benchmark results below:\r\n```\r\n% go test -benchmem -run=^$ -bench ^Benchmark bench.com/b\r\ngoos: darwin\r\ngoarch: arm64\r\npkg: bench.com/b\r\nBenchmarkModClone-8       903997              1123 ns/op            3200 B/op         20 allocs/op\r\nBenchmarkCopyClone-8     1337074               890.6 ns/op          3200 B/op         20 allocs/op\r\nPASS\r\nok      bench.com/b     3.266s\r\n```\r\n\r\nThis PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-03T10:12:18Z",
        "closed_at": "2023-07-06T18:40:57Z",
        "merged_at": null,
        "body": "Fixes #61153",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2023-07-03T10:05:07Z",
        "closed_at": "2023-07-20T18:03:57Z",
        "merged_at": null,
        "body": "Reuse IndexFunc function to avoid confusing subscript indexing, and to reduce code nesting depth.\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-07-02T08:33:54Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #61142.",
        "comments": 22
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-07-01T13:51:20Z",
        "closed_at": "2023-07-28T17:30:11Z",
        "merged_at": null,
        "body": null,
        "comments": 22
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-01T00:02:04Z",
        "closed_at": "2023-08-07T17:10:09Z",
        "merged_at": null,
        "body": "Declare \"pkg\" as a const to reduce runtime.concat calls.\r\nPrealloc \"result\" slice with cap \"len(names)*2\" for less allocation and faster execution.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-06-30T23:15:31Z",
        "closed_at": "2023-07-27T19:06:29Z",
        "merged_at": null,
        "body": null,
        "comments": 8
    },
    {
        "merged": false,
        "additions": 165,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-06-30T16:37:53Z",
        "closed_at": null,
        "merged_at": null,
        "body": "For https://github.com/golang/go/issues/40569\r\nFix: In response to the modifications made to the permissions for accessing system MAC addresses in Android 11, ordinary applications encounter several main issues when using NETLINK sockets:\r\n\r\n- Not allowing bind operations on `NETLINK` sockets.\r\n- Not permitting the use of the `RTM_GETLINK` functionality.\r\n\r\nFor detailed information, please refer to: https://developer.android.com/training/articles/user-data-ids#mac-11-plus\r\n\r\nAs a result of the aforementioned reasons, using `net.Interfaces()` and `net.InterfaceAddrs()` from the Go net package in the Android environment leads to the `route ip+net: netlinkrib: permission denied` error. \r\n\r\nYou can find specific issue details here: https://github.com/golang/go/issues/40569\r\n\r\nTo address the issue of using the Go net package in the Android environment, we have made partial modifications to its source code to ensure proper functionality on Android. \r\n\r\nI have fully resolved the issues with `net.InterfaceAddrs()`. \r\n\r\nHowever, for `net.Interfaces()`, we have only addressed some problems, as the following issues still remain:\r\n- It can only return interfaces with IP addresses.\r\n- It cannot return hardware MAC addresses.\r\n\r\nNevertheless, the fixed `net.Interfaces()` function now aligns with the Android API's `NetworkInterface.getNetworkInterfaces()` and can be used normally in most scenarios.\r\n\r\nThe specific fix logic includes:\r\n\r\nRemoving the `Bind()` operation on `Netlink` sockets in the `NetlinkRIB()` function.\r\nUsing `ioctl` based on the Index number returned by `RTM_GETADDR` to retrieve the network card's name, MTU, and flags.\r\n\r\n## Test Code\r\nThis part of the test code must be compiled into a jar and aar package that can be used under the Android 11 platform using gomobile\r\n\r\nuse `net.InterfaceAddrs()` : \r\n```go\r\nfunc NetInterfaceAddrs() {\r\n\taddrs, err := net.InterfaceAddrs()\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tfor _, addr := range addrs {\r\n\t\tlog.Println(addr)\r\n\t}\r\n}\r\n```\r\nresult:\r\n```\r\n127.0.0.1/8\r\n::1/128\r\n...\r\n192.168.6.143/24\r\nfe80::7e4f:4446:eb3:1eb8/64\r\n```\r\nuse `net.Interfaces()` : \r\n```go\r\nfunc NetInterface() {\r\n\tinterfaces, err := net.Interfaces()\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\tfor _, i := range interfaces {\r\n\t\tlog.Println(i)\r\n\t}\r\n}\r\n```\r\n\r\nresult:\r\n```\r\n{1 65536 lo  up|loopback|running}\r\n{15 1400 rmnet_data1  up|running}\r\n{24 1500 wlan0  up|broadcast|multicast|running}\r\n{3 1500 dummy0  up|broadcast|running}\r\n{4 1500 ifb0  up|broadcast|running}\r\n{5 1500 ifb1  up|broadcast|running}\r\n{12 1500 ifb2  up|broadcast|running}\r\n{14 1500 rmnet_data0  up|running}\r\n{16 1400 rmnet_data2  up|running}\r\n{17 1400 rmnet_data3  up|running}\r\n```\r\n\r\n\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 162,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-06-30T16:27:56Z",
        "closed_at": "2023-06-30T16:33:33Z",
        "merged_at": null,
        "body": "For https://github.com/golang/go/issues/40569\r\n\r\nFix: In response to the modifications made to the permissions for accessing system MAC addresses in Android 11, ordinary applications encounter several main issues when using NETLINK sockets:\r\n\r\n- Not allowing bind operations on `NETLINK` sockets.\r\n- Not permitting the use of the `RTM_GETLINK` functionality.\r\n\r\nFor detailed information, please refer to: https://developer.android.com/training/articles/user-data-ids#mac-11-plus\r\n\r\nAs a result of the aforementioned reasons, using `net.Interfaces()` and `net.InterfaceAddrs()` from the Go net package in the Android environment leads to the `route ip+net: netlinkrib: permission denied` error. \r\n\r\nYou can find specific issue details here: https://github.com/golang/go/issues/40569\r\n\r\nTo address the issue of using the Go net package in the Android environment, we have made partial modifications to its source code to ensure proper functionality on Android. \r\n\r\nI have fully resolved the issues with `net.InterfaceAddrs()`. \r\n\r\nHowever, for `net.Interfaces()`, we have only addressed some problems, as the following issues still remain:\r\n- It can only return interfaces with IP addresses.\r\n- It cannot return hardware MAC addresses.\r\n\r\nNevertheless, the fixed `net.Interfaces()` function now aligns with the Android API's `NetworkInterface.getNetworkInterfaces()` and can be used normally in most scenarios.\r\n\r\nThe specific fix logic includes:\r\n\r\nRemoving the `Bind()` operation on `Netlink` sockets in the `NetlinkRIB()` function.\r\nUsing `ioctl` based on the Index number returned by `RTM_GETADDR` to retrieve the network card's name, MTU, and flags.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-29T14:07:56Z",
        "closed_at": "2023-06-29T23:07:13Z",
        "merged_at": null,
        "body": null,
        "comments": 7
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-06-27T17:04:03Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This change modifies Go to add the \"Description\" field for interfaces on Windows hosts. \r\n\r\nThe \"Description\" field, rather than \"FriendlyName\", is used by Windows Performance Monitor and others when identifying interfaces. Making both fields accessible makes correlating back to specific interfaces easier.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-27T14:57:12Z",
        "closed_at": "2023-06-27T14:57:41Z",
        "merged_at": null,
        "body": "Adds the description field for the Windows adapters objects. Currently only returns the FriendlyName, but the Description field is what is logged with things like Windows Performance Counters. This makes it easier to correlate performance statistics directly back to interfaces.\r\n\r\nThis PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-26T09:14:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #60998",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-24T15:59:14Z",
        "closed_at": "2023-06-26T15:04:30Z",
        "merged_at": null,
        "body": "RevocationList.RevokedCertificates has been deprecated and\r\nreplaced with the new RevocationList.RevokedCertificateEntries field,\r\nnot RevocationList.Entries.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-23T16:38:35Z",
        "closed_at": "2023-08-03T15:52:47Z",
        "merged_at": null,
        "body": "For #52113\r\nFor #58645",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 18,
        "changed_files": 16,
        "created_at": "2023-06-23T05:44:42Z",
        "closed_at": "2023-07-18T20:03:19Z",
        "merged_at": null,
        "body": null,
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-22T07:25:08Z",
        "closed_at": "2023-06-23T12:27:53Z",
        "merged_at": null,
        "body": null,
        "comments": 7
    },
    {
        "merged": false,
        "additions": 85,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-06-22T00:03:05Z",
        "closed_at": "2023-09-25T14:36:21Z",
        "merged_at": null,
        "body": "Fixes #60204",
        "comments": 27
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-06-21T21:35:31Z",
        "closed_at": "2023-08-08T14:36:51Z",
        "merged_at": null,
        "body": "Fixes #56353",
        "comments": 36
    },
    {
        "merged": false,
        "additions": 189,
        "deletions": 23,
        "changed_files": 14,
        "created_at": "2023-06-21T10:32:57Z",
        "closed_at": "2023-07-05T11:31:05Z",
        "merged_at": null,
        "body": "Fixes #60880\r\nFor #60817\r\nFixes #49439 ",
        "comments": 29
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-20T11:30:23Z",
        "closed_at": "2023-07-20T17:01:42Z",
        "merged_at": null,
        "body": "Do the same as the code above: \"case err == errTooLarge\", declare\r\npublicErr as a constant to avoid runtime calls.",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 90,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2023-06-20T08:14:25Z",
        "closed_at": "2023-06-21T10:30:46Z",
        "merged_at": null,
        "body": "For #60880 \r\n\r\nFix: able to compile recursive constraints regardless of the order in the same package.",
        "comments": 19
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-06-19T09:24:28Z",
        "closed_at": "2023-09-25T18:26:32Z",
        "merged_at": null,
        "body": "In CL 475375 the Go command started to generate the \"preferlinkext\"\r\ntoken file for \"strange/dangerous\" compiler flags. This serves as a hint\r\nto the Go linker whether to call the external linker or not.\r\n\r\nPermit compiler flags used by bazel and bazelbuild/rules_go during\r\ncompilation of cgo code to not prefer external linking. This restores\r\nthe behavior of previous versions of Go.\r\n\r\nAs a side effect, it also allows these flags to appear\r\nin #cgo directives in source code. We don't know of any cases\r\nwhere that is actually useful, but it appears to be harmless\r\nand simplifies the implementation of the internal linking change.\r\n\r\nFixes #60865",
        "comments": 20
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-06-19T03:49:07Z",
        "closed_at": "2023-08-01T14:35:18Z",
        "merged_at": null,
        "body": "The built-in function `min` has been implemented and can now be used to replace some manually written `minType` helper functions.\r\n",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-06-18T09:13:54Z",
        "closed_at": "2023-07-06T06:31:21Z",
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-06-17T12:33:23Z",
        "closed_at": "2023-07-30T23:16:11Z",
        "merged_at": null,
        "body": "For #60817",
        "comments": 41
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 375,
        "changed_files": 254,
        "created_at": "2023-06-17T00:21:55Z",
        "closed_at": "2023-06-23T15:48:31Z",
        "merged_at": null,
        "body": null,
        "comments": 13
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-06-16T23:00:52Z",
        "closed_at": "2023-06-16T23:41:50Z",
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 352,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-06-16T08:55:10Z",
        "closed_at": "2023-08-17T14:35:56Z",
        "merged_at": null,
        "body": "Updates #60665",
        "comments": 24
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-06-16T05:03:14Z",
        "closed_at": null,
        "merged_at": null,
        "body": "I think it is better to put the corpus that caused the panic into a new folder:\r\n\r\n - Because I try to put many corpora into my folder, the fuzz program will also put the corpus that caused the panic in it .\r\n - Secondly, every time the fuzz program is restarted, the folder will be traversed again, which causes me to extract the file that caused the panic last time every time I fuzz.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-06-16T04:32:51Z",
        "closed_at": "2023-06-16T08:00:42Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-16T02:56:18Z",
        "closed_at": "2023-06-27T18:27:50Z",
        "merged_at": null,
        "body": "For #60806\r\n",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 26,
        "changed_files": 6,
        "created_at": "2023-06-15T23:35:51Z",
        "closed_at": "2023-06-23T15:36:28Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-06-15T19:59:09Z",
        "closed_at": "2023-06-16T04:57:32Z",
        "merged_at": null,
        "body": "I think it is better to put the corpus that caused the panic into a new folder: \r\n - Because I try to put many corpora into my folder, the fuzz program will also put the corpus that caused the panic in it .\r\n - Secondly, every time the fuzz program is restarted, the folder will be traversed again, which causes me to extract the file that caused the panic last time every time I fuzz.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-15T15:13:57Z",
        "closed_at": "2023-06-16T18:33:58Z",
        "merged_at": null,
        "body": "RemoteAddr can return nil in some cases, this fix prevents a panic.\r\n\r\nI chatted with @neild about this beforehand, but what's happening in our\r\ncase is that a connection comes in to the HTTP server which is then\r\nimmediately closed (we discovered this issue by accident using nmap).\r\nThe network implementation that we're using (it happens to be gVisor\r\nvia its gonet adaptor) is returning nil from RemoteAddr(), presumably\r\nas there is no remote at that point.\r\n\r\nBut, ultimately, since RemoteAddr returns an interface it is always\r\npossible for it to return nil, and indeed conn.RemoteAddr in this file\r\ndoes exactly that if the conn is not ok.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-06-15T09:17:07Z",
        "closed_at": "2023-06-19T05:15:39Z",
        "merged_at": null,
        "body": "when data is nil or pointer to nil, `reflect.Indirect` will lose its `typ`, then `v.Kind` panic, so nothing shoule be write .\r\n\r\nfix #60814\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-15T05:30:30Z",
        "closed_at": "2023-06-16T18:33:55Z",
        "merged_at": null,
        "body": "Remove redundant \"this\".",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-14T04:36:22Z",
        "closed_at": "2023-06-23T17:49:56Z",
        "merged_at": null,
        "body": "Since \"if ev.Type == EvGoSysExit\" must be executed,\r\nuse if-elsif to reduce the other if statement in the case of \"ev.Type == EvGoSysExit\"\r\nwhen assigning to ev.P.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-13T12:28:08Z",
        "closed_at": "2023-06-21T07:00:03Z",
        "merged_at": null,
        "body": "Current runtime may not compile under rare circumstances if compiler\r\nenforces the `-Werror` flag for ambiguous parentheses\r\n(e.g., GCC 11 in C++ mode, but it may enable it in future releases).\r\n\r\nBuild may fail with this error:\r\n\r\n```\r\nIn file included from gcc_context.c:8:\r\nlibcgo.h:102:15: error: unnecessary parentheses in declaration of '_cgo_get_context_function' [-Werror=parentheses]\r\n   102 | extern void (*(_cgo_get_context_function(void)))(struct context_arg*);\r\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nlibcgo.h:102:15: note: remove parentheses\r\n   102 | extern void (*(_cgo_get_context_function(void)))(struct context_arg*);\r\n      |               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      |               -                               -\r\ncc1plus: all warnings being treated as errors\r\n\r\nThis commit suppresses this warning, to avoid the possible build errors\r\non future static analyzer improvements, as these parentheses improves\r\nthe code readability.\r\n```",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-13T11:08:28Z",
        "closed_at": "2023-06-14T00:49:02Z",
        "merged_at": null,
        "body": null,
        "comments": 9
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-06-13T11:07:45Z",
        "closed_at": "2023-06-17T19:10:08Z",
        "merged_at": null,
        "body": "Fixes #34396",
        "comments": 16
    },
    {
        "merged": false,
        "additions": 77,
        "deletions": 77,
        "changed_files": 67,
        "created_at": "2023-06-12T21:31:04Z",
        "closed_at": "2023-06-14T00:09:29Z",
        "merged_at": null,
        "body": "Fix spelling errors discovered using https://github.com/codespell-project/codespell. Errors in data files and vendored packages are ignored.\r\n\r\n",
        "comments": 24
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-12T16:03:55Z",
        "closed_at": "2023-06-13T18:15:59Z",
        "merged_at": null,
        "body": "This prevents a hang at a su password prompt when running this test on\r\nOpenBSD.\r\n\r\nFixes #60690.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-11T14:10:11Z",
        "closed_at": "2023-08-01T14:35:14Z",
        "merged_at": null,
        "body": "Trim s[:len(b)-1] rather than s[:len(b)], since s[len(b)-1] is '/'.",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 377,
        "deletions": 186,
        "changed_files": 7,
        "created_at": "2023-06-09T15:25:00Z",
        "closed_at": "2023-06-09T15:51:34Z",
        "merged_at": null,
        "body": "This patch fixes some incorrect DWARF location lists. Before this patch,\r\na location list for a variable that was available until the \"end of its\r\nfunction\" erroneously extended over trailing code that dealt with the\r\nstack growth code. The code in question is placed at the end of the\r\nfunction, but it is morally part of the function's prologue (the\r\nprologue jumps to it if stack growth is needed, and this trailer then\r\njumps back to the prologue). Thus, for the purposes of the location\r\nlists, it should be treated more like the beginning of the function than\r\nthe end of the function; instructions for reading variables at the end\r\nof the function do not apply in this code region.\r\n\r\nThe patch makes the loclists for regular variable not expand over this\r\ntrailing code, as they do not yet exist when this code runs. Function\r\narguments are special though - they do exist when the stack growth code\r\nruns, and generally can be read. For function arguments, this patch\r\n\"fixes up\" the location lists generated by the compiler after the linker\r\nhas inserted the stack growth code, as described below:\r\n\r\nThe layout of a function's code is as follows:\r\n\r\n<function prologue jumps to the stack growth trailer>\r\n<regular function code>\r\n...\r\nret\r\nmovq    %rax, 0x38(%rsp)                  <- FuncLogicalEnd\r\nmovq    %rbx, 0x40(%rsp)\r\n...\r\ncallq   <runtime.morestack_noctxt.abi0>   <- StackGrowthCall\r\nmovq    0x38(%rsp), %rax\r\nmovq    0x40(%rsp), %rbx\r\n...\r\njmp     <beginning of function>\r\nint3                                      <- FuncPhysicalEndA\r\n\r\nThe stack growth trailer consists of register spilling (starting at\r\nFuncLogicalEnd), a call to the runtime stack growth function (marked by\r\nStackGrowthCall), and then register unspilling (up until\r\nFuncPhysicalEnd).\r\nA variable that's available at the beginning of the function (i.e. a function\r\nargument) is available in between [FuncLogicalEnd,StackGrowthCall) using the\r\nsame DWARF instructions as the ones used at the beginning of the function.\r\nThe variable is then available in between [StackGrowthCall,FuncPhysicalEnd)\r\nwith new instructions referencing the stack location where the variable was\r\nspilled to.\r\n\r\nThe patch only performs this fixup for function arguments on amd64; the\r\ntracking that linker needs to do for identifying FuncLoficalEnd and\r\nStackGrowthCall is architecture-specific and I didn't go through the\r\ntrouble of doing it outside amd64.\r\n\r\nFixes https://github.com/golang/go/issues/60493",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-09T15:10:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "pathLenConstraint is restricted to unsigned integers.\r\nAlso the -1 value of cert.MaxPathLength has a special\r\nmeaning, so we shouldn't allow unmarshaling -1.\r\n\r\nBasicConstraints ::= SEQUENCE {\r\n     cA                      BOOLEAN DEFAULT FALSE,\r\n     pathLenConstraint       INTEGER (0..MAX) OPTIONAL }",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-09T14:08:19Z",
        "closed_at": null,
        "merged_at": null,
        "body": "It was not clear that -func argument is a test profile and not the output file or .go source files.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 20,
        "changed_files": 10,
        "created_at": "2023-06-09T11:38:17Z",
        "closed_at": "2023-06-10T16:12:15Z",
        "merged_at": null,
        "body": null,
        "comments": 5
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-06-08T08:13:28Z",
        "closed_at": "2023-08-21T23:35:02Z",
        "merged_at": null,
        "body": "The go resolver shouldn't attempt to query .onion domains, but\r\nthe restriction was not restricted for search domains.\r\n\r\nAlso before this change query for \"sth.onion\" would\r\nnot be suffixed with any search domain (for \"go.dev\" search \r\ndomain, it should query fine the \"std.onion.go.dev\" domain).",
        "comments": 30
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-06-08T07:15:19Z",
        "closed_at": "2023-08-07T14:40:35Z",
        "merged_at": null,
        "body": "Generic version of NullString, NullInt64, etc.\r\n\r\nFixes #60370",
        "comments": 24
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-07T23:42:53Z",
        "closed_at": "2023-09-23T21:36:05Z",
        "merged_at": null,
        "body": "The new logger parameter is the same as the one in the example\r\n\"wrapping\".\r\n\r\nFixes: f67b0a73e30d (\"log/slog: initial commit\")\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-07T21:43:51Z",
        "closed_at": "2023-06-07T22:16:15Z",
        "merged_at": null,
        "body": "Add a missing space between the environment variables, see https://github.com/golang/go/issues/43958#issuecomment-1317868626 for more details.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 245,
        "deletions": 1,
        "changed_files": 7,
        "created_at": "2023-06-07T17:14:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "ignore os generated files like *.ini, .DS_Store while testing\r\n\r\n",
        "comments": 33
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-06-06T22:53:29Z",
        "closed_at": "2023-06-07T17:06:44Z",
        "merged_at": null,
        "body": "ignore os generated files like *.ini, .DS_Store while testing",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-06T18:01:58Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Adds info in the doc about advisable order of fields in struct for memory efficient code. Example cases here:- https://go.dev/play/p/97P05PazlKQ\r\n\r\nFixes #60638",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-06T14:11:31Z",
        "closed_at": "2023-06-23T15:42:08Z",
        "merged_at": null,
        "body": "Since strings.Join returns a string, use the explicit verb \"%s\"\r\ninstead of \"%v\" to keep the same style as the previous \"prefix\".\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 4113,
        "deletions": 3984,
        "changed_files": 16,
        "created_at": "2023-06-06T01:21:22Z",
        "closed_at": "2023-06-06T01:22:25Z",
        "merged_at": null,
        "body": "This PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 347,
        "deletions": 4,
        "changed_files": 5,
        "created_at": "2023-06-04T23:28:09Z",
        "closed_at": "2023-07-02T03:37:04Z",
        "merged_at": null,
        "body": "Checks equality of json strings.\r\n",
        "comments": 26
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-04T11:27:03Z",
        "closed_at": "2023-09-03T15:55:05Z",
        "merged_at": null,
        "body": "ArgWidth() already includes the stack space required for\r\ninput parameters and return values, so their offset will\r\nnot exceed the value of ArgWidth(), so there is no need\r\nto double it.",
        "comments": 19
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2023-06-02T15:35:56Z",
        "closed_at": "2023-06-08T23:41:57Z",
        "merged_at": null,
        "body": "Reduced redundant context.Background() calls. Since context.Background() is returning an empty, package scoped static empty ctx.\r\n\r\nChange-Id: Ibbef5d471e9c651d6c413c1319530a83be6a17e5\r\n\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 62,
        "deletions": 35,
        "changed_files": 7,
        "created_at": "2023-06-01T22:47:41Z",
        "closed_at": "2023-06-03T01:22:33Z",
        "merged_at": null,
        "body": "The new PGO-driven indirect call specialization from CL 492436 \r\nin theory should allow for devirtualization on methods \r\nin another package when those methods are directly referenced \r\nin the current package.\r\n\r\nHowever, inline.InlineImpossible was checking for a zero-length\r\nfn.Body and would cause devirtualization to fail\r\nwith a debug log message like:\r\n\r\n \"should not PGO devirtualize (*Speaker1).Speak: no function body\"\r\n \r\nPreviously, the logic in inline.InlineImpossible was only\r\ncalled on local functions, but with PGO-based devirtualization,\r\nit can now be called on imported functions, where inlinable\r\nimported functions will have a zero-length fn.Body but a\r\nnon-nil fn.Inl.\r\n\r\nWe update inline.InlineImpossible to handle imported functions\r\nby adding a call to typecheck.HaveInlineBody in the check\r\nthat was previously failing.\r\n\r\nFor the test, we need to have a hopefully temporary workaround\r\nof adding explicit references to the callees in another package\r\nfor devirtualization to work. CL 497175 or similar should \r\nenable removing this workaround.\r\n\r\nFixes #60561\r\nUpdates #59959",
        "comments": 29
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-05-31T15:48:16Z",
        "closed_at": "2023-05-31T21:24:02Z",
        "merged_at": null,
        "body": "The description in the \"Channel types\" section is a little misleading:\r\n  The multi-valued assignment form of the receive operator reports\r\n  whether a received value was sent before the channel was closed.\r\n\r\nIt could be interpreted as:\r\n  a value could be sent **after** the channel was closed.\r\n\r\nThe description in the \"Receive operator\" section is more clearer:\r\n  The value of ok is true if the value received was delivered by a\r\n  successful send operation to the channel, or false if it is a zero\r\n  value generated because the channel is closed and empty.\r\n\r\nThis CL copies the the description from the \"Receive operator\" section\r\nto the \"Channel types\" section (with a little modification).",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-05-30T20:15:28Z",
        "closed_at": "2023-08-03T16:05:24Z",
        "merged_at": null,
        "body": "Replaced t.Fatalf with t.Errorf for non-critical errors to footprint more failing test cases for better analysis of the error.",
        "comments": 24
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 6,
        "created_at": "2023-05-30T18:09:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This change provides support for -fuzz flag on OpenBSD. According to #46554 the flag was unsupported on some OSes due to lack of proper testing.\r\n\r\nFixes: #60491\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 90,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-30T14:57:04Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The existing implementation does not print a deprecation message when running `go install pkg@version`. This fix will add a print deprecation message for the `go run install` command.\r\n\r\nFixes #59230",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-30T13:57:14Z",
        "closed_at": "2023-08-28T13:53:27Z",
        "merged_at": null,
        "body": "Google/pprof changed the master branch to main, so it might be better to update it to the latest.\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-30T01:02:39Z",
        "closed_at": "2023-05-30T18:56:25Z",
        "merged_at": null,
        "body": "Change-Id: Ibdd109c09f9ef809136947e9b266f0a39f7a4ea9\r\n\r\nThis PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-05-29T15:28:08Z",
        "closed_at": "2023-05-30T14:53:19Z",
        "merged_at": null,
        "body": "When the Reset function is called with a nil argument, The underlying reader's buffer using the defaultBufSize should be reset.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 74,
        "deletions": 22,
        "changed_files": 2,
        "created_at": "2023-05-28T12:57:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The current issue is that when using `go mod graph`, it generates packages that are not actually selected by the [Minimal version selection (MVS)](https://go.dev/ref/mod#minimal-version-selection) process. As a result, it creates a significantly large graph with packages that are not in use or downloaded.\r\n\r\nThis pull request aims to improve the graph's accuracy by cleaning it up and retaining only the packages with versions that were chosen by MVS. This issue primarily occurs in 'go.mod' files with a Go version of 1.16 and below.\r\n\r\nTo enable this feature, you can use the '-selectedVersions' flag with the 'go mod graph' command. For example:\r\n`go mod graph -selectedVersions`\r\n\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-05-27T19:50:10Z",
        "closed_at": "2023-07-25T00:52:10Z",
        "merged_at": null,
        "body": "At the beginning of the for-loop iteration cap(data) > len(data) always. \r\nTherefore, in the first iteration, this check becomes unnecessary.\r\nwe can move this check to after the read operation. \r\n",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-27T16:41:01Z",
        "closed_at": "2023-05-28T06:39:40Z",
        "merged_at": null,
        "body": null,
        "comments": 4
    },
    {
        "merged": false,
        "additions": 711,
        "deletions": 16,
        "changed_files": 8,
        "created_at": "2023-05-27T03:01:00Z",
        "closed_at": "2023-09-12T21:11:04Z",
        "merged_at": null,
        "body": "sparse conditional constant propagation can discover optimization\r\nopportunities that cannot be found by just combining constant folding\r\nand constant propagation and dead code elimination separately.\r\n\r\nThis is a re-submit of PR#59575, which fix a broken dominance relationship caught by ssacheck\r\n\r\nUpdates https://github.com/golang/go/issues/59399",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 142,
        "deletions": 63,
        "changed_files": 5,
        "created_at": "2023-05-26T15:57:58Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Using pidfd allows us to have a handle on the process and poll the handle to non-blocking wait for the process to exit.\r\n\r\nFixes #34396\r\nFixes #60321\r\nFixes #60320",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 159,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-05-26T04:48:09Z",
        "closed_at": "2023-09-23T21:36:19Z",
        "merged_at": null,
        "body": "\r\nThe json. Equal() function can be used to determine whether two or more JSON strings are equivalent",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 311,
        "deletions": 32,
        "changed_files": 15,
        "created_at": "2023-05-24T11:08:03Z",
        "closed_at": "2023-08-25T17:42:45Z",
        "merged_at": null,
        "body": "When passing pointers of Go objects from Go to C, the cgo command generate _Cgo_use(pN) for the unsafe.Pointer type arguments, so that the Go compiler will escape these object to heap.\r\n\r\nSince the C function may callback to Go, then the Go stack might grow/shrink, that means the pointers that the C function have will be invalid.\r\n\r\nAfter adding the #cgo noescape annotation for a C function, the cgo command won't generate _Cgo_use(pN), and the Go compiler won't force the object escape to heap.\r\n\r\nAfter adding the #cgo nocallback annotation for a C function, which means the C function won't callback to Go, if it do callback to Go, the Go process will crash.\r\n\r\nFixes #56378",
        "comments": 64
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-23T02:16:02Z",
        "closed_at": "2023-06-19T20:38:20Z",
        "merged_at": null,
        "body": "When make slice of retractions, it should have initial length zero, to append more VersionIntervals.\r\n\r\nCurrently without the zero length, the capacity used will be doubled after the appending, looks like a bug.\r\n\r\n\r\n\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-22T04:21:02Z",
        "closed_at": "2023-05-22T04:21:19Z",
        "merged_at": null,
        "body": "This PR will be imported into Gerrit with the title and first\r\ncomment (this text) used to generate the subject and body of\r\nthe Gerrit change.\r\n\r\n**Please ensure you adhere to every item in this list.**\r\n\r\nMore info can be found at https://github.com/golang/go/wiki/CommitMessage\r\n\r\n+ The PR title is formatted as follows: `net/http: frob the quux before blarfing`\r\n  + The package name goes before the colon\r\n  + The part after the colon uses the verb tense + phrase that completes the blank in,\r\n    \"This change modifies Go to ___________\"\r\n  + Lowercase verb after the colon\r\n  + No trailing period\r\n  + Keep the title as short as possible. ideally under 76 characters or shorter\r\n+ No Markdown\r\n+ The first PR comment (this one) is wrapped at 76 characters, unless it's\r\n  really needed (ASCII art, table, or long link)\r\n+ If there is a corresponding issue, add either `Fixes #1234` or `Updates #1234`\r\n  (the latter if this is not a complete fix) to this comment\r\n+ If referring to a repo other than `golang/go` you can use the\r\n  `owner/repo#issue_number` syntax: `Fixes golang/tools#1234`\r\n+ We do not use Signed-off-by lines in Go. Please don't add them.\r\n  Our Gerrit server & GitHub bots enforce CLA compliance instead.\r\n+ Delete these instructions once you have read and applied them\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 180,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2023-05-18T03:55:37Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Currently the compiler groups expressions with commutative operations such as a + b + c + d as so: (a + (b + (c + d))) which is suboptimal for CPU instruction pipelining.\r\n\r\nThis pass balances commutative expressions as shown above to (a + b) + (c + d) to optimally pipeline them.\r\n\r\nBelow is a benchmark from crypto/md5 on an MacBook Pro M2:\r\n\r\n                    trunk                 reassociate\r\nHash1K-8  433.7Mi \u00b1 0%   499.4Mi \u00b1 4%  +15.17% (p=0.000 n=10)\r\nHash8K-8  454.3Mi \u00b1 1%   524.9Mi \u00b1 1%  +15.53% (p=0.000 n=10)\r\n....\r\ngeomean   284.4Mi        327.5Mi       +15.15%\r\n\r\nOther CPU architectures tried showed very little change (+/-1%) on this particular benchmark but tight mathematical code stands to gain greatly from this optimization\r\n\r\nFixes #49331",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-05-16T23:06:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Existing implementation had only microsecond or second resolution, but microsecond resolution could be seen as too precise (access to logs could be used for side channel attacks) while second resolution is not precise enough.\r\n\r\nThis adds Lmilliseconds flag.\r\n\r\nFixes #60249",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 104,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-05-16T16:20:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Proposal #54136 (implemented in CL 436890 which is part of Go 1.20) added the \"http\".ResponseController type, which allows manipulating per-request timeouts. This is especially useful for programs managing long-running HTTP connections such as Mercure.\r\n\r\nHowever, testing HTTP handlers leveraging per-request timeouts is currently cumbersome (even if doable) because\r\n\"net/http/httptest\".ResponseRecorder isn't compatible yet with \"http\".ResponseController.\r\n\r\nThis patch makes ResponseRecorder compatible with\r\n\"http\".ResponseController.\r\n\r\nAll new methods are part of the contract that response types must honor to be usable with \"http\".ResponseController.\r\n\r\nDeadlines are recorded but not enforced to prevent flaky tests.\r\n\r\nFixes #60229.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-16T13:13:11Z",
        "closed_at": null,
        "merged_at": null,
        "body": "width and precision may be abnormally large when missing args.\r\nit case unnecessary large mem alloc, as follows:\r\n\r\nfunc test() {\r\n\tvar m runtime.MemStats\r\n\truntime.ReadMemStats(&m)\r\n\tfmt.Printf(\"1. mem init: %+v\\n\", m.TotalAlloc)\r\n\tfmt.Printf(\"2. fault print: %.9000000f\\n\", \"aaa\")\r\n\tfmt.Printf(\"3. normal print %02d%02d\\n\", 1, 1)\r\n\truntime.ReadMemStats(&m)\r\n\tfmt.Printf(\"4. mem after: %+v\\n\", m.TotalAlloc)\r\n}\r\n// 1. mem init: 105856\r\n// 2. fault print: %!f(string=aaa)\r\n// 3. normal print 0101\r\n// 4. mem after: 18123680\r\n\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-05-16T09:36:32Z",
        "closed_at": "2023-05-20T00:55:16Z",
        "merged_at": null,
        "body": "We don't want to permit writing before the start of an OffsetWriter.\r\n\r\nOne of the goals of OffsetWriter is to restrict where data \r\ncan be written. \r\n\r\nHowever, this rule can be violated by WriteAt() method of OffsetWriter\r\nas the following code shows:\r\n\r\nf, _ := os.Create(\"file.txt\")\r\nowr := io.NewOffsetWriter(f, 10)\r\nowr.Write([]byte(\"world\"))\r\nowr.WriteAt([]byte(\"hello\"), -10)\r\n",
        "comments": 39
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-05-16T08:16:33Z",
        "closed_at": "2023-05-23T15:53:29Z",
        "merged_at": null,
        "body": "Since Linux 3.18, support for madvise is optional, depending on\r\nthe setting of the CONFIG_ADVISE_SYSCALLS configuration option.\r\n\r\nThe Go runtime currently assumes in several places that we \r\ndo not unmap heap memory; that needs to remain true. So, if \r\nmadvise is unsupported, we cannot fall back on munmap. AFAIK, \r\nthe only way to free the pages is to remap the memory region.\r\n\r\nFor the x86, the system call mmap() is implemented by sys_mmap2() \r\nwhich calls do_mmap2() directly with the same parameters. The main \r\ncall trace for \r\nmmap(v, n, PROT_READ|PROT_WRITE, MAP_ANON|MAP_FIXED|MAP_PRIVATE, -1, 0)\r\nis as follows:\r\n\r\n```\r\ndo_mmap2()\r\n    \\- do_mmap_pgoff()\r\n        \\- get_unmapped_area()\r\n        \\- find_vma_prepare()\r\n\t\t\t\t\r\n        // If a VMA was found and it is part of the new mmaping, remove \r\n        // the old mapping as the new one will cover both.\r\n        // Unmap all the pages in the region to be unmapped.\r\n        \\- do_munmap()\r\n\t\t\t\t\r\n        // Allocate a VMA from the slab allocator.\r\n        \\- kmem_cache_alloc()\r\n\t\t\t\t\r\n        // Link in the new vm_area_struct.\r\n        \\- vma_link()\r\n```\r\n\r\nSo, it's safe to fall back on mmap().\r\nSee D.2 https://www.kernel.org/doc/gorman/html/understand/understand021.html",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-05-16T02:20:19Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Updates the documentation for Join to explain that it does not append to an existing joinError (i.e. the result of calling Join), and if one of the errors is a joinError, it will be wrapped again. Fixes #60209\r\n\r\nIt also adds a test to provide an example of said behavior, as well as formalizing it in the API's contract.",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-15T11:12:35Z",
        "closed_at": "2023-05-17T16:28:41Z",
        "merged_at": null,
        "body": "This change wraps the errors from the CharsetReader function so the caller can distinguish different error conditions.\r\n\r\nContext: I have an XML file with an unknown encoding which I like to handle separately. I like to use the CharsetReader for this but the error type has not been forwarded.\r\n",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-15T09:25:05Z",
        "closed_at": "2023-05-24T22:43:36Z",
        "merged_at": null,
        "body": "I came across similar issue in CL 455275. \r\nWithout rooting this, the search domains might affect \r\nthe query, so the test might not prove the right thing.\r\nThe search domain will cause a change from no data\r\nto NXDOMAIN error.",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-05-15T07:46:27Z",
        "closed_at": "2023-06-13T08:52:17Z",
        "merged_at": null,
        "body": "The current implementation of always returning a process can lead to unexpected behavior and is generally not very helpful.\r\n\r\nThis commit adds a simple check whether the process is still alive or not, as described in the POSIX standard, by attempting to send a null signal to the process.\r\n\r\nFixes #34396\r\n\r\nLink: https://pubs.opengroup.org/onlinepubs/9699919799/functions/kill.html",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-05-14T12:01:29Z",
        "closed_at": "2023-05-15T08:12:27Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-05-13T18:45:05Z",
        "closed_at": "2023-09-09T01:56:19Z",
        "merged_at": null,
        "body": "Add check for package loader to print error and fail `go generate` command,\r\nif package can not be found.\r\n\r\nFixes #60079",
        "comments": 35
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-05-12T15:04:21Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The comment on runCleanup states \"If catchPanic is true ...\", but there is no catchPanic argument or variable. This was introduced in commit 998cbe29832a, which also introduced the panicHandling type. This was changed during code review, but the comment was missed. See:\r\n\r\nhttps://go-review.googlesource.com/c/go/+/214822/4..6/src/testing/testing.go#b797\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-05-12T15:04:05Z",
        "closed_at": null,
        "merged_at": null,
        "body": "When a sub-benchmark function panics, the parent Cleanup() functions are never run. This attempts to fix this issue. Unfortunately, something is still catching these panics, so the cleanup functions do run, but the panic is not reported.\r\n\r\nFixes #60129",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 4749,
        "deletions": 2084,
        "changed_files": 228,
        "created_at": "2023-05-12T06:47:08Z",
        "closed_at": "2023-05-12T06:49:53Z",
        "merged_at": null,
        "body": "\u201cIndirect()\u201d have a similar function to \u201cElem()\u201d\uff0c\r\nUnified invocation mode is recommended\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-11T20:47:38Z",
        "closed_at": "2023-05-11T21:07:25Z",
        "merged_at": null,
        "body": "Reasons for this change: \r\n- The number(size) being expressed is the power of two.\r\n- This approach is more consistent across the `src/io/io.go` file.\r\n- This approach is slightly faster based on my benchmarks\r\n`goos: linux`\r\n`goarch: amd64`\r\n`cpu: 12th Gen Intel(R) Core(TM) i9-12900HK`\r\nBenchmarkPerformance/LeftShift-20                    1000000000               0.1042 ns/op\r\nBenchmarkPerformance/Multiplication-20           1000000000               0.1054 ns/op\r\nBenchmarkPerformance/LeftShift#01-20             1000000000               0.1168 ns/op\r\nBenchmarkPerformance/Multiplication#01-20    1000000000               0.1102 ns/op\r\nBenchmarkPerformance/LeftShift#02-20              1000000000               0.1084 ns/op\r\nBenchmarkPerformance/Multiplication#02-20    1000000000               0.1174 ns/op\r\nBenchmarkPerformance/LeftShift#03-20              1000000000               0.1141 ns/op\r\nBenchmarkPerformance/Multiplication#03-20    1000000000               0.1353 ns/op\r\nBenchmarkPerformance/LeftShift#04-20              1000000000               0.1030 ns/op\r\nBenchmarkPerformance/Multiplication#04-20    1000000000               0.1276 ns/op\r\nBenchmarkPerformance/LeftShift#05-20              1000000000               0.1028 ns/op\r\nBenchmarkPerformance/Multiplication#05-20    1000000000               0.1446 ns/op\r\nBenchmarkPerformance/LeftShift#06-20             1000000000               0.1241 ns/op\r\nBenchmarkPerformance/Multiplication#06-20    1000000000               0.1418 ns/op\r\nBenchmarkPerformance/LeftShift#07-20            1000000000               0.1108 ns/op\r\nBenchmarkPerformance/Multiplication#07-20   1000000000               0.1121 ns/op\r\nBenchmarkPerformance/LeftShift#08-20            1000000000               0.1177 ns/op\r\nBenchmarkPerformance/Multiplication#08-20  1000000000               0.1069 ns/op\r\nBenchmarkPerformance/LeftShift#09-20            1000000000               0.1089 ns/op\r\nBenchmarkPerformance/Multiplication#09-20   1000000000               0.1076 ns/op",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-11T03:28:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "In (*Server).StartTLS, it's unnecessary to create an http.Client\r\nwith a Transport, because a new one will be created with the\r\nTLSClientConfig later.",
        "comments": 3
    }
]