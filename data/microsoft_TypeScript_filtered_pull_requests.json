[
    {
        "merged": false,
        "additions": 488,
        "deletions": 17,
        "changed_files": 8,
        "created_at": "2023-10-17T21:02:40Z",
        "closed_at": "2023-10-17T21:50:12Z",
        "merged_at": null,
        "body": "Fixes #56138, but at what cost?",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 404,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-10-17T20:12:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #55939",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 110583,
        "deletions": 1043,
        "changed_files": 735,
        "created_at": "2023-10-16T20:48:14Z",
        "closed_at": "2023-10-16T23:08:14Z",
        "merged_at": "2023-10-16T23:08:14Z",
        "body": "I forgot to cherry pick this in #55814 from #54785 \r\n\r\nThis baselines tsserver long when running fourslash-server tests.\r\nWhat this helps with is that project updates that happen get baselined and helps with debugging (eg Have failing test as part of c2dbfe4 which i can investigate easily with this)\r\nThe other thing it helps with is the watches that get created: We would be more mindful of watches that get created as part of particular scenario and handle those. \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 215,
        "deletions": 28,
        "changed_files": 7,
        "created_at": "2023-10-16T20:16:52Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #54035",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 762,
        "deletions": 349,
        "changed_files": 37,
        "created_at": "2023-10-16T19:54:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This changes the somewhat fragile way we handled the simplification of constructor body statements when transforming `super()` that became even more fragile in TS 5.2. These simplifications were intended to slim down transformed constructor bodies when a temporary variable like `_this` may not be necessary:\r\n\r\n```js\r\n// given\r\nclass C extends Base {\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\n// without simplification\r\nvar C = (function (_super) {\r\n    function C() {\r\n        var _this = this;\r\n        _this = _super.call(this) || this;\r\n        return _this;\r\n    }\r\n    return C;\r\n})(Base);\r\n\r\n// with simplificaiton\r\nvar C = (function (_super) {\r\n    function C() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return C;\r\n})(Base);\r\n```\r\n\r\nHowever, when `using` was introduced in TS 5.2, the simplification mechanism became more complicated as the `super()` statements we would normally look for would be moved inside of a `try..catch..finally` block if the constructor contained a `using` declaration.\r\n\r\nRather than try to handle specific `super()` simplifications when initially visiting the constructor body, this PR instead performs these simplifications in a second pass after the initial transformation completes. This results in a mechanism that is more reliable than the prior approach as it only performs these simplifications with complete knowledge of the transformed result..\r\n\r\nFixes #55646\r\nFixes #55637\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 164,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-10-16T12:26:13Z",
        "closed_at": "2023-10-16T17:48:09Z",
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/56121",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 125,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-10-16T12:20:00Z",
        "closed_at": "2023-10-16T17:16:20Z",
        "merged_at": "2023-10-16T17:16:20Z",
        "body": "This helps to avoid redundant cycles: [TS playground](https://www.typescriptlang.org/play?ts=5.3.0-dev.20231016#code/C4TwDgpgBAEg9gdwDYFEBOa5oMIEMlIBGuAxgNZQC8UAFAM5wCuAdgCYCSrAXFM4wLaEIaADRRhmNDxZlmiZgEoqAPigA3OAEtWAbgBQezc2DCAZqWjxkAeTDBNcZnSgBvPVCiOwSXCAlYAfh4rVAwsPAJicigAHygWVghTIwhdPQBfAxIfOmcQ13coEkc6YDRGEmAsGjBGQiRNEig0CFxWRyQQTzsHJ2DEJFt7EqUXTI9HEggaZlx+CB4AIhYkOHJFsVNmHholSlUNbVHCj2KnOCQIADpVgHMZuYhNxX0PTMy9M9KoI1LcZimVF4EAQsAGNDcE2Y3l8-iktD2By0rB+TmA-ymV0m02WzFW6zEuxUrnSChEGQU+iAA)",
        "comments": 23
    },
    {
        "merged": false,
        "additions": 106,
        "deletions": 82,
        "changed_files": 2,
        "created_at": "2023-10-16T11:07:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes https://github.com/microsoft/TypeScript/issues/56119.\r\n\r\n---\r\n\r\nFixed JSdocs of `es5.d.ts` and `es2023.array.d.ts`.\r\n\r\n- Fixed the description for TypedArray `toSorted` accordingly: \r\n\r\n```diff\r\n- If omitted, the elements are sorted in ascending, ASCII character order.\r\n+ If omitted, the elements are sorted in ascending order.\r\n```\r\n\r\n- The parts that are expressed differently from other JSDoc have been unified.\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 300,
        "deletions": 31,
        "changed_files": 18,
        "created_at": "2023-10-16T09:44:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The goal of this pull-request is for \"extract ...\" refactoring to find all similar expressions and replaces them all with the new variable created.\r\n\r\nFor example, it would be nice to turn the following:\r\n\r\n```ts\r\nfunction topFiveSomething(a: SomeObject){\r\n  if(a.something.something.length < 5){\r\n    return a.something.something;\r\n  } else {\r\n    return a.something.something.slice(0, 5);\r\n  }\r\n}\r\n```\r\n\r\nInto this:\r\n\r\n```ts\r\nfunction topFiveSomething(a: SomeObject){\r\n  const something = a.something.something;\r\n  if(something.length < 5){\r\n    return something;\r\n  } else {\r\n    return something.slice(0, 5);\r\n  }\r\n}\r\n```\r\n\r\nBut the current \"extract to constant in enclosing scope\" will only find and replace on instance of `a.something.something`. This PR makes it find all of them and replace all of them. \r\n\r\nAs of now it is very limited, it supports some basic expressions in limited locations (for example not when extracting to a function and not when extracting a property in a class. I just want to see if this is a good approach for solving this issue, and then expand on it if it is. \r\n\r\nFixes #35349\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 156,
        "deletions": 5,
        "changed_files": 8,
        "created_at": "2023-10-16T09:03:16Z",
        "closed_at": "2023-10-16T18:59:26Z",
        "merged_at": "2023-10-16T18:59:26Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/56112",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2023-10-16T05:49:05Z",
        "closed_at": "2023-10-16T16:37:16Z",
        "merged_at": "2023-10-16T16:37:16Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-10-15T16:11:05Z",
        "closed_at": "2023-10-16T20:45:31Z",
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 271,
        "deletions": 2,
        "changed_files": 6,
        "created_at": "2023-10-13T21:26:59Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #56094",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-13T19:21:39Z",
        "closed_at": "2023-10-13T22:37:59Z",
        "merged_at": "2023-10-13T22:37:59Z",
        "body": "This pipeline has been archived for a while, so this badge isn't doing anything anymore.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 569,
        "deletions": 17,
        "changed_files": 32,
        "created_at": "2023-10-13T18:28:53Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Adds a specialized diagnostic for the case of a `/>` (slash and greater-than-sigh) after an identifier in a non-JSX-mode file.\r\n\r\n```plaintext\r\nJSX tags are not permitted in `.ts` files. Did you mean to change the file extension to `.tsx`?\r\n```\r\n\r\nI'm not at all confident in this PR's approach. It feels _weird_ to work with a \"`previousNode`\" and then skip through tokens. Would love to know if there's a cleaner way of doing things, please!\r\n\r\nThis also doesn't capture every possible syntax variant that could appear to be from JSX syntax in a non-JSX file. I couldn't figure out any clean way to get more cases that came to mind.\r\n\r\nFixes #29375",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 443,
        "deletions": 16,
        "changed_files": 5,
        "created_at": "2023-10-13T18:28:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 96,
        "deletions": 11,
        "changed_files": 6,
        "created_at": "2023-10-12T19:40:49Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nCloses #55675\r\n\r\nThis makes the auto-imports behavior of `verbatimModuleSyntax` available as an editor preference, independent of compiler options. Stylistic preference for type-only imports has been a popular demand since the syntax was introduced, and compiler options which may or may not be appropriate for a user\u2019s actual compilation have long been adopted for their side effects on auto-import behavior. This setting allows users to separate their stylistic preference from picking the right compiler options for their actual use case.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-10-12T19:33:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/56082",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 172,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2023-10-12T18:51:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/49171",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-10-12T18:49:53Z",
        "closed_at": "2023-10-12T19:18:54Z",
        "merged_at": "2023-10-12T19:18:54Z",
        "body": "I didn't realize it, but the markdown used in the bug template is apparently rendered using the same markdown processing as issues, which is to say that newlines are preserved even if they are part of the same paragraph. This is different than regular markdown files where paragraphs are joined. Annoying difference.\r\n\r\nAnyway, I didn't intend for it to look like this:\r\n\r\n![image](https://github.com/microsoft/TypeScript/assets/5341706/0d922792-b4c9-4214-92b6-1b05e553f182)\r\n\r\nThe lines were supposed to join.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-10-12T18:12:37Z",
        "closed_at": "2023-10-12T18:46:06Z",
        "merged_at": "2023-10-12T18:46:06Z",
        "body": "I hope a little self promotion isn't looked down on, but having users bisect their issues if they're willing was the reason I made the tool in the first place!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 316,
        "deletions": 53,
        "changed_files": 41,
        "created_at": "2023-10-12T09:30:35Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [x] Code is up-to-date with the `main` branch\r\n* [x] You've successfully run `hereby runtests` locally\r\n* [x] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #29129\r\n\r\nThe issue to resolve this PR is not `Backlog` milestone.\r\n`Intl.getCanonicalLocales` type definition should be included in #45647, but unfortunately it could not do.\r\n\r\nEven now, the `Intl.getCanonicalLocales` type is not resolved.\r\nWe can check it in the playground.\r\nhttps://www.typescriptlang.org/play?ssl=1&ssc=6&pln=1&pc=25#code/JIOwLgNgdA5gpmAwgQxAexASwMbIgGTVwjgGcg\r\n\r\n## about `Intl.getCanonicalLocales`\r\n- MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/getCanonicalLocales\r\n- ecma402 spec: https://tc39.es/ecma402/#sec-intl.getcanonicallocales\r\n\r\n## why do i add as `es2016.intl` \r\n`Intl.getCanonicalLocales` is supported since 2016, so some proejcts using typescript might still use es2016.\r\nI've added `es2016.intl.d.ts` for compatibility and defined in it.\r\n\r\n## Parameters and return types of `Intl.getCanonicalLocales`\r\n`UnicodeBCP47LocaleIdentifier` is not defined at `es2020.intl.d.ts`. In the past, [A comment](https://github.com/microsoft/TypeScript/pull/39662#issuecomment-852194127) of #39662 has tried to support `UnicodeBCP47LocaleIdentifier` by defining it in es2016.\r\nHowever, if we do that, it will result in a destructive change for some users, as this comment states.\r\n\r\n`UnicodeBCP47LocaleIdentifier` is currently an alias for `string`. So, as a compromise, the parameters and return value of `Intl.getCanonicalLocales` are defined as string. by that way, we can keep compatibility.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 37576,
        "deletions": 24250,
        "changed_files": 333,
        "created_at": "2023-10-12T00:08:39Z",
        "closed_at": "2023-10-12T17:39:42Z",
        "merged_at": "2023-10-12T17:39:42Z",
        "body": "Pulled out from #56074",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5066,
        "deletions": 461,
        "changed_files": 222,
        "created_at": "2023-10-11T22:52:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Still working, creating PR to run tests\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-10-11T19:21:10Z",
        "closed_at": "2023-10-11T19:54:28Z",
        "merged_at": "2023-10-11T19:54:28Z",
        "body": "I noticed this in the monaco build logs:\r\n\r\n```\r\nsrc/language/typescript/lib/typescriptServices.js:165729:6:\r\n      165729 \u2502       case 300 /* AssertClause */:\r\n             \u2575       ~~~~\r\n\r\n  The earlier case clause is here:\r\n\r\n    src/language/typescript/lib/typescriptServices.js:165728:6:\r\n      165728 \u2502       case 300 /* ImportAttributes */:\r\n             \u2575       ~~~~\r\n\r\nWarning: G] This case clause will never be evaluated because it duplicates an earlier case clause [duplicate-case]\r\n\r\n    src/language/typescript/lib/typescriptServices.js:165729:6:\r\n      165729 \u2502       case 300 /* AssertClause */:\r\n             \u2575       ~~~~\r\n\r\n  The earlier case clause is here:\r\n\r\n    src/language/typescript/lib/typescriptServices.js:165728:6:\r\n      165728 \u2502       case 300 /* ImportAttributes */:\r\n             \u2575       ~~~~\r\n\r\nWarning: G] This case clause will never be evaluated because it duplicates an earlier case clause [duplicate-case]\r\n\r\n    src/language/typescript/lib/typescriptServices.js:165729:6:\r\n      165729 \u2502       case 300 /* AssertClause */:\r\n             \u2575       ~~~~\r\n\r\n  The earlier case clause is here:\r\n\r\n    src/language/typescript/lib/typescriptServices.js:165728:6:\r\n      165728 \u2502       case 300 /* ImportAttributes */:\r\n             \u2575       ~~~~\r\n```\r\n\r\nGenerally when we deprecate something and point it at something new, we also remove its use as much as possible (see other deprecated JSDoc stuff), but that wasn't done in this case. This has a visible effect on downstream users as tools like bundlers sometimes detect dead code that looks wrong, like the above switch case where it lists `300` twice.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-11T17:23:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "For #55948\r\n\r\nWhen narrowing large unions of literals, we do four different relation calls which appear to be quite costly. By checking ahead of time that we're going to relate two literals, we can skip this work by comparing the values directly and only once (as the result shouldn't be order dependent).\r\n\r\nThis leads to a significant speedup on #55948:\r\n\r\n```\r\nBenchmark 1: main\r\n  Time (mean \u00b1 \u03c3):     12.456 s \u00b1  0.851 s    [User: 12.929 s, System: 0.059 s]\r\n  Range (min \u2026 max):   11.219 s \u2026 13.428 s    10 runs\r\n \r\nBenchmark 2: PR\r\n  Time (mean \u00b1 \u03c3):      2.973 s \u00b1  0.053 s    [User: 3.434 s, System: 0.057 s]\r\n  Range (min \u2026 max):    2.906 s \u2026  3.073 s    10 runs\r\n \r\nSummary\r\n  'PR' ran\r\n    4.19 \u00b1 0.30 times faster than 'main'\r\n```\r\n\r\nThis PR passes all of the tests, but I think my implementation is probably wrong for some edge cases. ~Like, I don't validate that the literal types are the same between the two, just their values, which is wrong. But, doesn't break?~ Fixed that edge case.",
        "comments": 22
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-10-11T16:41:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Noticed this while working on a perf regression.\r\n\r\nThis function always allocates a new array. But if the mapping function doesn't change the array, we could avoid it. Elsewhere, we use `sameMap` for this kind of thing, but presumably we didn't in `mapType` as mappers can _remove_ types by returning `undefined`. To keep behavior, this now calls `compact`, which also returns the original array when possible.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 291,
        "deletions": 38,
        "changed_files": 17,
        "created_at": "2023-10-11T02:31:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #55810\r\n\r\n~I am still not 100% sure why the two differ in length, but my understanding is roughly that the combo of a type alias and instantiation expression lead to the potential for two of the types to have the same symbol, but have different observed members. This leads the source to have a signature, but the target to not, but the current code assumes that if the two symbols are the same that they'll have the same number of signatures. But, that's not the case here. Skipping this particular path when the lengths differ leads to the correct result, and I think that's okay.~\r\n\r\nThe above is just all wrong, the main underlying problem is that instantiation expressions don't get symbols, which violates assumptions the checker makes elsewhere.\r\n\r\nNotably, this PR is effectively a revert of #51214 then fixed again with a different fix that isn't so targeted toward type printing.",
        "comments": 23
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-10T20:23:14Z",
        "closed_at": "2023-10-10T22:14:03Z",
        "merged_at": "2023-10-10T22:14:03Z",
        "body": "Not having this causes bundlers to get mad because they can't resolve `perf_hooks`, but it's an optional dep. See: https://github.com/microsoft/TypeScript/issues/39436#issuecomment-1756167264",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-10-10T19:47:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #56052",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-10-10T16:52:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This is a super silly nit, but my old hack for this left extra spaces in our output when I could have just used a different temporary name for `require` calls that was exactly the same length, thus leaving the final output optimal.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-10T14:43:04Z",
        "closed_at": "2023-10-10T15:40:18Z",
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [x] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [x] Code is up-to-date with the `main` branch\r\n* [x] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #56057\r\n\r\nI feel like a test could be added, but I'm having a hard time finding the appropriate test suit where this should be, so I can use some help with it. Hence, I'm setting it as _Ready for review_...",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 105,
        "deletions": 1211,
        "changed_files": 12,
        "created_at": "2023-10-10T11:13:38Z",
        "closed_at": "2023-10-12T19:52:06Z",
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #46150 \r\nFix the issue where the `tsconfig.json` generated by `tsc --init` is unreadable for humans.\r\n\r\n\r\n## A few questions for all before discussion.\r\n\r\n- Have you actually used `tsc --init` before?\r\n- How many of your projects have `tsconfig.json` files with a significant number of comments?\r\n- In the projects you have encountered, how many of them had `tsconfig.json` files with a significant number of comments?\r\n- What screen resolution do you use, or how many pages do you need to scroll through to view the entire `tsconfig.json`?\r\n- How much time do you spend searching for the actual effective configuration among a large number of comments in your `tsconfig.json`?\r\n- If your project's tsconfig.json is heavily commented, do you remove the comments?\r\n- If you dislike comments, how much time and effort do you spend removing them?\r\n- If you like the comments generated by `tsc --init`, how likely is it for the comments' indentation to become disordered when you edit the `tsconfig.json` configuration?\r\n- Does your development environment support formatting `tsconfig.json` and ensure that comment alignment remains undisturbed?\r\n- When formatting `tsconfig.json`, can you tolerate a misaligned configuration file if the comments' alignment becomes disrupted?\r\n\r\n## Before\r\n```jsonc\r\n{\r\n  \"compilerOptions\": {\r\n    /* Visit https://aka.ms/tsconfig to read more about this file */\r\n\r\n    /* Projects */\r\n    // \"incremental\": true,                              /* Save .tsbuildinfo files to allow for incremental compilation of projects. */\r\n    // \"composite\": true,                                /* Enable constraints that allow a TypeScript project to be used with project references. */\r\n    // \"tsBuildInfoFile\": \"./.tsbuildinfo\",              /* Specify the path to .tsbuildinfo incremental compilation file. */\r\n    // \"disableSourceOfProjectReferenceRedirect\": true,  /* Disable preferring source files instead of declaration files when referencing composite projects. */\r\n    // \"disableSolutionSearching\": true,                 /* Opt a project out of multi-project reference checking when editing. */\r\n    // \"disableReferencedProjectLoad\": true,             /* Reduce the number of projects loaded automatically by TypeScript. */\r\n\r\n    /* Language and Environment */\r\n    \"target\": \"es2016\",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */\r\n    // \"lib\": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */\r\n    // \"jsx\": \"preserve\",                                /* Specify what JSX code is generated. */\r\n    // \"experimentalDecorators\": true,                   /* Enable experimental support for legacy experimental decorators. */\r\n    // \"emitDecoratorMetadata\": true,                    /* Emit design-type metadata for decorated declarations in source files. */\r\n    // \"jsxFactory\": \"\",                                 /* Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'. */\r\n    // \"jsxFragmentFactory\": \"\",                         /* Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'. */\r\n    // \"jsxImportSource\": \"\",                            /* Specify module specifier used to import the JSX factory functions when using 'jsx: react-jsx*'. */\r\n    // \"reactNamespace\": \"\",                             /* Specify the object invoked for 'createElement'. This only applies when targeting 'react' JSX emit. */\r\n    // \"noLib\": true,                                    /* Disable including any library files, including the default lib.d.ts. */\r\n    // \"useDefineForClassFields\": true,                  /* Emit ECMAScript-standard-compliant class fields. */\r\n    // \"moduleDetection\": \"auto\",                        /* Control what method is used to detect module-format JS files. */\r\n\r\n    /* Modules */\r\n    \"module\": \"commonjs\",                                /* Specify what module code is generated. */\r\n    // \"rootDir\": \"./\",                                  /* Specify the root folder within your source files. */\r\n    // \"moduleResolution\": \"node10\",                     /* Specify how TypeScript looks up a file from a given module specifier. */\r\n    // \"baseUrl\": \"./\",                                  /* Specify the base directory to resolve non-relative module names. */\r\n    // \"paths\": {},                                      /* Specify a set of entries that re-map imports to additional lookup locations. */\r\n    // \"rootDirs\": [],                                   /* Allow multiple folders to be treated as one when resolving modules. */\r\n    // \"typeRoots\": [],                                  /* Specify multiple folders that act like './node_modules/@types'. */\r\n    // \"types\": [],                                      /* Specify type package names to be included without being referenced in a source file. */\r\n    // \"allowUmdGlobalAccess\": true,                     /* Allow accessing UMD globals from modules. */\r\n    // \"moduleSuffixes\": [],                             /* List of file name suffixes to search when resolving a module. */\r\n    // \"allowImportingTsExtensions\": true,               /* Allow imports to include TypeScript file extensions. Requires '--moduleResolution bundler' and either '--noEmit' or '--emitDeclarationOnly' to be set. */\r\n    // \"resolvePackageJsonExports\": true,                /* Use the package.json 'exports' field when resolving package imports. */\r\n    // \"resolvePackageJsonImports\": true,                /* Use the package.json 'imports' field when resolving imports. */\r\n    // \"customConditions\": [],                           /* Conditions to set in addition to the resolver-specific defaults when resolving imports. */\r\n    // \"resolveJsonModule\": true,                        /* Enable importing .json files. */\r\n    // \"allowArbitraryExtensions\": true,                 /* Enable importing files with any extension, provided a declaration file is present. */\r\n    // \"noResolve\": true,                                /* Disallow 'import's, 'require's or '<reference>'s from expanding the number of files TypeScript should add to a project. */\r\n\r\n    /* JavaScript Support */\r\n    // \"allowJs\": true,                                  /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */\r\n    // \"checkJs\": true,                                  /* Enable error reporting in type-checked JavaScript files. */\r\n    // \"maxNodeModuleJsDepth\": 1,                        /* Specify the maximum folder depth used for checking JavaScript files from 'node_modules'. Only applicable with 'allowJs'. */\r\n\r\n    /* Emit */\r\n    // \"declaration\": true,                              /* Generate .d.ts files from TypeScript and JavaScript files in your project. */\r\n    // \"declarationMap\": true,                           /* Create sourcemaps for d.ts files. */\r\n    // \"emitDeclarationOnly\": true,                      /* Only output d.ts files and not JavaScript files. */\r\n    // \"sourceMap\": true,                                /* Create source map files for emitted JavaScript files. */\r\n    // \"inlineSourceMap\": true,                          /* Include sourcemap files inside the emitted JavaScript. */\r\n    // \"outFile\": \"./\",                                  /* Specify a file that bundles all outputs into one JavaScript file. If 'declaration' is true, also designates a file that bundles all .d.ts output. */\r\n    // \"outDir\": \"./\",                                   /* Specify an output folder for all emitted files. */\r\n    // \"removeComments\": true,                           /* Disable emitting comments. */\r\n    // \"noEmit\": true,                                   /* Disable emitting files from a compilation. */\r\n    // \"importHelpers\": true,                            /* Allow importing helper functions from tslib once per project, instead of including them per-file. */\r\n    // \"importsNotUsedAsValues\": \"remove\",               /* Specify emit/checking behavior for imports that are only used for types. */\r\n    // \"downlevelIteration\": true,                       /* Emit more compliant, but verbose and less performant JavaScript for iteration. */\r\n    // \"sourceRoot\": \"\",                                 /* Specify the root path for debuggers to find the reference source code. */\r\n    // \"mapRoot\": \"\",                                    /* Specify the location where debugger should locate map files instead of generated locations. */\r\n    // \"inlineSources\": true,                            /* Include source code in the sourcemaps inside the emitted JavaScript. */\r\n    // \"emitBOM\": true,                                  /* Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files. */\r\n    // \"newLine\": \"crlf\",                                /* Set the newline character for emitting files. */\r\n    // \"stripInternal\": true,                            /* Disable emitting declarations that have '@internal' in their JSDoc comments. */\r\n    // \"noEmitHelpers\": true,                            /* Disable generating custom helper functions like '__extends' in compiled output. */\r\n    // \"noEmitOnError\": true,                            /* Disable emitting files if any type checking errors are reported. */\r\n    // \"preserveConstEnums\": true,                       /* Disable erasing 'const enum' declarations in generated code. */\r\n    // \"declarationDir\": \"./\",                           /* Specify the output directory for generated declaration files. */\r\n    // \"preserveValueImports\": true,                     /* Preserve unused imported values in the JavaScript output that would otherwise be removed. */\r\n\r\n    /* Interop Constraints */\r\n    // \"isolatedModules\": true,                          /* Ensure that each file can be safely transpiled without relying on other imports. */\r\n    // \"verbatimModuleSyntax\": true,                     /* Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file's format based on the 'module' setting. */\r\n    // \"allowSyntheticDefaultImports\": true,             /* Allow 'import x from y' when a module doesn't have a default export. */\r\n    \"esModuleInterop\": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */\r\n    // \"preserveSymlinks\": true,                         /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */\r\n    \"forceConsistentCasingInFileNames\": true,            /* Ensure that casing is correct in imports. */\r\n\r\n    /* Type Checking */\r\n    \"strict\": true,                                      /* Enable all strict type-checking options. */\r\n    // \"noImplicitAny\": true,                            /* Enable error reporting for expressions and declarations with an implied 'any' type. */\r\n    // \"strictNullChecks\": true,                         /* When type checking, take into account 'null' and 'undefined'. */\r\n    // \"strictFunctionTypes\": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */\r\n    // \"strictBindCallApply\": true,                      /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */\r\n    // \"strictPropertyInitialization\": true,             /* Check for class properties that are declared but not set in the constructor. */\r\n    // \"noImplicitThis\": true,                           /* Enable error reporting when 'this' is given the type 'any'. */\r\n    // \"useUnknownInCatchVariables\": true,               /* Default catch clause variables as 'unknown' instead of 'any'. */\r\n    // \"alwaysStrict\": true,                             /* Ensure 'use strict' is always emitted. */\r\n    // \"noUnusedLocals\": true,                           /* Enable error reporting when local variables aren't read. */\r\n    // \"noUnusedParameters\": true,                       /* Raise an error when a function parameter isn't read. */\r\n    // \"exactOptionalPropertyTypes\": true,               /* Interpret optional property types as written, rather than adding 'undefined'. */\r\n    // \"noImplicitReturns\": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */\r\n    // \"noFallthroughCasesInSwitch\": true,               /* Enable error reporting for fallthrough cases in switch statements. */\r\n    // \"noUncheckedIndexedAccess\": true,                 /* Add 'undefined' to a type when accessed using an index. */\r\n    // \"noImplicitOverride\": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */\r\n    // \"noPropertyAccessFromIndexSignature\": true,       /* Enforces using indexed accessors for keys declared using an indexed type. */\r\n    // \"allowUnusedLabels\": true,                        /* Disable error reporting for unused labels. */\r\n    // \"allowUnreachableCode\": true,                     /* Disable error reporting for unreachable code. */\r\n\r\n    /* Completeness */\r\n    // \"skipDefaultLibCheck\": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */\r\n    \"skipLibCheck\": true                                 /* Skip type checking all .d.ts files. */\r\n  }\r\n}\r\n```\r\n\r\n## After\r\n```jsonc\r\n/* Visit https://aka.ms/tsconfig to read more about this file */\r\n{\r\n  \"compilerOptions\": {\r\n    \"module\": \"commonjs\",\r\n    \"target\": \"es2016\",\r\n    \"strict\": true,\r\n    \"esModuleInterop\": true,\r\n    \"forceConsistentCasingInFileNames\": true,\r\n    \"skipLibCheck\": true\r\n  }\r\n}\r\n```\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 113,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2023-10-09T21:54:38Z",
        "closed_at": null,
        "merged_at": null,
        "body": "spotted by @jakebailey [here](https://github.com/microsoft/TypeScript/pull/56035#issuecomment-1753571444)",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 213,
        "deletions": 115,
        "changed_files": 9,
        "created_at": "2023-10-09T21:28:45Z",
        "closed_at": "2023-10-09T23:05:12Z",
        "merged_at": "2023-10-09T23:05:12Z",
        "body": "Before this change, we called getExternalFiles on every project update (and some) To get correct behaviour, plugin users had to either watch things by themselves or inefficient way of refreshing this every call or just dont handle the updtes well\r\nThis passes the program update level to getExternalFiles so plugin users can make decisions based on that.\r\nFixes https://github.com/microsoft/TypeScript/issues/56044",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1169,
        "deletions": 1029,
        "changed_files": 406,
        "created_at": "2023-10-09T20:52:17Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #55575\r\n\r\nMostly, this just required adding local type parameters into the fake scopes we gin up during node building, and then ensuring type parameter node generation always went through the potentially-shadowed-type-parameter-name generation codepath (since we can no longer rely on their global accessibility to determine if their name is OK to use, since while it may be accessible via a fake scope, it might require a different name than it originally had due to shadowing).",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 162,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-10-08T22:00:18Z",
        "closed_at": "2023-10-09T18:36:17Z",
        "merged_at": "2023-10-09T18:36:17Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/56030",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 312,
        "deletions": 11,
        "changed_files": 12,
        "created_at": "2023-10-08T21:38:55Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #55994",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-10-08T16:49:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/56026",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 100,
        "deletions": 6,
        "changed_files": 7,
        "created_at": "2023-10-08T09:37:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/56018",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-10-07T20:20:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #55998",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 499,
        "deletions": 81,
        "changed_files": 13,
        "created_at": "2023-10-07T17:42:04Z",
        "closed_at": "2023-10-10T16:03:18Z",
        "merged_at": "2023-10-10T16:03:18Z",
        "body": "closes https://github.com/microsoft/TypeScript/issues/55973\r\nexpands https://github.com/microsoft/TypeScript/pull/53995\r\n\r\ncc @RyanCavanaugh ",
        "comments": 23
    },
    {
        "merged": true,
        "additions": 1198,
        "deletions": 125,
        "changed_files": 18,
        "created_at": "2023-10-06T22:39:29Z",
        "closed_at": "2023-10-10T17:24:09Z",
        "merged_at": "2023-10-10T17:24:09Z",
        "body": "When resolving module specifier for finding implementation file, we were using module resolution cache which means that it was possible to reuse existing module resolution and add more failed lookup locations to it. Which means that when we release that resolution as part of program update/close, we will try to release more locations than being watched.\r\nFixed this by marking module resolution cache as read-only after construction of program, which indicates module resolution algorithm to not update the cache or resolution. (instead of freezing internal maps, went ahead with at usage mode approach to avoid having to deal with invalidation logic eg for package json info before program construction) 1b6c9a8\r\n\r\nAlso updated some of the other `noDts` project related things:\r\n- Project gets updates root files only if the requested file changes 2d40a69\r\n- Add `isBackgroundProject` so we can ensure all the updates where we need to skip things for background project are handled correctly fe7f068\r\n- Earlier if the js file was not part of project it would use it only if it was at any point used and cached in services. Instead of that, now it's always added to project to search for implementation from. 0efe4ee\r\n\r\nAdded coverage for some of the missing cases like \r\n- when module specifier resolved from file is not already in the file: d552636\r\n- file is added to project after project construction for the first time based on imports present in existing file 43720b9\r\n- repeated query shouldn't change project: 5ef80a9\r\n- resolution is reused that was done from some sibling folder 8538100\r\n- incremental verification for `resolveSingleModuleNameWithoutWatching` to ensure it does not impact state: a49de0e\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 104,
        "deletions": 3,
        "changed_files": 16,
        "created_at": "2023-10-06T22:31:04Z",
        "closed_at": "2023-10-09T18:38:16Z",
        "merged_at": "2023-10-09T18:38:16Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #55636\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 763,
        "deletions": 193,
        "changed_files": 13,
        "created_at": "2023-10-06T00:54:37Z",
        "closed_at": null,
        "merged_at": null,
        "body": "With this PR we compute more accurate constraints for distributive conditional types applied to constrained type variables. For example:\r\n\r\n```ts\r\ntype IsArray<T> = T extends any[] ? true : false;\r\n\r\nfunction f1<U extends object>(x: IsArray<U>) {\r\n    let t: true = x;   // Error\r\n    let f: false = x;  // Error, but previously wasn't\r\n}\r\n```\r\n\r\nPreviously, we'd obtain the constraint of `IsArray<U>` by applying the distributive conditional type to the constraint of `U`, which resolves to `false` (because `object` doesn't extend `any[]`). But really, it ought to be `boolean` (i.e. `true | false`) since clearly something constrained to `object` both could or could not be an array.\r\n\r\nA type variable represents any possible type within its constraint. So, given a type parameter `T` with the constraint `C`, the constraint of `T extends X ? A : B` is\r\n\r\n* `A` when `C` is known to always extend `X`,\r\n* `B` when `C` is known to never extend `X`, or\r\n* `A | B` when `C` possibly extends `X`.\r\n\r\nWe previously didn't consider the third possibility. With this PR, we choose the third outcome when `C` is not assignable to `X`, but `X` (or, if `X` is a union type, some constituent of `X`) is assignable to `C`.\r\n\r\nFixes #30152.\r\n",
        "comments": 38
    },
    {
        "merged": true,
        "additions": 65,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-10-05T22:07:43Z",
        "closed_at": "2023-10-05T23:02:00Z",
        "merged_at": "2023-10-05T23:02:00Z",
        "body": "\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nSee code comment and linked issue comments for description.\r\n\r\nFixes #55607\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-10-05T16:15:57Z",
        "closed_at": "2023-10-05T18:34:10Z",
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [x] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [x] Code is up-to-date with the `main` branch\r\n* [x] You've successfully run `hereby runtests` locally\r\n* [x] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #55928\r\n\r\nThis PR adds `originalLanguageService` field to `Project` and makes `languageService` be a shallow clone of it (`this.languageService = { ...this.originalLanguageService };`).\r\n\r\nThen before applying plugins `this.languageService = { ...this.originalLanguageService };` is run to restore it and avoid plugins double decorating it after a reload. I have only done this for `ConfiguredProject` because I couldn't find an equivalent of `enablePluginsWithOptions` for other project types.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-10-05T02:09:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Not sure if these work, but they seem to be used in other repos in the org, so maybe they exist.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3119,
        "deletions": 151,
        "changed_files": 35,
        "created_at": "2023-10-05T02:00:31Z",
        "closed_at": "2023-10-06T23:23:54Z",
        "merged_at": "2023-10-06T23:23:54Z",
        "body": "Fixes #55986\r\n\r\nThis fixes narrowing in fallthrough/default cases, narrowing the type properly against `assumeTrue` for the other cases. It now behaves like if statements do.\r\n\r\n(We could totally also do `switch (false)` but that seems like a bad move.)",
        "comments": 55
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-05T01:13:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Re-opening of https://github.com/microsoft/TypeScript/pull/50031. Please see description there.\r\n\r\nPlease point me to guidance on how to make this change, and I'll update the PR.\r\n\r\nCloses #55990",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2023-10-04T23:52:14Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Not sure that we actually want this given the general instability, but it's at least interesting to consider (and I want to see what happens).\r\n\r\nallow-failure on GHA when?",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 89,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-10-04T23:33:49Z",
        "closed_at": "2023-10-05T17:33:25Z",
        "merged_at": "2023-10-05T17:33:25Z",
        "body": "\r\n\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #55829 \r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 144,
        "deletions": 11,
        "changed_files": 6,
        "created_at": "2023-10-04T15:29:21Z",
        "closed_at": "2023-10-04T18:15:44Z",
        "merged_at": "2023-10-04T18:15:44Z",
        "body": "Currently, non-semantic JSX children might produce `{ children: never[] }` props and new React types don't always add `children` prop to all React components so it became a problem.\r\n\r\nnoticed by @eps1lon [here](https://github.com/DefinitelyTyped/DefinitelyTyped/pull/66899#discussion_r1342822485)\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-04T13:39:07Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes https://github.com/microsoft/TypeScript/issues/55980\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-03T19:26:00Z",
        "closed_at": "2023-10-03T19:35:19Z",
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-10-03T19:08:41Z",
        "closed_at": "2023-10-03T21:10:06Z",
        "merged_at": "2023-10-03T21:10:06Z",
        "body": "\r\n\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #52635, probably\r\n\r\nAs described in the big comment, `computeModuleSpecifiers` returns relative module specifiers that include `/node_modules/` at a higher priority than ones that reach into a symlinked monorepo package. Both possible module specifiers are likely to be unportable, but the `node_modules` one specifically triggers the declaration emitter to issue a portability error, which is what you want (probably) when this happens during declaration emit. But the same code path is used for auto-imports, which subsequently filters out module specifiers containing `/node_modules/`, but at this point has already committed to offering an auto-import. So, for auto-imports, of the two bad possible answers, we want to ensure we return the one that doesn\u2019t contain `/node_modules/`.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1145,
        "deletions": 891,
        "changed_files": 130,
        "created_at": "2023-10-03T17:29:03Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Still working and creating PR to do testing as i push commits\r\nRework of #55067",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-03T15:26:30Z",
        "closed_at": "2023-10-05T17:36:20Z",
        "merged_at": "2023-10-05T17:36:20Z",
        "body": "Adding Support.md to clarify Typescript Support Policy\r\n\r\nFixes #49088\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4504,
        "deletions": 56,
        "changed_files": 39,
        "created_at": "2023-10-02T23:27:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": "- Add directly referenced project's root files to the auto import provider if \"paths\" are setup in options which kind of indicates willingness to use module resolution\r\n- Allow auto import if paths is present in options or symlink cache has any symlinks discovered (as part of say calculating auto import root names)\r\n\r\nFixes #55879",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3568,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-10-02T21:07:41Z",
        "closed_at": "2023-10-03T04:46:49Z",
        "merged_at": "2023-10-03T04:46:49Z",
        "body": "Fixes #55946",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 133,
        "deletions": 9,
        "changed_files": 8,
        "created_at": "2023-10-02T20:31:33Z",
        "closed_at": "2023-10-04T17:52:02Z",
        "merged_at": "2023-10-04T17:52:02Z",
        "body": "Fixes https://github.com/microsoft/TypeScript/issues/55945",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 56,
        "changed_files": 1,
        "created_at": "2023-10-02T18:08:54Z",
        "closed_at": "2023-10-02T19:45:11Z",
        "merged_at": "2023-10-02T19:45:11Z",
        "body": "Once https://github.com/microsoft/TypeScript-Make-Monaco-Builds/pull/19 and https://github.com/microsoft/TypeScript-Website/pull/2952 are merged, this workflow is no longer needed.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 464,
        "deletions": 204,
        "changed_files": 9,
        "created_at": "2023-10-02T17:20:08Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #55901\r\n\r\nThis is mainly for discussion for now. It appears as though this case is needed in some cases, e.g. in `tests/baselines/reference/uniqueSymbolsDeclarations.errors.txt`.\r\n\r\n```\r\nuniqueSymbolsDeclarations.ts(104,7): error TS2527: The inferred type of 'constInitToLReadonlyType' references an inaccessible 'unique symbol' type. A type annotation is necessary.\r\nuniqueSymbolsDeclarations.ts(105,7): error TS2527: The inferred type of 'constInitToLReadonlyNestedType' references an inaccessible 'unique symbol' type. A type annotation is necessary.\r\n```\r\n\r\nWhich is what @DanielRosenwasser hinted at.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 105,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2023-10-02T16:28:44Z",
        "closed_at": "2023-10-16T20:18:08Z",
        "merged_at": null,
        "body": "Fixes #55637",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 380,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-10-02T15:44:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-10-02T09:32:14Z",
        "closed_at": "2023-10-02T23:34:46Z",
        "merged_at": "2023-10-02T23:34:46Z",
        "body": "Fixes #55937",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 3,
        "changed_files": 8,
        "created_at": "2023-09-30T23:28:15Z",
        "closed_at": "2023-10-02T20:31:38Z",
        "merged_at": "2023-10-02T20:31:38Z",
        "body": null,
        "comments": 4
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-30T07:55:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This technically handles https://github.com/microsoft/TypeScript/issues/52345#issuecomment-1737898885 and maybe #55948, bringing it back to <=4.7 levels, but I think it's a little silly to narrow something to itself. But, probably cheap to check anyhow.",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 616,
        "deletions": 9,
        "changed_files": 8,
        "created_at": "2023-09-30T03:35:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Investigates correcting #55915.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 66,
        "changed_files": 8,
        "created_at": "2023-09-30T02:22:39Z",
        "closed_at": "2023-10-02T20:15:06Z",
        "merged_at": "2023-10-02T20:15:06Z",
        "body": "An amalgamation of various fixups and improvements:\r\n\r\n- Use the bot's token everywhere rather than `contents: write`. When using `contents: write`, GHA workflows won't run when pushed as GHA tries to prevent loops by poisoning the token. A PAT works around this.\r\n- Don't run tests in `sync-branch`. This is slightly risky given baselines might fail, but I don't think we've seen that happen and @DanielRosenwasser reports that this delay is annoying.\r\n- Update `package-lock.json` when changing `package.json`'s version. This is harmless but generally annoying that `package-lock` is not up to date on release branches. Honestly, I'm shocked that `npm ci` is okay with that state.\r\n- Remove `update-lkg.yml`, which could only ever update LKG on main, which I removed a while back.\r\n- Use a \"blobless\" clone rather than a full clone when we need history; this mode downloads the commit info, but none of the file contents until they are actually needed. This brings a full clone of our repo in CI down from 4m to 1m30m or so. See: https://github.blog/2020-12-21-get-up-to-speed-with-partial-clone-and-shallow-clone/ https://github.com/actions/checkout/pull/1396#issuecomment-1741638179",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-09-29T22:03:50Z",
        "closed_at": "2023-09-29T22:35:06Z",
        "merged_at": "2023-09-29T22:35:06Z",
        "body": "cc @DanielRosenwasser , the util is internal so it shouldn't matter *when* this lands",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 247,
        "deletions": 50,
        "changed_files": 4,
        "created_at": "2023-09-29T19:36:39Z",
        "closed_at": "2023-09-29T20:45:58Z",
        "merged_at": "2023-09-29T20:45:58Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #55914\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 818,
        "deletions": 153,
        "changed_files": 30,
        "created_at": "2023-09-29T19:33:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #18535\r\nSpec https://github.com/tc39/proposal-throw-expressions",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-09-29T16:44:07Z",
        "closed_at": "2023-09-29T21:12:50Z",
        "merged_at": "2023-09-29T21:12:50Z",
        "body": "This fixes a formatting bug when using multi-line strings.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 236,
        "deletions": 2,
        "changed_files": 10,
        "created_at": "2023-09-29T12:55:38Z",
        "closed_at": "2023-09-29T20:23:46Z",
        "merged_at": "2023-09-29T20:23:46Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55907",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 117,
        "deletions": 5,
        "changed_files": 8,
        "created_at": "2023-09-28T21:27:16Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #47357.\r\n\r\nCurrent error message is not intended to be the final one, and I'm looking for feedback on it.\r\nWhat I'm hoping to get from a new error message is to make explicit what rule is causing the error message. The important parts are that we're type checking an access expression that is **being written to**, that the type of the expression being accessed is a **generic** one, and that the access results in us accessing an **index signature** present in the constraint of the generic type.\r\n\r\nWhat I'm not trying to do: justify the rule (see https://github.com/microsoft/TypeScript/issues/47357#issuecomment-1739952453 for an explanation of what that could entail), or suggest a fix, as I don't think we have enough information to decide what an appropriate fix is.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 72,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-09-28T17:30:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #55899",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 634,
        "deletions": 127,
        "changed_files": 261,
        "created_at": "2023-09-27T19:22:35Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This is the same as #51455 but for the diagnostics module.\r\n\r\n~I was hoping this would tree shake out a bunch in `tsc.js`, but `esbuild` appears to not notice that a load of diagnostics (370 or so) are unused in `tsc` and can be removed. I need to report that upstream (could be https://github.com/evanw/esbuild/issues/3256?), though maybe if I just @evanw he might be interested~ \ud83d\ude05 \r\n\r\nSee discussion about the tree shaking; I've committed a workaround which has helped.\r\n\r\nSo far, the change is:\r\n\r\n# Package size report\r\n\r\n## Overall package size\r\n\r\n|  | Before | After | Diff | Diff (percent) |\r\n| - | - | - | - | - |\r\n| Packed | 5.48 MiB | 5.51 MiB | +22.29 KiB | +0.40% |\r\n| Unpacked | 30.47 MiB | 30.63 MiB | +163.17 KiB | +0.52% |\r\n\r\n## Files\r\n\r\n|  | Before | After | Diff | Diff (percent) |\r\n| - | - | - | - | - |\r\n| `lib/tsc.js` | 5.54 MiB | 5.46 MiB | -83.90 KiB | -1.48% |\r\n| `lib/tsserver.js` | 8.11 MiB | 8.35 MiB | +245.51 KiB | +2.96% |\r\n| `lib/typescript.js` | 8.58 MiB | 8.94 MiB | +370.62 KiB | +4.22% |\r\n| `lib/typingsInstaller.js` | 1.66 MiB | 1.30 MiB | -369.06 KiB | -21.68% |\r\n",
        "comments": 17
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-09-27T17:28:45Z",
        "closed_at": "2023-09-27T18:12:09Z",
        "merged_at": "2023-09-27T18:12:09Z",
        "body": "This is the only workflow which didn't checkout first, so I put this in the wrong place.\r\n\r\nOkay, technically set-version does too, but I didn't make this mistake there, somehow.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 638,
        "deletions": 1,
        "changed_files": 16,
        "created_at": "2023-09-27T16:11:59Z",
        "closed_at": "2023-09-29T19:29:40Z",
        "merged_at": "2023-09-29T19:29:40Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55884\r\nfollow up to https://github.com/microsoft/TypeScript/pull/54056",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1192,
        "deletions": 49,
        "changed_files": 10,
        "created_at": "2023-09-27T06:36:33Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #23305\r\n",
        "comments": 28
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 28,
        "changed_files": 8,
        "created_at": "2023-09-26T20:39:59Z",
        "closed_at": "2023-09-26T22:32:50Z",
        "merged_at": "2023-09-26T22:32:50Z",
        "body": "https://github.com/microsoft/TypeScript/pull/54242#discussion_r1337728592 /cc @DanielRosenwasser ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-26T20:17:17Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 14
    },
    {
        "merged": false,
        "additions": 96,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2023-09-26T19:01:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #55796",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-09-26T02:02:19Z",
        "closed_at": "2023-09-27T23:05:56Z",
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes https://github.com/microsoft/TypeScript/issues/55869\r\nAttempted fix for issue [55869](https://github.com/microsoft/TypeScript/issues/55869) that I created.\r\nI believe this is somewhat common as it causes an actual error if chaining options. I'm not certain on the procedures when creating a PR here, I have followed the README and believe I have a successful contribution here but if there's any questions please reach out. \r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 7009,
        "changed_files": 73,
        "created_at": "2023-09-25T23:52:14Z",
        "closed_at": "2023-09-28T20:54:48Z",
        "merged_at": "2023-09-28T20:54:48Z",
        "body": "I'm sure there's some additional historical context I'm missing, but my understanding is that these shims were largely added to bridge the gap in the days before VS used `tsserver` (given references to COM objects and native code). This code is shipped to users, but is entirely unused. It would have been used by the global factory functions we used to set, but those were removed during the module conversion.\r\n\r\nI personally find the LS shims annoying as adding new LS methods means adding code (mostly boilerplate) to make the shim work. But, this code is entirely unreferenced other than in tests.\r\n\r\nAs far as I can tell, the only changes to the fourslash shim tests for the past many many years have been related to other changes where we changed the fourslash API or modified things like token classification or completions (which are tested in these shims too, on top of other tests).\r\n\r\nI feel like it's probably safe to remove these and stop shipping this code to users via our \"everything is exported but hidden\" API design.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2023-09-25T22:43:13Z",
        "closed_at": "2023-09-29T23:49:30Z",
        "merged_at": "2023-09-29T23:49:30Z",
        "body": "It's just an internal refactor. \r\n\r\nI initially removed this special check mode almost entirely in https://github.com/microsoft/TypeScript/pull/53996 . It was brought up in https://github.com/microsoft/TypeScript/pull/54121 . I managed to remove it while reviewing this PR (see [here](https://github.com/microsoft/TypeScript/pull/54121#issuecomment-1704739925)) but I concluded then that this change should be proposed as a follow up - so here it is :)",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 2242,
        "deletions": 10,
        "changed_files": 6,
        "created_at": "2023-09-25T20:55:19Z",
        "closed_at": "2023-09-25T23:52:28Z",
        "merged_at": "2023-09-25T23:52:28Z",
        "body": "When doing path replacements we expect realpaths to be ending with directory separator so before this change, the real path that was manipulated resulted in wrong directory. \r\n\r\nFixes https://github.com/microsoft/TypeScript/issues/55135",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 500,
        "deletions": 11,
        "changed_files": 13,
        "created_at": "2023-09-25T20:27:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #55671\r\n\r\nAs noted in the linked issue, this is, unfortunately, probably in-use to mask a bunch of real issues (or as a workaround for other issues) in the wild, since it was an easy to make a type that would \"accept\" any assignments between instances of the same alias, even though once you did a structural comparison it only accepted near-exact matches. Even in our test suite it comes up a couple times in some examples we've pulled from the wild - I expect DT and top100 to have more.",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 459,
        "deletions": 0,
        "changed_files": 15,
        "created_at": "2023-09-25T18:45:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This is a very very bad attempt at making the problems we've found in #55445 into check errors. I guarantee that this PR is wrong, you can see very strange things happening because observing `isDeclarationVisible` of each declaration passed to `checkVariableLikeDeclaration` seems to cause a side effect (???), and my check is poorly copied from `declarations.ts` so has some improper edge cases.\r\n\r\nIn any case, it still catches everything we mentioned in #55445 so it's somewhat interesting.",
        "comments": 32
    },
    {
        "merged": false,
        "additions": 228,
        "deletions": 2,
        "changed_files": 10,
        "created_at": "2023-09-25T18:14:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55858",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 136,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-09-25T10:44:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55847",
        "comments": 22
    },
    {
        "merged": true,
        "additions": 159,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2023-09-25T01:57:35Z",
        "closed_at": "2023-09-26T22:57:58Z",
        "merged_at": "2023-09-26T22:57:58Z",
        "body": "With this PR we now error when computing a relation is excessively complex. Specifically, when computing a relation results in adding more relation cache entries than 1/8th of the current capacity of that relation, we issue an error. Relation caches use JavaScript maps, which in Node.js are limited  to 2^24 (~16M) entries.\r\n\r\nAn example of a relation computation that is excessively complex is the following:\r\n\r\n```ts\r\ntype Digits = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9';\r\ntype T1 = `${Digits}${Digits}${Digits}${Digits}` | undefined;\r\ntype T2 = { a: string } | { b: number };\r\n\r\nfunction f1(x: T1 | null, y: T1 & T2) {\r\n    x = y;  // Excessive complexity error\r\n}\r\n```\r\n\r\nAbove, `T1` is a union with 10,001 members, and `T2` normalizes to a union with 20,002 members.\r\n\r\nThis PR further implements an optimization outlined [here](https://github.com/microsoft/TypeScript/issues/55630#issuecomment-1731740610). For example, the following example doesn't cause an excessive complexity error because we now have a fast path when relating a union resulting from normalizing an intersection of large unions to one of those same unions.\r\n\r\n```ts\r\nfunction f2(x: T1, y: T1 & T2) {\r\n    x = y;  // Ok\r\n}\r\n```\r\n\r\nFixes #55630.",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 205,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2023-09-23T15:30:03Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #55841 by doing the check before the one about index signatures.\r\n\r\nClosed because: even if `{ a: 42 }[never]` is already computed as `never`, something like `Record<string, boolean>[never]` is `boolean`, not `never`. So the current behaviour of arrays/tuples is not consistent with the one of object literals, but is consistent with other cases.\r\n\r\nRe-opened because the correspondent issue has been accepted as a bug.\r\n",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 501,
        "deletions": 501,
        "changed_files": 66,
        "created_at": "2023-09-22T22:45:29Z",
        "closed_at": "2023-09-22T22:45:44Z",
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-09-22T22:17:55Z",
        "closed_at": "2023-09-23T23:17:45Z",
        "merged_at": "2023-09-23T23:17:45Z",
        "body": "Noticed this while working close to this declaration. A bit of bisecting shows that it was originally `var` and was switched to `let` in a bulk PR many many many years ago, but probably should have been const.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 210,
        "deletions": 43,
        "changed_files": 9,
        "created_at": "2023-09-22T21:53:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-09-22T18:04:50Z",
        "closed_at": "2023-09-22T18:29:31Z",
        "merged_at": "2023-09-22T18:29:31Z",
        "body": "This missed when merging main into #55814",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-22T17:44:03Z",
        "closed_at": "2023-09-22T18:32:56Z",
        "merged_at": "2023-09-22T18:32:56Z",
        "body": "Fixes #55823",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 100,
        "deletions": 24,
        "changed_files": 6,
        "created_at": "2023-09-22T15:15:01Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This is an experimental PR that allows `tsc` to run inside of a Node snapshot.\r\n\r\nIt'd be cool if we could reexec this and preserve a snapshot in the user's cache and run that if present, but I am not there yet. People were interested so here's the starter.\r\n\r\nTo try:\r\n\r\n```\r\n$ node --snapshot-blob snapshot.blob --build-snapshot ./built/local/tsc.js\r\n$ node --snapshot-blob snapshot.blob -- --version\r\n$ node --snapshot-blob snapshot.blob -- -b ./src\r\n```\r\n\r\nStartup speed:\r\n\r\n```\r\n$ hyperfine 'node ./built/local/tsc.js --version' 'node --snapshot-blob snapshot.blob -- --version'\r\nBenchmark 1: node ./built/local/tsc.js --version\r\n  Time (mean \u00b1 \u03c3):      90.7 ms \u00b1   1.6 ms    [User: 78.9 ms, System: 11.5 ms]\r\n  Range (min \u2026 max):    87.1 ms \u2026  94.1 ms    31 runs\r\n \r\nBenchmark 2: node --snapshot-blob snapshot.blob -- --version\r\n  Time (mean \u00b1 \u03c3):      29.4 ms \u00b1   0.9 ms    [User: 19.4 ms, System: 9.0 ms]\r\n  Range (min \u2026 max):    27.7 ms \u2026  32.3 ms    98 runs\r\n \r\nSummary\r\n  'node --snapshot-blob snapshot.blob -- --version' ran\r\n    3.09 \u00b1 0.11 times faster than 'node ./built/local/tsc.js --version'\r\n```",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 249,
        "changed_files": 3,
        "created_at": "2023-09-22T03:07:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "These scripts are all unused or haven't been used in a long time. I'm hoping to eliminate `@octokit/rest` and `azure-devops-node-api` from this repo's devDeps, and these use the former.\r\n\r\n- `request-pr-review` and `open-user-pr` were both scripts used in CI, but are no longer needed with past RWC / user test changes.\r\n- `update-experimental-branches` appears to have only been used once: https://github.com/microsoft/TypeScript/issues?q=label%3Atypescript%40experimental\r\n\r\nAfter this PR, the only remaining uses of those two CI API libraries are:\r\n\r\n- TypeScript create tarball uses `post-vsts-artifact-comment`\r\n- TypeScript on-demand cherry-pick uses `open-cherry-pick-pr`\r\n\r\nThe former I'm planning on overhauling to not be so roundabout, the latter hopefully just via GHA more simply. (But that's another PR or two.)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-22T01:40:04Z",
        "closed_at": "2023-09-22T18:57:02Z",
        "merged_at": "2023-09-22T18:57:02Z",
        "body": "#55723 fixes an actual bug in our testing infrastructure, but doubles memory usage on my machine, causing OOMs where I hit the max memory limit of my system and the OS starts killing processes.\r\n\r\nThis PR effectively reverts that change. I hate this, but I hate OOMing my machine more and #55723 was not supposed to have caused any behavior changes.",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 2543,
        "deletions": 2541,
        "changed_files": 305,
        "created_at": "2023-09-21T23:43:33Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This option is enabled when using declaration emit, but not in types baselines. I think that if we had this enabled, we may have seen issues fixed by PRs like #55820 sooner, and it's also \"more reflective\" of what the actual types are.\r\n\r\n(Really I wonder if we should have this as the default everywhere...)",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 605,
        "deletions": 48,
        "changed_files": 24,
        "created_at": "2023-09-21T22:01:32Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #55653\r\n\r\nThis turned out to be extremely related to #49627. Our original mechanism to solve the problem for type parameters was to be very conservative and rename when we think there might be a problem.\r\n\r\nIn this PR, I extend the mechanism from #49627 to the type parameters, introducing a second symbol table and fake scope to hold them, as we can't merge the symbols that share the same name without modifying them.\r\n\r\nThis turns out to have a positive impact on some existing baselines; see https://github.com/microsoft/TypeScript/pull/55820/commits/83275d2c18cf41fea0a22680a0d6d743bc8c9ebd for the actual baseline diff.",
        "comments": 19
    },
    {
        "merged": true,
        "additions": 304,
        "deletions": 544,
        "changed_files": 45,
        "created_at": "2023-09-21T19:38:39Z",
        "closed_at": "2023-09-22T17:24:38Z",
        "merged_at": "2023-09-22T17:24:38Z",
        "body": "Even though `resolvedModules` and `resolvedTypeReferenceDirectiveNames` are marked internal, it wont stop API users from using them directly so for now i have added `getResolvedModule` and `forEachResolvedModule` and their corresponding type ref APIs on program.\r\nThis is in anticipation of using module resolution cache when available as module resolution storage rather than custom map here. I might not be able to get that before Friday so just creating infra for future improvements. ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-21T19:25:03Z",
        "closed_at": null,
        "merged_at": null,
        "body": "It should not inherit ErrorConstructor's signatures.\r\n\r\nFixes #55674\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 56,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-21T18:45:52Z",
        "closed_at": "2023-09-21T22:03:11Z",
        "merged_at": "2023-09-21T22:03:11Z",
        "body": "\r\n\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #53116 (a corner case of the 5.2 feature not working)\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2082,
        "deletions": 169,
        "changed_files": 23,
        "created_at": "2023-09-21T18:43:16Z",
        "closed_at": "2023-09-22T17:53:19Z",
        "merged_at": "2023-09-22T17:53:19Z",
        "body": "Retake of #54785\r\n\r\nWith this change in tsserver, tscWatch scenarios, we verify that incremental program structure is same as if it was constructed on initial pass.\r\nThis revealed few issues when running tests locally and on top tsserver200 that were easy to fix as i went along and one that i am still looking into.\r\n- ee9367a Fixes issues with symlink ref management which was revealed by f883100 where couple of tests in tsserver/symlinks failing because we were watching extra symlinks after program updates where we shouldn't have been\r\n- 6957dbf Fixes issue with ref counting when resolution of a file is done twice because of change in reference depth level\r\n- bdc8aa7 Fixes issue when inferred project removes files and resolutions from cache after program creation is complete but didnt earlier remove corresponding watchers\r\n- 3eac143 Fixes issue with file casing because auto import includes files with different casing\r\n- The other issue found by this was ddaf1c77fc29e91cc8a8a5c45dc1cb002d0ee061 which is mitigated in tsserver with #55790 and still pending for tsbuild scenario where we share module resolution cache and for future work with sharing resolutions across tsserver projects.\r\n\r\n\r\nAfter merging this we should investigate having bot run tsserver100 /tsserver200 with incremental verification from nodeServer which is essentially 7fc6bc66870ff5630af4f09dac8c520ad31fa0ff",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1814,
        "deletions": 2,
        "changed_files": 11,
        "created_at": "2023-09-21T11:56:57Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## TLDR\r\n\r\nThis PR enhances reverse mapped types capabilities providing users with the ability to enable EPC (Excess Property Checking) on type parameters inference sites.\r\n\r\n<h2 id=\"background\">Background</h2>\r\n\r\nThis PR has come up trying to find a way to solve some problems discussed in #55645 and #55644, which are a simplification of what's going on in [this PR from XState](https://github.com/statelyai/xstate/pull/4262). In those cases the usual type parameters inference behaviour is not enough, mainly because it disables EPC (Excess Property Checking).\r\n\r\nFIxes #55927\r\n\r\n## Idea\r\n\r\nReverse mapped types are a powerful tool. Currently TypeScript is able to reverse three kind of mapped types:\r\n\r\n1. a homomorphic mapped type `{ [P in keyof T]: X }`\r\n1. a mapped type `{ [P in K]: X }`, where `K` is a type parameter\r\n1. a mapped type with an union constraint, as long as the union contains one of the constraints of the previous cases\r\n\r\nThis PR adds a fourth case: a mapped type with an intersection constraint, as long as the intersection contains one of the constraints of the previous cases.\r\n\r\nWhile the union constraint could be seen as a way to force the presence of some properties, the intersection one could be seen as a way to prevent the presence of extra properties.\r\n\r\n## Examples\r\n\r\n### Example N. 1\r\n\r\nHere the type parameter `T` is inferred by reversing the mapped type, and in this example in is inferred as `{ bar: 1; baz: \"a\"; }`. In the initial version of this PR `T` would have been inferred as `{ bar: 1; baz: \"a\"; extra: number }` in this erroneous case, but it seemed good to strip `extra` away because it wouldn't have survived the action of the mapped type anyway.\r\n\r\nIn both cases the properties of the parameter `s` are constrained to be exactly the ones already declared in `Foo`, thanks to the now supported intersection. In this way EPC comes into play if the argument contains extra properties:\r\n\r\n```ts\r\ninterface Foo {\r\n  bar: number;\r\n  baz: string;\r\n}\r\n\r\ndeclare function useFoo<T extends Foo>(s: { [K in keyof T & keyof Foo]: T[K] } ): T\r\n\r\nuseFoo({ \r\n  bar: 1,\r\n  baz: 'a',\r\n  extra: 123, // <-- Object literal may only specify known properties, and 'extra' does not exist in type '{ bar: 1; baz: \"a\"; }'.\r\n})\r\n```\r\n\r\n### Example N. 2\r\n\r\nIn the following example, taken from #12936, is the type parameter `U` the one that gets inferred by reversing the mapped type. It is inferred as `{ x: 1; y: \"y\"; }` because we strip `z: string` away from `U`. But even if we didn't, the application of the mapped type on the just inferred `U` imposes the absence of extra properties with respect to the ones declared in `T = {x: number, y: string}`.\r\n\r\n```ts\r\nconst checkType = <T>() => <U extends T>(value: { [K in keyof U & keyof T]: U[K] }) => value;\r\n\r\nconst checked = checkType<{x: number, y: string}>()({\r\n  x: 1,\r\n  y: \"y\",\r\n  z: \"z\", // <-- Object literal may only specify known properties, and 'z' does not exist in type '{ x: 1; y: \"y\"; }'.\r\n});\r\n```\r\n\r\n## Tests\r\n\r\nTwo tests files have been added:\r\n\r\n1. `reverseMappedTypeIntersectionConstraint`, in which the main capabilities brought by this PR have been tested, although I must admit I don't think there are enough test cases\r\n1. `reverseMappedTypeLimitedConstraint`, in which the stripping behaviour on the inferred type parameters has been written down, but it is somehow subsumed by the previous test and for this reason it might be deleted altogether\r\n\r\n## A note on EPC\r\n\r\nWhat's good about this PR is the fact that it lets the user enable EPC on type parameters without fundamentally change how TS treats type parameters inference. It's just a nice side effect of enhancing reverse mapped types' capabilities.\r\n\r\n## Remarks\r\n\r\nThis PR may help with some cases presented in #12936 as well.\r\n\r\n#55794 could help improving what happens when a `const` type parameter is used, because there are some inconsistencies with `readonly` modifiers. \r\n\r\n## Acknowledgements\r\n\r\nHuge thanks to @Andarist  for always having my back \ud83d\ude04.",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 92,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-09-21T08:26:09Z",
        "closed_at": "2023-10-04T20:27:43Z",
        "merged_at": "2023-10-04T20:27:43Z",
        "body": "closes https://github.com/microsoft/TypeScript/issues/55795\r\n\r\nPlease verify that this is actually the expected result. I think it is and explained why [here](https://github.com/microsoft/TypeScript/issues/55795#issuecomment-1727197771). \r\n\r\nI'm pretty sure that there is no test case like this in the codebase since I made an experiment to to obtain an apparent type of substituted mapped type property. Only 4 tests failed and none of them looked like this.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3955,
        "deletions": 5,
        "changed_files": 5,
        "created_at": "2023-09-20T18:42:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "These artifacts are generated at build time but are a part of the `tsc` compilation. This has the following bad effects:\r\n\r\n- You need to know to run `hereby` to successfully compile the code out-of-the-box. This negatively impacts code scanners like CodeQL or LSIF, as they don't actually see the completed codebase, as well as vscode.dev/github.dev.\r\n- When switching branches, you need to run `hereby generate-diagnostics`. This is not _that_ slow, some 160ms on my machine, but it's annoying that you get a load of errors in your editor until you rerun the script.\r\n\r\nIf we commit the generated files to the repo, we fix both problems. These files are also written in such a way that they shouldn't have merge conflicts.\r\n\r\nOf course, the downsides are:\r\n\r\n- The same info is duplicated in the repo, but thankfully still only has one source of truth.\r\n- You still have to rerun the command at _some point_ to generate the other files. But once they're updated, they'll at least be dirty files that you'll commit.\r\n- We need a CI task to verify that things are correct, otherwise builds become dirty (though, functional), which is goofy.\r\n\r\nThe \"bad effects\" can also be somewhat mitigated by ensuring `generate-diagnostics` is run before analysis, or using editor / git hooks to try and regenerate things, but I haven't had such good luck with those.\r\n\r\nI'm not 100% sure if this is a good idea, but I wanted to get a vibe check.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 193,
        "deletions": 126,
        "changed_files": 2,
        "created_at": "2023-09-20T18:36:52Z",
        "closed_at": "2023-09-27T23:45:43Z",
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-09-20T18:10:24Z",
        "closed_at": "2023-09-20T20:39:19Z",
        "merged_at": "2023-09-20T20:39:19Z",
        "body": "This adds a pre-commit hook that will format staged files before committing.\r\n\r\nThis also fixes the `post-checkout` hook, which I'm pretty sure has been broken this whole time (which to me means that it's not very useful).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-20T16:49:08Z",
        "closed_at": "2023-09-20T18:24:51Z",
        "merged_at": "2023-09-20T18:24:51Z",
        "body": "Fixes #55261\r\n\r\nVery small set of updates, a couple of new overloads and a couple of new properties in RTC.\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 268,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2023-09-20T06:49:33Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 7
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 50,
        "changed_files": 6,
        "created_at": "2023-09-20T04:58:52Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #53255\r\n\r\n`...args` are _always_ safely mutable within the function body as their contents are copied. See also #53398, though this PR does not fix them inside of function bodies.\r\n\r\nThis PR ignores the mutability of rest params when relating signatures, stripping readonly-ness via `getMutableArrayOrTupleType`.\r\n\r\nIt's probable that this will cause a perf hit; a cache will probably fix that but I'm sending it without one for now just to test.",
        "comments": 18
    },
    {
        "merged": true,
        "additions": 180,
        "deletions": 214,
        "changed_files": 26,
        "created_at": "2023-09-19T21:51:09Z",
        "closed_at": "2023-09-20T23:45:33Z",
        "merged_at": "2023-09-20T23:45:33Z",
        "body": "Stops taking dependency on all module resolution options when sharing sourceFiles and instead moves `resolvedModules` and `resolvedTypeReferenceDirectiveNames` from `sourceFile` to `Program` so it is safe by program to copy the resolutions across.\r\n\r\nThis came up as part of testing with #54785 where `axion` and some more (which i dont recollect) didnt pass incremental resolution check. This is shown in ddaf1c7 specifically (https://github.com/microsoft/TypeScript/commit/ddaf1c77fc29e91cc8a8a5c45dc1cb002d0ee061#diff-215d7c39ab1082f80d4c3a4f1c8bd9dd1c9ccb1c6450192bbaf409b8e5376579R140) where the resolved module on sourceFile changes and results in issues program referencing other resolution.\r\nThe issue here lies in fact that \"as type\" resolution takes into account typeRoots and if config had it its good and used as a key for affecting resolution but if user didnt specify it depends on \"config file location\" if present otherwise \"currentDirectory\" . This is issue because you could include either by types or default types (matching in both projects) a type thats in parent directories `node_modules/@types` but then that type could include `types` directive of say `node` which in both projects will be resolved say from config location which is different and if those directories have their own `node_modules/@types/node` then the location which is picked will depend on which project is picked first\r\nInvestigated few options for this\r\n- adding default type roots as key but that mean resolutions cannot be shared between two projects with config file in different directories which is very common.\r\n- On top of above option adding only present `node_modules/@types`  in the key but that means on each `npm install` we would need to update module resolutions from scratch as its change in \"key\" and parse \"sourceFiles\" so that doesnt seem practical\r\n-  The current change where decoupling sourceFiles and module resolution storage, This doesnt fix module resolution cache sharing across projects (which is only in tsbuild for now which doesnt share the caches between watch events and in future we will share in tsserver but that one will watch failed lookup locations so we could somehow use that so probably can be handled in some way without having to invalidate everything)",
        "comments": 27
    },
    {
        "merged": true,
        "additions": 61,
        "deletions": 10,
        "changed_files": 7,
        "created_at": "2023-09-19T20:35:12Z",
        "closed_at": "2023-10-04T20:45:26Z",
        "merged_at": "2023-10-04T20:45:26Z",
        "body": "#53356 introduced the ability to have partially named tuples, but while working on another bug, I noticed that there were a few places that the PR missed that should also be preserving names. This fixes those cases, with tests.\r\n\r\nThere are still other calls to `createTupleType` which are missing names, but they all appear to be unable to generate them (anywhere that generates a tuple from a binding, or are \"noramlizing\" a tuple which can create more than one element for the same name).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-18T20:12:48Z",
        "closed_at": "2023-09-27T00:32:25Z",
        "merged_at": "2023-09-27T00:32:25Z",
        "body": "Fixes https://github.com/microsoft/TypeScript/issues/55775\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 132,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-09-18T19:47:15Z",
        "closed_at": "2023-09-19T21:26:14Z",
        "merged_at": "2023-09-19T21:26:14Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55778",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 286,
        "deletions": 224,
        "changed_files": 14,
        "created_at": "2023-09-18T16:53:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "closes https://github.com/microsoft/TypeScript/issues/55762\r\nexpands on the logic introduced in https://github.com/microsoft/TypeScript/pull/48837\r\n\r\nAt the moment `K` in the name type of a mapped type that iterates over `keyof Arr` refers to all properties of the array type, that includes `length`, `toString`, and more. #48837 changed `K`'s constraint in such mapped types to include\r\n`` number | `${number}` `` but the change only affected `K` in the template type part of the mapped type.\r\n\r\nThis change introduces a very similar change to the `K`'s constraint - just within the name type part of the mapped type. This makes it easier to write types that transform tuples into objects. It's not impossible to write types like this today but I think that it's not intuitive and more cumbersome. \r\n\r\nWith the changes in this PR the types like this can be simplified as follows:\r\n```diff\r\ntype StructDescriptor = ReadonlyArray<readonly [key: string, type: Decoder<any>]>;\r\n\r\ntype StructTypeFor<Descriptor extends StructDescriptor> = {\r\n-    [K in keyof Descriptor & `${number}` as Descriptor[K][0]]: ValueTypeOf<Descriptor[K][1]>;\r\n+    [K in keyof Descriptor as Descriptor[K][0]]: ValueTypeOf<Descriptor[K][1]>;\r\n};\r\n```",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-17T19:21:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #55765",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-09-15T20:36:31Z",
        "closed_at": null,
        "merged_at": null,
        "body": "We'll see if this ends up slow, but it theoretically prevents us from making mistakes and modifying these sentinel values.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2023-09-15T04:23:19Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Node 16 just went EOL, making Node 14 doubly EOL. For the last few releases, we've \"officially\" supported only the latest EOL release, which Node 16 now is. Node 16's deprecation is \"early\" upstream due to its OpenSSL dependency going EOL (and nobody wants to maintain a crypto lib on their own). Whether or not that means we should wait on this PR until when Node 16 \"would have\" gone EOL if it had not been for the OpenSSL thing, I'm not sure.\r\n\r\n- Node 16.14 was chosen as it's the last version of Node 16 which added new syntax, namely, import assertions. Of course, those are now defunct in ECMAScript in favor of `with`, so, oops. Otherwise I would have chosen 16.11 for class static blocks.\r\n- ES2021 is chosen per the mapping to Node 16 here: https://github.com/microsoft/TypeScript/wiki/Node-Target-Mapping\r\n\r\nNotably, this change gives us native `?.`, which is a nice for code size. (Maybe for perf, too?)\r\n\r\n![image](https://github.com/microsoft/TypeScript/assets/5341706/e465cdbf-5582-4480-98f5-412c5d2e3285)\r\n",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 365,
        "deletions": 218,
        "changed_files": 22,
        "created_at": "2023-09-15T03:37:02Z",
        "closed_at": "2023-09-15T17:25:11Z",
        "merged_at": "2023-09-15T17:25:11Z",
        "body": "Fixes #55075\r\nCloses #55109\r\n\r\nThis effectively replaces #55109, instead using a fix in `createPropertyNameNodeForIdentifierOrLiteral` instead of the emitter. If you look at the last commit, you'll see that the only change to TS emit was removed, which I believe to be correct as the code was able to be written that way in the first place so should be legal.\r\n\r\nWhile I was here, I made the parameters to `createPropertyNameNodeForIdentifierOrLiteral` required, which showed that there was an existing bug for this in a code fix. Likely I need a test for this. It also shows that this call doesn't respect `stringNamed` either, which unfortunately requires some type info I didn't look into getting quite yet.\r\n\r\ncc @Andarist ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-14T20:02:15Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Please do bikeshed the wording, but I think we should probably have a checklist item for this given a non-trivial amount of asks for this which we immediately decline unless it's paired with some other need.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 275,
        "deletions": 14,
        "changed_files": 6,
        "created_at": "2023-09-14T16:10:36Z",
        "closed_at": "2023-09-14T20:06:48Z",
        "merged_at": "2023-09-14T20:06:48Z",
        "body": "Fixes #55661.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 76,
        "deletions": 13,
        "changed_files": 5,
        "created_at": "2023-09-14T00:12:20Z",
        "closed_at": "2023-09-14T15:44:56Z",
        "merged_at": "2023-09-14T15:44:56Z",
        "body": "See: https://github.com/microsoft/playwright/releases/tag/v1.38.0 and https://github.com/microsoft/TypeScript/actions/runs/6178823659/job/16773312341\r\n\r\nThe reason we didn't depend directly on `playwright` was because it'd automatically download multiple browsers. The latest version no longer does this, which breaks our workflow. But since that was the whole reason we didn't directly depend on it, we can just depend on it directly and get rid of the awkward CI scripts which needed to install it after the fact.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1741,
        "deletions": 143,
        "changed_files": 46,
        "created_at": "2023-09-13T23:03:36Z",
        "closed_at": "2023-09-21T22:31:10Z",
        "merged_at": "2023-09-21T22:31:09Z",
        "body": "For #52959.\r\n\r\nThis is a follow-up to #52921.\r\n\r\nThis changes the way we do the new JSDoc skipping, instead replacing it with a publicly-available option which lets you control how much info you want. Specifically, you can specify:\r\n\r\n- `JSDocParsingMode.ParseAll`, the default, which is to keep parsing JSDoc and including it in the tree. This is the default used by `tsserver`, `services`, etc, where we definitely need all of that info.\r\n- `JSDocParsingMode.ParseForTypeErrors`, which only parses JSDoc tags which have a _semantic_ meaning to the checker which impact error calculation, that is, any JSDoc in a non-TS/TSX file, or any JSDoc containing `@see` or `@link`. This is the new default when calling from `tsc`, and would be a good default for anyone orchestrating TS builds, e.g. heft, nx.\r\n- `JSDocParsingMode.ParseForTypeInfo`, if you only _query_ type info, but never care about its errors. This parses JSDoc in JS files, but doesn't in TS files at all (as they are never used for type info there). This is good for something like ts-eslint with type info (which does not surface errors).\r\n- `JSDocParsingMode.ParseNone`, which always skips JSDoc, no matter what. This is good for those who _only_ want the parser, e.g. formatters like prettier, ts-eslint without type information, `transpileModule`, maybe others. Set this at your own risk.\r\n\r\nTo use this when calling `createSourceFile`, set `jsDocParsingMode` on the create options:\r\n\r\n```ts\r\nconst sourceFile = ts.createSourceFile(\r\n    filename,\r\n    content,\r\n    { languageVersion: ts.ScriptTarget.ESNext, jsDocParsingMode: ts.JSDocParsingMode.ParseNone },\r\n);\r\n```\r\n\r\nTo use this when constructing a host, set `jsDocParsingMode`:\r\n\r\n```ts\r\nconst host = ts.createCompilerHost(options);\r\nhost.jsDocParsingMode = ts.JSDocParsingMode.ParseForTypeInfo;\r\n// or\r\nconst host = ts.createIncrementalCompilerHost(options);\r\nhost.jsDocParsingMode = ts.JSDocParsingMode.ParseForTypeErrors;\r\n// or\r\nconst host = ts.createWatchCompilerHost(...);\r\nhost.jsDocParsingMode = ts.JSDocParsingMode.ParseForTypeErrors;\r\n```\r\n\r\n\r\nFYI @fisker @bradzacher @JoshuaKGoldberg @JamesHenry @dmichon-msft",
        "comments": 40
    },
    {
        "merged": true,
        "additions": 24886,
        "deletions": 5,
        "changed_files": 32,
        "created_at": "2023-09-13T20:36:51Z",
        "closed_at": "2023-09-14T18:34:19Z",
        "merged_at": "2023-09-14T18:34:19Z",
        "body": "Fixes https://github.com/microsoft/TypeScript/issues/55275",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 50,
        "changed_files": 17,
        "created_at": "2023-09-13T04:06:37Z",
        "closed_at": null,
        "merged_at": null,
        "body": "See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#sort_stability\r\n\r\nAlso, `toSorted` seems to be sightly slower than `arr.slice().sort()`; was hoping to also rename `sort` to `toSorted` and conditionally use it, but probably not worth it yet.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 106,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2023-09-13T01:03:39Z",
        "closed_at": "2023-09-13T20:31:19Z",
        "merged_at": "2023-09-13T20:31:19Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes the bug part of #55579, where the manual triple-slash reference workaround doesn\u2019t work for @types/node.\r\n\r\nWhen a type reference directive is processed, we also record what additional files the resolved types bring in via `<reference path=\"...\" />` directives. This way, when you reference a global declared in `node_modules/@types/node/globals.d.ts`, we can see that it actually came in via a `<reference types=\"node\" />`. But instead of recording this entry with the resolution-mode that the _types_ reference had, we recorded it with the resolution-mode that the _file_ reference had, which is irrelevant (and could even lead to some totally incorrect results with some manufactured bizarre cases). All we need to know is _how did this file enter the program?_ which is the type reference directive with whatever mode it had.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1708,
        "deletions": 121,
        "changed_files": 41,
        "created_at": "2023-09-12T21:57:26Z",
        "closed_at": "2023-09-26T21:20:06Z",
        "merged_at": "2023-09-26T21:20:06Z",
        "body": "\r\n\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nThis PR + the passage of time fixes #55579\r\n\r\nAffects the following syntaxes:\r\n\r\n- triple-slash references: `<reference types=\"foo\" resolution-mode=\"require\" />`\r\n- `import()` types: `type Foo = typeof import(\"foo\", { assert: { \"resolution-mode\": \"import\" } })`\r\n- type-only imports: `import type foo from \"foo\" assert { \"resolution-mode\": \"require\" }`\r\n\r\n(The latter two are still errors outside of nightly due to the use of import assertions, but these examples will be replaceable with import attributes after #54242.) The semantics are changed as follows in `moduleResolution` modes:\r\n\r\n- `node16`/`nodenext`: no changes\r\n- `bundler` and `node10`:\r\n  - no longer errors\r\n  - the presence of an override enables `imports`/`exports` resolution even if disabled for normal imports via `node10` or `resolvePackageJsonImports`/`resolvePackageJsonExports`, since these are intended to signal information about the runtime module resolver, and a resolution-mode override is a TypeScript-only construct\r\n  - the presence of an override affects matching conditions for `imports`/`exports` resolution\r\n- `classic`:\r\n  - no longer errors\r\n\r\nNotes:\r\n\r\n- There\u2019s a tension between wanting all TS-only resolutions to behave similarly to each other across `moduleResolution` modes and wanting those resolutions to behave similarly to their non-TS-only resolutions in the same `moduleResolution` mode. While it sounds reasonable to propose \u201ctriple-slash references should resolve the same in every `moduleResolution` mode,\u201d it gets uglier when thinking about type-only imports:\r\n\r\n  ```ts\r\n  import type {} from \"./foo\" assert { \"resolution-mode\": \"import\" }\r\n  ```\r\n\r\n  This is an error in `nodenext` since ESM-mode resolutions require file extensions (`\"./foo.js\"`). It makes sense for this resolution to behave how a runtime import would. But in `--moduleResolution bundler`, file extensions are never required, so by the same logic, this import should work under that mode. So, I made the choice to vary the resolution algorithm for each of the supporting syntaxes only by forcing support for `imports`/`exports` and setting the appropriate conditions\u2014in other words, `\"resolution-mode\": \"import\"` doesn\u2019t imply _Node.js_ ESM resolution outside of `node16`/`nodenext`.\r\n\r\n- `classic` doesn\u2019t resolve node_modules in the first place (except for `@types`) so it doesn\u2019t seem very compelling to try to add support for resolution-mode assertions there, so I opted to just remove the error and ignore them.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-09-12T20:49:34Z",
        "closed_at": "2023-09-13T17:15:15Z",
        "merged_at": "2023-09-13T17:15:15Z",
        "body": "These were previously #52921 but that PR was modified enough to no longer need them. But, these are still bugs that are hidden behind method variance rules which make the code misleading.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-12T12:17:13Z",
        "closed_at": "2023-09-12T18:36:04Z",
        "merged_at": "2023-09-12T18:36:04Z",
        "body": "Fixes #55694",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3215,
        "deletions": 27,
        "changed_files": 42,
        "created_at": "2023-09-12T05:26:01Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Just an experiment for now based on #55699.\r\n\r\nThis PR modifies our logic for comparison (in)equality operators by disallowing checks between two identical literal types. In the most trivial example, it will disallow the following:\r\n\r\n```ts\r\nif (\"hello\" === \"hello\") {\r\n//  ~~~~~~~~~~~~~~~~~~~\r\n//  error: This condition will always return 'true'.\r\n}\r\n```\r\n\r\nMaybe more controversially, it will disallow the following:\r\n\r\n```ts\r\nfunction move2(direction: \"up\" | \"down\") {\r\n    return direction === \"up\" ? 1 :\r\n        direction === \"down\" ? -1 :\r\n    //  ~~~~~~~~~~~~~~~~~~~~\r\n    //  error: This condition will always return 'true'.\r\n        error(\"Should never get here\");\r\n}\r\n```\r\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 286,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2023-09-11T20:37:20Z",
        "closed_at": "2023-09-12T18:52:50Z",
        "merged_at": "2023-09-12T18:52:50Z",
        "body": "When file is added to directory watched for wild cards, we check if the file is of supported extension. Here we dont want to match against include pattern because in most cases it doesnt include extension and we would re-evaluate root file names too many times if we did that. But with this if plugin adds extra file extension support (eg vue plugin) we ignore those files. This adds additional check to see if the script kind for the file is supported.\r\n\r\nFixes https://github.com/microsoft/TypeScript/issues/55525\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-11T19:44:15Z",
        "closed_at": "2023-09-21T22:54:13Z",
        "merged_at": null,
        "body": "Fixed the Omit utility type to remove the any type, and provide autocorrect for the keys of the passed in type\r\n\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 143,
        "deletions": 108,
        "changed_files": 11,
        "created_at": "2023-09-11T19:08:40Z",
        "closed_at": null,
        "merged_at": null,
        "body": "closes https://github.com/microsoft/TypeScript/issues/55667 , cc @andrewbranch \r\n",
        "comments": 24
    },
    {
        "merged": false,
        "additions": 112,
        "deletions": 28,
        "changed_files": 12,
        "created_at": "2023-09-11T14:53:39Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes unresolved issues that discussed on https://github.com/microsoft/TypeScript/pull/49208.\r\n\r\n###  Example\r\n\r\n#### Class implementing the primitive:\r\n\r\n```typescript\r\nclass C implements number { }\r\nclass C2 implements string { }\r\nclass C3 implements boolean { }\r\n```\r\n\r\nActual behavior:\r\n```\r\n'number' only refers to a type, but is being used as a value here.\r\n'string' only refers to a type, but is being used as a value here.\r\n'boolean' only refers to a type, but is being used as a value here.\r\n```\r\n\r\nImprovement:\r\n```\r\nA class cannot implement a primitive type like 'number'; a class can only implement interfaces.\r\nA class cannot implement a primitive type like 'string'; a class can only implement interfaces.\r\nA class cannot implement a primitive type like 'boolean'; a class can only implement interfaces.\r\n```\r\n\r\n#### Class extending the primitive:\r\n\r\n```typescript\r\nclass C extends number { }\r\nclass C2 extends string { }\r\nclass C3 extends boolean { }\r\n```\r\n\r\nActual behavior:\r\n```\r\n'number' only refers to a type, but is being used as a value here.\r\n'string' only refers to a type, but is being used as a value here.\r\n'boolean' only refers to a type, but is being used as a value here.\r\n```\r\n\r\nImprovement:\r\n```\r\nA class cannot extend a primitive type like 'number'; a class can only extend named types and classes.\r\nA class cannot extend a primitive type like 'string'; a class can only extend named types and classes.\r\nA class cannot extend a primitive type like 'boolean'; a class can only extend named types and classes.\r\n```\r\n\r\n####  Notes:\r\n- `gulp runtests` passed on current branch.\r\n- The errors related to `implement` weren't covered by current unit tests. I added a new test `tests\\cases\\compiler\\classImplementsPrimitive.ts` to test classes implementing primitive types. \r\n- I updated a few unit tests to test for the error.\r\n- I made additional changes for some minor typos.\r\n\r\n### Description\r\nPR https://github.com/microsoft/TypeScript/pull/49208 was initially created to address issue https://github.com/microsoft/TypeScript/issues/46246 along with some related problems.\r\n \r\nHowever, that issue https://github.com/microsoft/TypeScript/issues/46246 has been resolved by a different PR. So, PR https://github.com/microsoft/TypeScript/pull/49208 wasn't merged and It was closed while leaving some issues that had been newly found and discussed in this PR, specifically related to incorrect error messages where classes extends or implements primitive types, as shown in the examples above.\r\n\r\nTo address these issue, I have made changes to the `checkAndReportErrorForUsingTypeAsValue` function, which has been responsible for these kinds of errors since https://github.com/microsoft/TypeScript/pull/46357 was merged.\r\n\r\nI have added new functions, `isExtendedByClass` and `isImplementedByClass` which determine if `errorLocation` 's grandparent contains `SyntaxKind.ImplementsKeyword` or `SyntaxKind.ExtendsKeyword`. If a condition evaluates to true, the relevant error message is emitted.\r\n\r\nI would appreciate any feedback!",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 163,
        "deletions": 38,
        "changed_files": 6,
        "created_at": "2023-09-10T07:34:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "@dragomirtitian has noticed this inconsistency~ ([TS playground](https://www.typescriptlang.org/play?ts=5.2.2#code/MYewdgzgLgBAGjAvDABgEgN5QE4FcCmAvijAIYQyiRQDcAUPmLgLYwCCMGMdMv8SqTAEZiAGh58AmgPRY8RFOMJA)):\r\n```ts\r\nconst X = `${true}` as const; // \"true\"\r\nenum A { \r\n    X = `${1}`, // \"1\"\r\n    Y = `${true}`, // Type 'string' is not assignable to type 'number' as required for computed enum member values.(18033)\r\n}\r\n```\r\n\r\nNote that even with changes in this PR there will still be inconsistencies like:\r\n```ts\r\nconst test1 = `${1 + 1}` as const; // `${number}`\r\n\r\nexport enum Test2 {\r\n  A = `${1 + 1}`, // \"2\"\r\n}\r\n```\r\n\r\nIt's easy to fix this but I'm not sure if it's desirable so I left it out of this PR for now.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 190,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2023-09-09T20:33:00Z",
        "closed_at": "2023-09-11T21:41:09Z",
        "merged_at": "2023-09-11T21:41:09Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55693\r\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1254,
        "deletions": 2,
        "changed_files": 18,
        "created_at": "2023-09-08T19:21:36Z",
        "closed_at": "2023-09-12T20:10:34Z",
        "merged_at": "2023-09-12T20:10:34Z",
        "body": "Fixes https://github.com/microsoft/TypeScript/issues/54389",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 92,
        "deletions": 80,
        "changed_files": 16,
        "created_at": "2023-09-08T16:42:23Z",
        "closed_at": "2023-09-09T11:57:07Z",
        "merged_at": null,
        "body": "Fixes #55685\r\n\r\nThe old `Array.prototype.flat` definition supports `depth` only up to 21.  Over 21 return wrong type.\r\nThis solution allow call flat method with unlimited depth parameter.\r\n\r\n```ts\r\nconst foo = [ [ ['string' ] ] ]\r\nconst flatFoo = foo.flat(1000000) // string[]\r\n```\r\nPerformance (checked with [this code](https://github.com/microsoft/TypeScript/pull/32131#issuecomment-604784171)) is the same or better in some cases. \r\n\r\nThe only limitation of this solution is that for arrays deeper then `999` levels `unknown[]` type is returned. \r\n\r\n```ts\r\n[\r\n  [\r\n    [\r\n       // 997 levels\r\n    ]\r\n  ]\r\n].flat(1000) // unknown[]\r\n```\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1509,
        "deletions": 53,
        "changed_files": 8,
        "created_at": "2023-09-08T14:53:21Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fix #55654 by marking  binding aliases that need to be preserved. \r\n\r\nThis is done in a two step process:\r\n\r\n1. We first remove all existing aliases (assuming they will not be used as this is the common case)\r\n2. After the signature types are processed in the declaration emit, if any alias is marked as  being used (should be rare), then we go  though the parameters again to add back the referenced aliases.\r\n\r\n\r\nFixes #55654\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 140,
        "deletions": 36,
        "changed_files": 9,
        "created_at": "2023-09-08T04:07:10Z",
        "closed_at": "2023-09-08T19:19:45Z",
        "merged_at": null,
        "body": "Fixes #55654 (with the unfortunate solution)\r\n\r\nThis isn't ideal. I think the direction we want to go is to not emit renamings if we don't have to, but the current implementation uses `isReferenced` which unfortunately considers references other than those that affect the signatures of the functions. So if you ever actually _use_ the parameter you've renamed, then it will be kept, even if that isn't required. In the real world, that'd of course be nearly _all_ instances, because there's usually no reason to destructure a parameter and then not use it. Of course our tests have a lot of this because we typically don't care about what's inside a function, or we don't have a body at all!\r\n\r\nThis with #50779 effectively reverts all of #41044 _except_ the new error. You'll notice that this PR's baseline changes don't contain any new errors, which is good. This is because the error only happens when the signature _doesn't_ have an annotation, e.g.:\r\n\r\n```ts\r\ndeclare function foo({ a: string }): void; // Error\r\ndeclare function bar({ a: string }: { a: string }): void; // Okay!\r\n```\r\n\r\nThe former can't happen in emitted `d.ts` files; we're always going to fully annotate the output.\r\n\r\nMaybe there's a solution that would instead attempt to figure out if the name is ever actually used elsewhere, but I'm not sure how to do that. I feel like we probably have that logic somewhere for other reasons? In which case, I'm happy to redo the PR.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 6991497,
        "changed_files": 69605,
        "created_at": "2023-09-08T01:31:59Z",
        "closed_at": "2023-09-08T01:34:33Z",
        "merged_at": null,
        "body": "By all accounts, TypeScript has been a big success for Microsoft. I've seen loads of people sparkle with joy from dousing JavaScript with explicit types that can be checked by a compiler. But I've never been a fan. Not after [giving it five minutes](https://signalvnoise.com/posts/3124-give-it-five-minutes), not after giving it five years. So it's with great pleasure that I can announce [we're dropping TypeScript](https://github.com/hotwired/turbo/pull/971) from the next big release of Turbo 8.\r\n\r\nThe fact is that I actually rather like JavaScript. I'd go so far as to say it's my second favorite language after Ruby. Yes, a distant second, but a second none the less. This wasn't always the case. But after we got proper classes in JavaScript, and all the other improvements that flowed since ES6, it's become a real joy to write.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 73,
        "deletions": 24,
        "changed_files": 1,
        "created_at": "2023-09-06T22:25:55Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This is a reland of #44242 because I'm curious to run perf on it again.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 6544941,
        "changed_files": 67961,
        "created_at": "2023-09-06T21:21:55Z",
        "closed_at": "2023-09-06T21:23:14Z",
        "merged_at": null,
        "body": "\"Fully recognize that TypeScript offers some people some advantages, but to my eyes, the benefits are evident in this PR. The code not only reads much better, it\u2019s also freed of the type wrangling and gymnastics needed to please the TS compiler.\r\nWe write all our client side code at 37signals now in pure JavaScript and the same too with any internal libraries. This is going to bring that in line.\r\nAll the love and appreciation to contributors who would prefer TypeScript. This is one of those debates where arguments aren\u2019t likely to move anyone\u2019s fundamental position, so I won\u2019t attempt to do that.\" -- DHH\r\n\r\n\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-09-06T19:50:54Z",
        "closed_at": "2023-09-06T20:19:33Z",
        "merged_at": "2023-09-06T20:19:33Z",
        "body": "With https://github.com/microsoft/repo-templates/pull/13 merged, this new version of SECURITY.md can be also applied to this repository.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-06T17:11:55Z",
        "closed_at": "2023-09-06T19:00:18Z",
        "merged_at": "2023-09-06T19:00:18Z",
        "body": "Fixes #47372\r\nFixes #50973\r\nFixes #55084\r\nFixes #55085\r\nFixes #55590\r\n\r\nThis debug assert was added back in #20374. Unfortunately, I believe that it's causing more problems than it solves thanks to races.\r\n\r\nHere's a potential flow:\r\n\r\n- You open your editor, loading a `pnpm` installed project, which contains symlinks.\r\n- You do some package operation, which starts mucking around in `node_modules`.\r\n- The file watcher picks up on some of the changes, and kicks off some new program construction. `pnpm` is still working in the meantime, removing files and links.\r\n- The new program construction observes a symlink and sees that it's valid so it's added to the program, but slightly later, `pnpm` removes what the link is pointing to.\r\n- This broken symlink is observed later in a place that assumes that it won't be broken, debug asserting. Boom.\r\n\r\nCould this be avoided if `pnpm` guaranteed to never cause a broken link by ensuring it removes things in the right order? Probably, but it clearly doesn't and that sounds challenging to get right and we really shouldn't crash like this.\r\n\r\nIn `sys`, `realpath` is implemented like:\r\n\r\n```ts\r\nfunction realpath(path: string): string {\r\n    try {\r\n        return fsRealpath(path);\r\n    }\r\n    catch {\r\n        return path;\r\n    }\r\n}\r\n```\r\n\r\nTo me, this implies that there's not much point in verifying that symlinks aren't broken, because we entirely ignore them everywhere else; if the link is broken we're going to get an error later. Or, more likely, the `pnpm install` will finish and the file watcher will say so.\r\n\r\nUnfortunately I have not yet been able to produce a test case which causes this assert to fire; our compiler/fourslash tests don't really let you create broken symlinks. I think I can do it via `verifyTsc` so I'll try and do that.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 437,
        "deletions": 4,
        "changed_files": 6,
        "created_at": "2023-09-05T15:35:17Z",
        "closed_at": "2023-09-11T21:03:01Z",
        "merged_at": "2023-09-11T21:03:01Z",
        "body": "With this PR, when a homomorphic mapped type is applied to a type with a symbol, we use the symbol of that type as the recursion identity. This is a better strategy than using the symbol of the mapped type, which doesn't work well for recursive mapped types because they end up being considered deeply nested after just three levels.\r\n\r\n```ts\r\ntype Id<T> = { [K in keyof T]: Id<T[K]> };\r\n\r\ntype Foo1 = Id<{ x: { y: { z: { a: { b: { c: number } } } } } }>;\r\ntype Foo2 = Id<{ x: { y: { z: { a: { b: { c: string } } } } } }>;\r\n\r\ndeclare const foo1: Foo1;\r\nconst foo2: Foo2 = foo1;  // Now errors, previously didn't\r\n```\r\n\r\nNote that this PR isn't a general solution to the problem of distinguishing finite and infinite types, rather it is a targeted fix for situations where mapped types are applied to object types that clearly originate in distinct declarations.\r\n\r\nFixes #55535.\r\n",
        "comments": 20
    },
    {
        "merged": true,
        "additions": 141,
        "deletions": 10,
        "changed_files": 8,
        "created_at": "2023-09-04T12:39:08Z",
        "closed_at": "2023-09-13T18:25:20Z",
        "merged_at": "2023-09-13T18:25:20Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55574",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 17,
        "changed_files": 3,
        "created_at": "2023-09-04T07:07:42Z",
        "closed_at": "2023-09-08T14:45:44Z",
        "merged_at": "2023-09-08T14:45:44Z",
        "body": "\u26a0\ufe0f this PR targets https://github.com/microsoft/TypeScript/pull/54121\r\ncc @rbuckton ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 565,
        "deletions": 3,
        "changed_files": 13,
        "created_at": "2023-09-03T06:59:05Z",
        "closed_at": "2023-09-13T18:28:27Z",
        "merged_at": "2023-09-13T18:28:27Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #34974\r\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 246,
        "deletions": 21,
        "changed_files": 16,
        "created_at": "2023-09-01T22:02:04Z",
        "closed_at": "2023-09-07T18:19:56Z",
        "merged_at": "2023-09-07T18:19:56Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #48194.\r\n\r\nI'll follow up with an equivalent setting in vscode.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-01T20:14:35Z",
        "closed_at": "2023-09-01T22:37:46Z",
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 89,
        "deletions": 79,
        "changed_files": 16,
        "created_at": "2023-09-01T17:28:40Z",
        "closed_at": "2023-09-01T22:26:02Z",
        "merged_at": "2023-09-01T22:26:02Z",
        "body": "Followup to the dprint change; I'd like to do this though one day I do hope that https://github.com/dprint/dprint-plugin-json/issues/10 and https://github.com/dprint/dprint-plugin-json/issues/14 are solved (but it's hard to say when `.json` files can also be treated as jsonc).",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 490,
        "deletions": 8,
        "changed_files": 13,
        "created_at": "2023-09-01T17:17:35Z",
        "closed_at": null,
        "merged_at": null,
        "body": "closes https://github.com/microsoft/TypeScript/issues/55437",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 49612,
        "deletions": 4065,
        "changed_files": 2254,
        "created_at": "2023-09-01T10:25:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Finally there!\r\n---\r\n\r\nThis PR provides syntax checks to regular expressions. It can also be considered a follow-up of #51837 where escapes in RegExp are still not being addressed.\r\nIt introduces 36 new diagnostic messages for errors not previously covered.\r\nAlthough [this comment](https://github.com/microsoft/TypeScript/issues/3432#issuecomment-1604513075) suggested that errors are better thrown regardless of flags to avoid rescanning, the parsing behavior of the new Unicode Sets (v) mode in character class is totally different from that of the non-v modes. So I just reuse the old code to quickly skip to the end of the regex for recording the flags beforehand.\r\n\r\nBesides the [Set Notation](https://github.com/tc39/proposal-regexp-v-flag) support, the PR also includes the following Stage 3 proposals:\r\n- [Duplicate Named Capturing Groups](https://github.com/tc39/proposal-duplicate-named-capturing-groups)\r\n- [Regular Expression Pattern Modifiers](https://github.com/tc39/proposal-regexp-modifiers)\r\n\r\nAdditionally, some test cases from [test262](https://github.com/tc39/test262) are added to make up both this PR and #51837.\r\n\r\nFixes #3432 (Fixes #54744)\r\n\r\n---\r\nFollow-up Proposal\r\n---\r\n\r\nThis PR provides a basis for making further changes to achieve additional type safety for the `RegExp` interface.\r\nA part of them is given below:\r\n\r\n```ts\r\n// types.ts\r\n\r\nexport interface RegularExpressionLiteral extends LiteralExpression {\r\n    readonly kind: SyntaxKind.RegularExpressionLiteral;\r\n    readonly regExpBody: string;\r\n    readonly regExpFlags: RegularExpressionFlags;\r\n    readonly regExpFlagsText: string;\r\n    readonly capturingGroups: RegularExpressionCapturingGroup[]; // capturingGroups[0] is the whole pattern\r\n    readonly capturingGroupSpecifiers: Map<string, RegularExpressionCapturingGroup[]>; // Duplicate groups with the same name are allowed as long as they are mutually exclusive, thus an array\r\n}\r\n\r\nexport interface RegularExpressionCapturingGroup extends ReadonlyTextRange {\r\n    readonly pattern: string[]; // format similar to the first argument of a template tag function\r\n    readonly isPossiblyUndefined: boolean;\r\n}\r\n\r\n// es5.d.ts\r\n\r\ntype CapturingGroupsArray = [string, ...(string | undefined)[]];\r\ntype NamedCapturingGroupsObject = { [name: string]: string | undefined } | undefined;\r\n\r\ninterface RegExp<\r\n    CapturingGroups extends CapturingGroupsArray = CapturingGroupsArray,\r\n    NamedCapturingGroups extends NamedCapturingGroupsObject = undefined\r\n> {\r\n    exec(string: string): RegExpExecArray<NamedCapturingGroups> & CapturingGroups | null;\r\n    // ...\r\n}\r\n\r\ninterface String {\r\n    // ...\r\n\r\n    match<\r\n        CapturingGroups extends CapturingGroupsArray = CapturingGroupsArray,\r\n        NamedCapturingGroups extends NamedCapturingGroupsObject = undefined\r\n    >(regexp: string | RegExp<CapturingGroups, NamedCapturingGroups>): RegExpMatchArray | RegExpExecArray<NamedCapturingGroups> & CapturingGroups | null;\r\n\r\n    replace(searchValue: string | RegExp, replaceValue: string): string; // untouched\r\n\r\n    replace<\r\n        CapturingGroups extends CapturingGroupsArray = CapturingGroupsArray,\r\n        NamedCapturingGroups extends NamedCapturingGroupsObject = undefined\r\n    >(\r\n        searchValue: string | RegExp<CapturingGroups, NamedCapturingGroups>,\r\n        replacer: (...capturingGroups: CapturingGroups, offset: number, input: string, groups: NamedCapturingGroups) => string\r\n    ): string;\r\n\r\n    // Buggy until GH#45972 is fixed\r\n    // Seems like we should have a es2018.string.d.ts for the additional `groups` argument? But another overload is confusing to both the type checker and the users\r\n\r\n    // Same for `replaceAll` in es2021.string.d.ts\r\n\r\n    // ...\r\n}\r\n\r\ntype RegExpMatchArray = [string, ...string[]];\r\n\r\ninterface RegExpExecArray<NamedCapturingGroups extends NamedCapturingGroupsObject = undefined> {\r\n    index: number;\r\n    input: string;\r\n}\r\n\r\n// es2018.regexp.d.ts\r\n\r\ninterface RegExpExecArray<NamedCapturingGroups extends NamedCapturingGroupsObject = undefined> {\r\n    groups: NamedCapturingGroups;\r\n}\r\n```\r\n\r\n### Usage\r\n\r\n```ts\r\n/^(?<date>\\d{4}-\\d{2}-\\d{2})[Tt ](?<time>\\d{2}:\\d{2}:\\d{2})$/u.exec(\"2024-01-01T00:00:00\")\r\n// Produces\r\n{\r\n    kind: SyntaxKind.RegularExpressionLiteral,\r\n    regExpBody: \"^(?<date>\\\\d{4}-\\\\d{2}-\\\\d{2})[Tt ](?<time>\\\\d{2}:\\\\d{2}:\\\\d{2})$\",\r\n    regExpFlags: RegularExpressionFlags.Unicode,\r\n    regExpFlagsText: \"u\",\r\n    capturingGroups: [\r\n        { pos: 1, end: 60, pattern: [\"\", \"-\", \"-\", \":\", \":\", \"\"], isPossiblyUndefined: false },\r\n        { pos: 2, end: 28, pattern: [\"\", \"-\", \"-\", \"\"], isPossiblyUndefined: false },\r\n        { pos: 33, end: 59, pattern: [\"\", \":\", \":\", \"\"], isPossiblyUndefined: false },\r\n    ],\r\n    capturingGroupSpecifiers: Map {\r\n        date: [{ pos: 2, end: 28, pattern: [\"\", \"-\", \"-\", \"\"], isPossiblyUndefined: false }],\r\n        time: [{ pos: 33, end: 59, pattern: [\"\", \":\", \":\", \"\"], isPossiblyUndefined: false }],\r\n    },\r\n}\r\n// Which is transformed to types in checker.ts, thus:\r\nRegExp<\r\n    /*CapturingGroups*/ [`${string}-${string}-${string}:${string}:${string}`, `${string}-${string}-${string}`, `${string}:${string}:${string}`],\r\n    /*NamedCapturingGroups*/ {\r\n        date: `${string}-${string}-${string}`;\r\n        time: `${string}:${string}:${string}`;\r\n    }\r\n>.exec(string: string): {\r\n    index: number;\r\n    input: string;\r\n    groups: {\r\n        date: `${string}-${string}-${string}`;\r\n        time: `${string}:${string}:${string}`;\r\n    };\r\n} & [`${string}-${string}-${string}:${string}:${string}`, `${string}-${string}-${string}`, `${string}:${string}:${string}`] | null;\r\n```\r\n\r\nNo more runtime errors on `match.groups.foo.length` and `match[3].length`!\r\n",
        "comments": 35
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2023-09-01T03:36:10Z",
        "closed_at": "2023-09-01T16:59:37Z",
        "merged_at": null,
        "body": "This is potentially part of #52921; this eager evaluation of `@deprecated` is the only reason that JSDoc parsing couldn't be lazy, but it's possible that this may be slow.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 28187,
        "deletions": 28187,
        "changed_files": 2,
        "created_at": "2023-09-01T00:20:39Z",
        "closed_at": "2023-09-05T21:38:40Z",
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nTesting whether this will break a lot of stuff if we do this for https://github.com/DefinitelyTyped/DefinitelyTyped/issues/60924\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 297,
        "deletions": 23,
        "changed_files": 11,
        "created_at": "2023-08-31T17:21:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55562",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1182,
        "deletions": 12,
        "changed_files": 15,
        "created_at": "2023-08-31T08:29:38Z",
        "closed_at": "2023-09-13T23:14:07Z",
        "merged_at": "2023-09-13T23:14:07Z",
        "body": "I noticed this problem yesterday when working on https://github.com/microsoft/TypeScript/pull/55576\r\n\r\nThe problem is that those two should always behave in the same way and they should use the same write type:\r\n```ts\r\nprop.foo = value\r\nprop['foo'] = value\r\n```",
        "comments": 18
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-30T23:53:16Z",
        "closed_at": "2023-08-31T00:04:28Z",
        "merged_at": "2023-08-31T00:04:28Z",
        "body": "I guess extensions.json wasn't enough, oops.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 71,
        "deletions": 71,
        "changed_files": 5,
        "created_at": "2023-08-30T23:46:24Z",
        "closed_at": "2023-09-12T00:59:07Z",
        "merged_at": "2023-09-12T00:59:07Z",
        "body": "This is done by:\r\n\r\n```\r\n$ dprint config update\r\n$ dprint fmt\r\n```\r\n\r\n(This is super handy; you can also `dprint add` to add new plugins.)\r\n\r\nOnly one change was produced; @dsherret I don't think this is actually intentional, given the only thing that could have happened was that dprint's parser was updated to a new version? (I have no preference on this one, though I don't usually see dprint _removing_ a newline like this.)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2086,
        "deletions": 1,
        "changed_files": 25,
        "created_at": "2023-08-30T17:14:41Z",
        "closed_at": "2023-08-30T21:55:11Z",
        "merged_at": "2023-08-30T21:55:11Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55532#issuecomment-1694744665\r\nfixes https://github.com/microsoft/TypeScript/issues/55566\r\n\r\nThe cases related to optional members and EOPT regressed from https://github.com/microsoft/TypeScript/pull/54777\r\nThe divergent accessors case has never worked but I feel like it should and this fixes it as well\r\n\r\ncc @jakebailey ",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-08-29T20:27:49Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Experiment motivated by #55540.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 11,
        "changed_files": 2,
        "created_at": "2023-08-29T19:43:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [x] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [x] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #36788.\r\n\r\n`matchAll` accepts only global `RegExp`s and thus, if it didn't throw, it always returns `RegExpExecArray` with non-optional `index` and `input`.\r\n\r\nReference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll#return_value.\r\n\r\n\r\n",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 85,
        "deletions": 26,
        "changed_files": 9,
        "created_at": "2023-08-29T08:05:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55555",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-29T05:33:08Z",
        "closed_at": "2023-08-31T16:18:27Z",
        "merged_at": "2023-08-31T16:18:27Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #55256 \r\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 19,
        "changed_files": 3,
        "created_at": "2023-08-28T22:03:52Z",
        "closed_at": "2023-09-13T19:42:45Z",
        "merged_at": "2023-09-13T19:42:44Z",
        "body": "We create multiple intrinsic types with the same intrinsic name, but that means that the debug helpers can't distinguish between them at all which is frustrating while debugging. I frequently have to do things like `type === wildcardType` to see which of the like ~~4~~ 5 `any` intrinsics we have.\r\n\r\nThis PR adds a debug name, which will be included in parens when present, like:\r\n\r\n![image](https://github.com/microsoft/TypeScript/assets/5341706/a10c54f8-6964-4278-b95a-4a23501cacb7)\r\n\r\nOn intrinsic creation, the checker throws if you create an intrinsic with the same name more than once, to make sure we never forget.\r\n\r\n@Andarist ",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 38,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-08-28T20:57:24Z",
        "closed_at": "2023-08-28T22:04:06Z",
        "merged_at": "2023-08-28T22:04:06Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55545 (a regression from https://github.com/microsoft/TypeScript/pull/53996 )\r\n\r\nit turns out that reusing `wildcardType` for this wasn't ideal \ud83d\ude09 cc @andrewbranch ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 15,
        "changed_files": 6,
        "created_at": "2023-08-28T18:16:35Z",
        "closed_at": "2023-08-30T22:30:38Z",
        "merged_at": "2023-08-30T22:30:38Z",
        "body": "Fixes #55483.\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2023-08-28T16:56:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "I noticed this when investigating a completion problem. Using `any` here might \"accidentally leak\" (which happens in the changed baselines) without the user noticing. I think it would be great to change this to `unknown` unless there is a strong reason why it should stay this way.\r\n\r\nNote that this function was introduced by @sandersn in https://github.com/microsoft/TypeScript/pull/19227 (and `any` was used in its followup: https://github.com/microsoft/TypeScript/pull/21271 ). This was in pre(historic)-3.0 times when `unknown` wasn't even a thing in the language yet \ud83d\ude09 So back then `unknown` wasn't even an option.",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 435,
        "deletions": 6,
        "changed_files": 6,
        "created_at": "2023-08-28T13:19:00Z",
        "closed_at": "2023-09-13T18:34:51Z",
        "merged_at": "2023-09-13T18:34:51Z",
        "body": "closes https://github.com/microsoft/TypeScript/issues/14295",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-08-28T04:27:20Z",
        "closed_at": "2023-08-28T16:52:56Z",
        "merged_at": "2023-08-28T16:52:56Z",
        "body": "Noticed this while revisiting JSDoc stuff.\r\n\r\nI put this code in the wrong place; we can return early with `undefined` before restoring the context, which is bad, though theoretically doesn't actually affect anything because this flag is not used for anything in particular besides making sure the context is non-empty when parsing lists (so, no test). These parsing contexts are very weird.\r\n\r\nStill, not intentional at all.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 294,
        "deletions": 1,
        "changed_files": 7,
        "created_at": "2023-08-27T17:19:46Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55526",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 90,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2023-08-27T14:01:45Z",
        "closed_at": "2023-08-28T18:40:04Z",
        "merged_at": "2023-08-28T18:40:04Z",
        "body": "Fixes #55494",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-08-26T15:58:48Z",
        "closed_at": "2023-08-28T07:02:00Z",
        "merged_at": "2023-08-28T07:02:00Z",
        "body": "a small, test-only, followup to: https://github.com/microsoft/TypeScript/pull/55229",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 50,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-26T10:56:35Z",
        "closed_at": "2023-08-26T15:58:49Z",
        "merged_at": "2023-08-26T15:58:49Z",
        "body": "closes https://github.com/microsoft/TypeScript/issues/5551\r\n\r\n@jakebailey [bisected the actual fix](https://github.com/microsoft/TypeScript/issues/5551#issuecomment-1662690796) to https://github.com/microsoft/TypeScript/pull/13643",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1272,
        "deletions": 117,
        "changed_files": 52,
        "created_at": "2023-08-26T01:14:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Not final; I'm not totally sure I want to add this dependency (it's kinda big).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 199,
        "changed_files": 13,
        "created_at": "2023-08-25T22:59:15Z",
        "closed_at": "2023-08-28T19:26:23Z",
        "merged_at": "2023-08-28T19:26:23Z",
        "body": "As of TS 5.1, we require Node 14.17 / ES2020. This PR removes our conditional use of:\r\n\r\n- `String.prototype.trim`\r\n- `String.prototype.trimEnd`\r\n- `String.prototype.trimStart`\r\n- `String.prototype.codePointAt`\r\n- `String.prototype.localeCompare`\r\n- `String.prototype.toLocaleUpperCase`\r\n- `Intl`\r\n\r\nWe've used `.trim()` in quite a few places. We already unconditionally use `Intl` after the import organization PR.\r\n\r\nIt also removes `padLeft` and `padRight`, which could have been replaced by `String` methods a while ago but were not.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 92,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-08-25T22:34:31Z",
        "closed_at": "2023-08-26T15:57:58Z",
        "merged_at": "2023-08-26T15:57:58Z",
        "body": "closes https://github.com/microsoft/TypeScript/issues/11584\r\n\r\n@jakebailey [bisected the actual fix](https://github.com/microsoft/TypeScript/issues/11584#issuecomment-1693607862) to https://github.com/microsoft/TypeScript/pull/13356",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-25T22:28:00Z",
        "closed_at": "2023-08-26T15:57:45Z",
        "merged_at": "2023-08-26T15:57:45Z",
        "body": "closes https://github.com/microsoft/TypeScript/issues/11492\r\n\r\n@jakebailey [bisected the actual fix](https://github.com/microsoft/TypeScript/issues/11492#issuecomment-1693622571) to https://github.com/microsoft/TypeScript/pull/12335",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 119,
        "deletions": 105,
        "changed_files": 18,
        "created_at": "2023-08-25T22:10:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/11167\r\n\r\nIf this issue is no longer meant to be fixed - feel free to close this PR and that issue \ud83d\ude09 \r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 162,
        "deletions": 4,
        "changed_files": 9,
        "created_at": "2023-08-24T22:36:30Z",
        "closed_at": "2023-09-15T02:31:50Z",
        "merged_at": "2023-09-15T02:31:50Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55499",
        "comments": 20
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 68,
        "changed_files": 26,
        "created_at": "2023-08-24T17:25:37Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/8559",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 521,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2023-08-24T08:33:54Z",
        "closed_at": "2023-08-24T16:45:58Z",
        "merged_at": "2023-08-24T16:45:58Z",
        "body": "fixes a regression from https://github.com/microsoft/TypeScript/pull/55393 , cc @jakebailey ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-24T01:40:07Z",
        "closed_at": "2023-08-24T01:42:24Z",
        "merged_at": null,
        "body": "demo of how big teams don't allow just anybody to edit their code",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-23T23:57:27Z",
        "closed_at": "2023-08-24T05:51:11Z",
        "merged_at": "2023-08-24T05:51:11Z",
        "body": "Noticed this while reviewing the PR to memoize this object.\tDoesn't seem to have any affect on tests.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 112,
        "deletions": 42,
        "changed_files": 7,
        "created_at": "2023-08-23T23:57:11Z",
        "closed_at": "2023-08-24T00:25:40Z",
        "merged_at": "2023-08-24T00:25:40Z",
        "body": "Cherry-picks #55476 to `release-5.2`.\r\n\r\nFixes https://github.com/microsoft/TypeScript/issues/55474 on `release-5.2`.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-23T18:36:46Z",
        "closed_at": "2023-09-08T05:47:38Z",
        "merged_at": null,
        "body": "Fixes #54389\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-08-23T18:02:28Z",
        "closed_at": "2023-08-23T23:06:20Z",
        "merged_at": "2023-08-23T23:06:20Z",
        "body": "This PR reduces GC pressure by hoisting ScriptTargetFeatures instead of creating that object over and over again.\r\n\r\n\r\n![image](https://github.com/microsoft/TypeScript/assets/2021355/140f9eae-c703-4905-b6a7-0673a2292d69)\r\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 98,
        "deletions": 124,
        "changed_files": 46,
        "created_at": "2023-08-23T16:58:08Z",
        "closed_at": "2023-08-25T18:27:55Z",
        "merged_at": "2023-08-25T18:27:55Z",
        "body": "replace String and Array indexOf method calls with includes method call when return value was used only to check that given item exists\r\n\r\n\r\n",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-23T10:06:41Z",
        "closed_at": "2023-08-30T08:13:51Z",
        "merged_at": null,
        "body": "The word \"rest\" should not be translated in the item `A_rest_element_cannot_have_a_property_name_2566`, otherwise it will be really confusing.\r\n\r\nI have checked the other translations in the same file and the translation in [cht translation](https://github.com/microsoft/TypeScript/blob/main/src/loc/lcl/cht/diagnosticMessages/diagnosticMessages.generated.json.lcl#L688), they both did not translate the word \"rest\".",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-08-23T07:41:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 68,
        "deletions": 15,
        "changed_files": 4,
        "created_at": "2023-08-23T00:24:34Z",
        "closed_at": "2023-08-23T23:40:49Z",
        "merged_at": "2023-08-23T23:40:49Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #55474\r\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 374,
        "deletions": 14,
        "changed_files": 10,
        "created_at": "2023-08-22T21:15:12Z",
        "closed_at": "2023-08-28T19:15:54Z",
        "merged_at": "2023-08-28T19:15:54Z",
        "body": "Fixes #55172",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 77,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2023-08-22T19:58:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "https://twitter.com/CLAYster404/status/1693709496890302621",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 88,
        "changed_files": 1,
        "created_at": "2023-08-22T18:42:47Z",
        "closed_at": "2023-08-23T23:11:30Z",
        "merged_at": "2023-08-23T23:11:30Z",
        "body": "The new perf infrastructure handles comment posting itself; this script can be removed.\r\n\r\nEventually I'd like to get rid of all uses of `@octokit/rest`, `azure-devops-node-api`, and `node-fetch` from this repo, as they are only ever used for CI automation and are not needed for local development (and they also seem to break us constantly).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 100,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-08-22T18:27:10Z",
        "closed_at": "2023-08-24T00:02:41Z",
        "merged_at": "2023-08-24T00:02:41Z",
        "body": "Fixes #55434",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 109,
        "changed_files": 3,
        "created_at": "2023-08-22T18:11:20Z",
        "closed_at": "2023-08-23T23:42:46Z",
        "merged_at": "2023-08-23T23:42:46Z",
        "body": "This is roughly in the same vein of #55112 but for fs-extra; we can get everything we need out of Node's builtin APIs. Also, it makes the LKG task about 2x as fast on my machine.\r\n\r\nI'm hoping to get this merged in close proximity to #55112 just so that the dependency change hump isn't spread out.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-22T17:52:55Z",
        "closed_at": "2023-09-06T18:19:34Z",
        "merged_at": "2023-09-06T18:19:34Z",
        "body": "Back when I wrote this code, I apparently didn't read the docs enough to realize that `JSONC.parse` does not throw when a syntax error is present; it instead parses what it can and expects you to pass in an errors array to populate.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 166,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-08-22T15:07:00Z",
        "closed_at": "2023-08-23T18:43:41Z",
        "merged_at": "2023-08-23T18:43:41Z",
        "body": "Fixes #55425.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 47,
        "changed_files": 1,
        "created_at": "2023-08-22T12:25:10Z",
        "closed_at": "2023-08-22T12:27:36Z",
        "merged_at": null,
        "body": "It looks like you want to modify the provided TypeScript code while keeping the same functionality. The code you provided exports various types, constants, and functions related to actions, events, and command-line arguments for a typings installer. To improve code readability and maintainability, you can make some adjustmentsThe action and event types are defined in a more concise manner.\r\n\r\n\r\nArgument names are organized within an Arguments object.\r\n\r\nThe hasArgument and findArgument functions are adjusted to use the includes method and to return early if an argument value is found.\r\n\r\nThe code structure is kept clean and concise while preserving the same functionality.\r\n\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 29,
        "changed_files": 1,
        "created_at": "2023-08-22T04:46:40Z",
        "closed_at": "2023-08-24T17:12:28Z",
        "merged_at": "2023-08-24T17:12:28Z",
        "body": "This stems from a discord conversation (https://github.com/microsoft/TypeScript/issues/54939#issuecomment-1687483067) where `getTypeFacts` spends all of its time resolving structured type members, when all it cared about was whether or not the type was nullable.\r\n\r\nIt turns out that the vast majority of calls to `getTypeFacts` only care about a subset of flags (and mainly, nullable-ness), so this may be a perf win.",
        "comments": 20
    },
    {
        "merged": false,
        "additions": 302,
        "deletions": 27,
        "changed_files": 12,
        "created_at": "2023-08-21T21:27:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "closes https://github.com/microsoft/TypeScript/issues/44939\r\n\r\nA somewhat big drawback of this feature is that an instantiated label is only usable if it instantiates to a string literal type. This means that instantiations that end up being template literal types and even unions of strings are just discarded. I'm open to discussing other possible designs.\r\n\r\nI think it's a reasonable tradeoff since this feature is primarily an editor experience improvement. Labels don't have any effect on type checking itself. \r\n\r\n",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2023-08-21T14:19:04Z",
        "closed_at": "2023-08-24T16:57:22Z",
        "merged_at": "2023-08-24T16:57:22Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #53082. This PR added a unit test based on https://github.com/microsoft/TypeScript/pull/53961.",
        "comments": 16
    },
    {
        "merged": false,
        "additions": 65,
        "deletions": 14,
        "changed_files": 5,
        "created_at": "2023-08-21T13:33:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55203",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 37,
        "changed_files": 7,
        "created_at": "2023-08-21T10:10:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "I think that this restriction is somewhat artificial and doesn't bring a lot of value. Those are allowed and work OK:\r\n```ts\r\ntype Ok1 = [...Array<number>, ...Array<string>]\r\n\r\ntype Alias = string[]\r\ntype Ok2 = [...number[], ...Alias]\r\n```",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 73,
        "deletions": 8,
        "changed_files": 8,
        "created_at": "2023-08-21T08:54:17Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55439",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-08-21T08:04:13Z",
        "closed_at": "2023-09-13T18:38:56Z",
        "merged_at": "2023-09-13T18:38:56Z",
        "body": "The same is serialized as a `readonly` property in TS so I think that `const` is fitting here.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-21T07:15:46Z",
        "closed_at": "2023-09-07T21:53:19Z",
        "merged_at": "2023-09-07T21:53:19Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 566,
        "deletions": 19,
        "changed_files": 14,
        "created_at": "2023-08-20T22:12:32Z",
        "closed_at": "2023-10-05T23:40:46Z",
        "merged_at": "2023-10-05T23:40:46Z",
        "body": "cc @andrewbranch as divergent setters became allowed since https://github.com/microsoft/TypeScript/pull/53417",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 4165,
        "deletions": 310,
        "changed_files": 22,
        "created_at": "2023-08-20T13:11:58Z",
        "closed_at": "2023-09-01T23:25:23Z",
        "merged_at": "2023-09-01T23:25:23Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #55163\r\nThis is a follow-up of #55193. I was testing whether `getEffectivePropertyNameForPropertyNameNode` should be used more, and it turns out that the answer is yes. It helps identify more duplicate symbol properties.\r\n\r\n[playground](https://www.typescriptlang.org/play?jsx=1&ts=5.3.0-dev.20230818#code/MYewdgzgLgBArmAlgRzgUwMoE8C2AjEAGwAYYBeGbfIgOgDMQAnACgCJWBKAbgChRJYCFOioFCARnKVcY+kzadefQgEMIEGAGFCESQG8eMGAG0hqTDKLEAulNZ1EjaK15HTSc6Ku2KrVc64jAHogmAgACxA4QgATGDRGRiZDEzMRSwkfGHtHAJT3YQtqTLt-KBdg0Iio2PjE5IBfHiA)\r\n\r\n```ts\r\nconst uniqueSymbol0 = Symbol.for(\"\");\r\nconst uniqueSymbol1 = Symbol.for(\"\");\r\n\r\nclass Cls1 {\r\n  [uniqueSymbol0] = \"first\";\r\n  [uniqueSymbol0] = \"last\";  // should error\r\n  [uniqueSymbol1] = \"first\";\r\n  [uniqueSymbol1] = \"last\";  // should error\r\n}\r\n```",
        "comments": 18
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-08-18T08:03:05Z",
        "closed_at": "2023-09-22T23:14:07Z",
        "merged_at": "2023-09-22T23:14:07Z",
        "body": "Fixes #55404",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-17T23:22:04Z",
        "closed_at": "2023-08-22T18:14:21Z",
        "merged_at": "2023-08-22T18:14:21Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nHad some issues in #55141 because of including line information from `lib.d.ts` files, so this PR attempts to make those baselines more robust.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 172,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-08-17T22:35:07Z",
        "closed_at": "2023-08-29T02:29:53Z",
        "merged_at": "2023-08-29T02:29:53Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55421",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-08-17T18:44:37Z",
        "closed_at": "2023-08-29T20:14:33Z",
        "merged_at": "2023-08-29T20:14:33Z",
        "body": "If you have the GitHub Actions extension installed, the filetype for these files stops being yaml and starts being \"github-actions-workflow\", which prevents formatting. Add it to the template in case people want to format those in the editor.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-08-17T18:42:45Z",
        "closed_at": "2023-08-17T19:16:50Z",
        "merged_at": "2023-08-17T19:16:50Z",
        "body": "This check previously didn't consider the diff kinds when printing and considered them all to be \"unused\" even when they're actually missing or modified. This modifies these checks to better distinguish the kinds of baseline changes needed.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6566,
        "deletions": 6566,
        "changed_files": 157,
        "created_at": "2023-08-17T17:53:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This is probably going to be too divisive, but this is an \"opinionated\" change I left out of the dprint PR for later discussion.\r\n\r\noperatorPosition=nextLine is the default in both dprint and prettier, but we weren't consistent one way or another so I had dprint set to maintain the original ordering to minimize the diff to only definitely desired (or unconfigurable) changes.\r\n\r\nI personally find operators on the left/next line a lot more readable, especially when we have these large chained conditionals. On long lines, it's kind of annoying to be reading an expression and not know if it's going to be `&&` or `||` until the end, which for me at least negatively affects my comprehension when reading code I don't understand (which is all the time).\r\n\r\nThis change affects ~6500 lines. The opposite change, operatorPosition=sameLine, is only ~4200, so it could certainly be argued that we have preferred the latter slightly. But, I think it's largely just \"who wrote the code and how much of it\".",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 436,
        "deletions": 436,
        "changed_files": 16,
        "created_at": "2023-08-17T16:12:02Z",
        "closed_at": "2023-08-17T17:14:46Z",
        "merged_at": "2023-08-17T17:14:46Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [x] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [x] Code is up-to-date with the `main` branch\r\n* [x] You've successfully run `hereby runtests` locally\r\n* [x] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #55413\r\n\r\nI streamlined the naming of \"ECMAScript\" (which sometimes was written as `ecmascript`, `EcmaScript` or `ECMASCript`) and \"CommonJS\" . I didn't touch the `diagnosticMessages.generated.json.lcl` files but I ran `hereby generate-diagnostics` and `hereby runtests-parallel` successfully (as mentioned in the [Contributing Guidelines](https://github.com/microsoft/TypeScript/blob/main/CONTRIBUTING.md)).\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-17T15:41:11Z",
        "closed_at": "2023-08-17T17:07:13Z",
        "merged_at": "2023-08-17T17:07:13Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-16T22:43:34Z",
        "closed_at": "2023-08-16T23:42:56Z",
        "merged_at": "2023-08-16T23:42:56Z",
        "body": "Embarrassingly I forgot that #55403 meant that the dprint'd d.ts bundler output are now getting the wrong newlines, which was not intentional. Make sure we actually write out the right contents...\r\n\r\n(The reason that we dprint the bundler outputs is that they are input formatting sensitive as the bundler is very very dumb, so when we change `src`, we may spuriously change the bundler output. Not ideal, but now that we have a formatter I could fix that.)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 489,
        "deletions": 1,
        "changed_files": 10,
        "created_at": "2023-08-16T22:42:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": "(putting this up to facilitate discussion)\r\n\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 13,
        "changed_files": 3,
        "created_at": "2023-08-16T21:54:04Z",
        "closed_at": "2023-08-16T22:27:36Z",
        "merged_at": "2023-08-16T22:27:36Z",
        "body": "For better or for worse, we format all JS/TS in this repo with `CRLF` line endings. ~~I swear that this used to be caught by an ESLint rule, but I cannot figure out where.~~ These `lib.d.ts` files were not CRLF as we did not lint `lib.d.ts`. But, we do now format them!\r\n\r\nUnfortunately, vscode's formatting system does not notice line ending changes, so hitting save on these files doesn't do anything.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-16T21:28:11Z",
        "closed_at": "2023-08-16T21:32:15Z",
        "merged_at": "2023-08-16T21:32:15Z",
        "body": "Follow-up to #54820.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-16T21:21:16Z",
        "closed_at": "2023-08-16T22:30:08Z",
        "merged_at": "2023-08-16T22:30:08Z",
        "body": "cc @jakebailey @andrewbranch ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 123,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2023-08-16T21:20:26Z",
        "closed_at": "2023-08-28T23:02:53Z",
        "merged_at": "2023-08-28T23:02:53Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-16T20:43:49Z",
        "closed_at": "2023-08-16T20:51:35Z",
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 20,
        "changed_files": 4,
        "created_at": "2023-08-16T19:49:19Z",
        "closed_at": "2023-08-16T20:05:51Z",
        "merged_at": null,
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 182,
        "deletions": 1,
        "changed_files": 7,
        "created_at": "2023-08-16T16:42:43Z",
        "closed_at": "2023-08-16T21:49:11Z",
        "merged_at": "2023-08-16T21:49:11Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55394",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 408,
        "deletions": 34,
        "changed_files": 23,
        "created_at": "2023-08-16T10:07:42Z",
        "closed_at": "2023-08-22T16:54:09Z",
        "merged_at": "2023-08-22T16:54:09Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55391",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-16T08:15:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This one is supposed to be removed in 5.3, see [here](https://github.com/microsoft/TypeScript/pull/54442#issuecomment-1571284526) ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 224,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-08-15T23:52:16Z",
        "closed_at": "2023-08-16T21:13:45Z",
        "merged_at": "2023-08-16T21:13:45Z",
        "body": "Fixes #55375\r\n\r\nThe linked issue only repro'd with `strict: false` and `strictNullChecks: true` because without those set, we'd reuse input type nodes much more, and not reprint the union type for the field in the `Option` type. When we traverse that field, we'd see the `Test` member in another module, and mistakenly try to add it as something to print in the current file. Now, we have guards against actually doing that already, but traversing it at all caused us to reserve the `Test` name for that symbol in the index file, and thus mangle the original `Test` name for the other symbol when we reprinted the import in the file later.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1850,
        "deletions": 830,
        "changed_files": 39,
        "created_at": "2023-08-15T20:23:24Z",
        "closed_at": "2023-09-08T19:23:13Z",
        "merged_at": "2023-09-08T19:23:13Z",
        "body": "Fixes #55366",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-08-15T18:57:04Z",
        "closed_at": "2023-08-17T18:13:35Z",
        "merged_at": null,
        "body": "See: https://github.com/microsoft/TypeScript/pull/55030#discussion_r1294988471\r\n\r\nThis is technically a fix for #50355, though I'm curious whether or not it hurts perf.\r\n\r\nInterestingly, to make tests pass, I had to update a fourslash test for hover... but it actually looks like a good change?",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 85,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-08-15T17:06:55Z",
        "closed_at": "2023-08-16T20:04:35Z",
        "merged_at": "2023-08-16T20:04:35Z",
        "body": "this (indirectly~) closes https://github.com/microsoft/TypeScript/issues/10122 , the behavior itself was changed by https://github.com/microsoft/TypeScript/pull/50853 and this PR just \"documents\" those cases\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 141,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-08-15T16:05:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55383",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 19,
        "changed_files": 3,
        "created_at": "2023-08-15T09:31:48Z",
        "closed_at": "2023-08-15T18:41:00Z",
        "merged_at": "2023-08-15T18:41:00Z",
        "body": "Fixes #55374",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 16,
        "changed_files": 7,
        "created_at": "2023-08-15T03:49:10Z",
        "closed_at": "2023-08-15T15:29:36Z",
        "merged_at": "2023-08-15T15:29:36Z",
        "body": "Fixes #55296\r\n\r\nThis is similar to #52450 and #53674; we can create diagnostics with hardcoded range lengths, but if the parse error starts at the end of the file, we'll crash.\r\n\r\nI could band-aid this by special casing the one crash, but as you can see in the change, we have quite a few other places which assume it's okay to use a `length=1` diagnostic, when it's possible that it may not work.\r\n\r\nSo, just set the length to the maximum available (or zero) when this happens.\r\n\r\nTo make this more obvious, I've restructured things a little so that we check the ranges earlier. The stack trace in #55296 happens late because the diagnostics weren't checked until they were finally attached to the file, after parse was complete. It's possible that I could find a different way to do this that doesn't look so noisy, but I feel like this is more robust.\r\n\r\nRealistically, I could just move `createDetachedDiagnostic` into `parser.ts`; it's only used there so that'd avoid some parameters. But, all of its related helpers are still in this utilities file.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 205,
        "changed_files": 1,
        "created_at": "2023-08-14T22:02:04Z",
        "closed_at": "2023-08-14T22:20:03Z",
        "merged_at": "2023-08-14T22:20:03Z",
        "body": "#55332 was merged while still red, so main is failing as this baseline is unused.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1784,
        "deletions": 2196,
        "changed_files": 175,
        "created_at": "2023-08-14T22:02:03Z",
        "closed_at": "2023-08-14T22:02:39Z",
        "merged_at": null,
        "body": "Reverts microsoft/TypeScript#55332",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 73,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2023-08-14T20:27:05Z",
        "closed_at": "2023-08-15T01:46:56Z",
        "merged_at": "2023-08-15T01:46:56Z",
        "body": "Both `moduleResolutionCache` and `typeReferenceDirectiveCache` contain per directory resolution cache and non relative name cache so now all the 4 caches will share this calculation",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 16,
        "changed_files": 4,
        "created_at": "2023-08-14T17:52:39Z",
        "closed_at": "2023-08-14T20:13:32Z",
        "merged_at": "2023-08-14T20:13:32Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55369\r\nregression from https://github.com/microsoft/TypeScript/pull/51837 , cc @graphemecluster ",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 144,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2023-08-14T17:04:15Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55364",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 27,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-08-14T12:44:18Z",
        "closed_at": "2023-09-18T19:38:01Z",
        "merged_at": "2023-09-18T19:38:01Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55363",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-14T09:50:10Z",
        "closed_at": "2023-08-14T21:03:32Z",
        "merged_at": "2023-08-14T21:03:31Z",
        "body": "cc @jakebailey ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 57,
        "deletions": 9,
        "changed_files": 6,
        "created_at": "2023-08-14T09:41:49Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/35896",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 124,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2023-08-14T08:46:19Z",
        "closed_at": null,
        "merged_at": null,
        "body": "noticed this while rechecking https://github.com/microsoft/TypeScript/issues/29821 (I'm not marking this PR as closing that issue since what was reported there was fixed already fixed by https://github.com/microsoft/TypeScript/pull/54726)",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 106,
        "deletions": 14,
        "changed_files": 10,
        "created_at": "2023-08-13T13:14:54Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55323\r\ncloses https://github.com/microsoft/TypeScript/issues/18924",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 100,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-08-11T20:19:12Z",
        "closed_at": "2023-08-17T23:32:16Z",
        "merged_at": null,
        "body": "Without #30608, there's a chance that building a single project may not actually cause another to be invalidated, so we must explicitly verify that all are listed.\r\n\r\nI also added a script which says when something's wrong.\r\n\r\nPulled out of https://github.com/microsoft/TypeScript/pull/55273#discussion_r1291586442 since this change is unrelated.",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 34,
        "changed_files": 1,
        "created_at": "2023-08-11T11:46:30Z",
        "closed_at": "2023-08-11T11:55:46Z",
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2196,
        "deletions": 1784,
        "changed_files": 175,
        "created_at": "2023-08-10T19:08:28Z",
        "closed_at": "2023-08-14T21:21:00Z",
        "merged_at": "2023-08-14T21:21:00Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nTo make #55141 easier to test, I first wanted to reorganize the existing test suite into a smaller set of files with more descriptive file names.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 42675,
        "deletions": 38277,
        "changed_files": 937,
        "created_at": "2023-08-10T10:23:06Z",
        "closed_at": "2023-08-29T05:26:40Z",
        "merged_at": null,
        "body": "Fixes #55256\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 151,
        "deletions": 217,
        "changed_files": 8,
        "created_at": "2023-08-09T22:58:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "If you check out the tsconfigs for `tsserver` and `tsserverlibrary`, you'll note that they're the same! `tsserverlibrary` is just a plain reexport for public use, meaning that `tsserver` is a strict superset of `tsserverlibrary` and could be implemented as a bundle which just imports `tsserverlibrary`. We already do this for vscode.dev, which adds a web host; `tsserver` is what adds the node host.\r\n\r\nThis PR builds on #55273, using trickery to remap things such that we import `typescript` (replacing `tsserverlibrary`), so we can see the full size savings.\r\n\r\nI'm not sure that this is the final form; that would probably entail moving the Node stuff out to `server` or something because we'd want `tsserver` to be thin just like `tsc`.\r\n\r\nAlso, I'm personally feeling like the \"ESM executable\" idea (#51440) is better, because it doesn't require any build shenanigans to work and lets us share stuff for the other executables and offer an ESM API.\r\n\r\nSize change:\r\n\r\n![image](https://github.com/microsoft/TypeScript/assets/5341706/007af478-2f39-49b4-bb7d-791aaf7b2bbd)\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-09T17:11:00Z",
        "closed_at": "2023-08-09T17:12:05Z",
        "merged_at": "2023-08-09T17:12:05Z",
        "body": "As noted in https://github.com/microsoft/TypeScript/issues/55317#issuecomment-1670631682.\r\n\r\nI had thought that the input box being a rich text editor (like a default issue) would have implied that code would need to be markdown-formatted, but that apparently didn't turn out. Just add a little example block.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-09T16:10:18Z",
        "closed_at": "2023-08-09T16:43:43Z",
        "merged_at": "2023-08-09T16:43:43Z",
        "body": "Found with #55319 ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 196,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2023-08-09T15:54:16Z",
        "closed_at": "2023-08-09T19:30:09Z",
        "merged_at": null,
        "body": "This is a hacky implementation; do not merge",
        "comments": 19
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-08T20:01:55Z",
        "closed_at": "2023-08-08T20:33:29Z",
        "merged_at": "2023-08-08T20:33:29Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #55309.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-08T17:01:46Z",
        "closed_at": "2023-08-22T03:01:32Z",
        "merged_at": null,
        "body": null,
        "comments": 19
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-08T16:15:59Z",
        "closed_at": "2023-08-08T17:27:59Z",
        "merged_at": "2023-08-08T17:27:59Z",
        "body": "See: https://github.com/microsoft/TypeScript/pull/55153#issuecomment-1669731911\r\n\r\nPeople seem to be just writing their issue in the search terms box. A placeholder may make it more obvious that it's not just the regular issue box.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 184,
        "deletions": 184,
        "changed_files": 2,
        "created_at": "2023-08-08T16:01:21Z",
        "closed_at": "2023-08-09T00:57:07Z",
        "merged_at": "2023-08-09T00:57:07Z",
        "body": "See: https://github.com/evanw/esbuild/releases/tag/v0.19.0\r\n\r\nSince esbuild is at major=0, this needs to be done manually as minor version bumps are treated as breaking.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2023-08-07T22:30:25Z",
        "closed_at": "2023-08-07T22:44:16Z",
        "merged_at": "2023-08-07T22:44:16Z",
        "body": "Also moved certain fields to `customizations`.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 144,
        "deletions": 14,
        "changed_files": 9,
        "created_at": "2023-08-07T21:53:11Z",
        "closed_at": "2023-08-14T20:13:42Z",
        "merged_at": "2023-08-14T20:13:42Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55292",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-08-07T13:10:59Z",
        "closed_at": "2023-08-11T16:51:06Z",
        "merged_at": "2023-08-11T16:51:06Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [x] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [x] Code is up-to-date with the `main` branch\r\n* [x] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #55293\r\n\r\nFormatting `const a = <div: aa foo : bar=\"test\" foo:baz=\"5\" />;` \r\n\r\ninto `const a = <div:aa foo:bar=\"test\" foo:baz=\"5\" />;`",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 104,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2023-08-07T08:35:59Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/10564\r\n\r\n\u26a0\ufe0f this only affects `strictNullChecks: false`, I'm not even sure if this is the right fix or if the issue is supposed to get fixed (it's an old one). The non-strict rules are confusing to me :p",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 69,
        "changed_files": 6,
        "created_at": "2023-08-07T00:48:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [x] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [x] Code is up-to-date with the `main` branch\r\n* [x] You've successfully run `hereby runtests` locally\r\n* [x] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #55289\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 112,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2023-08-06T19:23:12Z",
        "closed_at": "2023-08-24T17:17:34Z",
        "merged_at": "2023-08-24T17:17:34Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55498 , noticed here: https://twitter.com/oriSomething/status/1688214498002255872",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 132,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2023-08-06T09:18:37Z",
        "closed_at": "2023-08-24T15:35:49Z",
        "merged_at": "2023-08-24T15:35:49Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/8775",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 238,
        "deletions": 1,
        "changed_files": 11,
        "created_at": "2023-08-06T08:28:24Z",
        "closed_at": "2023-08-28T21:48:21Z",
        "merged_at": "2023-08-28T21:48:21Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/7840",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 160,
        "deletions": 2,
        "changed_files": 6,
        "created_at": "2023-08-05T09:39:10Z",
        "closed_at": "2023-08-28T17:47:32Z",
        "merged_at": "2023-08-28T17:47:32Z",
        "body": "\u2026izer\r\n\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #30907\r\n",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 846,
        "deletions": 9,
        "changed_files": 12,
        "created_at": "2023-08-05T07:16:07Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #38929\r\nFixes #30625\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 735,
        "deletions": 89,
        "changed_files": 35,
        "created_at": "2023-08-04T23:39:32Z",
        "closed_at": "2023-08-05T00:36:53Z",
        "merged_at": "2023-08-05T00:36:52Z",
        "body": "This changes our ES decorators emit to match with two normative updates to the Decorators proposal:\r\n\r\n- The `this` receiver should be preserved when a decorator is called, i.e., when the decorator `@foo.bar` is invoked, `foo` should be the `this` of the `bar` method.\r\n- Static `accessor` fields should use the class reference rather than `this` when accessing the backing field.\r\n\r\nSee https://github.com/tc39/proposal-decorators/issues/499 for more information.\r\n\r\nFixes #53752\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 573,
        "deletions": 473,
        "changed_files": 31,
        "created_at": "2023-08-04T22:39:05Z",
        "closed_at": "2023-08-05T00:11:59Z",
        "merged_at": "2023-08-05T00:11:59Z",
        "body": "This tweaks the API in #54734 to make it such that it's less likely to break consumers and require changes such as https://github.com/microsoft/monaco-editor/pull/4100.\r\n\r\nUnfortunately, this will require another vscode change to modify https://github.com/microsoft/vscode/pull/189344/files.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4105,
        "deletions": 11401,
        "changed_files": 12,
        "created_at": "2023-08-04T21:36:18Z",
        "closed_at": "2023-08-14T19:45:28Z",
        "merged_at": "2023-08-14T19:45:28Z",
        "body": "The thinking here is:\r\n\r\n- External users (ts-eslint, others) are wanting to use `ProjectService` without the problems of importing typescript twice.\r\n- Moving `ProjectService` into `typescript.js` is effectively moving the entire server namespace into `typescript.js`.\r\n- At that point, why even have `tsserverlibrary.js`?\r\n\r\nBefore this change, the two bundles loaded in roughly:\r\n\r\n- `typescript.js` - 206.30ms (\u00b1 0.30%)\r\n- `tsserverlibrary.js` - 223.68ms (\u00b1 0.21%)\r\n\r\nSo, this only adds about 20ms of extra time to importers. But, it does increase the size of `typescript.js` by 7%: https://github.com/microsoft/TypeScript/actions/runs/5814577872#summary-15764542922\r\n\r\nIn the process of this, we also noticed that we can in the future:\r\n\r\n- Just make tsserver a thin wrapper around typescript.js. The two bundles contain exactly the same code except that tsserver adds a node host, which we probably want to export. That'd save even more space at no perf cost.\r\n\t- We could make tsc a wrapper around typescript.js too, technically, although that'd probably end up being slower and is probably not worth it.\r\n\t- But IMO these would probably be better off being improved via #51440.\r\n- Maybe other optimizations?\r\n\r\ncc @JoshuaKGoldberg @bradzacher \r\n\r\nFor #27891",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 421,
        "deletions": 25,
        "changed_files": 17,
        "created_at": "2023-08-04T16:54:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Adds a configuration to change where named type imports are sorted. `organizeImportsTypeOrder` can be specified as `\"first\"`,  `\"last\"`, or `\"inline\"`, with default behavior being type imports are sorted inline (ignoring the `type` keyword).\r\n\r\nfixes #52820",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 13,
        "changed_files": 9,
        "created_at": "2023-08-04T16:49:02Z",
        "closed_at": "2023-08-07T23:03:56Z",
        "merged_at": "2023-08-07T23:03:56Z",
        "body": "This would prevent issues like [this one](https://github.com/microsoft/TypeScript/issues/54992) (that was fixed by https://github.com/microsoft/TypeScript/pull/55065 ). \r\n\r\nSince a negative number is not a numeric literal, I think it's worth disallowing such AST nodes from being created.",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-04T16:39:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 35
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-04T16:32:42Z",
        "closed_at": "2023-08-04T16:48:14Z",
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 210,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-08-04T10:38:17Z",
        "closed_at": "2023-09-19T21:00:33Z",
        "merged_at": "2023-09-19T21:00:33Z",
        "body": "Fixes #55258",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 225,
        "deletions": 177,
        "changed_files": 40,
        "created_at": "2023-08-04T01:35:51Z",
        "closed_at": "2023-08-05T00:36:27Z",
        "merged_at": "2023-08-05T00:36:26Z",
        "body": "This fixes our emit for references to a class name inside of a class body when down-level emit moves the member containing the reference outside of the class body. This is necessary to preserve the \"double bind\" semantics of class names, where references to a class name inside of a class body are not affected when the reference to the class *outside* of the class body is changed.\r\n\r\nWe generally emit members outside of a class body when downleveling static fields, class static blocks, and private methods/accessors.\r\n\r\nFixes #54607",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 165,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-08-03T09:20:25Z",
        "closed_at": "2023-08-28T22:17:44Z",
        "merged_at": "2023-08-28T22:17:44Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55251",
        "comments": 35
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 10,
        "changed_files": 7,
        "created_at": "2023-08-03T08:31:01Z",
        "closed_at": "2023-08-03T17:36:57Z",
        "merged_at": null,
        "body": "* Change isNaN to Number.isNaN\r\n* Change isFinite to Number.isFinite\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 750,
        "deletions": 335,
        "changed_files": 45,
        "created_at": "2023-08-02T22:47:13Z",
        "closed_at": "2023-08-07T18:02:24Z",
        "merged_at": "2023-08-07T18:02:24Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/5984\r\nfixes https://github.com/microsoft/TypeScript/issues/10996\r\nfixes https://github.com/microsoft/TypeScript/issues/55240",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1193,
        "deletions": 323,
        "changed_files": 82,
        "created_at": "2023-08-01T22:51:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/3276\r\nto learn more about what's happening you can read my comment [here](https://github.com/microsoft/TypeScript/issues/3276#issuecomment-1661197136)\r\n\r\nI'm just opening this as a draft, even without updating baselines. It might be interesting to run the perf suite on this one.",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 73,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-08-01T21:12:45Z",
        "closed_at": "2023-09-11T14:57:51Z",
        "merged_at": "2023-09-11T14:57:51Z",
        "body": "Fixes #55232 \r\n\r\nI couldn't find where this is tested (if it even is). If someone can help me out with that I can write a test.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-08-01T20:58:21Z",
        "closed_at": "2023-08-01T21:52:41Z",
        "merged_at": "2023-08-01T21:52:40Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/3229",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-01T19:58:04Z",
        "closed_at": "2023-08-02T18:32:46Z",
        "merged_at": "2023-08-02T18:32:46Z",
        "body": "Fixes #55227",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 854,
        "deletions": 5,
        "changed_files": 6,
        "created_at": "2023-08-01T19:19:20Z",
        "closed_at": "2023-08-26T15:20:56Z",
        "merged_at": "2023-08-26T15:20:56Z",
        "body": "Expands on #55034 to interpret `const` modifier on type parameters to mean \"as const as possible without violating constraints\". For example:\r\n\r\n```ts\r\ndeclare function fa1<const T extends unknown[]>(args: T): T;\r\ndeclare function fa2<const T extends readonly unknown[]>(args: T): T;\r\n\r\nfa1([\"hello\", 42]);  // [\"hello\", 42]\r\nfa2([\"hello\", 42]);  // readonly [\"hello\", 42]\r\n```\r\n\r\nPreviously the call to `fa1` would infer `unknown[]` because the compiler would first produce the candidate `readonly [\"hello\", 42]`, but then realize that isn't assignable to `unknown[]` and therefore go with the `unknown[]` constraint. With the changes in this PR, the compiler appropriately adjusts its inference to match the constraint.\r\n\r\nFixes #51931.",
        "comments": 35
    },
    {
        "merged": true,
        "additions": 194,
        "deletions": 8,
        "changed_files": 6,
        "created_at": "2023-08-01T18:34:58Z",
        "closed_at": "2023-08-03T17:56:09Z",
        "merged_at": "2023-08-03T17:56:09Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/2185",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 85,
        "deletions": 1,
        "changed_files": 8,
        "created_at": "2023-08-01T13:59:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/54196",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-08-01T04:59:08Z",
        "closed_at": "2023-08-03T22:53:31Z",
        "merged_at": "2023-08-03T22:53:31Z",
        "body": "For #54939\r\n\r\nI did a pprof profile of #54939 and found that a suspicious amount of time was being spent in `recursiveTypeRelatedTo` directly (self time).\r\n\r\n![image](https://github.com/microsoft/TypeScript/assets/5341706/9a1695f6-301e-4717-a9fd-b58c6188e610)\r\n\r\nThe profile didn't really point to anything except for the loops over `maybeKeys`. I noticed that they were all operations where we could be looping over and over again when a set + stack could make every operation constant time.\r\n\r\nSo, I did that, and the test case from #54939 improved quite a bit:\r\n\r\n```\r\nBenchmark 1: old\r\n  Time (mean \u00b1 \u03c3):      3.115 s \u00b1  0.067 s    [User: 4.403 s, System: 0.124 s]\r\n  Range (min \u2026 max):    3.018 s \u2026  3.196 s    10 runs\r\n \r\nBenchmark 2: new\r\n  Time (mean \u00b1 \u03c3):      2.072 s \u00b1  0.050 s    [User: 3.355 s, System: 0.135 s]\r\n  Range (min \u2026 max):    1.985 s \u2026  2.150 s    10 runs\r\n \r\nSummary\r\n  'new' ran\r\n    1.50 \u00b1 0.05 times faster than 'old'\r\n```\r\n\r\nOn an even more inflated version of that test, I tripled the number of properties, and:\r\n\r\n```\r\nBenchmark 1: old\r\n  Time (mean \u00b1 \u03c3):      7.369 s \u00b1  0.178 s    [User: 8.785 s, System: 0.225 s]\r\n  Range (min \u2026 max):    7.136 s \u2026  7.685 s    10 runs\r\n \r\nBenchmark 2: new\r\n  Time (mean \u00b1 \u03c3):      3.437 s \u00b1  0.073 s    [User: 4.913 s, System: 0.167 s]\r\n  Range (min \u2026 max):    3.363 s \u2026  3.566 s    10 runs\r\n \r\nSummary\r\n  'new' ran\r\n    2.14 \u00b1 0.07 times faster than 'old'\r\n```\r\n\r\nThe current version of this PR doesn't appear to regress our regular test suites (some get better).",
        "comments": 38
    },
    {
        "merged": false,
        "additions": 236,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-07-31T23:41:01Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #55217\r\n\r\nAs noted by @Andarist, this check is what causes things to differ between errors and non-error modes in relation, causing oddities when the same relation is observed in both ways but in different orders.\r\n\r\nNo doubt this is a bad idea but I wanted to run the test suite to see what happens.\r\n\r\nBunch of WIP code is left in the PR, I'll remove/refactor it if this code actually looks acceptable.",
        "comments": 43
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-31T17:15:53Z",
        "closed_at": "2023-07-31T18:24:29Z",
        "merged_at": "2023-07-31T18:24:29Z",
        "body": "\u2026\r\n\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-07-31T11:27:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55212",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-29T23:04:45Z",
        "closed_at": "2023-07-31T18:55:18Z",
        "merged_at": null,
        "body": "\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes https://github.com/microsoft/TypeScript/issues/55201 \r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 493,
        "deletions": 1,
        "changed_files": 7,
        "created_at": "2023-07-29T09:09:06Z",
        "closed_at": "2023-08-17T23:34:31Z",
        "merged_at": "2023-08-17T23:34:31Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #55163\r\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-28T21:01:48Z",
        "closed_at": "2023-08-08T21:39:31Z",
        "merged_at": "2023-08-08T21:39:31Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 954,
        "changed_files": 19,
        "created_at": "2023-07-28T18:15:18Z",
        "closed_at": "2023-08-07T21:35:15Z",
        "merged_at": "2023-08-07T21:35:15Z",
        "body": "We've previously talked about this one; this infra is a pain to maintain, isn't visible to the public (we have to copy/paste and self-censor the internal repos we show), and we can't import tests into it anymore post-modules (as the mechanism used to \"instrument\" `tsc` was removed). I've already removed all of the other \"special\" runners (user, docker, DT, test262), so after this PR we'll only have the tests that exist fully in this repo, and those in https://github.com/microsoft/TypeScript-error-deltas.\r\n\r\nA downside is that there may be things tested in RWC that _aren't_ tested in our in-repo test suite or in user/topXYZ tests.\r\n\r\nNotably, RWC baselines emit while our other external test cases do not, but from being the one to update those baselines when `main` fails, it doesn't really seem like we actually get much out of it as the emit changes are always very clearly reflected in tests.\r\n\r\nAdditionally, RWC is one of the only places with existing errors, which do provide a mechanism to observe how error messages are changing. It's likely that user/topXYZ tests _don't_ contain any errors except the new ones we add in a release. But it's a double edged sword; the reason the RWC projects have errors is because they're all 3+ years old and are never updated. Most of them contain 5.0 option deprecation errors!\r\n\r\nI'm not sure we're \"ready\" for this, but I do want to discuss it. I'm finding it increasingly annoying to fix RWC up; we've broken the test runner without noticing multiple times this year, its ability to push PRs to the internal repo is currently broken, and often its ability to post github replies also breaks. It's just annoying.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 464,
        "deletions": 51,
        "changed_files": 6,
        "created_at": "2023-07-28T16:11:38Z",
        "closed_at": "2023-07-31T16:55:06Z",
        "merged_at": null,
        "body": "Previously, only calls with tuples were allowed, not unions of tuples. For example, this already works:\r\n\r\n```\r\nf(string, ...[number, string], string) ==> f(string, number, string, string)\r\n```\r\n\r\nBut this does not:\r\n\r\n```\r\nf(string, ...([string] | [number, number])) ==> (f, string, string | number, number | undefined)\r\n```\r\n\r\nThis PR allows union types like these *as the last argument*. It's possible to allow them anywhere, but quite a bit more complicated. And the code is already complicated enough: getEffectiveCallArguments now needs to return the minimum number of arguments as well as the argument list (which is the maximum number of arguments).\r\n\r\nAlso, this transformation should not happen when the tuple union argument is passed to a tuple union rest parameter: `[number] | [string]` is assignable to `[number] | [string]` but the transformed `number | string` is not. Checking for this requires passing around even more information.\r\n\r\nBottom line: I'm not sure the complexity is worth the new code. However, if this is a good idea, there are 3 things that need to be cleaned up:\r\n\r\n1. More precise error messages--maybe. Right now error messages are reported in terms of the maximum number of arguments:\r\n2. Allow tuples with trailing `...T` types. Not done or tested, but straightfoward.\r\n3. Find a more elegant way to return the minimum number of arguments.\r\n\r\nFixes #42508\r\nSupercedes #43882, but does less than half of that PR, in less than half the code.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 665,
        "deletions": 5,
        "changed_files": 7,
        "created_at": "2023-07-28T06:14:24Z",
        "closed_at": "2023-09-13T19:07:33Z",
        "merged_at": "2023-09-13T19:07:33Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/54811",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 49,
        "changed_files": 11,
        "created_at": "2023-07-28T00:34:48Z",
        "closed_at": "2023-08-11T22:07:06Z",
        "merged_at": "2023-08-11T22:07:06Z",
        "body": "This is somewhat involved as our diagnostic handling was all `arguments` based.\r\n\r\nI somewhat recently tried to make this consistent in #53193 but apparently didn't go all the way down to the bottom, which this PR necessarily has to do.\r\n\r\nThere are some places where I chose to just ignore things. I'm unsure if there are better ways to write things but most of those uses also already disabled a lint for using non-arrow functions.\r\n\r\nIt's possible that there's a perf factor here but I can't seem to observe one, and the callers to the diagnostics stuff already use spread.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-28T00:07:00Z",
        "closed_at": "2023-07-28T04:14:08Z",
        "merged_at": "2023-07-28T04:14:08Z",
        "body": "This rule fires for these:\r\n\r\n```\r\n/home/jabaile/work/TypeScript/src/compiler/core.ts\r\n  1882:41  error  Unexpected empty function 'noop'        @typescript-eslint/no-empty-function\r\n  2706:43  error  Unexpected empty function 'assertType'  @typescript-eslint/no-empty-function\r\n\r\n/home/jabaile/work/TypeScript/src/compiler/debug.ts\r\n  358:43  error  Unexpected empty function 'type'  @typescript-eslint/no-empty-function\r\n\r\n/home/jabaile/work/TypeScript/src/testRunner/unittests/evaluation/esDecorators.ts\r\n   741:65  error  Unexpected empty method 'method'   @typescript-eslint/no-empty-function\r\n   768:44  error  Unexpected empty method 'method'   @typescript-eslint/no-empty-function\r\n   785:76  error  Unexpected empty method '#method'  @typescript-eslint/no-empty-function\r\n  1139:70  error  Unexpected empty arrow function    @typescript-eslint/no-empty-function\r\n  1189:70  error  Unexpected empty arrow function    @typescript-eslint/no-empty-function\r\n  1270:70  error  Unexpected empty arrow function    @typescript-eslint/no-empty-function\r\n  1351:70  error  Unexpected empty arrow function    @typescript-eslint/no-empty-function\r\n  1432:70  error  Unexpected empty arrow function    @typescript-eslint/no-empty-function\r\n  1513:70  error  Unexpected empty arrow function    @typescript-eslint/no-empty-function\r\n\r\n\u2716 12 problems (12 errors, 0 warnings)\r\n```\r\n\r\nThe first three are functions which are canonically empty (which we'd exempt). It's possible that we'd always use `noop` when we wanted an empty function, so it would seem like this rule is fine to keep things consistent.\r\n\r\nHowever, the last file's errors are in a test which checks that the shape of things is correct, such that it's not really a problem that they are empty, but there's no way we could use `noop` to achieve the same goals, only throw or something to say \"this is intentionally empty\".\r\n\r\nI'm not sure if this rule gets us much; if anything it'd just be an annoyance in the editor when we are working on the code, similarly to my thoughts on `no-empty-interface`.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 106,
        "deletions": 5,
        "changed_files": 6,
        "created_at": "2023-07-27T21:48:19Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55155",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 189,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-07-27T20:34:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #55168",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 196,
        "deletions": 2,
        "changed_files": 7,
        "created_at": "2023-07-27T19:18:13Z",
        "closed_at": "2023-08-08T21:42:50Z",
        "merged_at": "2023-08-08T21:42:50Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55164",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 99,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2023-07-26T17:48:55Z",
        "closed_at": "2023-07-26T22:22:58Z",
        "merged_at": "2023-07-26T22:22:58Z",
        "body": "Fixes #55145.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 239,
        "deletions": 195,
        "changed_files": 9,
        "created_at": "2023-07-25T18:40:42Z",
        "closed_at": "2023-08-03T19:11:27Z",
        "merged_at": "2023-08-03T19:11:27Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [x] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [x] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nThings added/changed:\r\n\r\n- Convert issue templates to issue forms\r\n  - Fixes #54996\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 855,
        "deletions": 1236,
        "changed_files": 117,
        "created_at": "2023-07-25T17:18:12Z",
        "closed_at": "2023-08-07T20:31:23Z",
        "merged_at": "2023-08-07T20:31:23Z",
        "body": "When we report an excess property error, the current error chain looks like this\r\n\r\n```\r\n    Argument of type '{ z: number; a: number; }' is not assignable to parameter of type 'T'.\r\n      Object literal may only specify known properties, and 'z' does not exist in type 'T'.\r\n```\r\n\r\nAs frequently noted by @fatcerberus, this gives the misleading impression that object types are sealed, since the way we printback a fresh object literal type is indistinguishable from a regular object type. It's also a waste of space since the top errorline prints back `T` when it's already in the EPC line, and the object literal source type is always anonymous (therefore long).\r\n\r\nThis PR skips the parent line when reporting EPC errors, so you don't see the \"x is not assignable to y\" part. The implementation is set up to handle the tricky case\r\n```ts\r\ndeclare function fn(a: { x: string }): void;\r\ndeclare function fn(a: { y: string }): void;\r\nfn({ z: 3, a: 3 });\r\n```\r\nwhere we want to print back two EPC errors:\r\n\r\n```\r\n// BEFORE\r\nNo overload matches this call.\r\n  Overload 1 of 2, '(a: { x: string; }): void', gave the following error.\r\n    Argument of type '{ z: number; a: number; }' is not assignable to parameter of type '{ x: string; }'.\r\n      Object literal may only specify known properties, and 'z' does not exist in type '{ x: string; }'.\r\n  Overload 2 of 2, '(a: { y: string; }): void', gave the following error.\r\n    Argument of type '{ z: number; a: number; }' is not assignable to parameter of type '{ y: string; }'.\r\n      Object literal may only specify known properties, and 'z' does not exist in type '{ y: string; }'.\r\n\r\n// AFTER\r\nNo overload matches this call.\r\n  Overload 1 of 2, '(a: { x: string; }): void', gave the following error.\r\n    Object literal may only specify known properties, and 'z' does not exist in type '{ x: string; }'.\r\n  Overload 2 of 2, '(a: { y: string; }): void', gave the following error.\r\n    Object literal may only specify known properties, and 'z' does not exist in type '{ y: string; }'.\r\n```",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 80,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2023-07-25T16:43:11Z",
        "closed_at": "2023-08-15T15:59:00Z",
        "merged_at": "2023-08-15T15:59:00Z",
        "body": "It's a bug that I noticed when working on https://github.com/microsoft/TypeScript/pull/55144",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 18,
        "changed_files": 1,
        "created_at": "2023-07-25T15:18:41Z",
        "closed_at": "2023-07-25T15:36:35Z",
        "merged_at": null,
        "body": "introduced Rxjs for reducing the complexity of the code also install Rxjs before testing this by npm install rxjs in your command terminal\r\n\r\n<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 344,
        "deletions": 38,
        "changed_files": 4,
        "created_at": "2023-07-25T07:36:07Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/54841",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1130,
        "deletions": 32,
        "changed_files": 28,
        "created_at": "2023-07-24T21:12:35Z",
        "closed_at": "2023-09-20T05:50:12Z",
        "merged_at": "2023-09-20T05:50:12Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nSecond iteration of #47693\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 478,
        "deletions": 247,
        "changed_files": 6,
        "created_at": "2023-07-24T20:28:58Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55129",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 120,
        "deletions": 16,
        "changed_files": 9,
        "created_at": "2023-07-24T20:03:15Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Follow-up to #54693.\r\n\r\nAs much as I want to do this (because I really want to be able to not have errors when I don't use a variable), https://github.com/typescript-eslint/typescript-eslint/issues/5017 + https://github.com/gajus/eslint-plugin-jsdoc/issues/858 means that we have to bring back `eslint-plugin-jsdoc` to have _something_ mark JSDoc as using variables.\r\n\r\nAdding `eslint-plugin-jsdoc` back adds a whopping `14 seconds` of lint time (33% of the entire lint run); this was the original reason I removed this plugin in favor of a small custom JSDoc parser instead. Hopefully there are some performance improvements that can be done over there to help everyone.\r\n\r\nWe could add workarounds, disable the rule in places, etc, but that's unfortunate.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 50,
        "deletions": 51,
        "changed_files": 32,
        "created_at": "2023-07-24T19:26:55Z",
        "closed_at": "2023-07-28T23:02:39Z",
        "merged_at": "2023-07-28T23:02:39Z",
        "body": "Follow-up to #54693.\r\n\r\nThis actually caught a small number of oopsies where we wrote `\\r\\p` but meant `\\r\\np`",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 23,
        "changed_files": 13,
        "created_at": "2023-07-24T19:02:27Z",
        "closed_at": "2023-07-24T20:17:32Z",
        "merged_at": null,
        "body": "Follow-up to #54693.\r\n\r\nThis is probably more for discussion; these extra `!!` are redundant and not obviously wrong, but, it's probably a fine cleanup.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2023-07-24T18:56:43Z",
        "closed_at": "2023-07-24T20:53:12Z",
        "merged_at": "2023-07-24T20:53:12Z",
        "body": "Follow-up to #54693.\r\n\r\nThis PR triages the rules that should \"obviously\" be disabled or fixed.\r\n\r\nThis caught a case where I had not noticed a stray `debugger` line in a PR.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-07-24T18:29:39Z",
        "closed_at": "2023-07-27T22:58:18Z",
        "merged_at": "2023-07-27T22:58:18Z",
        "body": "Follow-up to #54693.\r\n\r\nAll of the things it catches are harmless, realistically, though I agree that `as Function` was the wrong cast as that'd let us accidentally `new` it or something.\r\n\r\nI definitely disagree with the default of banning `{}`; that's a very useful type (especially post #49119, a number I have memorized at this point). Annoyingly, violating the rule that bans `{}` or `Object` says to use `NonNullable<unknown>` which is exactly `{}`.\r\n\r\nThe fact that `Symbol` is mistaken as the global `Symbol` I believe is a bug in ts-eslint, ~~though I don't think it's reported so I'll do that shortly.~~ https://github.com/typescript-eslint/typescript-eslint/issues/7306\r\n\r\nDisabling those two leaves the rule to only ban the uppercase primitive wrapper types (good) and `Object` (probably good), so it seems like this rule is fine to keep enabled.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-24T16:17:50Z",
        "closed_at": "2023-07-24T22:09:22Z",
        "merged_at": "2023-07-24T22:09:22Z",
        "body": "This `$issue` was accidentally left behind from a previous revision of this workflow and is causing this step to fail.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 698,
        "deletions": 55,
        "changed_files": 10,
        "created_at": "2023-07-24T14:31:08Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/54892\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 37496,
        "deletions": 37496,
        "changed_files": 4,
        "created_at": "2023-07-24T13:34:59Z",
        "closed_at": "2023-07-24T16:20:57Z",
        "merged_at": null,
        "body": "\"requestId\" is more understandable than \"handle\".\r\nOn mdn, it is the \"request id\" that is used, not the \"handle\":\r\n\r\n> A long integer value, the request id, that uniquely identifies the entry in the callback list.\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame#return_value",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 265,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-07-23T20:08:25Z",
        "closed_at": "2023-08-03T22:57:51Z",
        "merged_at": "2023-08-03T22:57:51Z",
        "body": "Fixes #54954",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-07-23T15:11:17Z",
        "closed_at": "2023-09-21T22:05:35Z",
        "merged_at": "2023-09-21T22:05:35Z",
        "body": "fixes https://twitter.com/jjenzz/status/1683107602572476416 , cc @jjenzz",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 302,
        "deletions": 5,
        "changed_files": 5,
        "created_at": "2023-07-23T10:04:33Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #55026\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 152,
        "changed_files": 5,
        "created_at": "2023-07-22T15:41:14Z",
        "closed_at": "2023-08-23T23:42:37Z",
        "merged_at": "2023-08-23T23:42:37Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nRemove the dependency of the `del` package and a bunch of other [sub dependencies](https://npmgraph.js.org/?q=del@6.1.1). \r\nThe use of glob patterns over built in core `fsPromises.rm(path[, options])` with a recursive option is to over engineered for what you are actually using it for.\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 344,
        "deletions": 212,
        "changed_files": 20,
        "created_at": "2023-07-22T11:04:58Z",
        "closed_at": "2023-09-15T17:25:13Z",
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55075",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 121,
        "deletions": 3,
        "changed_files": 8,
        "created_at": "2023-07-22T06:22:22Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55091",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 65,
        "deletions": 55,
        "changed_files": 1,
        "created_at": "2023-07-21T21:55:34Z",
        "closed_at": "2023-07-24T17:57:38Z",
        "merged_at": "2023-07-24T17:57:38Z",
        "body": "I've been wanting to do this to make #54820 easier to deal with; I have to bulk delete the formatting-related rules and ensure they're handled, but it's tricky when I have to fix merge conflicts in the file or accidentally miss ones that are in fact formatting-related.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 572,
        "deletions": 561,
        "changed_files": 22,
        "created_at": "2023-07-21T03:29:22Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes: [#55087](https://github.com/microsoft/TypeScript/issues/55087)\r\nThis changes the behavior of TS to the specified behavior in [issue](https://github.com/microsoft/TypeScript/issues/55087).\r\n\r\nExport default of types become errors - i.e\r\n```ts\r\ntype foo = 3\r\nexport default foo\r\n```\r\nThis is because if it does not error - typescript emits invalid code.\r\n\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 93,
        "deletions": 93,
        "changed_files": 6,
        "created_at": "2023-07-20T20:11:55Z",
        "closed_at": "2023-07-21T15:28:40Z",
        "merged_at": null,
        "body": "As suggested in microsoft/typescript-dom-lib-generator#1598\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 145,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2023-07-19T12:53:29Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #54937\r\n\r\nA very coarse implementation, only for demonstrating ideas.\r\n\r\nDemo:\r\n\r\n![jump](https://github.com/microsoft/TypeScript/assets/8041462/c7825776-a5cd-4831-a4fc-5992c394965c)\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 82,
        "deletions": 20,
        "changed_files": 8,
        "created_at": "2023-07-18T22:29:29Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes https://github.com/microsoft/TypeScript/issues/54375\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-07-18T20:37:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Resolves #55071 ",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 85,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2023-07-18T20:04:50Z",
        "closed_at": "2023-07-19T19:52:20Z",
        "merged_at": "2023-07-19T19:52:20Z",
        "body": "Fixes #55038",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 347,
        "deletions": 29,
        "changed_files": 9,
        "created_at": "2023-07-18T18:57:21Z",
        "closed_at": "2023-07-20T17:58:56Z",
        "merged_at": null,
        "body": "Fixes #54650\r\n\r\nOnly the code in parseJSDocTypeExpression changes; the other diffs are moves of functions to outer scopes.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 95663,
        "deletions": 1157,
        "changed_files": 375,
        "created_at": "2023-07-18T18:13:12Z",
        "closed_at": "2023-10-03T17:29:19Z",
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 17
    },
    {
        "merged": true,
        "additions": 279,
        "deletions": 20,
        "changed_files": 10,
        "created_at": "2023-07-18T17:17:02Z",
        "closed_at": "2023-07-31T23:33:52Z",
        "merged_at": "2023-07-31T23:33:51Z",
        "body": "supersedes https://github.com/microsoft/TypeScript/pull/55031\r\nfixes #54992\r\n\r\ncc @a-tarasyuk @jakebailey ",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-07-18T13:27:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [x] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [x] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #54729\r\n\r\nDemo:\r\n![completion](https://github.com/microsoft/TypeScript/assets/8041462/f5a49855-0591-46db-8de9-4794a19ce9e3)\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 349,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2023-07-17T19:16:26Z",
        "closed_at": "2023-07-24T18:57:36Z",
        "merged_at": "2023-07-24T18:57:36Z",
        "body": "Fixes #55002\r\n\r\nThis is somewhat similar to our custom declaration emit that wraps mapped types to preserve homomorphic-ness (circa #48091), if needs be, but is a slightly different (more verbose) wrapper to preserve just the modifier-preserving behavior of the emitted mapped type.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 149,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2023-07-17T18:55:17Z",
        "closed_at": "2023-09-21T19:25:29Z",
        "merged_at": "2023-09-21T19:25:29Z",
        "body": "Fixes #53967\r\n\r\nThe problem is that the weird, ad-hoc CJS merge needs to happen at two different times.  The first is its existing location in getCommonJsExportEquals. The second is getResolvedMembersOrExportsOfSymbol, which combines normal, early-bound symbols with late-bound symbols.\r\n\r\nThe CJS merge happens before the addition of late-bound symbols, so a merge will result in the loss of [Symbol.iterable] from the bug. But manually merging the resolvedExports/Members during the CJS merge also doesn't work, because it prevents the module's resolvedExports/Members from being filled in later.\r\n\r\nInstead, this PR delays part of the CJS merge to\r\ngetResolvedMembersOrExportsOfSymbol. Unfortunately, this requires retrieving the original, unmerged symbols--since their resolvedExports/Members are already cached. I do this by looking at the symbols for each of the merged symbol's declarations, which feels wrong.\r\n\r\nPlease suggest alternate ways to do this. I don't think I understand the late-binding machinery well enough, so it's likely there's a cleaner way.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5091,
        "deletions": 63,
        "changed_files": 34,
        "created_at": "2023-07-17T18:10:43Z",
        "closed_at": "2023-09-29T17:37:45Z",
        "merged_at": "2023-09-29T17:37:45Z",
        "body": "This makes our `instanceof` narrowing more closely align to Steps 2-3 of the [InstanceofOperator](https://tc39.es/ecma262/#sec-instanceofoperator) algorithm in the ECMA-262 specification by allowing any object type in the right-hand side of `instanceof` as long as it has a valid `[Symbol.hasInstance]` method. If such a method exists and returns a type predicate, that predicate can then be used when narrowing `instanceof`. \r\n\r\n```ts\r\ninterface Point { x: number, y: number };\r\n\r\nconst Point = {\r\n  create(x: number, y: number): Point {\r\n    return { x, y };\r\n  },\r\n  [Symbol.hasInstance](value: unknown): value is Point {\r\n    return typeof value === \"object\" && value !== null &&\r\n      \"x\" in value && typeof (value as Point).x === \"number\" &&\r\n      \"y\" in value && typeof (value as Point).y === \"number\";\r\n  }\r\n};\r\n\r\ninterface Line { ... }\r\n\r\ndeclare const p: Point | Line;\r\nif (p instanceof Point) {\r\n  p; // Point\r\n} else {\r\n  p; // Line\r\n}\r\n```\r\n\r\nFor a `[Symbol.hasInstance]` method to be considered during `instanceof` narrowing, it must have a type predicate as its return type. \r\n\r\nIn addition, when the left-hand side of `instanceof` is considered as an argument to `[Symbol.hasInstance]`, it must be assignable to the first parameter. This does not, however, weaken our current requirement that the left-hand side be an object type (or a union containing an object type), despite the fact this is not currently a requirement of ECMAScript.\r\n\r\nThis is intended to address rather complicated workarounds employed by, for example, `engine262` which uses `[Symbol.hasInstance]` as a runtime type guard, but needed to introduce a non-creatable abstract class so that TypeScript would understand the type guard: https://github.com/engine262/engine262/blob/435e533f8bb2f66961e3c16fe67150a0bba745bb/src/completion.mts#L70\r\n\r\nFixes #17360\r\nFixes #39064\r\nRelated #32080\r\nRelated #52670\r\n\r\nNOTE: This will need to wait for 5.3 at the earliest.",
        "comments": 23
    },
    {
        "merged": false,
        "additions": 232,
        "deletions": 5,
        "changed_files": 6,
        "created_at": "2023-07-15T22:58:35Z",
        "closed_at": "2023-08-17T07:58:06Z",
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/55033",
        "comments": 21
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-07-15T19:56:31Z",
        "closed_at": "2023-07-18T16:08:39Z",
        "merged_at": null,
        "body": null,
        "comments": 6
    },
    {
        "merged": true,
        "additions": 174,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2023-07-15T15:15:04Z",
        "closed_at": "2023-08-29T21:11:34Z",
        "merged_at": "2023-08-29T21:11:34Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #50355\r\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 824,
        "deletions": 19,
        "changed_files": 25,
        "created_at": "2023-07-15T07:35:09Z",
        "closed_at": "2023-07-28T23:02:10Z",
        "merged_at": "2023-07-28T23:02:10Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #50971\r\n",
        "comments": 17
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2023-07-14T13:53:37Z",
        "closed_at": "2023-08-30T22:17:43Z",
        "merged_at": "2023-08-30T22:17:43Z",
        "body": "Fixes #55014",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 145,
        "deletions": 3,
        "changed_files": 6,
        "created_at": "2023-07-14T09:35:28Z",
        "closed_at": "2023-08-02T22:55:55Z",
        "merged_at": "2023-08-02T22:55:55Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/54981",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 372,
        "deletions": 39,
        "changed_files": 16,
        "created_at": "2023-07-14T02:57:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #49492\r\n\r\nThis treats `package.json#imports` as roughly equivalent to `compilerOptions#paths` in terms of deciding which specifier to use, it also prefers `package.json#imports` over `compilerOptions#paths`\r\n\r\nWhile doing this, I found some broken behaviour around extension replacement which was already observable with the `package.json#exports` field auto-import but is more visible with `package.json#imports` so this fixes that as well. `autoImportPackageJsonExportsSpecifierEndsInTs` shows an example of what's fixed for `package.json#exports`. That fix and test is in a seperate commit if that's easier to review",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 34,
        "changed_files": 7,
        "created_at": "2023-07-13T19:40:50Z",
        "closed_at": "2023-07-28T23:13:08Z",
        "merged_at": "2023-07-28T23:13:08Z",
        "body": "This commit is to remove the optional behaviour of Array#copyWithin's 2nd argument 'start' method, to match the MDN documentation.\r\n\r\nFixes #54967 \r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2023-07-13T19:14:07Z",
        "closed_at": "2023-08-30T23:22:39Z",
        "merged_at": null,
        "body": "Pulled out of #53228 (which itself was pulled out of #51455).\r\n\r\nMy end intent is that we move Debug to a module (#51441) which will effectively do this via esbuild, but I'm curious as to the perf benefit of just this one change.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 202,
        "deletions": 8,
        "changed_files": 6,
        "created_at": "2023-07-13T15:48:29Z",
        "closed_at": "2023-07-13T16:46:30Z",
        "merged_at": "2023-07-13T16:46:30Z",
        "body": "Fixes #54984",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 281,
        "deletions": 188,
        "changed_files": 17,
        "created_at": "2023-07-13T08:43:07Z",
        "closed_at": null,
        "merged_at": null,
        "body": "closes https://github.com/microsoft/TypeScript/issues/54970",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 133,
        "deletions": 114,
        "changed_files": 23,
        "created_at": "2023-07-12T23:12:16Z",
        "closed_at": "2023-07-13T20:12:20Z",
        "merged_at": "2023-07-13T20:12:20Z",
        "body": "Fixes #54590.\r\n\r\n`isRightSideOfQualifiedNameOrPropertyAccess` is called by `getTypeOfSymbolAtLocation` to decide if we should consider the location's parent instead, so that if we have a property access/qualified name, e.g. `x.y`, we look up the whole expression, and not just `y`. Because `import.meta` was not considered one of those cases, when `getTypeOfSymbolAtLocation` was called by completions, we'd end up trying to resolve the name `meta`, which doesn't resolve to anything, leading to the error.\r\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 267,
        "deletions": 0,
        "changed_files": 8,
        "created_at": "2023-07-12T18:56:56Z",
        "closed_at": "2023-07-12T19:25:41Z",
        "merged_at": "2023-07-12T19:25:41Z",
        "body": "Fixes #54562\r\n\r\nThe parameter decorator metadata handling ensured that all of its signature's parameters were referenced, but did not do the same for the return type even though the emitted code will include return type info; this code is effectively a copy/paste of the `MethodDeclaration` block above it, so I've made it match by also ensuring the return is marked as referenced.\r\n\r\nPotentially it'd be better to yank this block out into its own function and then recurse on `node.parent` to avoid code duplication, but this PR is probably fine and is a very small diff.\r\n\r\nActual change: https://github.com/microsoft/TypeScript/pull/54994/commits/60d2b6450beb7f0ed7ac3aeea8b608e6f60ee29f",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 227,
        "deletions": 119,
        "changed_files": 2,
        "created_at": "2023-07-12T17:08:00Z",
        "closed_at": "2023-07-12T17:23:22Z",
        "merged_at": "2023-07-12T17:23:22Z",
        "body": "This just got bumped in main since we weren't pinning this; v20 drops support for v14 and v16, but we still are using Node 16 in our pipelines for various things (and then we get loads of engine errors everywhere else).\r\n\r\nI could go try and find every pipeline which is still using 16 and up it, but there's a lot of them across multiple different repos and pipeline projects, and I'm fairly certain that we're going to be able to drop some or all of these scripts in main anyway.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-07-12T15:20:14Z",
        "closed_at": "2023-07-17T23:13:00Z",
        "merged_at": "2023-07-17T23:13:00Z",
        "body": "Fixes #54982",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 49,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2023-07-11T22:41:13Z",
        "closed_at": "2023-07-12T17:00:33Z",
        "merged_at": "2023-07-12T17:00:33Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes https://github.com/microsoft/TypeScript/issues/54376\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 469,
        "deletions": 50,
        "changed_files": 19,
        "created_at": "2023-07-11T17:22:20Z",
        "closed_at": "2023-08-04T17:00:33Z",
        "merged_at": "2023-08-04T17:00:33Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes https://github.com/microsoft/TypeScript/issues/54284\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 148,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-07-11T16:59:56Z",
        "closed_at": "2023-07-13T23:04:43Z",
        "merged_at": "2023-07-13T23:04:42Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #24688\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 78,
        "deletions": 53,
        "changed_files": 54,
        "created_at": "2023-07-11T14:46:36Z",
        "closed_at": "2023-07-17T22:32:25Z",
        "merged_at": "2023-07-17T22:32:25Z",
        "body": "Fixes #54951",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-07-10T23:01:28Z",
        "closed_at": "2023-07-11T10:06:15Z",
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 587,
        "deletions": 37,
        "changed_files": 19,
        "created_at": "2023-07-10T21:14:19Z",
        "closed_at": "2023-08-21T22:01:07Z",
        "merged_at": "2023-08-21T22:01:07Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/54948\r\n\r\ncc @RyanCavanaugh ",
        "comments": 26
    },
    {
        "merged": true,
        "additions": 217,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-07-10T20:36:08Z",
        "closed_at": "2023-07-13T21:38:50Z",
        "merged_at": "2023-07-13T21:38:50Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #22077\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-07-10T08:24:46Z",
        "closed_at": "2023-07-18T23:42:04Z",
        "merged_at": "2023-07-18T23:42:04Z",
        "body": "Fixes #54872",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 189,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-07-10T07:47:16Z",
        "closed_at": "2023-09-13T22:48:41Z",
        "merged_at": "2023-09-13T22:48:41Z",
        "body": "Context-sensitive functions might also cache `nodeLinks.resolvedSignature` (and `symbolLinks.type`) and lead to incorrect results for semantic diagnostics requests.\r\n\r\ncc @andrewbranch ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 576,
        "deletions": 421,
        "changed_files": 118,
        "created_at": "2023-07-09T13:29:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #54879 \r\n\r\nPlease don't be alarmed by the large number of changed files here. The code change is only to the `addPropertyToElementList` function in `checker.ts`. The rest of the changes update the baseline and fourslash files for the large number of cases where the compiler was previously incorrectly (AFAICT) emitting regular properties where it should have emitted get or set accessors.\r\n\r\nI've looked at all the baseline changes in detail and I believe them to now be more correct. I hope you will agree!\r\n\r\nAs I undersand it, prior to TS 3.7 this difference between properties and accessors was mostly moot. But more recently it has become quite important (TS2611 errors), and so this PR makes the compiler emit the accessors in a significant set of cases where it should.\r\n\r\nOne possibly important thing I noticed while reviewing the baseline changes... `tests/cases/compiler/divergentAccessorsTypes6.ts` has some code that looks like this:\r\n\r\n```ts\r\nconst o2 = {\r\n    // ...\r\n    get p2(): number { return 0; },\r\n    set p2(value: string) {},\r\n};\r\n```\r\n\r\nBefore this PR, the type of `o2` was:\r\n\r\n`o2 : { p2: number; }`\r\n\r\nNow it is:\r\n\r\n`o2 : { get p2(): number; set p2(value: number); }`\r\n\r\nThe original (before this PR) was wrong. It didn't capture the divergent accessor. The version in this PR is wrong, too, in much the same way. But because the accessors are separate now, maybe it's a little more problematic for the setter's type be wrong. Let me know if you think this needs to be fixed as part of this PR.",
        "comments": 20
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-09T04:33:31Z",
        "closed_at": "2023-07-09T06:08:48Z",
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 140,
        "deletions": 61,
        "changed_files": 26,
        "created_at": "2023-07-08T02:01:16Z",
        "closed_at": null,
        "merged_at": null,
        "body": "I've changed the error message when a label is not found in scope. It's a pretty easy fix, as it just checks if there's a label behind a break/continue statement and if so, give the message that the just used label doesn't exist - all this is checked as soon as the checkGrammarBreakOrContinueStatement hits a function/class like \r\n\r\n\r\nFixes #30408\r\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 689,
        "deletions": 16,
        "changed_files": 16,
        "created_at": "2023-07-07T21:48:33Z",
        "closed_at": "2023-07-10T18:40:41Z",
        "merged_at": "2023-07-10T18:40:41Z",
        "body": "Fixes https://github.com/microsoft/TypeScript/issues/54858",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 129,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-07-07T19:59:27Z",
        "closed_at": "2023-07-10T21:22:30Z",
        "merged_at": "2023-07-10T21:22:30Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nTest case for #49974, but with `verbatimModuleSyntax`, not `importsNotUsedAsValues`.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 209,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2023-07-07T16:06:03Z",
        "closed_at": "2023-07-07T22:07:42Z",
        "merged_at": "2023-07-07T22:07:42Z",
        "body": "Fixes #54902",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 58,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-07-06T07:27:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/microsoft/TypeScript/issues/54886\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 338,
        "deletions": 8,
        "changed_files": 19,
        "created_at": "2023-07-06T06:37:35Z",
        "closed_at": "2023-07-21T16:16:31Z",
        "merged_at": "2023-07-21T16:16:31Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [x] #54859 There is an associated issue in the `Backlog` milestone (**required**) \r\n* [x] Code is up-to-date with the `main` branch\r\n* [x] You've successfully run `hereby runtests` locally\r\n* [x] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #54859\r\n\r\n`// @ts-ignore` and  `// @ts-expect-error` allow any characters after the pragma, which has encouraged people to use a colon between the pragma and any additional text. See the original issue #54859 for some examples.\r\n\r\nFor consistency, this PR makes `// @ts-check` and  `// @ts-nocheck` also allow a colon immediately after the pragma.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 48,
        "deletions": 0,
        "changed_files": 8,
        "created_at": "2023-07-05T21:49:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This has been a silly annoyance I've had for a long time; after years of JS, I have in my muscle memory the sequence `===`. All too often, I go to write `!==` and end up writing `!===` instead, which causes follow-on errors for a simple oops.\r\n\r\nThis PR directly handles that case, treating `!===` as `!==` with an error, thus preventing follow-on errors from happening. The extra `=` is (as far as I can tell) not orphaned in the tree or anything; the token simply has a slightly longer length:\r\n\r\n![image](https://github.com/microsoft/TypeScript/assets/5341706/ab1ef241-a264-4cc1-bb02-7244d4230a7c)\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 14910,
        "deletions": 54,
        "changed_files": 7328,
        "created_at": "2023-07-04T17:55:01Z",
        "closed_at": null,
        "merged_at": null,
        "body": "I find this header to be quite helpful when looking for the original filename, to quote @rbuckton's [comment](https://github.com/microsoft/TypeScript/pull/54557#issuecomment-1583157571):\r\n> I think we should have the path prefix in the test output in some way, since it helps you find the actual test when comparing diffs since our compiler and performance baselines are just dumped to a single folder. If we're going to make a sweeping change to our test outputs anyways, perhaps we should add a header line to the baseline to indicate the test source location relative to the repo.\r\n\r\nThis header was added (in its latest form) in [this commit](https://github.com/microsoft/TypeScript/pull/54557/commits/cd1691fe4a2d3a25523aafc09a0b992895b64a28) by @andrewbranch but only some baselines got it. I propose to add it to all of them.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 18,
        "changed_files": 4,
        "created_at": "2023-07-04T03:44:22Z",
        "closed_at": "2023-07-05T17:31:46Z",
        "merged_at": "2023-07-05T17:31:46Z",
        "body": "Similar to #52380 but for the new definition baselines; these baselines are also sensitive to the line number of `lib.d.ts` files, which is currently being hit in #54820 (which reformats `src/lib`) but could happen at any future time on a lib update too.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 106,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-07-03T22:24:47Z",
        "closed_at": "2023-07-19T16:54:25Z",
        "merged_at": "2023-07-19T16:54:25Z",
        "body": "fixes https://github.com/microsoft/TypeScript/issues/54809",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2023-07-03T20:59:37Z",
        "closed_at": "2023-07-10T14:06:33Z",
        "merged_at": "2023-07-10T14:06:33Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #54839\r\n\r\n### This PR is About...\r\nA module exported with `export { foo as default }` is not auto-imported when typing `foo`.\r\n\r\n### Details\r\n- Added `aliased as default` export to `getDefaultLikeExportNameFromDeclaration`, so that the name for `export as default` can be the declaration name and passed to `exportInfo` for completion.\r\n- Added test cases for `code fix` and `add import to existing`.\r\n- Modified comments for descriptive explanation.\r\n\r\n### Passed \u2705\r\n- Tests: `hereby runtests-parallel --light=false`\r\n- Lint: `hereby lint`",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 91,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2023-07-03T18:45:19Z",
        "closed_at": "2023-07-03T21:16:17Z",
        "merged_at": "2023-07-03T21:16:17Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #54330\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-07-03T16:44:04Z",
        "closed_at": "2023-07-03T22:02:13Z",
        "merged_at": "2023-07-03T22:02:13Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #54324\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 120,
        "deletions": 6,
        "changed_files": 8,
        "created_at": "2023-07-03T15:17:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "An experiment on how the variance measurement could be improved when intersections and unions are involved in situations like this.\r\n\r\nrelated to the issue found [here](https://github.com/microsoft/TypeScript/issues/53210#issuecomment-1468551245), cc @RyanCavanaugh ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 170,
        "deletions": 88,
        "changed_files": 10,
        "created_at": "2023-07-01T16:59:37Z",
        "closed_at": null,
        "merged_at": null,
        "body": "I think that for-in should have the same soundness guarantees as `Object.keys`. Since `Object.keys` always return `string[]`, the same should be true for the for-in initializer - it has to be a `string` and can't be of a more narrow type.",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 569,
        "deletions": 46,
        "changed_files": 47,
        "created_at": "2023-07-01T08:55:01Z",
        "closed_at": null,
        "merged_at": null,
        "body": "closes https://github.com/microsoft/TypeScript/issues/3715\r\n\r\nWhy I'm doing this:\r\n1. destructuring `string` is already supported in different contexts ([TS playground](https://www.typescriptlang.org/play?target=99#code/PTAEAEBcEMCcHMCmkBcpEGcB2iAekAoAYwHssNJQBtAMwEtYKAaUAOnZjoBsBdUAXlABySJkhCC9RoRCgAegH4CnLgVmKCxMhVABvUF0RZ4kABZpDxswEZQAXwHDRFCZZOnrasIqA)) so it should also be allowed here for consistency\r\n2. the current es5 output is **incorrect** and can lead to a runtime crash if somebody ignores the fact that typechecking fails and grabs the emitted output. The current output looks like this: `for (var first = (void 0)[0] in { test: 1 }) { }`. As we can see, we end up with `undefined[0]` here",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-01T08:16:42Z",
        "closed_at": "2023-07-05T18:52:03Z",
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 117,
        "deletions": 1,
        "changed_files": 8,
        "created_at": "2023-07-01T07:33:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #54755\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 262,
        "deletions": 0,
        "changed_files": 8,
        "created_at": "2023-06-30T20:35:17Z",
        "closed_at": "2023-07-06T20:23:07Z",
        "merged_at": "2023-07-06T20:23:07Z",
        "body": "3 open questions:\r\n\r\n1. Is this the right way to do it? It's similar to the way addPropertyToElementList.\r\n2. Is it worthwhile to fix emit for multiple overloads in a single comment? That style only works without `@template` and with explicit `@return` for each signature, so I believe it's rare. I left it unfixed.\r\n3. Is it worthwhile to fix indentation? I copied some text manipulation code from getTextOfNodeFromSourceText, but I don't want to put my new code there without evidence that it's useful for more than just my case.\r\n\r\nFixes #53350\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 213,
        "deletions": 12,
        "changed_files": 6,
        "created_at": "2023-06-30T18:59:57Z",
        "closed_at": "2023-07-26T14:02:41Z",
        "merged_at": "2023-07-26T14:02:41Z",
        "body": "Reverts #53059 and adds appropriate regression tests.\r\n\r\nFixes #54522.\r\nFixes #54837.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1523,
        "deletions": 1096,
        "changed_files": 155,
        "created_at": "2023-06-30T17:54:00Z",
        "closed_at": "2023-07-05T19:08:56Z",
        "merged_at": "2023-07-05T19:08:56Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nWill make the tests in #54734 easier to update (and review the changes).\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-06-30T16:43:18Z",
        "closed_at": "2023-06-30T19:06:11Z",
        "merged_at": "2023-06-30T19:06:11Z",
        "body": "Fixes #54818",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-06-30T16:28:58Z",
        "closed_at": "2023-06-30T17:13:22Z",
        "merged_at": "2023-06-30T17:13:22Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\nFixes #54674\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5431,
        "deletions": 5528,
        "changed_files": 1007,
        "created_at": "2023-06-30T11:03:04Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #45717\r\n\r\nThis PR includes and supersedes https://github.com/microsoft/TypeScript/pull/47126 (Because I don't have access to amend) \r\n\r\nThis PR aims to refine the output of the CLI error messages to ideally make them easier to read, the details and trade-offs which came up with this layout are covered in #45717. \r\n\r\nBefore:\r\n![image](https://github.com/microsoft/TypeScript/assets/49038/3b8512cc-2572-4dfa-a5a7-4d9582931361)\r\n\r\nAfter:\r\n![image](https://github.com/microsoft/TypeScript/assets/49038/04374e4e-ff54-4350-b80f-34a954601bc4)\r\n\r\n\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 1581,
        "changed_files": 3,
        "created_at": "2023-06-29T21:46:18Z",
        "closed_at": "2023-07-14T23:01:32Z",
        "merged_at": "2023-07-14T23:01:32Z",
        "body": "We use this plugin for only one rule, `no-extraneous-dependencies`, to verify that we don't import a package which isn't listed in our `package.json`.\r\n\r\nIn our repo, this plugin weighs in at 61 dependencies (out of 368, ~17%). Removing it speeds up `npm ci` by ~20%, and linting itself by roughly 2%.\r\n\r\nI think there's a cost/benefit ratio when it comes to this kind of thing. TypeScript is notoriously dependency-free so I think we're going to already take heed when reviewing any PR which introduces any new `import`/`require` (which, hasn't happened in a _long_ time), and we could revive it if this starts to not be true anymore.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 173,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-06-29T20:19:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #54655\r\nFixes #54805\r\n\r\nBoth of them are related to #53246 / #54538. Since there are no tests available for both PRs, I am uncertain whether it is necessary to exclude `ObjectFlags.CouldContainTypeVariablesComputed` / `ObjectFlags.CouldContainTypeVariables` for all anonymous type instantiations...\r\n\r\n/cc @weswigham @ahejlsberg ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 205,
        "deletions": 1,
        "changed_files": 7,
        "created_at": "2023-06-29T19:57:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #45896 - this keeps the formatting I recommended in that issue, but that doesn't have to be the answer:\r\n\r\n```\r\n// a is 31 chars long\r\nlet a = { b: { c: { e: { f: 123 } } } };\r\nlet b = \"hello\"\r\n\r\nb=a\r\n```\r\n\r\nGives:\r\n```\r\nType:\r\n{ b: { c: { e: { f: number; }; }; }; }\r\n\r\nis not assignable to type:\r\nstring\r\n```\r\n\r\nWhich is the simplest version of this PR via diagnostics, there's space here for a few answers which I can look at (having 3 diags, 1 with newlines for source, 1 with newlines for target, 1 with newlines for both) ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 172,
        "deletions": 36,
        "changed_files": 5,
        "created_at": "2023-06-29T19:00:06Z",
        "closed_at": "2023-07-07T17:50:39Z",
        "merged_at": "2023-07-07T17:50:39Z",
        "body": "<!--\r\nThank you for submitting a pull request!\r\n\r\nPlease verify that:\r\n* [ ] There is an associated issue in the `Backlog` milestone (**required**)\r\n* [ ] Code is up-to-date with the `main` branch\r\n* [ ] You've successfully run `hereby runtests` locally\r\n* [ ] There are new or updated unit tests validating the change\r\n\r\nRefer to CONTRIBUTING.MD for more details.\r\n  https://github.com/Microsoft/TypeScript/blob/main/CONTRIBUTING.md\r\n\r\n** Please don't send typo fixes! **\r\nPlease don't send a PR solely for the purpose of fixing a typo, unless that\r\ntypo truly hurts understanding of the text. Each PR represents work for the\r\nmaintainers, and that work should provide commensurate value.\r\n\r\nIf you're interested in sending a PR, the issue tracker has many issues marked `help wanted`.\r\n-->\r\n\r\n`ts.sys.readDirectory` is bananas \ud83c\udf4c. I thought this was going to be harder.\r\n\r\nFixes #53116\r\n",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 390,
        "deletions": 9,
        "changed_files": 7,
        "created_at": "2023-06-29T07:17:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #54784\r\n\r\nWe'd like to improve the behavior of error messages for `Union` types. Currently, the compiler does not detect that object literal `{a: ..., b: ...}` can't be assigned to either type in the union `A|B`:\r\n\r\n```typescript\r\ntype A = {a:number};\r\ntype B = {b:number};\r\n\r\nlet x: A|B  = {a:0, b:0};\r\n```\r\n\r\nThere is another #12936 which aims to solve the problem in general.\r\n\r\nPlease, do not merge yet.",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 28486,
        "deletions": 23296,
        "changed_files": 560,
        "created_at": "2023-06-28T22:47:15Z",
        "closed_at": "2023-08-16T21:26:38Z",
        "merged_at": "2023-08-16T21:26:38Z",
        "body": "Be aware that elements of this stack are generated (like my modules PR); I'm going to be (intermittently) force pushing to keep it up to date as effectively any change to `main` causes a conflict, so apologies on that front.\r\n\r\n---\r\n\r\nThis PR adds a [dprint](https://dprint.dev/) config to our repo. dprint (which is what `deno fmt` is running) is \"yet another\" code formatter in the same vein as prettier and others, with the main benefits of:\r\n\r\n- Fast enough to format `checker.ts`, even on save, without being annoying.\r\n- Configurable enough to format in this repo's \"unique\" code style (specifically, brace position after `if`, `else`, `catch`, etc).\r\n\r\nThis also enables us to remove effectively all eslint-based style checks, which is both a performance and ergonomics improvement. With all of the redundant style-related lint rules gone, linting the repo is now 7% faster!\r\n\r\nThe best way to view this PR is to look at the individual commits. This diff is large and makes GitHub mad, so consider viewing it github.dev or cloning it locally to play around. You'll want to install the dprint VS Code extension, which is automatically recommended per `.vscode/extensions.json`, and update `settings.json` to enable it.\r\n\r\n---\r\n\r\nOutstanding TODOs:\r\n\r\n- [x] Add CI stuff to verify that PRs are formatted.\r\n- [ ] Figure out if we need some sort of bot action to format people's PRs.\r\n- [ ] Figure out if we need to run dprint as part of a local test/lint run.\r\n\t- As far as I'm aware, `dprint check` prints a diff; a list of files or a silent mode would work a lot better here. But then again, people should just run `dprint` religiously, or better yet, on save. It's fast.\r\n- [x] Drop dprint sorting of imports in favor of simple-import-sort\r\n- [x] Make some final style decisions\r\n\t- [x] Decide on a line length. This PR uses an arbitrarily high value of 1000, but many on the team have expressed their desire to lower this to something that can actually fit vertically with two columns, e.g. 120.\r\n\t\t- Immediate feedback from everyone is to just keep this at 1000 and we can lower it later.\r\n\t- [x] Decide on an operator position. This PR uses \"maintain\" and allows them in either position. A majority of the code puts operators on the right like in:\r\n\t\t```ts\r\n\t\tif (\r\n\t\t    (someCondition && otherCondition) ||\r\n\t\t    somethingElse()\r\n\t\t)\r\n\t\t```\r\n        But I personally find it much, much easier to read:\r\n\t\t```ts\r\n\t\tif (\r\n\t\t    (someCondition && otherCondition)\r\n\t\t    || somethingElse()\r\n\t\t)\r\n\t\t```\r\n\t\t- Immediate feedback is to stick with \"maintain\" to allow either form, and we can tweak it later.\r\n\t- [x] Decide whether or not we are formatting JSON files.\r\n\t\t- This is tricky just from the PoV that dprint will remove trailing commas even in files that are JSONC. VS Code also (inconsistently) squiggles on these asking for them to be removed. But of course, like all trailing commas, they really make changing things easier.\r\n\t\t- This PR still has them formatted, but I may drop that for now.\r\n\t- [x] Decide whether or not we are formatting markdown files.\r\n\t\t- Probably not; the format used in our markdown files is unfortunately exactly opposite to that supported by dprint/prettier. (e.g., formatters use `-` for bullets, but we seem to have `*`)\r\n\t- [x] Decide whether or not we are formatting yaml files.\r\n\t\t- dprint does not support yaml files, however, it can defer to prettier and that works very well (I use this in all of my own personal projects).\r\n- [ ] Changes in dprint that block this PR, or require us to compromise, in order of importance:\r\n\t- [ ] Single line imports with a single named bindings (`import { join } from \"path\"`) are currently forced to be multiline. This is of my own doing, as the contribution I made to dprint to allow forcing multi-line imports (like we want, for good merges) was incomplete and lacks that special case.\r\n\t\t- https://github.com/dprint/dprint-plugin-typescript/pull/473\r\n\t- [ ] Single line functions / methods are reformatted.\r\n\t\t- https://github.com/dprint/dprint-plugin-typescript/issues/3\r\n\t\t- We have a few of these, but not many.\r\n\t- [ ] Aligned comments in objects/enums/interface/etc become unaligned\r\n\t\t- https://github.com/dprint/dprint-plugin-typescript/issues/410\r\n\t\t- It's possible that some of these cases in our repo would be better off as JSDoc, but there is precedent for this kind of behavior on the whole a la `gofmt`.\r\n\t- [ ] No support for ignoring a range of lines, only a specific node and children\r\n\t\t- https://github.com/dprint/dprint-plugin-typescript/issues/411\r\n\t\t- Only one of these in our repo, just for aesthetics. Ignored using a block in this PR.\r\n\t- [ ] Quote props \"consistently\" rather than preserve or only \"as needed\"\r\n\t\t- https://github.com/dprint/dprint-plugin-typescript/issues/542\r\n\t- [ ] Place semicolon on multi-line union/intersections on their own line\r\n\t\t- https://github.com/dprint/dprint-plugin-typescript/issues/547\r\n\t- [ ] Sort imports \"naturally\"\r\n\t\t- https://github.com/dprint/dprint-plugin-typescript/issues/548\r\n\t\t- Not a problem for us in general because we use the eslint plugin for this + grouping\r\n- [x] Changes in dprint I have yet to suggest upstream. I'm sure we'll think of more.\r\n\t- All reported.\r\n- [ ] Post-merge, we need to `.git-blame-ignore-revs` the squash commit. I do not want to use a regular merge like last time.\r\n- [x] Mega optional, but run dprint on generated `d.ts` files.\r\n\r\nFor the opinionated choices, I have a separate PR on my fork that shows my own preference; you can check out the individual commits there: https://github.com/jakebailey/TypeScript/pull/18\r\n\r\n@dsherret \u2764\ufe0f \r\n\r\nFixes #18340 (in a way)",
        "comments": 37
    }
]