[
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-10-18T08:14:29Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-10-18T06:42:00Z",
        "closed_at": "2023-10-18T10:01:04Z",
        "merged_at": "2023-10-18T10:01:04Z",
        "body": "Previous update: https://github.com/opencv/opencv/pull/24337",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 372,
        "deletions": 88,
        "changed_files": 9,
        "created_at": "2023-10-17T23:11:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The method attempts to use the corresponding instructions. Unless SIGILL signal is catched, OpenCV may use the corresponding instructions in the special branches invoked by the runtime dispatcher.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-10-17T06:48:10Z",
        "closed_at": "2023-10-17T08:27:22Z",
        "merged_at": "2023-10-17T08:27:22Z",
        "body": "Fixes https://github.com/opencv/opencv/issues/24408\r\nSanity data update: https://github.com/opencv/opencv_extra/pull/1108/\r\n\r\nUse downscale to ensure inter-area resize.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3686,
        "deletions": 2320,
        "changed_files": 219,
        "created_at": "2023-10-16T18:26:35Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Contrib: https://github.com/opencv/opencv_contrib/pull/3578\r\nExtra: https://github.com/opencv/opencv_extra/pull/1109\r\n\r\n#23109 from seanm:misc-warnings\r\n#23987 from dkurt:openvino_int8_backend\r\n#24233 from jvuillaumier:rotate_flip_hal_hooks\r\n#24234 from dkurt:distanceTransform_max_dist\r\n#24240 from asmorkalov:as/vl4_convert_rgb\r\n#24298 from WanliZhong:extend_perf_net_test\r\n#24315 from fengyuentau:gemm_fixes\r\n#24323 from georgthegreat:akaze-variadic\r\n#24324 from hanliutong:rewrite-fluid\r\n#24325 from hanliutong:rewrite\r\n#24333 from definitelyuncertain:CvtRGB2YUV422\r\n#24337 from mshabunin:bump-ade-012c\r\n#24341 from emmanuel-ferdman:wip\r\n#24342 from asmorkalov:as/java_test_status\r\n#24343 from mshabunin:fix-test-writes\r\n#24344 from asmorkalov:as/einsum_fallback_fix\r\n#24349 from AleksandrPanov:aruco_check_board_separation\r\n#24350 from dkurt:py_return_non_utf8_string\r\n#24351 from sergiomb2:master\r\n#24353 from alexlyulkov:al/fixed-cumsum-layer\r\n#24354 from asmorkalov:as/charuco_ub\r\n#24355 from AleksandrPanov:dynamic_window_in_aruco_cornerRefinement\r\n#24356 from VadimLevin:dev/vlevin/typing-re-export\r\n#24359 from asmorkalov:as/FastNeuralStyle_eccv16_tuning\r\n#24362 from dkurt:enable_ov_2023_tests\r\n#24368 from mshabunin:rvv-clang-17\r\n#24370 from LiuPeiqiCN:4.x\r\n#24386 from fengyuentau:fix_dtype_nary_eltwise\r\n#24401 from mshabunin:enable-riscv-ci\r\n\r\nPrevious \"Merge 4.x\": #24338",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-10-16T15:18:05Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\nHello everyone,\r\nI created this new version of the imread function and I think it can be very useful in several cases.\r\nIt is actually passed to it object on which you want to upload the image.\r\nThe advantages can be different like in case one needs to open several large images all the same in sequence.\r\none can use the same pointer and the system would not allocate memory each time ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2023-10-16T14:05:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Pertaining issue: #24413\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 109,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-10-16T13:17:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This provides a 10 to 20% speed-up.\r\n\r\nRelated perf test fix: https://github.com/opencv/opencv/pull/24417\r\nThis is a split of https://github.com/opencv/opencv/pull/23525 that will be updated to only deal with column merging.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 126,
        "deletions": 18,
        "changed_files": 14,
        "created_at": "2023-10-16T12:25:05Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Added a type inference to dnn similar to the shape inference:\r\n\r\n- Added getTypes method for layers that calculates layer outputs types and internals types from inputs types (Similar to getMemoryShapes). By default outputs and internals types = input[0] type\r\n- Added type inference pipeline similar to shape inference pipeline. LayersShapes struct (that is used in shape inference pipeline) now contains both shapes and types\r\n- All layers output blobs are now allocated using the calculated types from the type inference.\r\n\r\nI didn't add new types yet, so in this version the new calculated types should be equal to the current static types.\r\n\r\nSteps to add a new type:\r\n1. Modify layers that uses the new type\r\n2. Modify constants to properly handle the constants of new type\r\n3. Modify input layer\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 200,
        "deletions": 163,
        "changed_files": 7,
        "created_at": "2023-10-16T11:37:15Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Relates https://github.com/opencv/opencv/pull/24378#issuecomment-1756906570\r\n\r\nTODO:\r\n\r\n- [x] add fastNorm\r\n- [x] refactor layer norm with fastNorm\r\n- [x] refactor mvn with fastNorm\r\n- [ ] add onnx mvn in importer (in a new PR?)\r\n- [ ] refactor instance norm with fastNorm (in another PR https://github.com/opencv/opencv/pull/24378, need to merge this one first though)\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 67,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-10-14T12:48:04Z",
        "closed_at": null,
        "merged_at": null,
        "body": "(Edited after addressing Reviewers' comments.)\r\n\r\nAdd an argument to `imdecodemulti()` to enable optional selection of pages of multi-page images.\r\n\r\nBe default, all pages are decoded. If used, the additional argument may specify a continuous selection of pages to decode.\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 120,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-14T08:42:25Z",
        "closed_at": "2023-10-14T09:43:00Z",
        "merged_at": null,
        "body": "I think this problem is because of using @include to call the CPP code file. This has resulted in loss of indentation for every code that was included. **By the way this is common for every code snippet that appears in the documentation.**\r\n\r\nHence using code fences has solved this issue. with preserving the white spaces. But I still don't know if that results in increased run time. Please let me know. I am new here. Requesting for comments.\r\n\r\n![pr2-1](https://github.com/opencv/opencv/assets/147172285/2a4bc2b7-7e77-4bdc-a889-cbd5d692493c)\r\n![pr2-2](https://github.com/opencv/opencv/assets/147172285/114ed904-39f1-4720-bb8c-e47bbbb2c971)\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-10-14T07:33:50Z",
        "closed_at": "2023-10-14T07:42:39Z",
        "merged_at": null,
        "body": "I think this problem is because of using @include to call the cpp code file. this has resulted in loss of indentation for every code that was included. hence using code fences has solved this issue. with preserving the white spaces. but i still dont know if that results in increased run time. pls let me know. Im new here. requesting for comments.\r\n![desk-pull](https://github.com/opencv/opencv/assets/147172285/88c807c5-7833-4413-8baf-889a62b80728)\r\n\r\nthe preview can also be viewed at:\r\nhttps://vscode.dev/github/Dhanwanth1803/opencv/blob/docs-stitcherapiiew-0d4b1c28-af1f-4c7d-af27-db14ed925c9d\r\n\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-13T19:48:18Z",
        "closed_at": "2023-10-16T07:16:12Z",
        "merged_at": "2023-10-16T07:16:12Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 164,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-10-13T11:53:26Z",
        "closed_at": "2023-10-13T11:57:37Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-10-13T08:54:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "We write a sample code about transforming Pytorch fcnresnet101 to ONNX running on OpenCV.\r\n\r\nThe input source image was shooted by ourself.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 196,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-10-13T08:33:15Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This is a sample code for using opencv dnn interface to run ultralytics yolov8 model for object detection.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [] There is a reference to the original bug report and related work\r\n- [] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [] The feature is well documented and sample code can be built with the project CMake",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-10-13T03:12:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The original cv::Mat::ones and cv::Mat::eye functions only support one-channel type Mat initialization. For example, as for cv::Mat::ones, in case of multi-channel type, only the first channel will be initialized with 1's and the others will be set to 0's in case of multi-channel type. This goes against the common cognition of users and affects the consistency of the results they obtain and the expected results.\r\n\r\nThis commit makes cv::Mat::ones and cv::Mat::eye functions support multi-channel Mat initialization so that all channels of multi-channel type (CV_XXC2/CV_XXC3/CV_XXC4) can be initialized with a specified value.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [N/A] There is a reference to the original bug report and related work\r\n- [N/A] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [N/A] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2023-10-11T03:49:58Z",
        "closed_at": "2023-10-13T08:56:18Z",
        "merged_at": "2023-10-13T08:56:18Z",
        "body": "Resolves https://github.com/opencv/opencv/issues/24385\r\nMerge with https://github.com/opencv/opencv_extra/pull/1107\r\nRelates https://github.com/opencv/opencv/pull/24092#discussion_r1353964405\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-10T18:57:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Request for comments. This is my first PR. \r\n\r\nresolves https://github.com/opencv/opencv/issues/22747\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-10T12:10:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "CUDA source files are compiled single threaded. The option `--threads` was introduced in NVCC 11.2. The option specifies the number of threads to be used for compilation (see [NVIDIA NVCC Documentation](https://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html#threads-number-t)).\r\n\r\nWith CMake 3.12 the environment variable `CMAKE_BUILD_PARALLEL_LEVEL` was introduced (see [CMake Documentation](https://cmake.org/cmake/help/latest/envvar/CMAKE_BUILD_PARALLEL_LEVEL.html)). This variable is used to set the NVCC `--threads` option.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-10T12:04:09Z",
        "closed_at": "2023-10-10T12:08:35Z",
        "merged_at": null,
        "body": "CUDA source files are compiled single threaded. A option `--threads` was introduced in NVCC 11.2. The option specifies the number of threads to be used for compilation (see [NVIDIA NVCC Documentation](https://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html#threads-number-t)).\r\n\r\nWith CMake 3.12 the environment variable `CMAKE_BUILD_PARALLEL_LEVEL` was introduced (see [CMake Documentation](https://cmake.org/cmake/help/latest/envvar/CMAKE_BUILD_PARALLEL_LEVEL.html)). This variable is used to set the NVCC `--thread` option.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 769,
        "deletions": 8,
        "changed_files": 10,
        "created_at": "2023-10-10T06:48:22Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [X] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 197,
        "deletions": 40,
        "changed_files": 6,
        "created_at": "2023-10-09T12:12:55Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Resolves https://github.com/opencv/opencv/issues/24377\r\nRelates https://github.com/opencv/opencv/pull/24092#discussion_r1349841644\r\n\r\n| Perf | multi-thread | single-thread |\r\n| - | - | - |\r\n| x: [2, 64, 180, 240] | 3.95ms | 11.12ms |\r\n\r\nTodo:\r\n\r\n- [x] speed up by multi-threading\r\n- [x] add perf\r\n- [ ] add backends\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-08T18:56:30Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2023-10-08T00:52:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fix https://github.com/opencv/opencv/issues/24369\r\nrelated https://github.com/opencv/opencv/issues/23791\r\n\r\n1. This patch supports external protobuf v22 and later, it required abseil-cpp and c++17.\r\n    Even if the built-in protobuf is upgraded to v22 or later, \r\n    the dependency on abseil-cpp and the requirement for C++17 will continue.\r\n2. Some test for caffe required patched protobuf, so this patch disable them.\r\n\r\nThis patch is tested by following libraries.\r\n-  Protobuf:                    /usr/local/lib/libprotobuf.so (4.24.4)\r\n-  abseil-cpp:                YES (20230125)\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1615,
        "deletions": 1535,
        "changed_files": 40,
        "created_at": "2023-10-07T08:43:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "**Merge with contrib**: https://github.com/opencv/opencv_contrib/pull/3572\r\n\r\nThis patch cleans up the obsolete API of Universal Intrinsic to ensure that new code will not use them.\r\n\r\n### Obsolete API of Universal Intrinsic\r\nIn order to support scalable vector backends (such as RVV), we introduced some API changes to Universal Intrinsic last year: PR #22179. These changes resulted in following obsolete APIs: they only work with fixed-length backends and are incompatible with scalable vector backend.\r\n| Obsolete APIs                                | New APIs                                |\r\n| -------------------------------------------- | --------------------------------------- |\r\n| `vType::nlanes`                              | `VTraits<vType>::vlanes()`              |\r\n| `vType::nlanes` (constant)                   | `VTraits<vType>::max_nlanes`            |\r\n| `vType::lane_type `                          | `VTraits<vType>::lane_type`               |\r\n| overloaded operator (`vc += va + vb`)        | functions   ( `vc = v_add(va, vb, vc)`) |\r\n| `vObj.get0()`                                | `v_get(vObj)`                           |\r\n| `v_extract_n<vType::nlanes-1>(vObj)`         | `v_extract_highest(vObj)`               |\r\n| `v_broadcast_element<vType::nlanes-1>(vObj)` | `v_broadcast_highest(vObj)`             |\r\n\r\n\r\n\r\n### Clean up\r\nTo prevent misuse of obsolete APIs, we need to clean up these APIs on at least 1 platform so that the GitHub CI can help with prevent any new code that uses these obsolete APIs from being merged.\r\n\r\nThis is also the main content of this patch, which mainly includes two aspects:\r\n1. Rewrite all obsolete APIs to new APIs in the existing code\r\n    - Code block that can be apple to sacalabe platfrom: rewrite completed by PR #24325 and the mentioned series of \"Rewrite...\" patchs.\r\n    - Code block that only used for fixed platfrom: Although it cannot be enabled for sacalabe platform, it is still necessary to change to the new API to deprecate the obsolete API. Rewrite via this patch, commit  ec15cb951333808d0b6d7604902b0d1eaac48454\r\n2. Clean up the obsolete API on ARM Neon backend.\r\n    - For overloaded operator (`+`), these APIs have been removed. Attempts to use obsolete overloaded operators will encounter the compiler error `error: invalid operands to binary expression`\r\n    - For others, these APIs have been marked as `private`. Attempts to use obsolete API will encounter the compiler error `error: '...' is a private member of '...'`\r\n\r\nNote: this patch is waiting for #24324, for testing purposes, this patch contains 419060da846cb68139490f498a101994da033f92, which will be removed after #24324 is merged\r\n\r\nTODO: The Universal Intrinsic documentation needs to be modified, I am woring on it.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-07T03:24:43Z",
        "closed_at": "2023-10-12T18:57:41Z",
        "merged_at": "2023-10-12T18:57:41Z",
        "body": "Fix the issue of missing imshow icons when linking OpenCV as a static library(https://github.com/opencv/opencv-python/issues/585)\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-10-06T17:20:57Z",
        "closed_at": "2023-10-12T07:28:54Z",
        "merged_at": "2023-10-12T07:28:54Z",
        "body": "Fixes compilation with Clang 17 (tested) and GCC trunk (not tested).\r\nDefault rounding mode is chosen to be \"round to nearest up\". Only two intrinsics are actually used in OpenCV code: `vnclip` and `vnclipu`. Others were added for completeness. \r\n\r\n```\r\nforce_builders=Custom\r\nXbuild_image:Custom=riscv-gcc\r\nbuild_image:Custom=riscv-clang-rvv\r\nXbuild_image:Custom=riscv-clang-rvv-128\r\nXbuild_image:Custom=riscv-gcc-rvv-07\r\ntest_modules:Custom=core,imgproc,dnn\r\nbuildworker:Custom=linux-1\r\ntest_timeout:Custom=600\r\nbuild_contrib:Custom=OFF\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-10-06T06:20:27Z",
        "closed_at": "2023-10-18T06:21:40Z",
        "merged_at": "2023-10-18T06:21:40Z",
        "body": "When exclusive is false:\r\ndst[i] = dst[i-1] + src[i]\r\nWhen exclusive is true:\r\ndst[i] = dst[i-1] + src[i-1]\r\nSo CumSum layer can be inplace only when exclusive flag is false.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 106,
        "deletions": 49,
        "changed_files": 1,
        "created_at": "2023-10-05T17:57:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes https://github.com/opencv/opencv/issues/24366\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 343,
        "deletions": 81,
        "changed_files": 4,
        "created_at": "2023-10-05T13:33:39Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Allow raw encoded video streams (e.g. h264[5]) to be encapsulated by `cv::VideoWriter` to video containers (e.g. mp4/mkv).\r\n\r\nOperates in a similar way to https://github.com/opencv/opencv/pull/15290 where encapsulation is enabled by setting the `VideoWriterProperties::VIDEOWRITER_PROP_RAW_VIDEO` flag when constructing `cv::VideoWriter` e.g.\r\n```\r\nVideoWriter container(fileNameOut, api, fourcc, fps, { width, height }, { VideoWriterProperties::VIDEOWRITER_PROP_RAW_VIDEO, 1 });\r\n```\r\nand each raw encoded frame is passed as single row of a `CV_8U` `cv::Mat`.\r\n\r\nThe main reason for this PR is to allow `cudacodec::VideoWriter` to output its encoded streams to a suitable container, see https://github.com/opencv/opencv_contrib/pull/3569.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 4,
        "changed_files": 5,
        "created_at": "2023-10-05T09:53:16Z",
        "closed_at": "2023-10-05T12:51:54Z",
        "merged_at": "2023-10-05T12:51:54Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\n64 tests cases were enabled\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-04T13:19:55Z",
        "closed_at": "2023-10-13T07:29:41Z",
        "merged_at": "2023-10-13T07:29:41Z",
        "body": "In case of OpenCL failure the pipeline fails back to CPU and the test compares CPU vs CPU.  Looks like CPU implementation produce slightly different result and it does not fit into threshold:\r\n```\r\n[==========] Running 2 tests from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 2 tests from DNNTestNetwork\r\n[ RUN      ] DNNTestNetwork.FastNeuralStyle_eccv16/0, where GetParam() = OCV/OCL\r\n[ WARN:0@0.812] global ocl4dnn_conv_spatial.cpp:1923 loadTunedConfig OpenCV(ocl4dnn): consider to specify kernel configuration cache directory through OPENCV_OCL4DNN_CONFIG_PATH parameter.\r\nOpenCL program build log: dnn/dummy\r\nStatus -11: CL_BUILD_PROGRAM_FAILURE\r\n-cl-no-subgroup-ifp\r\nError in processing command line: Don't understand command line argument \"-cl-no-subgroup-ifp\"!\r\n/home/alexander/Projects/OpenCV/opencv-master/modules/dnn/test/test_common.impl.hpp:79: Failure\r\nExpected: (normInf) <= (lInf), actual: 0.00235748 vs 0.002\r\nSecond run  |ref| = 148.02413940429688\r\n[  FAILED  ] DNNTestNetwork.FastNeuralStyle_eccv16/0, where GetParam() = OCV/OCL (1934 ms)\r\n[ RUN      ] DNNTestNetwork.FastNeuralStyle_eccv16/1, where GetParam() = OCV/OCL_FP16\r\n[       OK ] DNNTestNetwork.FastNeuralStyle_eccv16/1 (1120 ms)\r\n[----------] 2 tests from DNNTestNetwork (3054 ms total)\r\n\r\n[----------] Global test environment tear-down\r\n[==========] 2 tests from 1 test case ran. (3055 ms total)\r\n[  PASSED  ] 1 test.\r\n[  FAILED  ] 1 test, listed below:\r\n[  FAILED  ] DNNTestNetwork.FastNeuralStyle_eccv16/0, where GetParam() = OCV/OCL\r\n```\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-10-03T20:58:06Z",
        "closed_at": "2023-10-05T06:37:08Z",
        "merged_at": "2023-10-05T06:37:08Z",
        "body": "fix https://github.com/opencv/opencv/issues/24121\r\n\r\nMove stb_truetype functions() into the cv namespace. This avoids name collisions with other applications and libraries that use stb_truetype.\r\n\r\n```\r\nkmtr@ubuntu:~/work/build5-main$ nm lib/libopencv_imgproc.so | c++filt | grep \"stbtt_\" | head -10\r\n000000000025b180 t cv::stbtt_GetWeight(cv::stbtt_fontinfo const*)\r\n0000000000259d40 t cv::stbtt_Rasterize(cv::stbtt__bitmap*, float, cv::stbtt_vertex*, int, float, float, float, float, int, int, int, void*)\r\n000000000025b080 t cv::stbtt_CreateFont(unsigned char const*, unsigned int, int)\r\n0000000000258a30 t cv::stbtt_GetGlyphBox(cv::stbtt_fontinfo const*, int, int*, int*, int*, int*)\r\n000000000025b120 t cv::stbtt_GetInstance(cv::stbtt_fontinfo const*, cv::stbtt_axisinfo*, int)\r\n000000000025b0f0 t cv::stbtt_ReleaseFont(cv::stbtt_fontinfo**)\r\n000000000025b370 t cv::stbtt_SetInstance(cv::stbtt_fontinfo*, int const*, int, int)\r\n00000000002547e0 t cv::stbtt_SetInstance(cv::stbtt_fontinfo*, int const*, int, int) [clone .part.0]\r\n0000000000258cb0 t cv::stbtt_GetGlyphShape(cv::stbtt_fontinfo const*, int, cv::stbtt_vertex**, int*, int*, int*, int*)\r\n0000000000258720 t cv::stbtt_FindGlyphIndex(cv::stbtt_fontinfo const*, int)\r\n```\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 24,
        "changed_files": 2,
        "created_at": "2023-10-03T11:22:11Z",
        "closed_at": "2023-10-04T06:14:52Z",
        "merged_at": "2023-10-04T06:14:52Z",
        "body": "Import Python `typing` module as `_typing` to avoid name clashes.\r\n\r\nresolves opencv/opencv-python#901\r\nresolves #24352\r\n\r\nChanges:\r\n\r\n```python\r\n# __init__.pyi\r\n\r\n# Import section update\r\n\r\nimport typing as _typing\r\n\r\n# Re-export section update\r\n\r\nfrom cv2 import typing as typing\r\n\r\n# Python `typing` module usage update\r\n\r\n@_typing.overload\r\ndef solveLP(Func: UMat, Constr: UMat, z: UMat | None = ...) -> tuple[int, UMat]: ...\r\n\r\n```\r\n\r\nTest file content:\r\n\r\n```python\r\nimport typing\r\nimport cv2\r\nimport cv2.typing\r\n\r\nif typing.TYPE_CHECKING:\r\n    reveal_type(cv2.typing.MatLike)\r\n    reveal_type(cv2.imdecode)\r\n    reveal_type(cv2.cuda.unregisterPageLocked)\r\n```\r\n\r\nCommand: `mypy test.py`\r\n\r\nOutput:\r\n\r\n```shell\r\ntest.py:6: note: Revealed type is \"typing._SpecialForm\"\r\ntest.py:7: note: Revealed type is \"Overload(def (buf: Union[cv2.mat_wrapper.Mat, numpy.ndarray[Any, numpy.dtype[numpy.generic]]], flags: builtins.int) -> Union[cv2.mat_wrapper.Mat, numpy.ndarray[Any, numpy.dtype[numpy.generic]]], def (buf: cv2.UMat, flags: builtins.int) -> Union[cv2.mat_wrapper.Mat, numpy.ndarray[Any, numpy.dtype[numpy.generic]]])\"\r\ntest.py:8: note: Revealed type is \"def (m: Union[cv2.mat_wrapper.Mat, numpy.ndarray[Any, numpy.dtype[numpy.generic]]])\"\r\n```\r\n\r\nFYI: @Avasam, @rassie\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-10-03T07:57:33Z",
        "closed_at": "2023-10-12T07:52:56Z",
        "merged_at": "2023-10-12T07:52:56Z",
        "body": "Fixes #24113\r\ncornerRefinementMethod=CORNER_REFINE_SUBPIX  does not work correctly with markers that are too close to each other.\r\n\r\nNow `cornerRefinementWinSize` is recalculated for each marker as:\r\n`cornerRefinementWinSize = min(cornerRefinementWinSize, averageArucoPinSize*relativeCornerRefinmentWinSize)\r\n`\r\nrelativeCornerRefinmentWinSize=0.3 by default and could be changed\r\n\r\n![image](https://github.com/opencv/opencv/assets/22337800/1e3d3b59-d20c-4a9a-b656-1688575ef9bf)\r\n\r\nAlso the method has been tested by the [benchmark](https://github.com/opencv/opencv_benchmarks/pull/7), 289 aruco boards like this were tested:\r\n\r\n![perspective_none_gaussNoise_33](https://github.com/opencv/opencv/assets/22337800/b625ddcb-549a-4a5b-a813-c0c61f71d9f0)\r\n\r\ncommand line to generate and run (also need set cornerRefinementMethod: 1 and cornerRefinementWinSize: 10 in aruco_params.yml):\r\n\r\n```\r\nobjdetect_benchmark.py --marker_length_rate=0.1 --board_x=6 -p=res --rel_center_y=0.53 --rel_center_x=0.56 --synthetic_object=aruco\r\n```\r\n\r\ntested with cornerRefinementWinSize=10\r\nerror in pixels with **old** cornerRefinementMethod:\r\n![image](https://github.com/opencv/opencv/assets/22337800/f20a4c73-854e-4fa1-8704-8d3ecf0465b2)\r\nmean detected error in pixels 5.912010732442689\r\n\r\nerror in pixels with **new** cornerRefinementMethod:\r\n![image](https://github.com/opencv/opencv/assets/22337800/f55c26e0-0b7c-4c5d-b43b-3fd777cd1b6e)\r\nmean detected error in pixels 0.991642490414958\r\n\r\n\r\ncommand line to show histogram:\r\n```\r\n--configuration=show -d1=old.json --marker_length_rate=0.1 --board_x=6 -p=res --rel_center_y=0.53 --rel_center_x=0.56 --synthetic_object=aruco\r\n```\r\n\r\n[new.json.txt](https://github.com/opencv/opencv/files/12825866/new.json.txt)\r\n[old.json.txt](https://github.com/opencv/opencv/files/12825867/old.json.txt)\r\n\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-10-03T06:40:41Z",
        "closed_at": "2023-10-03T14:45:43Z",
        "merged_at": "2023-10-03T14:45:43Z",
        "body": "Address https://github.com/opencv/opencv/commit/60ae97314236c5c6d96d15a052a6dc2a1fdc3846#r127863372\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 57,
        "changed_files": 5,
        "created_at": "2023-10-03T03:46:03Z",
        "closed_at": "2023-10-03T10:58:25Z",
        "merged_at": "2023-10-03T10:58:25Z",
        "body": "Fixes #20110 \r\n\r\nThe algorithm had several errors, so I rewrote it.\r\nAlso the layer didn't work with non constant axis tensor. Fixed it.\r\nEnabled CumSum layer tests from ONNX conformance.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-02T14:06:56Z",
        "closed_at": "2023-10-03T14:44:42Z",
        "merged_at": "2023-10-03T14:44:42Z",
        "body": "so we don't use numpy.distutils to get includes dirs of python-numpy\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 123,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-10-02T12:41:01Z",
        "closed_at": "2023-10-12T14:39:58Z",
        "merged_at": "2023-10-12T14:39:58Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\n**Merge with extra**: https://github.com/opencv/opencv_extra/pull/1105\r\n\r\nresolves https://github.com/opencv/opencv/issues/23728\r\n\r\nThis is first PR in a series. Here we just return a raw Unicode. Later I will try expand QR codes decoding methods to use ECI assignment number and return a string with proper encoding, not only UTF-8 or raw unicode.\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-10-02T07:57:30Z",
        "closed_at": "2023-10-03T07:00:04Z",
        "merged_at": "2023-10-03T07:00:04Z",
        "body": "throw a warning message if the separators in the aruco/charuco boards are too small (less than 0.7 pin of ArUco marker):\r\n\r\n```\r\nimport cv2 as cv\r\n\r\nboardSize = (5, 5)\r\ndict = cv.aruco.getPredefinedDictionary(cv.aruco.DICT_4X4_50)\r\n\r\ncharucoBoard = cv.aruco.CharucoBoard(boardSize, 100., 85., dict)\r\narucoBoard = cv.aruco.GridBoard(boardSize, 100., 10., dict)\r\n```\r\n\r\n```\r\n[ WARN:0@0.010] global aruco_board.cpp:555 cv::aruco::CharucoBoard::CharucoBoard marker separation:7.5 is less than 0.7 pin of ArUco marker:9.91667, too small separators can degrade the quality of detection, increase squareLength or decrease markerLength\r\n\r\n[ WARN:0@0.010] global aruco_board.cpp:258 cv::aruco::GridBoard::GridBoard marker separation:10 is less than 0.7 pin of ArUco marker:11.6667, too small separators can degrade the quality of detection, increase markerSeparation or decrease markerLength\r\n```\r\n\r\n\r\n\r\n```\r\npython gen_pattern.py -o charuco_board.svg --rows 7 --columns 5 -T charuco_board --square_size 30 --marker_size 26 -f DICT_5X5_100.json.gz\r\nmarker separation:2.0 is less than 0.7 pin of ArUco marker:2.6, too small separators can degrade the quality of detection, increase square_size or decrease marker_size\r\n```\r\n![image](https://github.com/opencv/opencv/assets/22337800/df1c8beb-97ad-439d-8aec-29967c3227f9)\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-29T12:54:33Z",
        "closed_at": "2023-09-29T16:48:51Z",
        "merged_at": "2023-09-29T16:48:51Z",
        "body": "Fixes: https://github.com/opencv/opencv/issues/24311\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 40,
        "changed_files": 3,
        "created_at": "2023-09-29T12:24:15Z",
        "closed_at": "2023-10-03T13:34:25Z",
        "merged_at": "2023-10-03T13:34:25Z",
        "body": "Several tests were writing files in the current work directory and did not clean up after test. Moved all temporary files to the `/tmp` dir and added a cleanup code.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-09-29T10:53:29Z",
        "closed_at": "2023-10-02T06:17:11Z",
        "merged_at": "2023-10-02T06:17:11Z",
        "body": "Fixes CI behaviour. Issue example: https://github.com/opencv/opencv/pull/24323\r\nTemporaty disabled Java test because of https://github.com/opencv/opencv/issues/24348.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-29T09:32:51Z",
        "closed_at": "2023-09-29T11:35:19Z",
        "merged_at": "2023-09-29T11:35:19Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n\r\n**PR Summary**\r\nPR updated the location of the `samples/dnn/download_models.py` file.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-28T17:40:43Z",
        "closed_at": "2023-09-29T12:54:25Z",
        "merged_at": null,
        "body": "This PR is to solve #24311 issue related to Einsum OpenCL inference \r\n\r\nCurrently only print statements have been added to catch type problem in build bot. \r\n\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14804,
        "deletions": 7262,
        "changed_files": 202,
        "created_at": "2023-09-28T13:46:40Z",
        "closed_at": "2023-10-05T06:34:43Z",
        "merged_at": "2023-10-05T06:34:43Z",
        "body": "OpenCV Contrib: https://github.com/opencv/opencv_contrib/pull/3566\r\nOpenCV Extra: https://github.com/opencv/opencv_extra/pull/1102\r\n\r\n#23897 from fengyuentau:refactor_fc\r\n#24037 from Abdurrahheem:ash/dev_einsum\r\n#24058 from hanliutong:rewrite-imgporc\r\n#24074 from Kumataro/fix24057\r\n#24126 from AleksandrPanov:fix_charuco_checkBoard\r\n#24131 from cudawarped:cuda_add_default_ptx\r\n#24132 from hanliutong:rewrite-imgproc2\r\n#24166 from hanliutong:rewrite-remaining\r\n#24201 from lpylpy0514:4.x\r\n#24239 from asmorkalov:as/msmf_returned_fourcc\r\n#24247 from AleksandrPanov:fix_drawDetectedCornersCharuco_type_error\r\n#24250 from dkurt:ts_fixture_constructor_skip_2\r\n#24260 from vrabaud:ubsan\r\n#24263 from georgthegreat:msan-include\r\n#24266 from alexlyulkov:al/tf-argmax-default-dim\r\n#24269 from FlyinTeller:patch-1\r\n#24270 from dkurt:fix_24256\r\n#24274 from vrabaud:webp_1.3.2\r\n#24275 from alexlyulkov:al/fix-tf-graph-simplifier\r\n#24278 from georgthegreat:compat-fixes\r\n#24280 from casualwind:parallel_opt\r\n#24283 from fengyuentau:halide_tests\r\n#24286 from ashadrina:intel_icx_compiler_support\r\n#24288 from tailsu:sd/emscripten-3.1.45-fixes\r\n#24291 from visitorckw:fix-memory-leak\r\n#24295 from fengyuentau:add_onnx_expand\r\n#24301 from hanliutong:rewrite-stereo-sift\r\n#24302 from dkurt:ts_setup_skip\r\n#24303 from asmorkalov:as/vittack_warning_fix\r\n#24305 from hanliutong:toolchain\r\n#24309 from dkurt:gemm_ov_hotfix\r\n#24316 from alexlyulkov:al/fix-caffe-read-segfault\r\n#24329 from asmorkalov/as/openvino_ci\r\n#24334 from fengyuentau:fix_24319\r\n\r\nTemporary disabled new test Charuco.testSeveralBoardsWithCustomIds. PR [#23473](https://github.com/opencv/opencv/pull/23473) changed output shape for detector corners. More detailed investigation is required.\r\n\r\nPrevious \"Merge 4.x: #24254",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-28T09:46:11Z",
        "closed_at": "2023-10-04T11:59:17Z",
        "merged_at": "2023-10-04T11:59:17Z",
        "body": "New patch release is available: https://github.com/opencv/ade/releases/tag/v0.1.2c",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-28T06:46:23Z",
        "closed_at": "2023-09-28T11:15:25Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-09-28T04:05:27Z",
        "closed_at": "2023-09-28T10:08:27Z",
        "merged_at": "2023-09-28T10:08:27Z",
        "body": "Resolves https://github.com/opencv/opencv/issues/24319\r\nMerge with https://github.com/opencv/opencv_extra/pull/1101\r\n\r\n## Problem\r\n\r\nThe model in the issue above has several Gather operators which have shared constant `indices` (same name, same category `Constant`, same type, same value). The following piece of code in onnx importer adds an attribute `real_ndims` if `indices` is not a layer\r\n\r\nhttps://github.com/opencv/opencv/blob/7b399c4248fd6a399f2f5a731864448883fdd364/modules/dnn/src/onnx/onnx_importer.cpp#L2506-L2531\r\n\r\n, but the following code converts the constant `indices` into a `Const` layer:\r\n\r\nhttps://github.com/opencv/opencv/blob/7b399c4248fd6a399f2f5a731864448883fdd364/modules/dnn/src/onnx/onnx_importer.cpp#L2533-L2551\r\n\r\n, which makes problems for later Gather operators who have shared `indices`. For later Gather who have shared `indices`, `indices` have been converted to a `Const` layer in dnn, leading to `real_ndims` non-set.\r\n\r\n---\r\n\r\n**Similar problems may happen on other operators as well. Need further investigation.**\r\n\r\n\u00a0\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 553,
        "deletions": 8,
        "changed_files": 13,
        "created_at": "2023-09-27T23:07:01Z",
        "closed_at": "2023-10-12T07:18:24Z",
        "merged_at": "2023-10-12T07:18:24Z",
        "body": "Related PR for extra: https://github.com/opencv/opencv_extra/pull/1104\r\n\r\nHi,\r\n\r\nThis patch provides CPU and OpenCL implementations of color conversions from RGB/BGR to YUV422 family (such as UYVY and YUY2).\r\n\r\nThese features would come in useful for enabling standard RGB images to be supplied as input to algorithms or networks that make use of images in YUV422 format directly (for example, on resource constrained devices working with camera images captured in YUV422).\r\n\r\nThe code, tests and perf tests are all written following the existing pattern. There is also an example `bin/example_cpp_cvtColor_RGB2YUV422` that loads an image from disk, converts it from BGR to UYVY and then back to BGR, and displays the result as a visual check that the conversion works.\r\n\r\nThe OpenCL performance for the forward conversion implemented here is the same as the existing backward conversion on my hardware. The CPU implementation, unfortunately, isn't very optimized as I am not yet familiar with the SIMD code.\r\n\r\nPlease let me know if I need to fix something or can make other modifications.\r\n\r\nThanks!\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Win64 OpenCL\r\n```\r\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-27T10:49:57Z",
        "closed_at": "2023-09-27T13:16:19Z",
        "merged_at": "2023-09-27T13:16:19Z",
        "body": "Pipeline: https://github.com/opencv/ci-gha-workflow/pull/109\r\nDockerfile: https://github.com/opencv-infrastructure/opencv-gha-dockerfile/pull/19\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2023-09-27T09:15:00Z",
        "closed_at": "2023-09-27T12:16:20Z",
        "merged_at": "2023-09-27T12:16:20Z",
        "body": "- [ ] update version.js on docs.opencv.org\r\n\r\nPrevious version bump: https://github.com/opencv/opencv/pull/23833",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 7,
        "changed_files": 6,
        "created_at": "2023-09-27T07:55:50Z",
        "closed_at": "2023-09-27T09:13:36Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 52,
        "deletions": 15,
        "changed_files": 2,
        "created_at": "2023-09-27T07:16:32Z",
        "closed_at": null,
        "merged_at": null,
        "body": "\u2026 and bind it via scope everywhere needed.\r\n\r\nChanging it from Context to OpenCLExecutionContext poses no problem, because everywhere I need the Context I can get it from the OpenCLExecutionContext.\r\n\r\nThe pertaining issue: #20486\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 345,
        "deletions": 328,
        "changed_files": 12,
        "created_at": "2023-09-27T06:51:31Z",
        "closed_at": "2023-10-05T14:57:25Z",
        "merged_at": "2023-10-05T14:57:25Z",
        "body": "The goal of this series of PRs is to modify the SIMD code blocks guarded by CV_SIMD macro: rewrite them by using the new Universal Intrinsic API.\r\n\r\nThe series of PRs is listed below:\r\n#23885 First patch, an example\r\n#23980 Core module\r\n#24058 ImgProc module, part 1\r\n#24132 ImgProc module, part 2\r\n#24166 ImgProc module, part 3\r\n#24301 Features2d and calib3d module\r\n#24324 Gapi module\r\n\r\nThis patch (hopefully) is the last one in the series. \r\n\r\nThis patch mainly involves 3 parts\r\n1. Add some modifications related to float (CV_SIMD_64F)\r\n2. Use `#if (CV_SIMD || CV_SIMD_SCALABLE)` instead of `#if CV_SIMD || CV_SIMD_SCALABLE`, \r\n    then we can get the `CV_SIMD` module that is not enabled for `CV_SIMD_SCALABLE` by looking for `if CV_SIMD`\r\n3. Summary of `CV_SIMD` blocks that remains unmodified: Updated comments\r\n    - Some blocks will cause test fail when enable for RVV, marked as `TODO: enable for CV_SIMD_SCALABLE, ....`\r\n    - Some blocks can not be rewrited directly. (Not commented in the source code, just listed here)\r\n      - ./modules/core/src/mathfuncs_core.simd.hpp (Vector type wrapped in class/struct)\r\n      - ./modules/imgproc/src/color_lab.cpp (Array of vector type)\r\n      - ./modules/imgproc/src/color_rgb.simd.hpp (Array of vector type)\r\n      - ./modules/imgproc/src/sumpixels.simd.hpp (fixed length algorithm, strongly ralated with `CV_SIMD_WIDTH`)\r\n      These algorithms will need to be redesigned to accommodate scalable backends.\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 352,
        "deletions": 375,
        "changed_files": 5,
        "created_at": "2023-09-27T05:53:20Z",
        "closed_at": "2023-10-13T07:25:07Z",
        "merged_at": "2023-10-13T07:25:07Z",
        "body": "The goal of this series of PRs is to modify the SIMD code blocks guarded by CV_SIMD macro: rewrite them by using the new Universal Intrinsic API.\r\n\r\nThis is the modification to the gapi module, especially the fluid part.\r\n\r\nAll modifications to the gapi module have been completed, but this PR is marked as draft because many use cases failed in the test, and I am looking for the reason.\r\n\r\n<details>\r\n\r\n<summary>FAILED  76 tests on RVV QEMU, listed below:</summary>\r\n\r\n```\r\n\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/2, where GetParam() = (8UC3, 1280x720, SAME_TYPE, 0x4e534a, DIV, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/3, where GetParam() = (8UC3, 1280x720, SAME_TYPE, 0x4e534a, DIV, true, 1, true)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/6, where GetParam() = (8UC3, 1280x720, SAME_TYPE, 0x4e534a, MUL, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/7, where GetParam() = (8UC3, 1280x720, SAME_TYPE, 0x4e534a, MUL, true, 1, true) \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/10, where GetParam() = (8UC3, 1280x720, 8UC1, 0x4e534a, DIV, true, 1, false)    \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/11, where GetParam() = (8UC3, 1280x720, 8UC1, 0x4e534a, DIV, true, 1, true)     \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/14, where GetParam() = (8UC3, 1280x720, 8UC1, 0x4e534a, MUL, true, 1, false)    \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/15, where GetParam() = (8UC3, 1280x720, 8UC1, 0x4e534a, MUL, true, 1, true)     \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/18, where GetParam() = (8UC3, 1280x720, 32FC1, 0x4e534a, DIV, true, 1, false)   \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/19, where GetParam() = (8UC3, 1280x720, 32FC1, 0x4e534a, DIV, true, 1, true)    \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/22, where GetParam() = (8UC3, 1280x720, 32FC1, 0x4e534a, MUL, true, 1, false)   \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/23, where GetParam() = (8UC3, 1280x720, 32FC1, 0x4e534a, MUL, true, 1, true)    \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/26, where GetParam() = (8UC3, 128x128, SAME_TYPE, 0x4e534a, DIV, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/27, where GetParam() = (8UC3, 128x128, SAME_TYPE, 0x4e534a, DIV, true, 1, true) \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/30, where GetParam() = (8UC3, 128x128, SAME_TYPE, 0x4e534a, MUL, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/31, where GetParam() = (8UC3, 128x128, SAME_TYPE, 0x4e534a, MUL, true, 1, true) \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/34, where GetParam() = (8UC3, 128x128, 8UC1, 0x4e534a, DIV, true, 1, false)     \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/35, where GetParam() = (8UC3, 128x128, 8UC1, 0x4e534a, DIV, true, 1, true)      \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/38, where GetParam() = (8UC3, 128x128, 8UC1, 0x4e534a, MUL, true, 1, false)     \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/39, where GetParam() = (8UC3, 128x128, 8UC1, 0x4e534a, MUL, true, 1, true)      \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/42, where GetParam() = (8UC3, 128x128, 32FC1, 0x4e534a, DIV, true, 1, false)    \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/43, where GetParam() = (8UC3, 128x128, 32FC1, 0x4e534a, DIV, true, 1, true)     \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/46, where GetParam() = (8UC3, 128x128, 32FC1, 0x4e534a, MUL, true, 1, false)    \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/47, where GetParam() = (8UC3, 128x128, 32FC1, 0x4e534a, MUL, true, 1, true)     \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/50, where GetParam() = (8UC1, 1280x720, SAME_TYPE, 0x4e534a, DIV, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/74, where GetParam() = (8UC1, 128x128, SAME_TYPE, 0x4e534a, DIV, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/82, where GetParam() = (8UC1, 128x128, 8UC1, 0x4e534a, DIV, true, 1, false)     \r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/123, where GetParam() = (16SC1, 128x128, SAME_TYPE, 0x4e534a, DIV, true, 1, true)\r\n[  FAILED  ] CompareTestFluid/CmpTest.AccuracyTest/37, where GetParam() = (32FC1, 1280x720, 8UC1, 0x4e8af6, CMP_GE, false, AbsExact())       \r\n[  FAILED  ] CompareTestFluid/CmpTest.AccuracyTest/38, where GetParam() = (32FC1, 1280x720, 8UC1, 0x4e8af6, CMP_NE, false, AbsExact())       \r\n[  FAILED  ] CompareTestFluid/CmpTest.AccuracyTest/39, where GetParam() = (32FC1, 1280x720, 8UC1, 0x4e8af6, CMP_GT, false, AbsExact())       \r\n[  FAILED  ] CompareTestFluid/CmpTest.AccuracyTest/40, where GetParam() = (32FC1, 1280x720, 8UC1, 0x4e8af6, CMP_LT, false, AbsExact())       \r\n[  FAILED  ] CompareTestFluid/CmpTest.AccuracyTest/41, where GetParam() = (32FC1, 1280x720, 8UC1, 0x4e8af6, CMP_LE, false, AbsExact())       \r\n[  FAILED  ] CompareTestFluid/CmpTest.AccuracyTest/43, where GetParam() = (32FC1, 128x128, 8UC1, 0x4e8af6, CMP_GE, false, AbsExact())        \r\n[  FAILED  ] CompareTestFluid/CmpTest.AccuracyTest/44, where GetParam() = (32FC1, 128x128, 8UC1, 0x4e8af6, CMP_NE, false, AbsExact())        \r\n[  FAILED  ] CompareTestFluid/CmpTest.AccuracyTest/45, where GetParam() = (32FC1, 128x128, 8UC1, 0x4e8af6, CMP_GT, false, AbsExact())        \r\n[  FAILED  ] CompareTestFluid/CmpTest.AccuracyTest/46, where GetParam() = (32FC1, 128x128, 8UC1, 0x4e8af6, CMP_LT, false, AbsExact())        \r\n[  FAILED  ] CompareTestFluid/CmpTest.AccuracyTest/47, where GetParam() = (32FC1, 128x128, 8UC1, 0x4e8af6, CMP_LE, false, AbsExact())        \r\n[  FAILED  ] CompareTestFluidScalar/CmpTest.AccuracyTest/38, where GetParam() = (32FC1, 1280x720, 8UC1, 0x4e9126, CMP_NE, true, AbsSimilarPoints(1, 0.01))\r\n[  FAILED  ] CompareTestFluidScalar/CmpTest.AccuracyTest/39, where GetParam() = (32FC1, 1280x720, 8UC1, 0x4e9126, CMP_GT, true, AbsSimilarPoints(1, 0.01))\r\n[  FAILED  ] CompareTestFluidScalar/CmpTest.AccuracyTest/43, where GetParam() = (32FC1, 128x128, 8UC1, 0x4e9126, CMP_GE, true, AbsSimilarPoints(1, 0.01))\r\n[  FAILED  ] CompareTestFluidScalar/CmpTest.AccuracyTest/44, where GetParam() = (32FC1, 128x128, 8UC1, 0x4e9126, CMP_NE, true, AbsSimilarPoints(1, 0.01))\r\n[  FAILED  ] CompareTestFluidScalar/CmpTest.AccuracyTest/45, where GetParam() = (32FC1, 128x128, 8UC1, 0x4e9126, CMP_GT, true, AbsSimilarPoints(1, 0.01))\r\n[  FAILED  ] AbsDiffCTestFluid/AbsDiffCTest.AccuracyTest/12, where GetParam() = (8UC3, 1280x720, SAME_TYPE, 0x4e733e)\r\n[  FAILED  ] AbsDiffCTestFluid/AbsDiffCTest.AccuracyTest/13, where GetParam() = (8UC3, 128x128, SAME_TYPE, 0x4e733e)[  FAILED  ] AbsDiffCTestFluid/AbsDiffCTest.AccuracyTest/14, where GetParam() = (16UC3, 1280x720, SAME_TYPE, 0x4e733e)\r\n[  FAILED  ] AbsDiffCTestFluid/AbsDiffCTest.AccuracyTest/15, where GetParam() = (16UC3, 128x128, SAME_TYPE, 0x4e733e)\r\n[  FAILED  ] AbsDiffCTestFluid/AbsDiffCTest.AccuracyTest/16, where GetParam() = (16SC3, 1280x720, SAME_TYPE, 0x4e733e)\r\n[  FAILED  ] AbsDiffCTestFluid/AbsDiffCTest.AccuracyTest/17, where GetParam() = (16SC3, 128x128, SAME_TYPE, 0x4e733e)\r\n[  FAILED  ] MathOperatorArithmeticTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/3, where GetParam() = (8UC1, 1280x720, SAME_TYPE, 0x59fa46, AbsExact(), DIV)\r\n[  FAILED  ] MathOperatorArithmeticTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/7, where GetParam() = (8UC1, 1280x720, SAME_TYPE, 0x59fa46, AbsExact(), DIVR)\r\n[  FAILED  ] MathOperatorArithmeticTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/11, where GetParam() = (8UC1, 128x128, SAME_TYPE, 0x59fa46, AbsExact(), DIV)\r\n[  FAILED  ] MathOperatorArithmeticTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/15, where GetParam() = (8UC1, 128x128, SAME_TYPE, 0x59fa46, AbsExact(), DIVR)\r\n[  FAILED  ] MathOperatorArithmeticTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/23, where GetParam() = (16SC1, 1280x720, SAME_TYPE, 0x59fa46, AbsExact(), DIVR)\r\n[  FAILED  ] MathOperatorCompareTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/48, where GetParam() = (32FC1, 1280x720, SAME_TYPE, 0x5a0188, AbsSimilarPoints(1, 0.01), GT)\r\n[  FAILED  ] MathOperatorCompareTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/50, where GetParam() = (32FC1, 1280x720, SAME_TYPE, 0x5a0188, AbsSimilarPoints(1, 0.01), GE)\r\n[  FAILED  ] MathOperatorCompareTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/53, where GetParam() = (32FC1, 1280x720, SAME_TYPE, 0x5a0188, AbsSimilarPoints(1, 0.01), NE)\r\n[  FAILED  ] MathOperatorCompareTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/55, where GetParam() = (32FC1, 1280x720, SAME_TYPE, 0x5a0188, AbsSimilarPoints(1, 0.01), LTR)\r\n[  FAILED  ] MathOperatorCompareTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/57, where GetParam() = (32FC1, 1280x720, SAME_TYPE, 0x5a0188, AbsSimilarPoints(1, 0.01), LER)\r\n[  FAILED  ] MathOperatorCompareTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/59, where GetParam() = (32FC1, 1280x720, SAME_TYPE, 0x5a0188, AbsSimilarPoints(1, 0.01), NER)\r\n[  FAILED  ] MathOperatorCompareTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/60, where GetParam() = (32FC1, 128x128, SAME_TYPE, 0x5a0188, AbsSimilarPoints(1, 0.01), GT)\r\n[  FAILED  ] MathOperatorCompareTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/62, where GetParam() = (32FC1, 128x128, SAME_TYPE, 0x5a0188, AbsSimilarPoints(1, 0.01), GE)\r\n[  FAILED  ] MathOperatorCompareTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/65, where GetParam() = (32FC1, 128x128, SAME_TYPE, 0x5a0188, AbsSimilarPoints(1, 0.01), NE)\r\n[  FAILED  ] MathOperatorCompareTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/67, where GetParam() = (32FC1, 128x128, SAME_TYPE, 0x5a0188, AbsSimilarPoints(1, 0.01), LTR)\r\n[  FAILED  ] MathOperatorCompareTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/69, where GetParam() = (32FC1, 128x128, SAME_TYPE, 0x5a0188, AbsSimilarPoints(1, 0.01), LER)\r\n[  FAILED  ] MathOperatorCompareTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/71, where GetParam() = (32FC1, 128x128, SAME_TYPE, 0x5a0188, AbsSimilarPoints(1, 0.01), NER)\r\n[  FAILED  ] MathOperatorTestFluid/MathOperatorMatMatTest.OperatorAccuracyTest/39, where GetParam() = (32FC1, 1280x720, SAME_TYPE, 0x59f3dc, AbsExact(), GT)\r\n[  FAILED  ] MathOperatorTestFluid/MathOperatorMatMatTest.OperatorAccuracyTest/40, where GetParam() = (32FC1, 1280x720, SAME_TYPE, 0x59f3dc, AbsExact(), LT)\r\n[  FAILED  ] MathOperatorTestFluid/MathOperatorMatMatTest.OperatorAccuracyTest/41, where GetParam() = (32FC1, 1280x720, SAME_TYPE, 0x59f3dc, AbsExact(), GE)\r\n[  FAILED  ] MathOperatorTestFluid/MathOperatorMatMatTest.OperatorAccuracyTest/42, where GetParam() = (32FC1, 1280x720, SAME_TYPE, 0x59f3dc, AbsExact(), LE)\r\n[  FAILED  ] MathOperatorTestFluid/MathOperatorMatMatTest.OperatorAccuracyTest/44, where GetParam() = (32FC1, 1280x720, SAME_TYPE, 0x59f3dc, AbsExact(), NE)\r\n[  FAILED  ] MathOperatorTestFluid/MathOperatorMatMatTest.OperatorAccuracyTest/48, where GetParam() = (32FC1, 128x128, SAME_TYPE, 0x59f3dc, AbsExact(), GT)\r\n[  FAILED  ] MathOperatorTestFluid/MathOperatorMatMatTest.OperatorAccuracyTest/49, where GetParam() = (32FC1, 128x128, SAME_TYPE, 0x59f3dc, AbsExact(), LT)\r\n[  FAILED  ] MathOperatorTestFluid/MathOperatorMatMatTest.OperatorAccuracyTest/50, where GetParam() = (32FC1, 128x128, SAME_TYPE, 0x59f3dc, AbsExact(), GE)\r\n[  FAILED  ] MathOperatorTestFluid/MathOperatorMatMatTest.OperatorAccuracyTest/51, where GetParam() = (32FC1, 128x128, SAME_TYPE, 0x59f3dc, AbsExact(), LE)\r\n[  FAILED  ] MathOperatorTestFluid/MathOperatorMatMatTest.OperatorAccuracyTest/53, where GetParam() = (32FC1, 128x128, SAME_TYPE, 0x59f3dc, AbsExact(), NE) \r\n```\r\n</details>\r\n\r\n<details>\r\n\r\n<summary>FAILED  36 tests on RVV QEMU without this patch, listed below:</summary>\r\n\r\n[  FAILED  ] 36 tests, listed below:\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/2, where GetParam() = (8UC3, 1280x720, SAME_TYPE, 0x3fb1d0, DIV, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/3, where GetParam() = (8UC3, 1280x720, SAME_TYPE, 0x3fb1d0, DIV, true, 1, true)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/6, where GetParam() = (8UC3, 1280x720, SAME_TYPE, 0x3fb1d0, MUL, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/7, where GetParam() = (8UC3, 1280x720, SAME_TYPE, 0x3fb1d0, MUL, true, 1, true)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/10, where GetParam() = (8UC3, 1280x720, 8UC1, 0x3fb1d0, DIV, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/11, where GetParam() = (8UC3, 1280x720, 8UC1, 0x3fb1d0, DIV, true, 1, true)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/14, where GetParam() = (8UC3, 1280x720, 8UC1, 0x3fb1d0, MUL, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/15, where GetParam() = (8UC3, 1280x720, 8UC1, 0x3fb1d0, MUL, true, 1, true)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/18, where GetParam() = (8UC3, 1280x720, 32FC1, 0x3fb1d0, DIV, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/19, where GetParam() = (8UC3, 1280x720, 32FC1, 0x3fb1d0, DIV, true, 1, true)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/22, where GetParam() = (8UC3, 1280x720, 32FC1, 0x3fb1d0, MUL, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/23, where GetParam() = (8UC3, 1280x720, 32FC1, 0x3fb1d0, MUL, true, 1, true)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/26, where GetParam() = (8UC3, 128x128, SAME_TYPE, 0x3fb1d0, DIV, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/27, where GetParam() = (8UC3, 128x128, SAME_TYPE, 0x3fb1d0, DIV, true, 1, true)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/30, where GetParam() = (8UC3, 128x128, SAME_TYPE, 0x3fb1d0, MUL, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/31, where GetParam() = (8UC3, 128x128, SAME_TYPE, 0x3fb1d0, MUL, true, 1, true)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/34, where GetParam() = (8UC3, 128x128, 8UC1, 0x3fb1d0, DIV, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/35, where GetParam() = (8UC3, 128x128, 8UC1, 0x3fb1d0, DIV, true, 1, true)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/38, where GetParam() = (8UC3, 128x128, 8UC1, 0x3fb1d0, MUL, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/39, where GetParam() = (8UC3, 128x128, 8UC1, 0x3fb1d0, MUL, true, 1, true)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/42, where GetParam() = (8UC3, 128x128, 32FC1, 0x3fb1d0, DIV, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/43, where GetParam() = (8UC3, 128x128, 32FC1, 0x3fb1d0, DIV, true, 1, true)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/46, where GetParam() = (8UC3, 128x128, 32FC1, 0x3fb1d0, MUL, true, 1, false)\r\n[  FAILED  ] MathOpTestFluid/MathOpTest.MatricesAccuracyTest/47, where GetParam() = (8UC3, 128x128, 32FC1, 0x3fb1d0, MUL, true, 1, true)\r\n[  FAILED  ] AbsDiffCTestFluid/AbsDiffCTest.AccuracyTest/12, where GetParam() = (8UC3, 1280x720, SAME_TYPE, 0x3fb504)\r\n[  FAILED  ] AbsDiffCTestFluid/AbsDiffCTest.AccuracyTest/13, where GetParam() = (8UC3, 128x128, SAME_TYPE, 0x3fb504)\r\n[  FAILED  ] AbsDiffCTestFluid/AbsDiffCTest.AccuracyTest/14, where GetParam() = (16UC3, 1280x720, SAME_TYPE, 0x3fb504)\r\n[  FAILED  ] AbsDiffCTestFluid/AbsDiffCTest.AccuracyTest/15, where GetParam() = (16UC3, 128x128, SAME_TYPE, 0x3fb504)\r\n[  FAILED  ] AbsDiffCTestFluid/AbsDiffCTest.AccuracyTest/16, where GetParam() = (16SC3, 1280x720, SAME_TYPE, 0x3fb504)\r\n[  FAILED  ] AbsDiffCTestFluid/AbsDiffCTest.AccuracyTest/17, where GetParam() = (16SC3, 128x128, SAME_TYPE, 0x3fb504)\r\n[  FAILED  ] MathOperatorArithmeticTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/3, where GetParam() = (8UC1, 1280x720, SAME_TYPE, 0x48d782, AbsExact(), DIV)\r\n[  FAILED  ] MathOperatorArithmeticTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/7, where GetParam() = (8UC1, 1280x720, SAME_TYPE, 0x48d782, AbsExact(), DIVR)\r\n[  FAILED  ] MathOperatorArithmeticTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/11, where GetParam() = (8UC1, 128x128, SAME_TYPE, 0x48d782, AbsExact(), DIV)\r\n[  FAILED  ] MathOperatorArithmeticTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/15, where GetParam() = (8UC1, 128x128, SAME_TYPE, 0x48d782, AbsExact(), DIVR)\r\n[  FAILED  ] MathOperatorArithmeticTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/23, where GetParam() = (16SC1, 1280x720, SAME_TYPE, 0x48d782, AbsExact(), DIVR)\r\n[  FAILED  ] MathOperatorArithmeticTestFluid/MathOperatorMatScalarTest.OperatorAccuracyTest/31, where GetParam() = (16SC1, 128x128, SAME_TYPE, 0x48d782, AbsExact(), DIVR)\r\n</details>\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-09-26T20:04:48Z",
        "closed_at": "2023-10-03T13:16:42Z",
        "merged_at": "2023-10-03T13:16:42Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 355,
        "deletions": 61,
        "changed_files": 3,
        "created_at": "2023-09-26T06:56:49Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR added addresses issues not covered in #24037. Namely these are: \r\nTest case for this patch is in this PR [#1106](https://github.com/opencv/opencv_extra/pull/1106) in opencv extra\r\n\r\nAdded: \r\n - [x] Broadcasting reduction \"...ii ->...I\"\r\n - [x] Add lazy shape deduction. \"...ij, ...jk->...ik\"\r\n \r\n Features to add: \r\n- [ ] Add implicit output computation support. \"bij,bjk ->\" (output subscripts should be \"bik\")\r\n- [ ] Add support for CUDA backend \r\n- [ ] BatchWiseMultiply optimize\r\n- [ ] Performance test\r\n\r\n\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-25T06:03:21Z",
        "closed_at": "2023-09-25T14:53:54Z",
        "merged_at": "2023-09-25T14:53:54Z",
        "body": "Added assert to avoid segfault when reading a Caffe model.\r\nIt is not clear why OpenCV expects 2 values, but the model contains only one.\r\nThe model file is from this repository https://github.com/TimoSaemann/ENet\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 414,
        "deletions": 784,
        "changed_files": 4,
        "created_at": "2023-09-25T03:18:12Z",
        "closed_at": "2023-10-07T18:48:45Z",
        "merged_at": "2023-10-07T18:48:45Z",
        "body": "Resolves https://github.com/opencv/opencv/issues/24312\r\nResolves https://github.com/opencv/opencv/pull/23897#pullrequestreview-1639273804\r\n\r\n- [x] Rename tests\r\n- [x] Remove neon from dispatcher\r\n- [x] Fix opencl build\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Linux OpenCL,Win64 OpenCL,Custom\r\nbuildworker:Custom=linux-4\r\nbuild_image:Custom=ubuntu:18.04\r\nCPU_BASELINE:Custom=AVX512_SKX\r\nmodules_filter:Custom=none\r\ndisable_ipp:Custom=ON\r\n```",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 21,
        "changed_files": 2,
        "created_at": "2023-09-21T12:59:38Z",
        "closed_at": "2023-09-27T07:25:45Z",
        "merged_at": "2023-09-27T07:25:45Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\nCI validation:\r\n\r\n- [x] 2022.1.0: https://pullrequest.opencv.org/buildbot/builders/precommit_custom_linux/builds/100368\r\n- [ ] 2021.4.2: https://pullrequest.opencv.org/buildbot/builders/precommit_custom_linux/builds/100373\r\n\r\nChecklist:\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Custom\r\n\r\nbuild_image:Custom=ubuntu-openvino-2021.4.2:20.04\r\nXbuild_image:Custom=ubuntu-openvino-2022.1.0:20.04\r\n\r\ntest_modules:Custom=dnn,python2,python3,java,gapi,video\r\n\r\nbuildworker:Custom=linux-4\r\ntest_opencl:Custom=OFF\r\ntest_bigdata:Custom=1\r\ntest_filter:Custom=*\r\n```\r\n",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-09-21T03:02:35Z",
        "closed_at": "2023-09-25T10:06:23Z",
        "merged_at": "2023-09-25T10:06:23Z",
        "body": "cmake(3.22.1) failed without the keyword `PATHS` on my device when I manually set `TOOLCHAIN_COMPILER_LOCATION_HINT` in command. And this patch is going to fix this issue.\r\n\r\n[CMake Doc](https://cmake.org/cmake/help/latest/command/find_program.html):\r\n> find_program (\r\n>           <VAR>\r\n>           name | NAMES name1 [name2 ...] [NAMES_PER_DIR]\r\n>           [HINTS [path | ENV var]... ]\r\n>           [PATHS [path | ENV var]... ]\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Custom\r\nbuild_image:Custom=riscv-gcc\r\nXbuild_image:Custom=riscv-clang-rvv\r\nXbuild_image:Custom=riscv-clang-rvv-128\r\nXbuild_image:Custom=riscv-gcc-rvv-07\r\ntest_modules:Custom=core,imgproc,dnn\r\nbuildworker:Custom=linux-4\r\ntest_timeout:Custom=600\r\nbuild_contrib:Custom=OFF\r\n```",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 17,
        "changed_files": 4,
        "created_at": "2023-09-20T10:56:06Z",
        "closed_at": "2023-09-20T19:08:03Z",
        "merged_at": "2023-09-20T19:08:03Z",
        "body": "Related: https://github.com/opencv/opencv/pull/24201\r\nWarnings: https://pullrequest.opencv.org/buildbot/builders/precommit_windows64/builds/102818/steps/compile%20release/logs/warnings%20%2816%29\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-20T10:28:47Z",
        "closed_at": "2023-09-21T09:41:08Z",
        "merged_at": "2023-09-21T09:41:08Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nsame as https://github.com/opencv/opencv/pull/24250 but for `SetUp` method\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 319,
        "deletions": 319,
        "changed_files": 3,
        "created_at": "2023-09-20T08:40:19Z",
        "closed_at": "2023-09-25T10:03:26Z",
        "merged_at": "2023-09-25T10:03:26Z",
        "body": "The goal of this series of PRs is to modify the SIMD code blocks guarded by CV_SIMD macro: rewrite them by using the new Universal Intrinsic API.\r\n\r\nThis is the modification to the features2d module and calib3d module.\r\n\r\nTest with clang 16 and QEMU v7.0.0. `AP3P.ctheta1p_nan_23607` failed beacuse of a small calculation error. But this patch does not touch the relevant code, and this error always reproduce on QEMU, regardless of whether the patch is applied or not. I think we can ignore it\r\n```\r\n[ RUN      ] AP3P.ctheta1p_nan_23607\r\n/home/hanliutong/project/opencv/modules/calib3d/test/test_solvepnp_ransac.cpp:2319: Failure\r\nExpected: (cvtest::norm(res.colRange(0, 2), expected, NORM_INF)) <= (3e-16), actual: 3.33067e-16 vs 3e-16\r\n[  FAILED  ] AP3P.ctheta1p_nan_23607 (26 ms)\r\n\r\n...\r\n\r\n[==========] 148 tests from 64 test cases ran. (1147114 ms total)\r\n[  PASSED  ] 147 tests.\r\n[  FAILED  ] 1 test, listed below:\r\n[  FAILED  ] AP3P.ctheta1p_nan_23607\r\n```\r\n\r\nNote: There are 2 test cases failed with GCC 13.2.1 without this patch, seems like there are someting wrong with RVV part on GCC.\r\n```\r\n[----------] Global test environment tear-down\r\n[==========] 148 tests from 64 test cases ran. (1511399 ms total)\r\n[  PASSED  ] 146 tests.\r\n[  FAILED  ] 2 tests, listed below:\r\n[  FAILED  ] Calib3d_StereoSGBM.regression\r\n[  FAILED  ] Calib3d_StereoSGBM_HH4.regression\r\n```\r\n\r\nThe patch is partially auto-generated by using the [rewriter](https://github.com/hanliutong/rewriter).\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Custom\r\nXbuild_image:Custom=riscv-clang-rvv\r\nbuild_image:Custom=riscv-gcc-rvv\r\nXbuild_image:Custom=riscv-clang-rvv-128\r\nXbuild_image:Custom=riscv-gcc-rvv-07\r\ntest_modules:Custom=core,imgproc,dnn\r\nbuildworker:Custom=linux-1\r\ntest_timeout:Custom=600\r\nbuild_contrib:Custom=OFF\r\n```",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 606,
        "deletions": 120,
        "changed_files": 8,
        "created_at": "2023-09-20T03:57:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nQR codes decoding pipeline without 3rdparty dependency (Quirc library). Implemented according to standard https://github.com/yansikeim/QR-Code/blob/master/ISO%20IEC%2018004%202015%20Standard.pdf\r\n\r\nresolves https://github.com/opencv/opencv/issues/24225\r\nresolves https://github.com/opencv/opencv/issues/17290\r\nresolves https://github.com/opencv/opencv/issues/24318 https://github.com/opencv/opencv/issues/24346\r\n\r\nResources:\r\n* https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders\r\n* https://en.wikipedia.org/wiki/Berlekamp%E2%80%93Massey_algorithm\r\n\r\n```\r\nGeometric mean (ms)\r\n\r\n                                   Name of Test                                      quirc   new2      new2   \r\n                                                                                                        vs    \r\n                                                                                                      quirc   \r\n                                                                                                    (x-factor)\r\ndecode::Perf_Objdetect_Not_QRCode::(\"chessboard\", 640x480)                           9.151   9.157     1.00   \r\ndecode::Perf_Objdetect_Not_QRCode::(\"chessboard\", 1280x720)                         21.609  21.609     1.00   \r\ndecode::Perf_Objdetect_Not_QRCode::(\"chessboard\", 1920x1080)                        42.088  41.924     1.00   \r\ndecode::Perf_Objdetect_Not_QRCode::(\"chessboard\", 3840x2160)                        169.737 169.050    1.00   \r\ndecode::Perf_Objdetect_Not_QRCode::(\"random\", 640x480)                               8.552   8.611     0.99   \r\ndecode::Perf_Objdetect_Not_QRCode::(\"random\", 1280x720)                             21.264  21.581     0.99   \r\ndecode::Perf_Objdetect_Not_QRCode::(\"random\", 1920x1080)                            42.415  43.468     0.98   \r\ndecode::Perf_Objdetect_Not_QRCode::(\"random\", 3840x2160)                            175.003 174.294    1.00   \r\ndecode::Perf_Objdetect_Not_QRCode::(\"zero\", 640x480)                                 8.528   8.421     1.01   \r\ndecode::Perf_Objdetect_Not_QRCode::(\"zero\", 1280x720)                               21.548  21.209     1.02   \r\ndecode::Perf_Objdetect_Not_QRCode::(\"zero\", 1920x1080)                              42.581  42.529     1.00   \r\ndecode::Perf_Objdetect_Not_QRCode::(\"zero\", 3840x2160)                              176.231 174.410    1.01   \r\ndecode::Perf_Objdetect_QRCode::\"kanji.jpg\"                                           6.105   6.072     1.01   \r\ndecode::Perf_Objdetect_QRCode::\"link_github_ocv.jpg\"                                 6.069   6.076     1.00   \r\ndecode::Perf_Objdetect_QRCode::\"link_ocv.jpg\"                                        6.143   6.240     0.98   \r\ndecode::Perf_Objdetect_QRCode::\"link_wiki_cv.jpg\"                                    6.369   6.420     0.99   \r\ndecode::Perf_Objdetect_QRCode::\"russian.jpg\"                                         6.558   6.549     1.00   \r\ndecode::Perf_Objdetect_QRCode::\"version_1_down.jpg\"                                  5.634   5.621     1.00   \r\ndecode::Perf_Objdetect_QRCode::\"version_1_left.jpg\"                                  5.560   5.609     0.99   \r\ndecode::Perf_Objdetect_QRCode::\"version_1_right.jpg\"                                 5.539   5.631     0.98   \r\ndecode::Perf_Objdetect_QRCode::\"version_1_top.jpg\"                                   5.622   5.566     1.01   \r\ndecode::Perf_Objdetect_QRCode::\"version_1_up.jpg\"                                    5.569   5.534     1.01   \r\ndecode::Perf_Objdetect_QRCode::\"version_5_down.jpg\"                                  6.514   6.436     1.01   \r\ndecode::Perf_Objdetect_QRCode::\"version_5_left.jpg\"                                  6.668   6.479     1.03   \r\ndecode::Perf_Objdetect_QRCode::\"version_5_top.jpg\"                                   6.481   6.484     1.00   \r\ndecode::Perf_Objdetect_QRCode::\"version_5_up.jpg\"                                    7.011   6.513     1.08   \r\ndecodeMulti::Perf_Objdetect_QRCode_Multi::(\"2_qrcodes.png\", \"aruco_based\")          14.885  15.089     0.99   \r\ndecodeMulti::Perf_Objdetect_QRCode_Multi::(\"2_qrcodes.png\", \"contours_based\")       14.896  14.906     1.00   \r\ndecodeMulti::Perf_Objdetect_QRCode_Multi::(\"3_close_qrcodes.png\", \"aruco_based\")     6.661   6.663     1.00   \r\ndecodeMulti::Perf_Objdetect_QRCode_Multi::(\"3_close_qrcodes.png\", \"contours_based\")  6.614   6.592     1.00   \r\ndecodeMulti::Perf_Objdetect_QRCode_Multi::(\"3_qrcodes.png\", \"aruco_based\")          14.814  14.592     1.02   \r\ndecodeMulti::Perf_Objdetect_QRCode_Multi::(\"3_qrcodes.png\", \"contours_based\")       15.245  15.135     1.01   \r\ndecodeMulti::Perf_Objdetect_QRCode_Multi::(\"4_qrcodes.png\", \"aruco_based\")          10.923  10.881     1.00   \r\ndecodeMulti::Perf_Objdetect_QRCode_Multi::(\"4_qrcodes.png\", \"contours_based\")       10.680  10.128     1.05   \r\ndecodeMulti::Perf_Objdetect_QRCode_Multi::(\"5_qrcodes.png\", \"contours_based\")       11.788  11.576     1.02   \r\ndecodeMulti::Perf_Objdetect_QRCode_Multi::(\"6_qrcodes.png\", \"aruco_based\")          25.887  25.979     1.00   \r\ndecodeMulti::Perf_Objdetect_QRCode_Multi::(\"6_qrcodes.png\", \"contours_based\")       26.183  25.627     1.02   \r\ndecodeMulti::Perf_Objdetect_QRCode_Multi::(\"7_qrcodes.png\", \"aruco_based\")          32.786  32.253     1.02   \r\ndecodeMulti::Perf_Objdetect_QRCode_Multi::(\"7_qrcodes.png\", \"contours_based\")       24.290  24.435     0.99   \r\ndecodeMulti::Perf_Objdetect_QRCode_Multi::(\"8_close_qrcodes.png\", \"aruco_based\")    89.696  89.247     1.01   \r\ndecodeMulti::Perf_Objdetect_QRCode_Multi::(\"8_close_qrcodes.png\", \"contours_based\") 89.872  89.600     1.00\r\n```\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 138,
        "deletions": 39,
        "changed_files": 1,
        "created_at": "2023-09-19T17:09:25Z",
        "closed_at": "2023-10-04T10:05:33Z",
        "merged_at": "2023-10-04T10:05:33Z",
        "body": "**Merged With https://github.com/opencv/opencv_extra/pull/1095**\r\n\r\nThis PR aims to extend the performance tests. \r\n\r\n- **YOLOv5** for object detection\r\n- **YOLOv8** for object detection\r\n- **EfficientNet** for classification\r\n\r\nModels from OpenCV Zoo:\r\n\r\n- **YOLOX** for object detection\r\n- **YuNet** for face detection\r\n- **SFace** for face recognization\r\n- **MPPalm** for palm detection\r\n- **MPHand** for hand landmark\r\n- **MPPose** for pose estimation\r\n- **ViTTrack** for object tracking\r\n- **PPOCRv3** for text detection\r\n- **CRNN** for text recognization\r\n- **PPHumanSeg** for human segmentation\r\n\r\nIf other models should be added, **please leave some comments**. Thanks!\r\n\r\n\r\n\r\nBuild opencv with script:\r\n```shell\r\n-DBUILD_opencv_python2=OFF\r\n-DBUILD_opencv_python3=OFF\r\n-DBUILD_opencv_gapi=OFF\r\n-DINSTALL_PYTHON_EXAMPLES=OFF\r\n-DINSTALL_C_EXAMPLES=OFF\r\n-DBUILD_DOCS=OFF\r\n-DBUILD_EXAMPLES=OFF\r\n-DBUILD_ZLIB=OFF\r\n-DWITH_FFMPEG=OFF\r\n```\r\n\r\n\r\n\r\nPerformance Test on **Apple M2 CPU**\r\n```shell\r\nMacOS 14.0\r\n8 threads\r\n```\r\n\r\n**1 thread:**\r\n| Name of Test | 4.5.5-1th | 4.6.0-1th | 4.7.0-1th | 4.8.0-1th | 4.8.1-1th |\r\n|--------------|:---------:|:---------:|:---------:|:---------:|:---------:|\r\n| CRNN         |  76.244   |  76.611   |  62.534   |  57.678   |  57.238   |\r\n| EfficientNet |    ---    |    ---    |  109.224  |  130.753  |  109.076  |\r\n| MPHand       |    ---    |    ---    |  19.289   |  22.727   |  27.593   |\r\n| MPPalm       |  47.150   |  47.061   |  41.064   |  65.598   |  40.109   |\r\n| MPPose       |    ---    |    ---    |  26.592   |  32.022   |  26.956   |\r\n| PPHumanSeg   |  41.672   |  41.790   |  27.819   |  27.212   |  30.461   |\r\n| PPOCRv3      |    ---    |    ---    |  140.371  |  187.922  |  170.026  |\r\n| SFace        |  43.830   |  43.834   |  27.575   |  30.653   |  26.387   |\r\n| ViTTrack     |    ---    |    ---    |    ---    |  14.617   |  15.028   |\r\n| YOLOX        | 1060.507  | 1061.361  |  495.816  |  533.309  |  549.713  |\r\n| YOLOv5       |    ---    |    ---    |    ---    |  191.350  |  193.261  |\r\n| YOLOv8       |    ---    |    ---    |  198.893  |  218.733  |  223.142  |\r\n| YuNet        |  27.084   |  27.095   |  26.238   |  30.512   |  34.439   |\r\n| MobileNet_SSD_Caffe         |  44.742   |  44.565   |  33.005   |  29.421   |  29.286   |\r\n| MobileNet_SSD_v1_TensorFlow |  49.352   |  49.274   |  35.163   |  32.134   |  31.904   |\r\n| MobileNet_SSD_v2_TensorFlow |  83.537   |  83.379   |  56.403   |  42.947   |  42.148   |\r\n| ResNet_50                   |  148.872  |  148.817  |  77.331   |  67.682   |  67.760   |\r\n\r\n\r\n**n threads:**\r\n| Name of Test | 4.5.5-nth | 4.6.0-nth | 4.7.0-nth | 4.8.0-nth | 4.8.1-nth |\r\n|--------------|:---------:|:---------:|:---------:|:---------:|:---------:|\r\n| CRNN         |  44.262   |  44.408   |  41.540   |  40.731   |  41.151   |\r\n| EfficientNet |    ---    |    ---    |  28.683   |  42.676   |  38.204   |\r\n| MPHand       |    ---    |    ---    |   6.738   |  13.126   |   8.155   |\r\n| MPPalm       |  16.613   |  16.588   |  12.477   |  31.370   |  17.048   |\r\n| MPPose       |    ---    |    ---    |  12.985   |  19.700   |  16.537   |\r\n| PPHumanSeg   |  14.993   |  15.133   |  13.438   |  15.269   |  15.252   |\r\n| PPOCRv3      |    ---    |    ---    |  63.752   |  85.469   |  76.190   |\r\n| SFace        |  10.685   |  10.822   |   8.127   |   8.318   |   7.934   |\r\n| ViTTrack     |    ---    |    ---    |    ---    |  10.079   |   9.579   |\r\n| YOLOX        |  417.358  |  422.977  |  230.036  |  234.662  |  228.555  |\r\n| YOLOv5       |    ---    |    ---    |    ---    |  74.249   |  75.480   |\r\n| YOLOv8       |    ---    |    ---    |  63.762   |  88.770   |  70.927   |\r\n| YuNet        |   8.589   |   8.731   |  11.269   |  16.466   |  14.513   |\r\n| MobileNet_SSD_Caffe         |  12.575   |  12.636   |  11.529   |  12.114   |  12.236   |\r\n| MobileNet_SSD_v1_TensorFlow |  13.922   |  14.160   |  13.078   |  12.124   |  13.298   |\r\n| MobileNet_SSD_v2_TensorFlow |  25.096   |  24.836   |  22.823   |  20.238   |  20.319   |\r\n| ResNet_50                   |  41.561   |  41.296   |  29.092   |  30.412   |  29.339   |\r\n\r\n\r\nPerformance Test on [Intel Core i7-12700K](https://www.intel.com/content/www/us/en/products/sku/134594/intel-core-i712700k-processor-25m-cache-up-to-5-00-ghz/specifications.html)\r\n```shell\r\nUbuntu 22.04.2 LTS\r\n8 Performance-cores (3.60 GHz, turbo up to 4.90 GHz)\r\n4 Efficient-cores (2.70 GHz, turbo up to 3.80 GHz)\r\n20 threads\r\n```\r\n\r\n\r\n**1 thread:**\r\n| Name of Test | 4.5.5-1th | 4.6.0-1th | 4.7.0-1th | 4.8.0-1th | 4.8.1-1th |\r\n|--------------|:---------:|:---------:|:---------:|:---------:|:---------:|\r\n| CRNN         |  16.752   |  16.851   |  16.840   |  16.625   |  16.663   |\r\n| EfficientNet |    ---    |    ---    |  61.107   |  76.037   |  53.890   |\r\n| MPHand       |    ---    |    ---    |   8.906   |   9.969   |   8.403   |\r\n| MPPalm       |  24.243   |  24.638   |  18.104   |  35.140   |  18.387   |\r\n| MPPose       |    ---    |    ---    |  12.322   |  16.515   |  12.355   |\r\n| PPHumanSeg   |  15.249   |  15.303   |  10.203   |  10.298   |  10.353   |\r\n| PPOCRv3      |    ---    |    ---    |  87.788   |  144.253  |  90.648   |\r\n| SFace        |  15.583   |  15.884   |  13.957   |  13.298   |  13.284   |\r\n| ViTTrack     |    ---    |    ---    |    ---    |  11.760   |  11.710   |\r\n| YOLOX        |  324.927  |  325.173  |  235.986  |  253.653  |  254.472  |\r\n| YOLOv5       |    ---    |    ---    |    ---    |  102.163  |  102.621  |\r\n| YOLOv8       |    ---    |    ---    |  87.013   |  103.182  |  103.146  |\r\n| YuNet        |  12.806   |  12.645   |  10.515   |  12.647   |  12.711   |\r\n| MobileNet_SSD_Caffe         |  23.556   |  23.768   |  24.304   |  22.569   |  22.602   |\r\n| MobileNet_SSD_v1_TensorFlow |  26.136   |  26.276   |  26.854   |  24.828   |  24.961   |\r\n| MobileNet_SSD_v2_TensorFlow |  43.521   |  43.614   |  46.892   |  44.044   |  44.682   |\r\n| ResNet_50                   |  73.588   |  73.501   |  75.191   |  66.893   |  65.144   |\r\n\r\n\r\n**n thread:**\r\n| Name of Test | 4.5.5-nth | 4.6.0-nth | 4.7.0-nth | 4.8.0-nth | 4.8.1-nth | \r\n|--------------|:---------:|:---------:|:---------:|:---------:|:---------:|\r\n| CRNN         |   8.665   |   8.827   |  10.643   |   7.703   |   7.743   | \r\n| EfficientNet |    ---    |    ---    |  16.591   |  12.715   |   9.022   |   \r\n| MPHand       |    ---    |    ---    |   2.678   |   2.785   |   1.680   |           \r\n| MPPalm       |   5.309   |   5.319   |   3.822   |  10.568   |   4.467   |       \r\n| MPPose       |    ---    |    ---    |   3.644   |   6.088   |   4.608   |        \r\n| PPHumanSeg   |   4.756   |   4.865   |   5.084   |   5.179   |   5.148   |        \r\n| PPOCRv3      |    ---    |    ---    |  32.023   |  50.591   |  32.414   |      \r\n| SFace        |   3.838   |   3.980   |   4.629   |   3.145   |   3.155   |       \r\n| ViTTrack     |    ---    |    ---    |    ---    |  10.335   |  10.357   |   \r\n| YOLOX        |  68.314   |  68.081   |  82.801   |  74.219   |  73.970   |      \r\n| YOLOv5       |    ---    |    ---    |    ---    |  47.150   |  47.523   |    \r\n| YOLOv8       |    ---    |    ---    |  32.195   |  30.359   |  30.267   |    \r\n| YuNet        |   2.604   |   2.644   |   2.622   |   3.278   |   3.349   |    \r\n| MobileNet_SSD_Caffe         |  13.005   |   5.935   |   8.586   |   4.629   |   4.713   |\r\n| MobileNet_SSD_v1_TensorFlow |   7.002   |   7.129   |   9.314   |   5.271   |   5.213   |\r\n| MobileNet_SSD_v2_TensorFlow |  11.939   |  12.111   |  22.688   |  12.038   |  12.086   |\r\n| ResNet_50                   |  18.227   |  18.600   |  26.150   |  15.584   |  15.706   |\r\n\r\n\r\n```\r\nforce_builders=Linux32,Win32,Win64 OpenCL\r\n```",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 342,
        "deletions": 153,
        "changed_files": 6,
        "created_at": "2023-09-19T11:19:40Z",
        "closed_at": "2023-09-27T06:28:52Z",
        "merged_at": "2023-09-27T06:28:52Z",
        "body": "Resolves https://github.com/opencv/opencv/issues/24300\r\nResolves https://github.com/opencv/opencv/issues/24308\r\n\r\nMerge with https://github.com/opencv/opencv_extra/pull/1098.\r\n\r\n**Motivation:**\r\n\r\nCurrent implementation of ONNX Expand is very limited and hard to maintain. It can go very unefficient, e.g. input of shape [1, 5, 1] and shape of value [1, 5, 256], it leads to 256 x [1, 5, 1] constant nodes along with a concat node. See down below for more details .\r\n\r\nhttps://github.com/opencv/opencv/blob/b870ad46bf1a9bb5f4310db1e09a20f4265b823f/modules/dnn/src/onnx/onnx_importer.cpp#L2485-L2494\r\n\r\nSince now we have `cv::broadcast` already, it is time to do a refactor on expand.\r\n\r\nChecklist:\r\n- [x] handle all-input-constant case\r\n- [x] fix expand_neg_batch.onnx\r\n- [x] take care of 0d/1d tensor\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 2945,
        "changed_files": 25,
        "created_at": "2023-09-19T08:07:35Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Merge with https://github.com/opencv/opencv_extra/pull/1097\r\n\r\nCompletely removed torch (old torch7) from dnn:\r\n- removed modules/dnn/src/torch directory that contained torch7 model parser\r\n- removed readNetFromTorch() and readTorchBlob() public functions\r\n- removed torch7 references from comments and help texts\r\n- replaced links to t7 models by links to similar onnx models in js_style_transfer turtorial (similar to https://github.com/opencv/opencv/pull/24245/files)\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-19T00:06:12Z",
        "closed_at": "2023-09-19T05:55:45Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-09-18T14:48:37Z",
        "closed_at": "2023-09-20T05:49:57Z",
        "merged_at": "2023-09-20T05:49:57Z",
        "body": "In the previous code, there was a memory leak issue where the previously allocated memory was not freed upon a failed realloc operation. This commit addresses the problem by releasing the old memory before setting the pointer to NULL in case of a realloc failure. This ensures that memory is properly managed and avoids potential memory leaks.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-18T14:19:36Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Resolves https://github.com/opencv/opencv/issues/24185\r\n\r\nOpenCV uses `sws_getCachedContext` to initialize final frame scaling and color conversion. The function sets default yuv<->rgb conversion coefficients. The patch promotes colorspace information from codec to `sws_scale`.\r\nSee https://ffmpeg.org/doxygen/0.9/libswscale_2utils_8c-source.html#l01507\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-18T13:44:06Z",
        "closed_at": "2023-09-19T05:09:18Z",
        "merged_at": "2023-09-19T05:09:18Z",
        "body": "Issue 1: emcc no longer provides implicit defines for the emscripten version, instead there's a separate header that provide them\r\nIssue 2: disabling the objdetect module breaks the js build\r\n\r\nOther than these small issues, OpenCV seems to work pretty well with the latest emscripten \ud83d\udc4c. Not sure that the maintainers would like to do something with that information, like upgrade or something.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Custom\r\nbuild_image:Docs=docs-js:18.04\r\nbuild_image:Custom=javascript\r\nbuildworker:Custom=linux-1,linux-4,linux-f1\r\n```\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2023-09-18T13:04:25Z",
        "closed_at": "2023-09-22T14:09:58Z",
        "merged_at": "2023-09-22T14:09:58Z",
        "body": "Intel\u00ae C++ Compiler Classic (icc) is deprecated and will be removed in a oneAPI release in the second half of 2023 ([deprecation notice](https://community.intel.com/t5/Intel-oneAPI-IoT-Toolkit/DEPRECATION-NOTICE-Intel-C-Compiler-Classic/m-p/1412267#:~:text=Intel%C2%AE%20C%2B%2B%20Compiler%20Classic%20(icc)%20is%20deprecated%20and%20will,the%20second%20half%20of%202023.)). This commit is intended to add support for the next-generation compiler, Intel\u00ae oneAPI DPC++/C++ Compiler (icx) (the documentation for the compiler is available on the [link](https://www.intel.com/content/www/us/en/docs/dpcpp-cpp-compiler/developer-guide-reference/2023-2/overview.html)). \r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 933,
        "deletions": 999,
        "changed_files": 2,
        "created_at": "2023-09-18T08:33:01Z",
        "closed_at": "2023-09-27T11:09:47Z",
        "merged_at": "2023-09-27T11:09:47Z",
        "body": "Context: https://github.com/opencv/opencv/pull/24231#pullrequestreview-1628649980\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-17T13:35:23Z",
        "closed_at": "2023-09-27T13:21:21Z",
        "merged_at": "2023-09-27T13:21:21Z",
        "body": "**Problem description\uff1a**\r\nWhen the number of cores is large, OpenCV\u2019s thread library may reduce performance when processing parallel jobs.\r\n\r\n**The reason for this problem:**\r\nWhen the number of cores (the thread pool initialized the threads, whose number is as same as the number of cores) is large, the main thread will spend too much time on waking up unnecessary threads.\r\nWhen a parallel job needs to be executed, the main thread will wake up all threads in sequence, and then wait for the signal for the  job completion after waking up all threads. When the number of threads is larger than the parallel number of a job slices, there will be a situation where the main thread wakes up the threads in sequence and the awakened threads have completed the job, but the main thread is still waking up the other threads. The threads woken up by the main thread after this have nothing \r\n to do, and the broadcasts made by the waking threads take a lot of time, which reduce the performance.\r\n\r\n**Solution\uff1a**\r\nReduce the time for the process of main thread waking up the worker threads through the following two methods:\r\n\r\n\u2022\tThe number of threads awakened by the main thread should be adjusted according to the parallel number of a job slices. If the number of threads is greater than the number of the parallel number of job slices, the total number of threads awakened should be reduced.\r\n\u2022\tIn the process of waking up threads in sequence, if the main thread finds that all parallel job slices have been allocated, it will jump out of the loop in time and wait for the signal for the job completion.\r\n\r\n\r\n**Performance Test:**\r\nThe tests were run in the manner described by https://github.com/opencv/opencv/wiki/HowToUsePerfTests.\r\nAt core number =  160, There are big performance gain in some cases.\r\n\r\nTake the following cases in the video module as examples:\r\n\r\nOpticalFlowPyrLK_self::Path_Idx_Cn_NPoints_WSize_Deriv::(\"cv/optflow/frames/VGA_%02d.png\", 2, 1, (9, 9), 11, true)\r\nPerformance improves 191%:0.185405ms ->0.0636496ms\r\nperf::DenseOpticalFlow_VariationalRefinement::(320x240, 10, 10)\r\nPerformance improves 112%:23.88938ms -> 11.2562ms  \r\nAmong all the modules, the performance improvement is greatest on module video, and there are also certain improvements on other modules.\r\n\r\n\r\nAt core number = 160, the times labeled below are the geometric mean of the average time of all cases for one module. The optimization is available on each module.\r\n\r\n\r\noverall | time(ms) | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0 | \u00a0\r\n-- | -- | -- | -- | -- | -- | -- | -- | --\r\nmodule   name | gapi | dnn | features2d | objdetect | core | imgproc | stitching | video\r\noriginal | 0.185 | 1.586 | 9.998 | 11.846 | 0.205 | 0.215 | 164.409 | 0.803\r\noptimized | 0.174 | 1.353 | 9.535 | 11.105 | 0.199 | 0.185 | 153.972 | 0.489\r\nPerformance   improves | 6% | 17% | 5% | 7% | 3% | 16% | 7% | 64%\r\n\r\n\r\n\r\nMeanwhile, It is found that adjusting the order of test cases will have an impact on some test cases. For example, we used option --gtest-shuffle to run opencv_perf_gapi, the performance of TestPerformance::CmpWithScalarPerfTestFluid/CmpWithScalarPerfTest::(compare_f, CMP_GE, 1920x1080, 32FC1, { gapi.kernel_package })  case had 30% changes compared to the case without shuffle. I would like to ask if you have also encountered such a situation and could you share your experience?\r\n\r\n\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-17T12:25:50Z",
        "closed_at": "2023-09-17T12:26:07Z",
        "merged_at": null,
        "body": "\u2026mation assertion\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-09-15T09:38:17Z",
        "closed_at": "2023-09-18T07:47:53Z",
        "merged_at": "2023-09-18T07:47:53Z",
        "body": "This continues #24232.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 8,
        "changed_files": 8,
        "created_at": "2023-09-15T08:59:54Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Ascend NPU is a series of AI processors.\r\n[hiascend](https://www.hiascend.com/).\r\n\r\nThis commit make InputArray and OutputArray support a new Mat structor called NpuMat, which has a same interface with Mat and GpuMat. And also, python bindings generator support NpuMat for python interface.\r\n\r\nThis PR is only for type declaration and code generation. For implementation, please refer to [opencv_contrib#3552](https://github.com/opencv/opencv_contrib/pull/3552)\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- N/A There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-15T07:36:01Z",
        "closed_at": "2023-09-18T08:02:45Z",
        "merged_at": "2023-09-18T08:02:45Z",
        "body": "Fixed removePhaseSwitches algorithm in tf_graph_simplifier.\r\n\r\nThe algorithm finds some specific nodes that should be removed. These nodes have input nodes which probably become useless. So there is a BFS-like algorithm that removes all these nodes. It has numConsumers map that keeps the current number of outputs for each node. The algorithm decreases some numComsumers values after each node deleting, but there is a mistake in this operation.\r\n\r\nFixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=56435",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5354,
        "deletions": 2784,
        "changed_files": 115,
        "created_at": "2023-09-15T07:21:18Z",
        "closed_at": "2023-09-15T11:25:49Z",
        "merged_at": "2023-09-15T11:25:49Z",
        "body": "This is version [c1ffd9a](https://chromium.googlesource.com/webm/libwebp/+/c1ffd9ac7593894c40a1de99d03f0b7af8af2577)\r\nIt is 1.3.2 with a few patches that were made right after to help compilation.\r\nNo need for patches on the OpenCV side!\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 437,
        "deletions": 163,
        "changed_files": 13,
        "created_at": "2023-09-14T11:47:47Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fix https://github.com/opencv/opencv/issues/24163\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n(carotene is BSD)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-14T10:12:41Z",
        "closed_at": "2023-09-14T12:58:24Z",
        "merged_at": "2023-09-14T12:58:23Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nresolves https://github.com/opencv/opencv/issues/24256\r\n\r\nci: https://pullrequest.opencv.org/buildbot/builders/precommit_opencl/builds/100195\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Custom\r\nbuildworker:Custom=linux-4\r\nbuild_image:Custom=ubuntu:20.04\r\ntest_opencl:Custom=ON\r\n```\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-14T07:04:51Z",
        "closed_at": "2023-09-14T11:17:22Z",
        "merged_at": "2023-09-14T11:17:22Z",
        "body": "openBLAS windows release calls their library libopenblas which was not recognized before. see #24268\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ X] I agree to contribute to the project under Apache 2 License.\r\n- [ X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ X] The PR is proposed to the proper branch\r\n- [ X] There is a reference to the original bug report and related work\r\n- [ not applicable] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ not applicable] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 500,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-09-13T20:19:53Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work https://github.com/opencv/opencv_zoo/pull/177#pullrequestreview-1494892868\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-13T17:02:45Z",
        "closed_at": "2023-09-14T07:25:24Z",
        "merged_at": "2023-09-14T07:25:24Z",
        "body": "Added default dimension value to tensorflow ArgMax and ArgMin layers.\r\nAdded exception when accessing layer's input with out of range index.\r\nFixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=48452\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-13T09:15:47Z",
        "closed_at": "2023-09-13T11:50:59Z",
        "merged_at": "2023-09-13T11:50:59Z",
        "body": "Fixes a bunch of the following errors:\r\n```\r\nerror: use of undeclared identifier '__msan_unpoison'\r\n      CV_ANNOTATE_MEMORY_IS_INITIALIZED(w, sizeof(fptype) * std::min(m, n));\r\n```",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 25,
        "changed_files": 6,
        "created_at": "2023-09-12T21:00:42Z",
        "closed_at": "2023-09-22T21:12:10Z",
        "merged_at": "2023-09-22T21:12:10Z",
        "body": "Tested with Clang 16 and GCC 13 (RISC-V RVV scalable variant). Also on x86_64 (default Ubuntu 22.04 GCC).\r\n\r\n```\r\nforce_builders=Custom\r\nbuild_image:Custom=riscv-clang-rvv\r\nXbuild_image:Custom=riscv-clang-rvv-128\r\nXbuild_image:Custom=riscv-gcc-rvv-07\r\ntest_modules:Custom=core,imgproc,dnn\r\nbuildworker:Custom=linux-1\r\ntest_timeout:Custom=600\r\nbuild_contrib:Custom=OFF\r\n```",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 142,
        "deletions": 10,
        "changed_files": 5,
        "created_at": "2023-09-12T14:44:03Z",
        "closed_at": "2023-10-12T12:29:24Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [X] There is a reference to the original bug report and related work https://github.com/opencv/opencv/issues/21307\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [X] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2023-09-12T13:06:49Z",
        "closed_at": "2023-09-14T12:16:28Z",
        "merged_at": "2023-09-14T12:16:28Z",
        "body": "This is due to the undefined: negative int multiplied by size_t pointer increment.\r\n\r\nTo test, compile with:\r\n```\r\nmkdir build\r\ncd build\r\ncmake ../ -DCMAKE_C_FLAGS_INIT=\"-fsanitize=undefined\" -DCMAKE_CXX_FLAGS_INIT=\"-fsanitize=undefined\" -DCMAKE_C_COMPILER=\"/usr/bin/clang\" -DCMAKE_CXX_COMPILER=\"/usr/bin/clang++\" -DCMAKE_SHARED_LINKER_FLAGS=\"-fsanitize=undefined -lubsan\"\r\n```\r\nAnd run:\r\n```\r\nmake -j opencv_test_core && ./bin/opencv_test_core --gtest_filter=*UndefinedBehavior*\r\n```\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-12T12:30:34Z",
        "closed_at": "2023-09-18T11:24:01Z",
        "merged_at": null,
        "body": "### Description\r\n\r\nWhen argument `flow` is a cv::Mat, function [calcOpticalFlowFarneback](https://github.com/opencv/opencv/blob/4.x/modules/video/src/optflowgf.cpp#L1194) raises an `ipp::IwException at memory location ...`\r\n\r\nThis happens because this [function](https://github.com/opencv/opencv/blob/4.x/modules/video/src/optflowgf.cpp#L1098) checks if input is a cv::UMat.\r\n\r\nThis PR simply completes documentation for argument `flow`.\r\n\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2383,
        "deletions": 1875,
        "changed_files": 148,
        "created_at": "2023-09-11T10:38:10Z",
        "closed_at": "2023-09-14T17:35:56Z",
        "merged_at": "2023-09-14T17:35:56Z",
        "body": "OpenCV Contrib: [#3559](https://github.com/opencv/opencv_contrib/pull/3559)\r\nOpenCV Extra: [#1093](https://github.com/opencv/opencv_extra/pull/1093)\r\n\r\n#23607 from alexander-varjo:alexander-varjo-patch-1\r\n#23734 from seanm:unaligned-copy\r\n#23904 from kai-waang:removing-unreachable\r\n#23965 from fengyuentau:broadcast_to\r\n#23980 from hanliutong:rewrite-core\r\n#24012 from cudawarped:videocapture_raw_read\r\n#24086 from Kumataro:fix24081\r\n#24089 from cudawarped:cuda_gpumat_fix_convertTo_copyTo_bindings\r\n#24098 from 0xMihir:4.x\r\n#24116 from chaebkimm/update-samples-python-tst_scene_render\r\n#24120 from dkurt:actualize_dnn_links\r\n#24122 from fengyuentau:remove_tengine\r\n#24128 from CSBVision:CSBVision-patch-1\r\n#24133 from alexlyulkov:al/fixed-msmf-webcam\r\n#24138 from mshabunin:fix-gst-plugin-camera\r\n#24139 from AleksandrPanov:fix_refineDetectedMarkers\r\n#24140 from sthibaul:4.x\r\n#24142 from beanjoy:4.x\r\n#24143 from seanm:sprintf4\r\n#24150 from DeePingXian:4.x\r\n#24153 from Ginkgo-Biloba:ipp-warp-affine\r\n#24156 from zihaomu:fix_24041\r\n#24157 from dkurt:gapi_ov_optional\r\n#24160 from mshabunin:update-ade\r\n#24167 from autoantwort:missing-include\r\n#24172 from CSBVision:CSBVision-patch-1-1\r\n#24176 from dkurt:correct_perf_test\r\n#24178 from dmatveev:dm/streaming_queue\r\n#24179 from Kumataro:fix24145\r\n#24180 from MambaWong:4.x\r\n#24186 from dkurt:ts_fixture_constructor_skip\r\n#24189 from dkurt:skip_ov_max_pool_ov\r\n#24194 from vrabaud:compilation_fix\r\n#24196 from dkurt:ov_backend_cleanups\r\n#24199 from Kumataro:fixlibTiffSite\r\n#24203 from thesamesam:arm64-fp16\r\n#24204 from georgthegreat:mser-license\r\n#24209 from alexlyulkov:al/fixed-mjpeg\r\n#24211 from philsc:fix-asan-crash\r\n#24214 from dkurt:distanceTransform_big_step\r\n#24215 from Kumataro:fix24213\r\n#24216 from dkurt:inter_lines_less_compute\r\n#24218 from CSBVision:patch-5\r\n#24221 from WanliZhong:issue_24016\r\n#24223 from asmorkalov:as/24186_revert\r\n#24227 from georgthegreat:missing-includes\r\n#24228 from AleksandrPanov:fix_extendDictionary\r\n#24232 from georgthegreat:missing-qualifiers\r\n#24244 from alexlyulkov:al/update-dnn-js-face-recognition-sample\r\n#24245 from alexlyulkov/al/update-fast-neural-style-dnn-sample\r\n#24246 from asmorkalov:as/merge_input_check2\r\n#24248 from opencv-pushbot:gitee/alalek/issue_22751\r\n#24251 from dkurt:ov_build_debug\r\n#24252 from opencv-pushbot:gitee/alalek/refactor_24218\r\n\r\nPrevious \"Merge 4.x\": #24119\r\n\r\n```\r\nforce_builders=Linux AVX2,Custom\r\nbuild_image:Docs=docs-js:18.04\r\nbuild_image:Custom=javascript\r\nbuildworker:Custom=linux-1,linux-4,linux-f1\r\n```",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-09-10T13:13:45Z",
        "closed_at": "2023-09-11T05:55:19Z",
        "merged_at": "2023-09-11T05:55:19Z",
        "body": "- disable message on default value\r\n\r\nrelates #24218, #24085",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-09T17:40:50Z",
        "closed_at": "2023-09-10T12:59:53Z",
        "merged_at": "2023-09-10T12:59:53Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nresolves https://github.com/opencv/opencv/issues/24249\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-09-09T14:53:39Z",
        "closed_at": "2023-09-18T07:23:24Z",
        "merged_at": "2023-09-18T07:23:24Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nAnother version of https://github.com/opencv/opencv/pull/24186 (reverted by https://github.com/opencv/opencv/pull/24223). Current implementation cannot handle skip exception at `static void SetUpTestCase` but works on `virtual void SetUp`.\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 54,
        "deletions": 6,
        "changed_files": 5,
        "created_at": "2023-09-09T03:35:34Z",
        "closed_at": "2023-09-11T05:59:02Z",
        "merged_at": "2023-09-11T05:59:02Z",
        "body": "resolves #22751\r\n\r\n- [x] Validated with emsdk 1.39.0\r\n\r\n```\r\nforce_builders=Custom\r\nbuild_image:Docs=docs-js:18.04\r\nbuild_image:Custom=javascript\r\nbuildworker:Custom=linux-1,linux-4,linux-f1\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 151,
        "deletions": 24,
        "changed_files": 4,
        "created_at": "2023-09-08T11:06:37Z",
        "closed_at": "2023-09-12T14:38:45Z",
        "merged_at": "2023-09-12T14:38:45Z",
        "body": "- drawDetectedMarkers(), drawDetectedCornersCharuco(), drawDetectedDiamonds() uses only `Point2f` (`CV_32FC2`) for detected corners. But this corners are casted to `int` later in the code.\r\n- drawDetectedMarkers(), drawDetectedDiamonds() has a requirement on CV_32FC2 for corners. This requirement is lost in drawDetectedCornersCharuco().\r\n\r\nStrict input data requirements have been removed. Added only the requirement to have 2 channels. The input corners are then casted to CV_32SC2.\r\n\r\nadded tests\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-08T09:37:51Z",
        "closed_at": "2023-09-08T10:41:43Z",
        "merged_at": "2023-09-08T10:41:43Z",
        "body": "Resolves #24242\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-09-08T05:49:05Z",
        "closed_at": "2023-09-08T13:33:18Z",
        "merged_at": "2023-09-08T13:33:18Z",
        "body": "Replaced torch7 model by ONNX model in fast-neural-style dnn sample.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-09-08T04:36:54Z",
        "closed_at": "2023-09-08T12:36:02Z",
        "merged_at": "2023-09-08T12:36:02Z",
        "body": "Changed face recognition model in js_face_recognition dnn sample: replaced torch7 model from https://github.com/pyannote/pyannote-data by ONNX model from https://github.com/opencv/opencv_zoo/tree/main/models/face_recognition_sface",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 80,
        "deletions": 49,
        "changed_files": 3,
        "created_at": "2023-09-07T18:35:52Z",
        "closed_at": null,
        "merged_at": null,
        "body": "- Fix broken seeking in audio/video playback caused by unnecessary stop/start of the pipeline\r\n- Fix broken audio playback\r\n- Fix unreliable seeking\r\n- Enable and fix tests\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [-] There is a reference to the original bug report and related work => Reproducible test provided\r\n- [-] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [X] The feature is well documented and sample code can be built with the project CMake\r\n\r\n1. Download two test videos:\r\n\r\n```bash\r\nwget https://github.com/ietf-wg-cellar/matroska-test-files/raw/master/test_files/test1.mkv\r\nwget https://test-videos.co.uk/vids/jellyfish/mkv/360/Jellyfish_360_10s_5MB.mkv\r\n```\r\n\r\n2. I modified a OpenCV videoio sample to demonstrate the problem, here it is the patch: http://dpaste.com//C9MAT2K6W\r\n\r\n3. Build the sample, on Ubuntu:\r\n\r\n```bash\r\ng++ -g videocapture_audio_combination.cpp -I/usr/include/opencv4 `pkg-config --libs --cflags opencv4` -o videocapture_audio_combination\r\n```\r\n\r\n4. Play an audio stream with seeking BEFORE the fix:\r\n\r\n```bash\r\n$ ./videocapture_audio_combination --audio \"filesrc location=test1.mkv ! queue ! matroskademux name=demux demux.audio_0 ! decodebin ! audioconvert ! appsink\"[ERROR:0@0.009] global cap.cpp:164 open VIDEOIO(GSTREAMER): raised OpenCV exception:\r\n\r\nOpenCV(4.8.0-dev) ./modules/videoio/src/cap_gstreamer.cpp:153: error: (-215:Assertion failed) ptr in function 'get'\r\n\r\n\r\n[ WARN:0@0.009] global cap.cpp:204 open VIDEOIO(GSTREAMER): backend is generally available but can't be used to capture by name\r\nERROR! Can't to open file: filesrc location=test1.mkv ! queue ! matroskademux name=demux demux.audio_0 ! decodebin ! audioconvert ! appsink\r\n```\r\n\r\n5. Play a video stream with seeking BEFORE the fix:\r\n\r\n```bash\r\n$ ./videocapture_audio_combination --audio \"filesrc location=Jellyfish_360_10s_5MB.mkv ! queue ! matroskademux name=demux demux.video_0 ! decodebin ! videoconvert ! video/x-raw, format=BGR ! appsink drop=1\"\r\n[ WARN:0@0.034] global cap_gstreamer.cpp:1728 open OpenCV | GStreamer warning: Cannot query video position: status=1, value=22, duration=300\r\nCAP_PROP_AUDIO_DATA_DEPTH: CV_16S\r\nCAP_PROP_AUDIO_SAMPLES_PER_SECOND: 44100\r\nCAP_PROP_AUDIO_TOTAL_CHANNELS: 0\r\nCAP_PROP_AUDIO_TOTAL_STREAMS: [ WARN:0@0.034] global cap_gstreamer.cpp:1898 getProperty OpenCV | GStreamer: CAP_PROP_AUDIO_TOTAL_STREAMS property is not supported\r\n0\r\n[ WARN:0@0.034] global cap_gstreamer.cpp:1817 getProperty OpenCV | GStreamer: CAP_PROP_POS_MSEC property result may be unrealiable: https://github.com/opencv/opencv/issues/19025\r\nTimestamp: 0.6218\r\nTimestamp: 33.1085\r\nTimestamp: 67.1274\r\nTimestamp: 100.1182\r\nTimestamp: 133.1204\r\nTimestamp: 167.1195\r\nTimestamp: 200.1161\r\nTimestamp: 233.1147\r\nTimestamp: 267.1194\r\nTimestamp: 300.1202\r\n[ WARN:0@0.338] global cap_gstreamer.cpp:1949 setProperty OpenCV | GStreamer warning: GStreamer: unable to seek\r\n0:00:00.338215907 3892572 0x5592899c7580 WARN                 basesrc gstbasesrc.c:3127:gst_base_src_loop:<filesrc0> error: Internal data stream error.\r\n0:00:00.338235884 3892572 0x5592899c7580 WARN                 basesrc gstbasesrc.c:3127:gst_base_src_loop:<filesrc0> error: streaming stopped, reason not-linked (-1)\r\n0:00:00.338264287 3892572 0x5592899c7580 WARN                   queue gstqueue.c:992:gst_queue_handle_sink_event:<queue0> error: Internal data stream error.\r\n0:00:00.338270329 3892572 0x5592899c7580 WARN                   queue gstqueue.c:992:gst_queue_handle_sink_event:<queue0> error: streaming stopped, reason not-linked (-1)\r\n[ WARN:0@0.339] global cap_gstreamer.cpp:2784 handleMessage OpenCV | GStreamer warning: Embedded video playback halted; module filesrc0 reported: Internal data stream error.\r\n[ WARN:0@0.339] global cap_gstreamer.cpp:1199 startPipeline OpenCV | GStreamer warning: unable to start pipeline\r\nNumber of audio samples: 0\r\nNumber of video frames: 10\r\n[ WARN:0@0.339] global cap_gstreamer.cpp:1164 isPipelinePlaying OpenCV | GStreamer warning: GStreamer: pipeline have not been created\r\n```\r\n\r\n6. Play an audio stream with seeking AFTER the fix:\r\n\r\n```bash\r\n$ ./videocapture_audio_combination --audio \"filesrc location=test1.mkv ! queue ! matroskademux name=demux demux.audio_0 ! decodebin ! audioconvert ! appsink\"CAP_PROP_AUDIO_DATA_DEPTH: CV_16S\r\nCAP_PROP_AUDIO_SAMPLES_PER_SECOND: 48000\r\nCAP_PROP_AUDIO_TOTAL_CHANNELS: 2\r\nCAP_PROP_AUDIO_TOTAL_STREAMS: [ WARN:0@0.025] global cap_gstreamer.cpp:1903 getProperty OpenCV | GStreamer: CAP_PROP_AUDIO_TOTAL_STREAMS property is not supported\r\n0\r\nTimestamp: 0.0000\r\nTimestamp: 24.0000\r\nTimestamp: 48.0000\r\nTimestamp: 72.0000\r\nTimestamp: 96.0000\r\nTimestamp: 120.0000\r\nTimestamp: 144.0000\r\nTimestamp: 168.0000\r\nTimestamp: 192.0000\r\nTimestamp: 216.0000\r\nTimestamp: 3500.0000\r\nTimestamp: 3504.0000\r\nTimestamp: 3528.0000\r\nTimestamp: 3552.0000\r\nTimestamp: 3576.0000\r\nTimestamp: 3600.0000\r\nTimestamp: 3624.0000\r\nTimestamp: 3648.0000\r\nTimestamp: 3672.0000\r\nTimestamp: 3696.0000\r\nTimestamp: 3720.0000\r\nTimestamp: 3744.0000\r\nTimestamp: 3768.0000\r\nTimestamp: 3792.0000\r\nTimestamp: 3816.0000\r\nTimestamp: 3840.0000\r\nTimestamp: 3864.0000\r\nTimestamp: 3888.0000\r\nTimestamp: 3912.0000\r\nTimestamp: 3936.0000\r\n```\r\n\r\n7. Play a video stream with seeking AFTER the fix:\r\n\r\n```bash\r\n$ ./videocapture_audio_combination --audio \"filesrc location=Jellyfish_360_10s_5MB.mkv ! queue ! matroskademux name=demux demux.video_0 ! decodebin ! videoconvert ! video/x-raw, format=BGR ! appsink drop=1\"\r\n[ WARN:0@0.033] global cap_gstreamer.cpp:1746 open OpenCV | GStreamer warning: Cannot query video position: status=1, value=22, duration=300\r\nCAP_PROP_AUDIO_DATA_DEPTH: CV_16S\r\nCAP_PROP_AUDIO_SAMPLES_PER_SECOND: 44100\r\nCAP_PROP_AUDIO_TOTAL_CHANNELS: 0\r\nCAP_PROP_AUDIO_TOTAL_STREAMS: [ WARN:0@0.034] global cap_gstreamer.cpp:1903 getProperty OpenCV | GStreamer: CAP_PROP_AUDIO_TOTAL_STREAMS property is not supported\r\n0\r\nTimestamp: 0.0000\r\nTimestamp: 33.0000\r\nTimestamp: 67.0000\r\nTimestamp: 100.0000\r\nTimestamp: 133.0000\r\nTimestamp: 167.0000\r\nTimestamp: 200.0000\r\nTimestamp: 233.0000\r\nTimestamp: 267.0000\r\nTimestamp: 300.0000\r\n0:00:00.335931693 3893501 0x55bbe76ad920 WARN      matroskareadcommon matroska-read-common.c:759:gst_matroska_read_common_parse_skip:<demux:sink> Unknown CueTrackPositions subelement 0xf0 - ignoring\r\n0:00:00.335952823 3893501 0x55bbe76ad920 WARN      matroskareadcommon matroska-read-common.c:759:gst_matroska_read_common_parse_skip:<demux:sink> Unknown CueTrackPositions subelement 0xf0 - ignoring\r\n0:00:00.335988029 3893501 0x55bbe76ad920 WARN                 basesrc gstbasesrc.c:1742:gst_base_src_perform_seek:<filesrc0> duplicate event found 184\r\nTimestamp: 3467.0000\r\nTimestamp: 3500.0000\r\nTimestamp: 3533.0000\r\nTimestamp: 3567.0000\r\nTimestamp: 3600.0000\r\nTimestamp: 3633.0000\r\nTimestamp: 3667.0000\r\nTimestamp: 3700.0000\r\nTimestamp: 3733.0000\r\nTimestamp: 3767.0000\r\nTimestamp: 3800.0000\r\nTimestamp: 3833.0000\r\nTimestamp: 3867.0000\r\nTimestamp: 3900.0000\r\nTimestamp: 3933.0000\r\nTimestamp: 3967.0000\r\nTimestamp: 4000.0000\r\nTimestamp: 4033.0000\r\nTimestamp: 4067.0000\r\nTimestamp: 4100.0000\r\n```\r\n\r\n\r\n---\r\n\r\n```\r\nforce_builders=linux,Linux OpenCL,Linux AVX2,docs\r\n```",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-07T12:03:18Z",
        "closed_at": "2023-10-16T13:39:35Z",
        "merged_at": "2023-10-16T13:39:35Z",
        "body": "Test for https://github.com/opencv/opencv/pull/24180\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-07T10:20:11Z",
        "closed_at": "2023-09-11T08:00:54Z",
        "merged_at": "2023-09-11T08:00:54Z",
        "body": "Related to https://github.com/opencv/opencv/pull/24142\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-06T15:26:06Z",
        "closed_at": "2023-09-07T16:16:27Z",
        "merged_at": null,
        "body": "Fixes the following compilation errors:\r\n\r\n```\r\n.../opencv/modules/ts/src/ts_gtest.cpp(9771,39): error: use of undeclared identifier '_CRTDBG_REPORT_FLAG'\r\n    old_crtdbg_flag_ = _CrtSetDbgFlag(_CRTDBG_REPORT_FLAG);\r\n                                      ^\r\n.../opencv/modules/ts/src/ts_gtest.cpp(9774,40): error: use of undeclared identifier '_CRTDBG_ALLOC_MEM_DF'\r\n    _CrtSetDbgFlag(old_crtdbg_flag_ & ~_CRTDBG_ALLOC_MEM_DF);\r\n                                       ^\r\n.../opencv/modules/ts/src/ts_gtest.cpp(9781,5): error: use of undeclared identifier '_CrtSetDbgFlag'\r\n    _CrtSetDbgFlag(old_crtdbg_flag_);\r\n    ^\r\n3 errors generated.\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 98,
        "deletions": 30,
        "changed_files": 3,
        "created_at": "2023-09-06T14:12:18Z",
        "closed_at": "2023-10-03T14:23:32Z",
        "merged_at": "2023-10-03T14:23:32Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nresolves https://github.com/opencv/opencv/issues/23895\r\nrelated: https://github.com/opencv/opencv/pull/12278\r\n\r\n* DIST_MASK_3 and DIST_MASK_5 maximal distance increased from 8192 to 65533 +/- 1\r\n* Fix squares processing at DIST_MASK_PRECISE\r\n* - [ ] TODO: Check with IPP\r\n\r\n```cpp\r\n    cv::Mat gray = cv::imread(\"opencv/samples/data/stuff.jpg\", cv::ImreadModes::IMREAD_GRAYSCALE);\r\n\r\n    cv::Mat gray_resize;\r\n    cv::resize(gray, gray_resize, cv::Size(70000,70000), 0.0, 0.0, cv::INTER_LINEAR);\r\n\r\n    gray_resize = gray_resize >= 100;\r\n\r\n    cv::Mat dist;\r\n    cv::distanceTransform(gray_resize, dist, cv::DIST_L2, cv::DIST_MASK_5, CV_32F);\r\n\r\n    double minVal, maxVal;\r\n    minMaxLoc(dist, &minVal, &maxVal);\r\n    dist = 255 * (dist - minVal) / (maxVal - minVal);\r\n    std::cout << minVal << \" \" << maxVal << std::endl;\r\n\r\n    cv::Mat dist_resize;\r\n    cv::resize(dist, dist_resize, cv::Size(1024,1024), 0.0, 0.0, cv::INTER_LINEAR);\r\n\r\n    cv::String outfilePath = \"test_mask_5.png\";\r\n    cv::imwrite(outfilePath, dist_resize);\r\n```\r\n\r\nmask | 4.x | PR |\r\n----------|--------------|--------------\r\nDIST_MASK_3 | <img src=\"https://github.com/opencv/opencv/assets/25801568/23e5de76-a8ba-4eb8-ab03-fa55672834be\" width=\"128\"> | <img src=\"https://github.com/opencv/opencv/assets/25801568/e1149f6a-49d6-47bd-a2a8-20bb7e4dafa4\" width=\"128\"> |\r\nDIST_MASK_5 | <img src=\"https://github.com/opencv/opencv/assets/25801568/98aba29b-8865-4b9a-8066-669b16d175c9\" width=\"128\"> | <img src=\"https://github.com/opencv/opencv/assets/25801568/54f62ed2-9ef6-485f-bd63-48cc96accd7d\" width=\"128\"> |\r\nDIST_MASK_PRECISE | <img src=\"https://github.com/opencv/opencv/assets/25801568/c4d79451-fd7a-461f-98fc-13060c63f473\" width=\"128\"> | <img src=\"https://github.com/opencv/opencv/assets/25801568/b5bfcaf5-bc48-40ba-b8e3-d000e5ab48db\" width=\"128\">|\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 93,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-09-06T12:59:44Z",
        "closed_at": "2023-10-06T09:31:54Z",
        "merged_at": "2023-10-06T09:31:54Z",
        "body": "Hello,\r\n\r\nThis change proposes the addition of HAL hooks for cv::flip() and cv::rotate() functions from OpenCV core module.\r\nFlip and rotation are functions commonly available from 2D hardware accelerators. This is convenient provision to enable custom optimized implementation of image flip/rotation on systems embedding such accelerator.\r\n\r\nThank you\r\n \r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 26,
        "changed_files": 10,
        "created_at": "2023-09-06T10:46:02Z",
        "closed_at": "2023-09-06T14:50:51Z",
        "merged_at": "2023-09-06T14:50:51Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 226,
        "deletions": 2610,
        "changed_files": 59,
        "created_at": "2023-09-06T09:06:46Z",
        "closed_at": "2023-10-13T13:53:19Z",
        "merged_at": "2023-10-13T13:53:19Z",
        "body": "Merge with https://github.com/opencv/opencv_extra/pull/1092.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-05T22:17:59Z",
        "closed_at": "2023-09-08T08:01:44Z",
        "merged_at": "2023-09-08T08:01:44Z",
        "body": "Fixes https://github.com/opencv/opencv/issues/24222\r\n\r\nNow, if the size of base Dictionary is higher than markers, only the first markers in base Dictionary are taken and no new marker is added.\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-09-05T14:33:52Z",
        "closed_at": "2023-09-06T06:16:58Z",
        "merged_at": "2023-09-06T06:16:58Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4677,
        "deletions": 3,
        "changed_files": 35,
        "created_at": "2023-09-05T11:57:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [X] There is a reference to the original bug report and related work\r\n- [X] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [X] The feature is well documented and sample code can be built with the project CMake\r\n\r\n! **There is known flaw in the code: usage of `KalmanFilterNoOpencv` class. This should be reworked to use OpenCV version or just refactored.**\r\n\r\n! **Link to the original implementation is:** https://github.com/dlstreamer/dlstreamer/tree/master/gst/elements/gvatrack/vas",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 85,
        "changed_files": 4,
        "created_at": "2023-09-05T11:38:50Z",
        "closed_at": "2023-09-05T13:35:47Z",
        "merged_at": "2023-09-05T13:35:47Z",
        "body": "Reverts https://github.com/opencv/opencv/pull/24186\r\n\r\nCurrent test skipping issue:\r\n```\r\n./bin/opencv_test_dnn --gtest_filter=Test_Caffe_layers*\r\n...\r\n[       OK ] Test_Caffe_layers.DeConvolution/3 (3 ms)\r\n[ RUN      ] Test_Caffe_layers.InnerProduct/0, where GetParam() = NGRAPH/CPU\r\n[       OK ] Test_Caffe_layers.InnerProduct/0 (8 ms)\r\n[ RUN      ] Test_Caffe_layers.InnerProduct/1, where GetParam() = OCV/OCL\r\n[       OK ] Test_Caffe_layers.InnerProduct/1 (4 ms)\r\n[ RUN      ] Test_Caffe_layers.InnerProduct/2, where GetParam() = OCV/OCL_FP16\r\n[     SKIP ] Test with tag 'dnn_skip_ocl_fp16' is skipped ('dnn_skip_ocl_fp16' is in skip list)\r\n[       OK ] Test_Caffe_layers.InnerProduct/2 (0 ms)\r\n[ RUN      ] Test_Caffe_layers.InnerProduct/3, where GetParam() = OCV/CPU\r\n[     SKIP ] \r\n[       OK ] Test_Caffe_layers.InnerProduct/3 (0 ms)\r\n[ RUN      ] Test_Caffe_layers.Pooling_max/0, where GetParam() = NGRAPH/CPU\r\n[     SKIP ] \r\n[       OK ] Test_Caffe_layers.Pooling_max/0 (0 ms)\r\n[ RUN      ] Test_Caffe_layers.Pooling_max/1, where GetParam() = OCV/OCL\r\n[     SKIP ] \r\n[       OK ] Test_Caffe_layers.Pooling_max/1 (0 ms)\r\n[ RUN      ] Test_Caffe_layers.Pooling_max/2, where GetParam() = OCV/OCL_FP16\r\n[     SKIP ] \r\n[       OK ] Test_Caffe_layers.Pooling_max/2 (0 ms)\r\n[ RUN      ] Test_Caffe_layers.Pooling_max/3, where GetParam() = OCV/CPU\r\n[     SKIP ] \r\n[       OK ] Test_Caffe_layers.Pooling_max/3 (0 ms)\r\n```\r\nAll further tests are skipped.\r\n\r\nMore focused test invocation works well:\r\n```\r\n./bin/opencv_test_dnn --gtest_filter=Test_Caffe_layers.Pooling_max*\r\n...\r\n[ RUN      ] Test_Caffe_layers.Pooling_max/0, where GetParam() = NGRAPH/CPU\r\n[       OK ] Test_Caffe_layers.Pooling_max/0 (23 ms)\r\n[ RUN      ] Test_Caffe_layers.Pooling_max/1, where GetParam() = OCV/OCL\r\n[       OK ] Test_Caffe_layers.Pooling_max/1 (4 ms)\r\n[ RUN      ] Test_Caffe_layers.Pooling_max/2, where GetParam() = OCV/OCL_FP16\r\n[       OK ] Test_Caffe_layers.Pooling_max/2 (2 ms)\r\n[ RUN      ] Test_Caffe_layers.Pooling_max/3, where GetParam() = OCV/CPU\r\n[       OK ] Test_Caffe_layers.Pooling_max/3 (1 ms)\r\n[----------] 4 tests from Test_Caffe_layers (30 ms total)\r\n\r\n[----------] Global test environment tear-down\r\n[==========] 4 tests from 1 test case ran. (30 ms total)\r\n[  PASSED  ] 4 tests.\r\n```\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-05T05:59:39Z",
        "closed_at": "2023-09-05T07:20:44Z",
        "merged_at": "2023-09-05T07:20:44Z",
        "body": "This PR is used to finish https://github.com/opencv/opencv/issues/24016 and https://github.com/opencv/opencv/issues/24017\r\n\r\nWhen enable the `FAST MATH` option, the accuracy will drop a little, but the results are still acceptable. So I change the threshold that make test can pass on Ubuntu. The results visualization are below.\r\n\r\n**FasterRCNN_vgg16**\r\n| Real | Excepted|\r\n|-|-|\r\n|![real vgg](https://github.com/opencv/opencv/assets/49567307/c15cc69b-4a96-42a9-a113-e64669512b41)|![excepted vgg](https://github.com/opencv/opencv/assets/49567307/0461445e-27c5-452e-aa25-14aecd81160e)|\r\n\r\n**detail**\r\n\r\n\r\n\u00a0 | real score | expected score | score diff | IoU\r\n-- | -- | -- | -- | --\r\nCAR | 0.997029 | 0.997022 | 7E-06 | 0.970774\r\nDOG | 0.993107 | 0.993028 | 7.9E-05 | 0.976928\r\nBICYCLE | 0.9484 | 0.949398 | 0.000998 | 0.993465\r\n\r\n\r\n\r\n\r\n\r\n**FasterRCNN_zf**\r\n| Real | Excepted|\r\n|--|--|\r\n|![real zf](https://github.com/opencv/opencv/assets/49567307/925bf2ed-294f-4862-816e-8198790d82ce)|![excepted zf](https://github.com/opencv/opencv/assets/49567307/7a0ef8f0-c882-4da3-ac5f-a3504a3b93ab)|\r\n\r\n**detail**\r\n\r\n\r\n\u00a0 | real score | expected score | score diff | IoU\r\n-- | -- | -- | -- | --\r\nCAR | 0.986261 | 0.988779 | 0.002518 | 0.938888\r\nDOG | 0.967198 | 0.967198 | 0 | 0.999996\r\nBICYCLE | 0.901209 | 0.90121 | 1E-06 | 0.999997\r\n\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2023-09-04T09:50:09Z",
        "closed_at": "2023-09-08T11:21:39Z",
        "merged_at": "2023-09-08T11:21:39Z",
        "body": "Until some recent changes were made, OpenCV selected the default DNN backend either as `DNN_BACKEND_INFERENCE_ENGINE`, if available, or `DNN_BACKEND_OPENCV`, otherwise. Recently, this was removed because OpenCV supports multiple plugins/backends, as discussed in #24085.\r\n\r\nThis patch has two aims: First, fix the documentation since there is no extended default backend logic anymore. Next, it introduces a CMake variable `OPENCV_DNN_BACKEND_DEFAULT` that can be used to define a user-specific default backend. If this is not set, it defaults to `DNN_BACKEND_OPENCV`. Still, compiling with OpenVINO/Inference Engine support allows to default to it by adding the CMake argument `-D \"OPENCV_DNN_BACKEND_DEFAULT=DNN_BACKEND_INFERENCE_ENGINE\"`. Selecting a different default backend is similarly possible, only define `OPENCV_DNN_BACKEND_DEFAULT` accordingly (e.g. for CUDA). In any case, defining a configuration parameter (e.g. as an environment variable) overrules the compiled-in default such that no existing logic is changed.\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [X] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 13,
        "changed_files": 2,
        "created_at": "2023-09-02T18:01:07Z",
        "closed_at": "2023-09-05T07:44:57Z",
        "merged_at": "2023-09-05T07:44:57Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nNot significant, but we can reduce number of multiplications while compute two lines intersection. Both methods are used heavily in their modules.\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-09-02T10:05:50Z",
        "closed_at": "2023-09-04T09:51:02Z",
        "merged_at": "2023-09-04T09:51:02Z",
        "body": "fix https://github.com/opencv/opencv/issues/24213\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 51,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2023-09-01T12:46:25Z",
        "closed_at": "2023-09-05T12:21:11Z",
        "merged_at": "2023-09-05T12:21:11Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nresolves https://github.com/opencv/opencv/issues/23895\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-31T19:00:06Z",
        "closed_at": "2023-09-05T15:42:58Z",
        "merged_at": "2023-09-05T15:42:58Z",
        "body": "The address sanitizer highlighted this issue in our code base. It\r\nlooks like the code is currently grabbing a pointer to a temporary\r\nobject and then performing operations on it.\r\n\r\nI printed some information right before the asan crash:\r\n\r\n    eigensolver address: 0x7f0ad95032f0\r\n    eigensolver size: 4528\r\n    eig_vecs_ ptr: 0x7f0ad95045e0\r\n    eig_vecs_ offset: 4848\r\n\r\nThis shows that `eig_vecs_` points past the end of `eigensolver`. In\r\nother words, it points at the temporary object created by the\r\n`eigensolver.eigenvectors()` call.\r\n\r\nCompare the docs for `.eigenvalues()`:\r\nhttps://eigen.tuxfamily.org/dox/classEigen_1_1EigenSolver.html#a0f507ad7ab14797882f474ca8f2773e7\r\nto the docs for `.eigenvectors()`:\r\nhttps://eigen.tuxfamily.org/dox/classEigen_1_1EigenSolver.html#a66288022802172e3ee059283b26201d7\r\n\r\nThe difference in return types is interesting. `.eigenvalues()`\r\nreturns a reference. But `.eigenvectors()` returns a matrix.\r\n\r\nThis patch here fixes the problem by saving the temporary object and\r\nthen grabbing a pointer into it.\r\n\r\nThis is a curated snippet of the original asan failure:\r\n\r\n    ==12==ERROR: AddressSanitizer: stack-use-after-scope on address 0x7fc633704640 at pc 0x7fc64f7f1593 bp 0x7ffe8875fc90 sp 0x7ffe8875fc88\r\n    READ of size 8 at 0x7fc633704640 thread T0\r\n        #0 0x7fc64f7f1592 in cv::usac::EssentialMinimalSolverStewenius5ptsImpl::estimate(std::__1::vector<int, std::__1::allocator<int> > const&, std::__1::vector<cv::Mat, std::__1::allocator<cv::Mat> >&) const /proc/self/cwd/external/com_github_opencv_opencv/modules/calib3d/src/usac/essential_solver.cpp:181:48\r\n        #1 0x7fc64f915d92 in cv::usac::EssentialEstimatorImpl::estimateModels(std::__1::vector<int, std::__1::allocator<int> > const&, std::__1::vector<cv::Mat, std::__1::allocator<cv::Mat> >&) const /proc/self/cwd/external/com_github_opencv_opencv/modules/calib3d/src/usac/estimator.cpp:110:46\r\n        #2 0x7fc64fa74fb0 in cv::usac::Ransac::run(cv::Ptr<cv::usac::RansacOutput>&) /proc/self/cwd/external/com_github_opencv_opencv/modules/calib3d/src/usac/ransac_solvers.cpp:152:58\r\n        #3 0x7fc64fa6cd8e in cv::usac::run(cv::Ptr<cv::usac::Model const> const&, cv::_InputArray const&, cv::_InputArray const&, int, cv::Ptr<cv::usac::RansacOutput>&, cv::_InputArray const&, cv::_InputArray const&, cv::_InputArray const&, cv::_InputArray const&) /proc/self/cwd/external/com_github_opencv_opencv/modules/calib3d/src/usac/ransac_solvers.cpp:1010:16\r\n        #4 0x7fc64fa6fb46 in cv::usac::findEssentialMat(cv::_InputArray const&, cv::_InputArray const&, cv::_InputArray const&, int, double, double, cv::_OutputArray const&) /proc/self/cwd/external/com_github_opencv_opencv/modules/calib3d/src/usac/ransac_solvers.cpp:527:9\r\n        #5 0x7fc64f3b5522 in cv::findEssentialMat(cv::_InputArray const&, cv::_InputArray const&, cv::_InputArray const&, int, double, double, int, cv::_OutputArray const&) /proc/self/cwd/external/com_github_opencv_opencv/modules/calib3d/src/five-point.cpp:437:16\r\n        #6 0x7fc64f3b7e00 in cv::findEssentialMat(cv::_InputArray const&, cv::_InputArray const&, cv::_InputArray const&, int, double, double, cv::_OutputArray const&) /proc/self/cwd/external/com_github_opencv_opencv/modules/calib3d/src/five-point.cpp:486:12\r\n        ...\r\n\r\n    Address 0x7fc633704640 is located in stack of thread T0 at offset 17984 in frame\r\n        #0 0x7fc64f7ed4ff in cv::usac::EssentialMinimalSolverStewenius5ptsImpl::estimate(std::__1::vector<int, std::__1::allocator<int> > const&, std::__1::vector<cv::Mat, std::__1::allocator<cv::Mat> >&) const /proc/self/cwd/external/com_github_opencv_opencv/modules/calib3d/src/usac/essential_solver.cpp:36\r\n\r\n      This frame has 63 object(s):\r\n        [32, 56) 'coefficients' (line 38)\r\n        [96, 384) 'ee' (line 55)\r\n        ...\r\n        [13040, 17568) 'eigensolver' (line 142)\r\n        [17824, 17840) 'ref.tmp518' (line 143)\r\n        [17856, 17872) 'ref.tmp523' (line 144)\r\n        [17888, 19488) 'ref.tmp524' (line 144) <== Memory access at offset 17984 is inside this variable\r\n        [19616, 19640) 'ref.tmp532' (line 169)\r\n        ...\r\n\r\nThe crash report says that we're accessing a temporary object from\r\nline 144 when we shouldn't be. Line 144 looks like this:\r\nhttps://github.com/opencv/opencv/blob/4.6.0/modules/calib3d/src/usac/essential_solver.cpp#L144\r\n\r\n    const auto * const eig_vecs_ = (double *) eigensolver.eigenvectors().real().data();\r\n\r\nWe are using version 4.6.0 for this, but the problem is present on the\r\n4.x branch.\r\n\r\nNote that I am dropping the `.real()` call here. I think that is safe because\r\nof the code further down (line 277 in the most recent version):\r\n```cpp\r\n    const int eig_i = 20 * i + 12; // eigen stores imaginary values too\r\n```\r\nThe code appears to expect to have to skip doubles for the imaginary parts\r\nof the complex numbers.\r\n\r\nAdmittedly, I couldn't find a test case that exercised this code path to \r\nvalidate correctness.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-31T17:47:42Z",
        "closed_at": "2023-10-03T14:36:15Z",
        "merged_at": null,
        "body": "**DO NOT MERGE**",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2023-08-31T15:45:41Z",
        "closed_at": "2023-09-05T10:45:27Z",
        "merged_at": "2023-09-05T10:45:27Z",
        "body": "resolves #19634\r\nresolves #24171\r\nEnabled parallel processing, that was temporary disabled in #19812 because of the issue #19634\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-29T22:17:58Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Use NEON instructions for ARM64 (implementation based on https://github.com/microsoft/STL/pull/2127, which is Apache licensed).\r\n\r\nGodbolt output here: https://godbolt.org/z/q7GPTqT14\r\n\r\n### Pull Request Readiness Checklist\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 173,
        "deletions": 110,
        "changed_files": 4,
        "created_at": "2023-08-28T15:13:46Z",
        "closed_at": "2023-09-05T14:05:47Z",
        "merged_at": "2023-09-05T14:05:47Z",
        "body": "Amend reference to online hosted file with the full license quotation as mandated by the original license.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-28T03:22:52Z",
        "closed_at": "2023-09-04T06:32:46Z",
        "merged_at": "2023-09-04T06:32:46Z",
        "body": "If building with -mcpu=native or any other setting which implies the current CPU has FP16 but with intrinsics disabled, we mistakenly try to use it even though convolution.hpp conditionally defines it correctly based on whether we should *use it*. convolution.cpp on the other hand was mismatched and trying to use it if the CPU supported it, even if not enabled in the build system.\r\n\r\nMake the guards match.\r\n\r\nBug: https://bugs.gentoo.org/913031\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [X] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 448,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2023-08-27T12:02:50Z",
        "closed_at": "2023-09-19T12:36:39Z",
        "merged_at": "2023-09-19T12:36:39Z",
        "body": "Vit tracker(vision transformer tracker) is a much better model for real-time object tracking. Vit tracker can achieve speeds exceeding nanotrack by 20% in single-threaded mode with ARM chip, and the advantage becomes even more pronounced in multi-threaded mode. In addition, on the dataset, vit tracker demonstrates better performance compared to nanotrack. Moreover, vit trackerprovides confidence values during the tracking process, which can be used to determine if the tracking is currently lost.\r\nopencv_zoo: https://github.com/opencv/opencv_zoo/pull/194\r\nopencv_extra: [https://github.com/opencv/opencv_extra/pull/1088](https://github.com/opencv/opencv_extra/pull/1088)\r\n\r\n# Performance comparison is as follows:\r\nNOTE: The speed below is tested by **onnxruntime** because opencv has poor support for the transformer architecture for now.\r\n\r\nONNX speed test on ARM platform(apple M2)(ms):\r\n| thread nums | 1| 2| 3| 4|\r\n|--------|--------|--------|--------|--------|\r\n| nanotrack| 5.25| 4.86| 4.72| 4.49|\r\n| vit tracker| 4.18| 2.41| 1.97| **1.46 (3X)**|\r\n\r\nONNX speed test on x86 platform(intel i3 10105)(ms):\r\n| thread nums | 1| 2| 3| 4|\r\n|--------|--------|--------|--------|--------|\r\n| nanotrack|3.20|2.75|2.46|2.55|\r\n| vit tracker|3.84|2.37|2.10|2.01|\r\n\r\nopencv speed test on x86 platform(intel i3 10105)(ms):\r\n| thread nums | 1| 2| 3| 4|\r\n|--------|--------|--------|--------|--------|\r\n| vit tracker|31.3|31.4|31.4|31.4|\r\n\r\npreformance test on lasot dataset(AUC is the most important data. Higher AUC means better tracker):\r\n\r\n|LASOT | AUC| P| Pnorm|\r\n|--------|--------|--------|--------|\r\n| nanotrack| 46.8| 45.0| 43.3|\r\n| vit tracker| 48.6| 44.8| 54.7|\r\n\r\n[https://youtu.be/MJiPnu1ZQRI](https://youtu.be/MJiPnu1ZQRI)\r\n In target tracking tasks, the score is an important indicator that can indicate whether the current target is lost. In the video, vit tracker can track the target and display the current score in the upper left corner of the video. When the target is lost, the score drops significantly. While nanotrack will only return 0.9 score in any situation, so that we cannot determine whether the target is lost.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-08-27T11:21:12Z",
        "closed_at": "2023-09-04T07:54:44Z",
        "merged_at": "2023-09-04T07:54:43Z",
        "body": "libtiff homepage is moved to http://www.simplesystems.org/libtiff/ around 2004.\r\nSee https://en.wikipedia.org/wiki/LibTIFF\r\n\r\nHowever, some files include old URLs, they should be update. \r\nThis fix contains only changing source code comment, not chaning any behavious.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1535,
        "deletions": 194,
        "changed_files": 17,
        "created_at": "2023-08-27T08:30:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "**Part of schedule** https://github.com/opencv/opencv/issues/23624\r\n**Merged with** https://github.com/opencv/opencv_extra/pull/1100\r\n**Merged after** https://github.com/opencv/opencv/pull/23985\r\n\r\nThis pull request aims to implement whole point cloud compression process, including compression to encode pointcloud data to a compressed binary file, and decompression to recover original pointcloud from it.\r\n\r\nBelow is the flowchart illustrating the process of point cloud compression.\r\n\r\n![procedure](https://github.com/opencv/opencv/assets/82894523/6989eabe-c684-435b-86df-879a79e4fdf6)\r\n\r\nBelow is the visualization of  reconstructed pointcloud after decompression.\r\n\r\n![7-3](https://github.com/opencv/opencv/assets/82894523/bb025db5-b4dd-48bc-827f-d0e92f4a61d2)\r\n\r\nThe point cloud compression and decompression processes can be executed by utilizing the interface of the top-level class `PointCloudCompression`. User can specify two parameters: \r\n\r\n\"Resolution\" marks the leaf size(least voxel size)of octree. It's related to geometry precision.\r\n\r\n\"Qstep\" is parameter in RAHT algorithm, relates to attribute(color) precision.\r\n\r\n(Update): We now add zlib support for Entropy compression and decompression. Since it outperforms out old method, we set it as default algorithm. It can be swapped by changing \"codingMethod\" initial value in the front of modules/3d/src/pcc.cpp\r\n\r\nDuring the algorithm evaluation, the compression rate was evaluated using `bpp` (bits per point), while the reduction quality was measured by means of `PSNR` (Peak Signal-to-Noise Ratio).\r\n\r\nNote that the calculation of `PSNR` involves third-party tool(pc-error from MPEG), thus the function for computing `PSNR` has not been included in the test file. \r\n\r\nThe function `generateSphere()` is used to generate a point cloud file for testing and then fill it with gradient colors. The test pointCloud is a sphere with origin (0,0,0), radius 10, and thickness 0.5. The test results are as follows.\r\n\r\n| resolution | qStep | PSNR(geometry) | PSNR(red)  |      | PSNR(green) | PSNR(blue) |\r\n| ---------- | ----- | -------------- | ---------- | ---- | ----------- | ---------- |\r\n| 0.001      | 10    | 69.4192039     | 42.9109938 |      | 46.4768975  | 41.4283016 |\r\n| 0.0005     | 10    | 75.4335742     | 42.9110219 |      | 46.4763873  | 41.4280655 |\r\n| 0.001      | 5     | 69.4192039     | 46.4302912 |      | 48.8096852  | 45.5494642 |\r\n| 0.0005     | 5     | 75.4335742     | 46.4339514 |      | 48.8141815  | 45.5434763 |\r\n\r\n\r\n\r\n\r\n\r\nThe popular open source point cloud dataset `dress_raw.ply` is also used for testing. The test results are as follows\r\n\r\n| resolution | qStep | PSNR(geometry) | PSNR(red)  |      | PSNR(green) | PSNR(blue) |\r\n| ---------- | ----- | -------------- | ---------- | ---- | ----------- | ---------- |\r\n| 0.5        | 10    | 19.0308999     | 39.5371127 |      | 42.0984355  | 42.1456074 |\r\n| 0.1        | 10    | 33.0109437     | 39.5116722 |      | 42.0404748  | 42.0833495 |\r\n| 0.5        | 5     | 19.0308999     | 44.617323  |      | 46.4271363  | 46.4688072 |\r\n| 0.1        | 5     | 33.0109437     | 44.6099738 |      | 46.3824792  | 46.4255845 |\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 136,
        "deletions": 95,
        "changed_files": 26,
        "created_at": "2023-08-25T18:17:55Z",
        "closed_at": "2023-09-05T15:08:28Z",
        "merged_at": "2023-09-05T15:08:28Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nresolves https://github.com/opencv/opencv/issues/24102\r\n\r\n* Use `ngraph::Output<ngraph::Node>>` insead of `std::shared_ptr<ngraph::Node>` as a backend wrapper. It lets access to multi-output nodes: https://github.com/opencv/opencv/blob/588ddf1b181aa7243144b27d65fc7690fb89e344/modules/dnn/src/net_openvino.cpp#L501-L504\r\n* All layers can be customizable with OpenVINO >= 2022.1. nGraph reference code used for default layer implementation does not required CPU plugin also (might be tested by commenting CPU plugin at `/opt/intel/openvino/runtime/lib/intel64/plugins.xml`).\r\n* Correct inference if only intermediate blobs requested.\r\n\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Custom\r\n\r\nXbuild_image:Custom=ubuntu-openvino-2021.4.2:20.04\r\nbuild_image:Custom=ubuntu-openvino-2022.1.0:20.04\r\n\r\ntest_modules:Custom=dnn,python2,python3,java,gapi,video\r\n\r\nbuildworker:Custom=linux-1\r\n# disabled due high memory usage: test_opencl:Custom=ON\r\ntest_opencl:Custom=ON\r\ntest_bigdata:Custom=1\r\ntest_filter:Custom=*\r\n```",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-08-24T13:54:05Z",
        "closed_at": "2023-08-27T17:46:25Z",
        "merged_at": "2023-08-27T17:46:25Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 585,
        "deletions": 1,
        "changed_files": 21,
        "created_at": "2023-08-24T11:55:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "For now, OpenCV only has public fuzz tests through [oss-fuzz](https://github.com/google/oss-fuzz/tree/master/projects/opencv). There are two issues with the current oss-fuzz usage:\r\n- tests have to be written into the fuzz test repo (that is the old recommended way)\r\n- tests use an old fuzzer API where a random buffer has to be interpreted into input arguments\r\n\r\nThis pull request proposes to write fuzz tests directly into the OpenCV repo (inside a <module_name/fuzz folder) and using the [fuzztest](https://github.com/google/fuzztest) framework, which allows for much easier boilerplate (e.g. to generate random 2D `cv::Mat` as provided in [modules/ts/include/opencv2/ts/ts_fuzztest.hpp](https://github.com/opencv/opencv/compare/4.x...vrabaud:opencv:fuzztest#diff-ac0102a29e51408665ec6d3fc11f17ab079cbcf0f8517a5551c37a12d7134e68).\r\n\r\nThis pull request has to be used with https://github.com/vrabaud/oss-fuzz which allows oss-fuzz to use upstream OpenCV tests.\r\n\r\nTo test this pull request locally you have to clone my oss-fuzz fork that references this current pull request to build the tests on Debian/Ubuntu:\r\n```bash\r\ngit clone --depth=1 git@github.com:vrabaud/oss-fuzz.git\r\ncd oss-fuzz\r\npython3 infra/helper.py build_image opencv\r\n# enter 'y' and wait for everything to be downloaded\r\npython3 infra/helper.py build_fuzzers --sanitizer address opencv\r\n# wait for the tests to be built\r\n```\r\n(more doc at https://google.github.io/oss-fuzz/getting-started/new-project-guide/#testing-locally)\r\n\r\nAnd you can then use the built tests to find bugs:\r\n```bash\r\npython3 infra/helper.py run_fuzzer opencv opencv_fuzz_imgproc@Imgproc.FuzzCvtColor\r\n --sanitizer address\r\n```\r\nA bug might be found after a loooong time (days).\r\n\r\nWith this pull request, I am requesting a review about the CMake files, and about the design decision about having local fuzz tests in their own 'fuzz' folder.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-08-23T07:33:59Z",
        "closed_at": "2023-08-23T12:00:54Z",
        "merged_at": "2023-08-23T12:00:54Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nrelated: https://github.com/opencv/opencv/pull/24039#discussion_r1302106169\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Custom\r\n\r\nbuild_image:Custom=ubuntu-openvino-2021.4.2:20.04\r\nXbuild_image:Custom=ubuntu-openvino-2022.1.0:20.04\r\n\r\ntest_modules:Custom=dnn,python2,python3,java,gapi,video\r\n\r\nbuildworker:Custom=linux-1\r\n# disabled due high memory usage: test_opencl:Custom=ON\r\ntest_bigdata:Custom=1\r\ntest_filter:Custom=*\r\n```",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2023-08-23T06:54:11Z",
        "closed_at": "2023-09-08T13:32:21Z",
        "merged_at": null,
        "body": "Moved HAVE_ANDROID_MEDIANDK and HAVE_FLATBUFFERS from cmake compile definitions to cvconfig.h so Android SDK can be converted to AAR library",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 85,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2023-08-22T12:38:33Z",
        "closed_at": "2023-08-25T11:53:35Z",
        "merged_at": "2023-08-25T11:53:35Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nIn case of `SkipTestException` throws in the fixture's constructor, test should be skipped. Reproducer added to `core` module tests.\r\n\r\nrelated: https://github.com/opencv/opencv/pull/24157\r\nrelated: https://github.com/opencv/ci-gha-workflow/pull/109\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Win64 OpenCL\r\n```",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-19T11:12:13Z",
        "closed_at": "2023-09-07T12:47:00Z",
        "merged_at": "2023-09-07T12:47:00Z",
        "body": "example to reproduce the problem\r\n```cpp\r\n#include <iostream>\r\n\r\n#include <opencv2/core.hpp>\r\n#include <opencv2/highgui.hpp>\r\n#include <opencv2/imgproc.hpp>\r\n#include <opencv2/videoio.hpp>\r\n\r\nusing namespace cv;\r\nusing namespace std;\r\n\r\nvoid help_func(VideoCapture& cap) {\r\n  int height      = cap.get(cv::CAP_PROP_FRAME_HEIGHT);\r\n  int width       = cap.get(cv::CAP_PROP_FRAME_WIDTH);\r\n  int pixel_type  = cap.get(cv::CAP_PROP_FORMAT);\r\n  int channels    = CV_MAT_CN(pixel_type);\r\n  int pixel_bytes = CV_ELEM_SIZE(pixel_type);\r\n  bool to_bgr     = static_cast<bool>(cap.get(cv::CAP_PROP_CONVERT_RGB));\r\n\r\n  std::cout << \"backend: \" << cap.getBackendName() << std::endl;\r\n  std::cout << std::hex << \"fourcc: \" << static_cast<int>(cap.get(cv::CAP_PROP_FOURCC)) << std::endl;\r\n  std::cout << std::boolalpha << \"to_bgr: \" << to_bgr << std::endl;\r\n  std::cout << std::dec << \"height: \" << height << \" width: \" << width << \" channels: \" << channels\r\n            << \" pixel_bytes: \" << pixel_bytes << std::endl;\r\n\r\n  std::cout << \"-----------------------------------------\" << std::endl;\r\n}\r\n\r\nint main(int, char**) {\r\n\r\n  VideoCapture cap;\r\n  cap.open(\"/dev/video0\");\r\n  if (!cap.isOpened()) {\r\n    cerr << \"ERROR! Unable to open camera\\n\";\r\n    return -1;\r\n  }\r\n\r\n  {\r\n    help_func(cap);\r\n  }\r\n\r\n  {\r\n    cap.set(cv::CAP_PROP_FRAME_HEIGHT, 1080);\r\n    cap.set(cv::CAP_PROP_FRAME_WIDTH, 1920);\r\n    cap.set(cv::CAP_PROP_CONVERT_RGB, 0);\r\n    help_func(cap);\r\n  }\r\n\r\n  // {\r\n  //   cap.set(cv::CAP_PROP_CONVERT_RGB, 0);\r\n  //   cap.set(cv::CAP_PROP_FRAME_HEIGHT, 1080);\r\n  //   cap.set(cv::CAP_PROP_FRAME_WIDTH, 1920);\r\n  //   help_func(cap);\r\n  // }\r\n\r\n  Mat frame;\r\n  int frame_idx = 0;\r\n  while (cap.read(frame)) {\r\n    std::cout << \"frame index: \" << frame_idx++ << std::endl;\r\n    help_func(cap);\r\n    if (frame.empty()) {\r\n      cerr << \"ERROR! blank frame grabbed\\n\";\r\n      break;\r\n    }\r\n    Mat bgr;\r\n    if (cap.get(cv::CAP_PROP_CONVERT_RGB)) {\r\n      bgr = frame;\r\n    } else {\r\n      cv::cvtColor(frame, bgr, cv::COLOR_YUV2BGR_YUYV);\r\n    }\r\n\r\n    imshow(\"frame\", bgr);\r\n    if (waitKey(5) >= 0) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n```\r\nThe above code will get the wrong channels. By changing lines 41-45 like below, can get the correct channels.\r\n<img width=\"747\" alt=\"code\" src=\"https://github.com/opencv/opencv/assets/16932438/55f44463-8465-4dba-a979-e71a50d58008\">\r\nThis is because `cap.set(cv::CAP_PROP_FRAME_HEIGHT, 1080);` and `cap.set(cv::CAP_PROP_FRAME_WIDTH, 1920);` reinitialize the `frame`, but `cap.set(cv::CAP_PROP_CONVERT_RGB, 0);` not.\r\nLog info.\r\n<img width=\"691\" alt=\"log\" src=\"https://github.com/opencv/opencv/assets/16932438/236e3b26-f5b2-447a-b202-bcd607c71af6\">\r\nWe can also observe that we get the correct channels in the while loop. This is because:\r\nhttps://github.com/opencv/opencv/blob/ca0bd70cde431b1dd211254011dd9bcf965f582f/modules/videoio/src/cap_v4l.cpp#L2309-L2310\r\nreinitialize the `frame`.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 4,
        "changed_files": 6,
        "created_at": "2023-08-19T00:15:18Z",
        "closed_at": "2023-08-23T19:53:11Z",
        "merged_at": "2023-08-23T19:53:11Z",
        "body": "fix https://github.com/opencv/opencv/issues/24145\r\nfix https://github.com/opencv/opencv/issues/24146\r\nrelates #13085\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 319,
        "deletions": 3,
        "changed_files": 8,
        "created_at": "2023-08-18T22:36:30Z",
        "closed_at": "2023-09-04T09:48:53Z",
        "merged_at": "2023-09-04T09:48:53Z",
        "body": "- Added a new IStreamSource class: in fact, a wrapper over a concurrent queue;\r\n- Added minimal example on how it can be used;\r\n- Extended IStreamSource with optional \"halt\" interface to break the blocking calls in the emitter threads when required to stop.\r\n- Introduced a QueueInput class which allows to pass the whole graph's input vector at once. In fact it is a thin wrapper atop of individual Queue Sources.\r\n\r\nThere is a hidden trap found with our type system as described in https://github.com/orgs/g-api-org/discussions/2\r\n\r\nWhile it works even in this form, it should be addressed somewhere in the 5.0 timeframe.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-18T12:11:04Z",
        "closed_at": "2023-08-18T15:50:31Z",
        "merged_at": "2023-08-18T15:50:31Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nresolves broken perf test: https://pullrequest.opencv.org/buildbot/builders/precommit_custom_linux/builds/100322\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-08-18T01:52:17Z",
        "closed_at": null,
        "merged_at": null,
        "body": "\u2026 variables are prematurely cleared.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [NA] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [NA] The feature is well documented and sample code can be built with the project CMake\r\n\r\nThis PR addresses #8174, ensuring that even though the Python interpreter is found the relevant *cmake* variables are not cleared until the very end of the `find_python` function call.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-17T13:34:48Z",
        "closed_at": "2023-09-08T11:24:00Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work https://github.com/opencv/opencv/issues/24158\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-17T10:06:16Z",
        "closed_at": "2023-08-18T06:18:11Z",
        "merged_at": "2023-08-18T06:18:11Z",
        "body": "Resolves #24141\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [X] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-16T19:50:56Z",
        "closed_at": "2023-08-17T09:34:50Z",
        "merged_at": "2023-08-17T09:34:50Z",
        "body": "Backport of #24167",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-16T19:48:37Z",
        "closed_at": "2023-08-17T09:34:19Z",
        "merged_at": "2023-08-17T09:34:19Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work (https://github.com/microsoft/vcpkg/issues/33200)\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 269,
        "deletions": 269,
        "changed_files": 3,
        "created_at": "2023-08-16T14:55:08Z",
        "closed_at": "2023-09-19T12:12:52Z",
        "merged_at": "2023-09-19T12:12:52Z",
        "body": "Related PR: #24058, #24132. The goal of this series of PRs is to modify the SIMD code blocks in the opencv/modules/imgproc folder by using the new Universal Intrinsic API.\r\n\r\nThe modification of this PR mainly focuses on the code that uses the `CV_SIMD_WIDTH` macro. This macro is sometimes used for loop tail processing, such as `box_filter.simd.hpp` and `morph.simd.hpp`.\r\n\r\n```cpp\r\n#if CV_SIMD\r\nint i = 0;\r\nfor (i < n - v_uint16::nlanes; i += v_uint16::nlanes) {\r\n// some universal intrinsic code\r\n// e.g. v_uint16...\r\n}\r\n#if CV_SIMD_WIDTH > 16\r\nfor (i < n - v_uint16x8::nlanes; i += v_uint16x8::nlanes) {\r\n// handle loop tail by 128 bit SIMD\r\n// e.g. v_uint16x8\r\n}\r\n#endif //CV_SIMD_WIDTH \r\n#endif// CV_SIMD\r\n```\r\nThe main contradiction is that the variable-length Universal Intrinsic backend cannot use 128bit fixed-length data structures. Therefore, this PR uses the scalar loop to handle the loop tail.\r\n\r\nThis PR is marked as draft because the modification of the `box_filter.simd.hpp` file caused a compilation error. The cause of the error is initially believed to be due to an internal error in the GCC compiler.\r\n\r\n```bash\r\nbox_filter.simd.hpp:1162:5: internal compiler error: Segmentation fault\r\n 1162 |     }\r\n      |     ^\r\n0xe03883 crash_signal\r\n        /wafer/share/gcc/gcc/toplev.cc:314\r\n0x7ff261c4251f ???\r\n        ./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0\r\n0x6bde48 hash_set<rtl_ssa::set_info*, false, default_hash_traits<rtl_ssa::set_info*> >::iterator::operator*()\r\n        /wafer/share/gcc/gcc/hash-set.h:125\r\n0x6bde48 extract_single_source\r\n        /wafer/share/gcc/gcc/config/riscv/riscv-vsetvl.cc:1184\r\n0x6bde48 extract_single_source\r\n        /wafer/share/gcc/gcc/config/riscv/riscv-vsetvl.cc:1174\r\n0x119ad9e pass_vsetvl::propagate_avl() const\r\n        /wafer/share/gcc/gcc/config/riscv/riscv-vsetvl.cc:4087\r\n0x119ceaf pass_vsetvl::execute(function*)\r\n        /wafer/share/gcc/gcc/config/riscv/riscv-vsetvl.cc:4344\r\n0x119ceaf pass_vsetvl::execute(function*)\r\n        /wafer/share/gcc/gcc/config/riscv/riscv-vsetvl.cc:4325\r\nPlease submit a full bug report, with preprocessed source (by using -freport-bug).\r\nPlease include the complete backtrace with any bug report.\r\n```\r\n\r\nThis PR can be compiled with Clang 16, and `opencv_test_imgproc` is passed on QEMU.\r\n\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Custom\r\nXbuild_image:Custom=riscv-clang-rvv\r\nbuild_image:Custom=riscv-gcc-rvv\r\nXbuild_image:Custom=riscv-clang-rvv-128\r\nXbuild_image:Custom=riscv-gcc-rvv-07\r\ntest_modules:Custom=core,imgproc,dnn\r\nbuildworker:Custom=linux-1\r\ntest_timeout:Custom=600\r\nbuild_contrib:Custom=OFF\r\n```",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-08-15T17:53:37Z",
        "closed_at": "2023-08-18T08:02:53Z",
        "merged_at": "2023-08-18T08:02:53Z",
        "body": "This update resolves all warnings produced by recent LLVM/Clang when compiling OpenCV.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 76,
        "deletions": 76,
        "changed_files": 4,
        "created_at": "2023-08-15T08:33:43Z",
        "closed_at": "2023-08-18T08:02:34Z",
        "merged_at": "2023-08-18T08:02:34Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nrelated: https://github.com/opencv/ci-gha-workflow/pull/109\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-15T06:14:56Z",
        "closed_at": "2023-08-16T12:39:24Z",
        "merged_at": "2023-08-16T12:39:24Z",
        "body": "Fix issue: https://github.com/opencv/opencv/issues/24041\r\nrelates #22401\r\n\r\nHandling when the `operation` of the `Elemtwise layer` is missing.\r\n`nextData->params.get<String>(\"operation\")` will fail when the `operation` is missing. This patch adds default value for such case.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-14T13:05:13Z",
        "closed_at": "2023-08-15T11:35:01Z",
        "merged_at": "2023-08-15T11:35:01Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] N/A There is a reference to the original bug report and related work\r\n- [ ] N/A There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] N/A The feature is well documented and sample code can be built with the project CMake\r\nfix the return-type compile error in `ipp_warpAffine`\r\n\r\nWhen building OpenCV on Windows with MSVC, if we set cmake option `WITH_IPP` ON and `BUILD_IPP_IW` OFF, then we have macro `HAVE_IPP` / `HAVE_IPP_ICV` but no `HAVE_IPP_IW` / `HAVE_IPP_IW_LL` in `cvconfig.h`, thus the function [ipp_warpAffine](https://github.com/opencv/opencv/blob/27d718b2232ac82f3acc97395b979328d9c03cd8/modules/imgproc/src/imgwarp.cpp#L2622C1-L2685C1) will have an empty body (no return), but its signature returns `bool`.\r\n\r\nJust add `return false` and apply `CV_UNUSED` to all its arguments, like what other `ipp_*` functions do.\r\n\r\nThe compile error on my PC is:\r\n\r\n```\r\nF:\\Library\\opencv\\modules\\imgproc\\src\\imgwarp.cpp(2622,118): warning C4100: 'flags': unreferenced formal parameter\r\nF:\\Library\\opencv\\modules\\imgproc\\src\\imgwarp.cpp(2622,110): warning C4100: '_M': unreferenced formal parameter\r\nF:\\Library\\opencv\\modules\\imgproc\\src\\imgwarp.cpp(2622,87): warning C4100: 'borderType': unreferenced formal parameter\r\nF:\\Library\\opencv\\modules\\imgproc\\src\\imgwarp.cpp(2622,68): warning C4100: 'interpolation': unreferenced formal parameter\r\nF:\\Library\\opencv\\modules\\imgproc\\src\\imgwarp.cpp(2622,58): warning C4100: '_dst': unreferenced formal parameter\r\nF:\\Library\\opencv\\modules\\imgproc\\src\\imgwarp.cpp(2622,40): warning C4100: '_src': unreferenced formal parameter\r\nF:\\Library\\opencv\\modules\\imgproc\\src\\imgwarp.cpp(2683): error C4716: 'cv::ipp_warpAffine': must return a value\r\n```",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1704,
        "deletions": 17,
        "changed_files": 4,
        "created_at": "2023-08-13T11:20:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- N/A There is a reference to the original bug report and related work\r\n- N/A There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- N/A The feature is well documented and sample code can be built with the project CMake\r\n\r\nThe related PR on opencv_contrib is https://github.com/opencv/opencv_contrib/pull/3550.\r\n\r\n### What this patch does?\r\n- Add coordinate transformation mode augment (borrowed from [ONNX](https://github.com/onnx/onnx/blob/v1.14.0/docs/Operators.md#Resize)) for cv::resize / cv::cuda::resize.\r\n- Use \"round half up\" for nearest pixel lookup, as done in ONNX [round_prefer_ceil](https://github.com/onnx/onnx/blob/main/onnx/reference/ops/op_resize.py#L61C1-L74C50).\r\n- Add test case (scale factor 0.3 and 0.7) to make current OpenCL nearest resize test failed.\r\n- Make cuda resize consistent to cpu / ocl reisze: use same coordinate computation in linear and cubic, use `A = -0.75` in cubic.\r\n\r\n### What is a pixel?\r\n\r\nThere have been some [issues](https://github.com/opencv/opencv/issues?q=label%3A%22category%3A+imgproc%22++coordinate+system+) and [pull requests](https://github.com/opencv/opencv/pull/17068) about OpenCV coordinate system, such as https://github.com/opencv/opencv/issues/10146, https://github.com/opencv/opencv/issues/11784, https://github.com/opencv/opencv/issues/12680, https://github.com/opencv/opencv/issues/10130, https://github.com/opencv/opencv/issues/4585.\r\n\r\nA pixel can be treated as:\r\n- A box or rectangle with area, like what we do in `INTER_AREA`.\r\n- A sampler point on the canvas (image), the value is the height / brightness of a surface on this location, or is interpolated from near samples (pixels) in a mesh grid.\r\n\r\nHere we only talk about the point expression of pixel.\r\n\r\nWhen resizing `src` to `dst`, the step to get a pixel's value on `dst` is:\r\n1. find the corresponding position in `src`. (coordinate transformation)\r\n2. use a method to guess its value from near pixels on `src`. (interpolation)\r\n\r\nThe interpolations have some de facto standard formulation, except some details, such as coefficients in cubic.\r\n\r\nBut when say a pixel's position in given size image, what expression should we use? i.e. How we place pixel on the image? The left top pixel is `(0, 0)` or `(0.5, 0.5)`? i.e. the 0-based or 0.5-based coordinate. FYI, textures with un-normalized coordinate in OpenCL / CUDA use 0.5-based coordinate.\r\n\r\nSay we have a image sized 4 row and 3 column, what the coordinate transformation `half pixel` / `asymmetric` / `align corners` do can be illustrated as below, the orange borders indicate the image unit and the blue circles show the pixel position.\r\n- `half pixel`: the image is a 4\u00d73 grid; pixels are placed on the center of grids.\r\n- `asymmetric`: the image is a 4\u00d73 grid; pixels are placed on the top-left corner of grids, thus the most right column and the bottom row has no pixel.\r\n- `align corners`: the image is a 3\u00d72 grid; pixels are placed on the top-left corner of grids.\r\n\r\n![20230813_154253-picpick](https://github.com/opencv/opencv/assets/23121794/f4fc6ae7-719a-4df5-b70f-4e83ca58424b)\r\n\r\nThe `half pixel symmetric` aligns the centers of `src` and `dst` when dst's size is not integer. Let's say one wants to scale a image to size (10.7, 20.1) with given `fx` and `fy`, but the sizes can only be integer (11, 20). So imagine that we really use `fx` (not 20/src.cols) and `fy` (not 11/src.rows) get a image (10.7, 20.1) and then\r\n- `half pixel`: crop the left 20 columns, padding bottom with 0.3 rows.\r\n- `half pixel symmetric`: crop the center 20 (discard the left 0.05 and right 0.05) columns, padding both top and botton 0.15 rows.\r\n\r\nSo if you want perfectly aligned result, pass argument `dsize` instead of `fx` and `fy`, or use `half pixel symmetric`.\r\n\r\nThe `half pixel pytorch` select the first row/column of src when dst's size is 1, but `half pixel` use / interpolate the center row / column of src.\r\n\r\nThe coordinate mapping from dst to src can be expression by `x' = ax + b` for all above modes.\r\n\r\n### Test on OpenCV\r\n\r\nWe do not talk about nearest this section.\r\n\r\nFor linear / cubic / lanczos interpolation, OpenCV cv::resize use `half pixel` in its [cpu](https://github.com/opencv/opencv/blob/747b7cab6c740619de0059a15f8b58a20db6cbe5/modules/imgproc/src/resize.cpp#L3955C1-L3955C49) and [ocl](https://github.com/opencv/opencv/blob/747b7cab6c740619de0059a15f8b58a20db6cbe5/modules/imgproc/src/opencl/resize.cl#L176C1-L176C72) code (if have) but `asymmetric` in [cuda](https://github.com/opencv/opencv_contrib/blob/9e134699310c81ea470445b4888fce5c9de6abc7/modules/cudawarping/src/cuda/resize.cu#L72C5-L122C1) code (if have). And cubic coefficient is `A = -0.75` in cpu code but `A = -0.5` in cuda kernel. Thus compare to the results of cpu / ocl, the result of cuda::resize will have some translation by `scale * 0.5 - 0.5`. The larger the scale factor is, the translation is more obvious. This video clip shows the difference between cpu / cuda resize (enlarge 256\u00d7256 image by 10).\r\n\r\nhttps://github.com/opencv/opencv/assets/23121794/4911ca03-f91e-4223-933b-d3d3b1f23bc0\r\n\r\nLet's do a simple test [OCVOLD.cpp.txt](https://github.com/opencv/opencv/files/12329311/OCVOLD.cpp.txt). The scale factor is dedicated to make cpu / ocl nearest test failed. We will get outputs like this (remember disable ipp):\r\n\r\n```\r\n===== 0 : size 106x197, fx 0.170000, fy 0.130000 =====\r\n nearest : NormInf(cpu,  ocl) = 212.836365\r\n nearest : NormInf(cpu, cuda) = 212.836365\r\n  linear : NormInf(cpu,  ocl) = 0.001678\r\n  linear : NormInf(cpu, cuda) = 178.190506\r\n   cubic : NormInf(cpu, cuda) = 232.414383\r\n    area : NormInf(cpu,  ocl) = 0.000031\r\n    area : NormInf(cpu, cuda) = 0.000229\r\n\r\n===== 1 : size 139x129, fx 0.140000, fy 9.970000 =====\r\n nearest : NormInf(cpu,  ocl) = 205.331573\r\n nearest : NormInf(cpu, cuda) = 205.331573\r\n  linear : NormInf(cpu,  ocl) = 0.002251\r\n  linear : NormInf(cpu, cuda) = 230.934357\r\n   cubic : NormInf(cpu, cuda) = 251.860687\r\n    area : NormInf(cpu,  ocl) = 0.000000\r\n    area : NormInf(cpu, cuda) = 214.201920\r\n\r\n===== 2 : size 197x110, fx 9.970000, fy 0.150000 =====\r\n nearest : NormInf(cpu,  ocl) = 234.332550\r\n nearest : NormInf(cpu, cuda) = 234.332550\r\n  linear : NormInf(cpu,  ocl) = 0.004044\r\n  linear : NormInf(cpu, cuda) = 228.174942\r\n   cubic : NormInf(cpu, cuda) = 278.776093\r\n    area : NormInf(cpu,  ocl) = 0.000000\r\n    area : NormInf(cpu, cuda) = 213.669083\r\n\r\n===== 3 : size 186x193, fx 9.790000, fy 9.510000 =====\r\n nearest : NormInf(cpu,  ocl) = 0.000000\r\n nearest : NormInf(cpu, cuda) = 0.000000\r\n  linear : NormInf(cpu,  ocl) = 0.005096\r\n  linear : NormInf(cpu, cuda) = 160.517822\r\n   cubic : NormInf(cpu, cuda) = 204.869980\r\n    area : NormInf(cpu,  ocl) = 0.000000\r\n    area : NormInf(cpu, cuda) = 236.810547\r\n```\r\n\r\n### Problems in nearest interpolation\r\n\r\nThe OpenCV compute nearest position using `cvFloor(x * scale + y)`, which is:\r\n- `asymmtric`: not consistent with linear / cubic.\r\n- not nearest, 0.99 will become to 0.\r\n\r\nWhen we scale `[0,1,2,3,4,5]` by `0.5`, [ONNX](https://github.com/onnx/onnx/blob/main/onnx/reference/ops/op_resize.py#L61C1-L74C50) will get:\r\n- `round_prefer_ceil floor(x + 0.5)` : `[1,3,5]`.\r\n- `round_prefer_floor ceil(x - 0.5)` : `[0,2,4]`.\r\n\r\n[PyTorch](https://github.com/pytorch/pytorch/blob/ddd2f682b974fa274771965266c2bc0786f1e747/aten/src/ATen/native/UpSample.h#L319C1-L329C2) use `round(x)`, and it says scikit-image and scipy.ndimage also do this way. It is theoretically equivalent to `round_prefer_ceil` `floor(x + 0.5)`, because we always use replicated border and clamp negative position to 0. Here let's also choose this mode.\r\n\r\nThe reason I choose float type for `a` / `b`, and use `cvFloor(fmaf(a, x, b))` / `convert_int_rtn` / `__float2int_rd` instead of `cvRound(fmaf(a, x, b))` or `cvRound(a * x + b)` is: only in this way cpu / ocl / cuda can get the same result when nearest resize. When the src position near X.5, we may pick up pixels on different (adjacent) rows or cols due to the small float calculation errors on different devices, thus the result is unpredictable. Unlike linear or cubic, in which the values are interpolated and the gradients are smooth. It maybe fail when you try more scale factors and more sizes. For the test\r\nabove [OCVOLD.cpp.txt](https://github.com/opencv/opencv/files/12329311/OCVOLD.cpp.txt) the current code fail at, codes on this branch can pass (remember to set coordinate mode).\r\n\r\nThis video clip shows the different rows / columns in nearest interpolation resulting from numeric errors (if we use cvRound).\r\n\r\nhttps://github.com/opencv/opencv/assets/23121794/52a96fe7-3696-4613-8bb9-53d5c30d64ae\r\n\r\nI use CPU AMD Ryzen 2600 + GPU NVIDIA GTX 950 (compute capacity 5.2). Maybe cudart optimize `a * x + b` to `fmaf(a, x, b)` (they will get the same result and pass all test so far) but I have not found document support. Run [OCVTEST.cpp.txt](https://github.com/opencv/opencv/files/12329361/OCVTEST.cpp.txt) 10000 times, all loops pass.\r\n\r\n### IPP\r\n\r\nAll tests above run with ipp disabled.\r\n\r\nI have not find coordinate configuration in ipp's function, so just add a [check](https://github.com/Ginkgo-Biloba/opencv/blob/coordinate/modules/imgproc/src/resize.cpp#L3737) `interpolation == INTER_HALF_PIXEL` to `IPP_RUN`. Maybe there is a better way to this problem?\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-13T08:48:59Z",
        "closed_at": "2023-08-16T22:25:22Z",
        "merged_at": "2023-08-16T22:25:22Z",
        "body": "Streamlabs Desktop has the same issue in #19746. This fixes it using  #23460  method.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-08-11T14:02:38Z",
        "closed_at": "2023-08-18T15:50:31Z",
        "merged_at": "2023-08-18T15:50:31Z",
        "body": "Prefer snprintf, which can never overflow.\r\n\r\nIn one case I cheated and used strcpy, because I cannot figure out the buffer size at that point in the code.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-08-11T08:41:59Z",
        "closed_at": "2023-09-07T10:06:39Z",
        "merged_at": "2023-09-07T10:06:39Z",
        "body": "After changing the output format, need to modify the outputVideoFormat, otherwise the outputVideoFormat is always CV_CAP_MODE_BGR, and an error will occur when converting the format in retrieveVideoFrame(), and will always enter \"case CV_CAP_MODE_BGR:\" process.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-08-10T21:33:12Z",
        "closed_at": "2023-08-11T09:32:23Z",
        "merged_at": "2023-08-11T09:32:23Z",
        "body": "It has the usual Unix filesystem operations.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [N/A] There is a reference to the original bug report and related work\r\n- [N/A] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [N/A] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-08-10T15:21:58Z",
        "closed_at": "2023-09-05T12:24:57Z",
        "merged_at": "2023-09-05T12:24:57Z",
        "body": "Fixes #24127\r\n\r\nTo refine corners of ArUco markers we need to call matchImagePoints() from base class Board. The method matchImagePoints() implemented in Pimpl and we need to create temp Board object.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-10T08:44:03Z",
        "closed_at": "2023-08-13T19:49:11Z",
        "merged_at": "2023-08-13T19:49:11Z",
        "body": "related #24133, #23056, #23937\r\n\r\nSteps to reproduce:\r\n* build OpenCV with GStreamer backend as plugin (`-DVIDEOIO_PLUGIN_LIST=gstreamer`)\r\n* open camera by index using GStreamer backend (`VideoCapture cap(0, CAP_GSTREAMER)`)\r\n\r\nResult: failure, capture is not opened, when using GStreamer backend as built-in camera can be opened\r\n\r\nThis was happening due to bug in plugin wrapper.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 321,
        "deletions": 98,
        "changed_files": 19,
        "created_at": "2023-08-09T23:46:15Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n\r\nThis is dependent on cmake support for visionos which is currently in progress.\r\nCreating PR now to test that there are no regressions in iOS and macOS builds",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-09T10:48:52Z",
        "closed_at": "2023-08-10T08:48:39Z",
        "merged_at": "2023-08-10T08:48:39Z",
        "body": "Fixed #23937 and #23056\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1601,
        "deletions": 1436,
        "changed_files": 10,
        "created_at": "2023-08-09T09:58:39Z",
        "closed_at": "2023-09-19T05:52:43Z",
        "merged_at": "2023-09-19T05:52:43Z",
        "body": "The goal of this series of PRs is to modify the SIMD code blocks guarded by CV_SIMD macro in the opencv/modules/imgproc folder: rewrite them by using the new Universal Intrinsic API.\r\n\r\nThis is the second part of the modification to the Imgproc module ( Part 1: #24058 ), And I tested this patch on RVV (QEMU) and AVX devices, `opencv_test_imgproc` is passed.\r\n\r\nThe patch is partially auto-generated by using the [rewriter](https://github.com/hanliutong/rewriter).\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-09T06:28:29Z",
        "closed_at": "2023-09-14T12:00:35Z",
        "merged_at": "2023-09-14T12:00:35Z",
        "body": "Currently when `CUDA_ARCH_BIN` isn't specified CMake attempts to build .cu files for the all architechtures it knows about, generating a list of architectures supported by the current CUDA Toolkit (see https://github.com/opencv/opencv/pull/17432).  The idea being that if a user doesn't specify the arch then to be on the safe side it should generate for all architechtures for maximum compatibility.  Additionally if a user just wants to specify a PTX architechture they have to pass `CUDA_ARCH_BIN=` (incurring the overhead of calling `ocv_filter_available_architecture` on all know architectures) in addition to `CUDA_ARCH_PTX=<TAERGET ARCH>` to CMake  to avoid generating binary code for all supported architectures as well.  \r\n\r\nThis PR proposes that:\r\n1. When `CUDA_ARCH_BIN` and  `CUDA_ARCH_PTX`  are not specified, in addition to binary code for all compute capabilities, PTX code for the highest supported architecture is also generated.  This would ensure that the CUDA device code will **also** run on newer GPU's than the installed CUDA Toolkit, increasing the level of compatibility futher.\r\n2.  When `CUDA_ARCH_PTX` is  passed in isolation only PTX code for the desired CC is generated.\r\n\r\n@tomoaki0705 \r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 27,
        "changed_files": 2,
        "created_at": "2023-08-08T12:18:35Z",
        "closed_at": "2023-09-06T13:20:37Z",
        "merged_at": "2023-09-06T13:20:37Z",
        "body": "## `blobFromImagesWithParams`(image-s) apply swap scalefactor for every images when swapRB is true. This patch moves the swap scalefactor code out of the loop, that fix the above issue.\r\n\r\nWe would like to improve the recently introduced function `blobFromImagesWithParams` with respect to three minor issues that we noticed:\r\n\r\n- Currently, `mean` and `scalefactor` are recreated for every image, even though they should be reused. Maybe the compiler is smart enough to optimize this, still we think the variable should be created / swapped before the main loop.\r\n- Next, we would like to improve the function's robustness with respect to inconsistent arguments, i.e. if a single-channel image is passed but `swapRB` is true, as explained below.\r\n- Finally, we made some minor modifications to follow the coding guidelines (`if - else if - else` instead of nested else).\r\n\r\nFunction wise, there are two improvements from this:\r\n\r\n1. Currently, if the user passes a single-channel image in combination with `mean` and `scalefactor` values, but unintentionally sets `swapRB` to true, the whole result can be silently zeroed. The `mean` and `scalefactor` arrays will only contain a single value (whereas the other indices' values remain 0), but `swapRB` will swap out the true mean / scalefactor values and swap in zeros for these instead. There is no warning or assertion, only the whole image will be zeroed by the following multiplication. Therefore, we suggest to only swap these values if the image is not a single-channel image, i.e. `mean` and `scalefactor` contain correct values for all channels, therefore add `if (nch > 2)`.\r\n2. Next, a related issue exists in combination with `DNN_LAYOUT_NHWC`. If the user passes this in combination with a single-channel image and `swapRB` is true, the function produces the following error:\r\n```\r\nOpenCV\\modules\\core\\src\\copy.cpp:320: error: (-215:Assertion failed) channels() == CV_MAT_CN(dtype) in function 'cv::Mat::copyTo'\r\n```\r\nThis results from first converting the image to RGB (even though it is grayscale instead of the expected BGR layout) and, thereafter, copying the resulting three-channel image into the single-channel blob. This is avoided by checking `nch > 2` here, too, which is also consistent to the function's implementation of the `DNN_LAYOUT_NCHW` case.\r\n\r\nBoth changes can be summarized such that `swapRB` only has an effect if the image has at least three channels. Most importantly, nothing changes at all if the arguments are consistent.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2023-08-08T11:20:13Z",
        "closed_at": "2023-09-20T11:38:15Z",
        "merged_at": "2023-09-20T11:38:14Z",
        "body": "Fixes #23905\r\n\r\ncheckBoard() is an internal function that checks that the found board has the correct structure\r\n\r\n1. fixed a bug with checking extraneous markers:\r\n```\r\n                if (find(boardIds.begin(), boardIds.end(), idMaker) == boardIds.end())\r\n                    continue;\r\n```\r\n2. fixed an indexing bug:\r\n```\r\n                const int nearestMarkerId1 = boardIds[nearestMarkerIdx[chId][0]];\r\n                const int nearestMarkerId2 = boardIds[nearestMarkerIdx[chId][1]];\r\n```\r\n3. updated docs for getNearestMarkerIdx()/getNearestMarkerCorners()\r\n4. added `checkBoardStructure` flag, this flag allows you to return the old behavior or use your custom board structure check.\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-08T11:11:41Z",
        "closed_at": "2023-08-08T14:21:44Z",
        "merged_at": "2023-08-08T14:21:44Z",
        "body": "Nightly build issue: https://pullrequest.opencv.org/buildbot/builders/5_x-win32-vc14/builds/100205\r\nThe issue introduced in: https://github.com/opencv/opencv/pull/23865\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 208,
        "deletions": 3601,
        "changed_files": 59,
        "created_at": "2023-08-08T03:58:32Z",
        "closed_at": "2023-09-06T09:07:12Z",
        "merged_at": null,
        "body": "\ud83d\ude80 Cleanup for OpenCV 5.0.\r\n\r\nMerge with https://github.com/opencv/opencv_extra/pull/1081.\r\n\r\nTodo:\r\n\r\n1. [x] Clean Halide related from opencv_extra\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 696,
        "changed_files": 10,
        "created_at": "2023-08-08T03:02:21Z",
        "closed_at": "2023-08-09T06:26:03Z",
        "merged_at": "2023-08-09T06:26:03Z",
        "body": "\ud83d\ude80 Cleanup for OpenCV 5.0. Tengine backend is added for convolution layer speedup on ARM CPUs, but it is not maintained and the convolution layer on our default backend has reached similar performance to that of Tengine.\r\n\r\nTengine backend related PRs:\r\n- https://github.com/opencv/opencv/pull/16724\r\n- https://github.com/opencv/opencv/pull/18323\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 49,
        "deletions": 47,
        "changed_files": 10,
        "created_at": "2023-08-07T20:09:16Z",
        "closed_at": "2023-08-16T12:46:12Z",
        "merged_at": "2023-08-16T12:46:12Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\n* resolves https://github.com/opencv/opencv/issues/24111\r\n* Updates required for actual models from https://github.com/opencv/opencv_extra/pull/1080\r\n\r\n**Merge with extra**: https://github.com/opencv/opencv_extra/pull/1080\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Linux OpenCL,Win64 OpenCL\r\nbuildworker:Linux OpenCL=linux-1\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 576,
        "deletions": 211,
        "changed_files": 37,
        "created_at": "2023-08-07T14:52:57Z",
        "closed_at": "2023-08-09T06:13:53Z",
        "merged_at": "2023-08-09T06:13:53Z",
        "body": "#24035 from vrabaud:calibration was ported separately  in https://github.com/opencv/opencv/pull/24096\r\n\r\n#24039 from dkurt:tflite_test_backends\r\n#24059 from TolyaTalamanov:at/add-onnx-cuda-execution-provider\r\n#24069 from dkurt:openvino_detection_layer\r\n#24072 from dkurt:openvino_cpu_tests\r\n#24080 from dkurt:dnn_cuda_layers\r\n#24083 from cudawarped:cuda_cmake_cmp0146\r\n#24087 from mshabunin:fix-videoio-warnings\r\n#24101 from LaurentBerger:I24076\r\n#24104 from cudawarped:cuda_fix_cuda_toolkit_12_2\r\n#24108 from LaurentBerger:I24044\r\n\r\n\r\nPrevious \"Merge 4.x\": #24070\r\n\r\n```\r\nforce_builders=Linux AVX2,Custom\r\nbuild_image:Docs=docs-js:18.04\r\nbuild_image:Custom=javascript\r\nbuildworker:Custom=linux-1,linux-4,linux-f1\r\n```",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 308,
        "changed_files": 1,
        "created_at": "2023-08-07T14:47:31Z",
        "closed_at": "2023-08-08T06:01:42Z",
        "merged_at": "2023-08-08T06:01:42Z",
        "body": "The file is already there in the new 3d module.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-07T12:52:40Z",
        "closed_at": "2023-08-09T10:46:26Z",
        "merged_at": "2023-08-09T10:46:26Z",
        "body": "Fix bug of python sample code (samples/python/tst_scene_render.py) when backGr or fgr is None (#24114)\r\n\r\n1) pass shape tuple to np.zeros arguments instead of integers\r\n2) change np.int to int\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [o] I agree to contribute to the project under Apache 2 License.\r\n- [o] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [o] The PR is proposed to the proper branch\r\n- [o] There is a reference to the original bug report and related work\r\n- [o] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [o] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-04T19:58:46Z",
        "closed_at": "2023-08-07T09:39:05Z",
        "merged_at": "2023-08-07T09:39:05Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nresolves https://github.com/opencv/opencv/issues/24044\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 193,
        "deletions": 255,
        "changed_files": 6,
        "created_at": "2023-08-04T09:32:50Z",
        "closed_at": "2023-10-13T09:39:48Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\n* Move LayerNorm's implementation from https://github.com/opencv/opencv/pull/23047 to MVN\r\n* Extend MVN to work with element-wise scale/bias\r\n\r\nAs the results:\r\n* MVN speedup by better implementation by @fengyuentau (TODO: provide perf data)\r\n* Enable LayerNorm on CUDA, OpenVINO, OpenCL (see https://github.com/opencv/opencv/issues/24064#issuecomment-1657218817)\r\n\r\nTODO:\r\n- [x] Fix CUDA\r\n- [ ] Check `fast_forward_ocl`\r\n- [ ] Test LayerNorm + BatchNorm (input scales + fused scales)\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-08-04T07:36:10Z",
        "closed_at": "2023-08-04T09:11:15Z",
        "merged_at": "2023-08-04T09:11:15Z",
        "body": "https://github.com/opencv/opencv/pull/23948 appears to have gone stale and it has been over a month since CUDA 12.2 was introduced. This PR is to check if the two simple changes proposed there pass on the CI and if so prompt @jiapei100 to amend the PR or \ud83e\udd1e one of the maintainers to fix it for them.\r\n\r\n@asmorkalov @mshabunin @VadimLevin \r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-08-03T10:13:10Z",
        "closed_at": "2023-08-04T09:18:49Z",
        "merged_at": "2023-08-04T09:18:49Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work https://github.com/opencv/opencv/issues/24076\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2023-08-02T18:34:25Z",
        "closed_at": "2023-08-28T20:24:17Z",
        "merged_at": null,
        "body": "This function has a fast path using Neon instructions which gives results different from the slow path.\r\n\r\nThe fast path is using rounding which converts any number with a fractional part >= 0.5 to the next integer (for example 100.5 is converted to 101 instead of 100).\r\n\r\nUsing truncation fixes the problem.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-02T15:54:24Z",
        "closed_at": "2023-09-04T13:48:04Z",
        "merged_at": "2023-09-04T13:48:04Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\nI'm opening this PR to fix #24097. Currently, this isn't ready to merge because there's still an issue that causes the title bar to take 1-2 seconds to hide. If anyone has any idea how to fix that, please let me know.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 52,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-08-02T13:00:10Z",
        "closed_at": "2023-08-04T07:40:38Z",
        "merged_at": "2023-08-04T07:40:38Z",
        "body": "Review and merge after https://github.com/opencv/opencv/pull/24084\r\nAddress #24035 in 5.x\r\nManual port of https://github.com/opencv/opencv/pull/24035\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-02T12:32:28Z",
        "closed_at": "2023-08-02T17:37:28Z",
        "merged_at": "2023-08-02T17:37:28Z",
        "body": "related: https://github.com/opencv/opencv_contrib/pull/3543\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 303,
        "deletions": 3,
        "changed_files": 8,
        "created_at": "2023-08-02T00:12:38Z",
        "closed_at": "2023-10-18T07:41:48Z",
        "merged_at": "2023-10-18T07:41:48Z",
        "body": "Merge with: https://github.com/opencv/opencv_extra/pull/1082\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\nAdds support to the ONNX operator GatherElements [operator docs](https://github.com/onnx/onnx/blob/main/docs/Operators.md#GatherElements)\r\nAdded tests to opencv_extra at pull request https://github.com/opencv/opencv_extra/pull/1082",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 105,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-08-01T12:13:47Z",
        "closed_at": "2023-08-09T10:25:40Z",
        "merged_at": "2023-08-09T10:25:40Z",
        "body": "Fixes https://github.com/opencv/opencv/issues/24038 and added non exhaustive python tests to verify functionality.\r\n\r\n@VadimLevin\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-08-01T11:14:40Z",
        "closed_at": "2023-08-01T13:22:51Z",
        "merged_at": "2023-08-01T13:22:50Z",
        "body": "MSVC warrning:\r\n```\r\n 622>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.29.30133\\include\\algorithm(2650,24): warning C4244: '=': conversion from 'int' to 'char', possible loss of data [C:\\build\\precommit-contrib_windows64\\build\\modules\\videoio\\opencv_test_videoio.vcxproj]\r\n```\r\n\r\n\r\nARMv7 Linux build issue:\r\n```\r\n/build/4_x_ARMv7-lin/opencv/modules/videoio/src/cap_v4l.cpp: In member function 'bool cv::CvCaptureCAM_V4L::autosetup_capture_mode_v4l2()':\r\n/build/4_x_ARMv7-lin/opencv/modules/videoio/src/cap_v4l.cpp:276:62: error: 'v4l2_fourcc_be' was not declared in this scope\r\n #define V4L2_PIX_FMT_Y16_BE v4l2_fourcc_be('Y', '1', '6', ' ')\r\n                                                              ^\r\n```\r\n\r\n\r\n```\r\nallow_multiple_commits=1\r\n```",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-01T09:59:06Z",
        "closed_at": "2023-08-09T06:31:47Z",
        "merged_at": "2023-08-09T06:31:47Z",
        "body": "fix https://github.com/opencv/opencv/issues/24081\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1661,
        "deletions": 1608,
        "changed_files": 16,
        "created_at": "2023-08-01T07:46:21Z",
        "closed_at": "2023-08-03T08:00:00Z",
        "merged_at": "2023-08-03T08:00:00Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nContinues: https://github.com/opencv/opencv/pull/18940\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-01T06:19:45Z",
        "closed_at": "2023-08-01T07:37:35Z",
        "merged_at": "2023-08-01T07:37:35Z",
        "body": "From CMake 3.27 onwards the official [FindCUDA](https://cmake.org/cmake/help/latest/module/FindCUDA.html) module has been depreciated, resulting in the following warning when configuring OpenCV\r\n\r\n> CMake Warning (dev) at cmake/OpenCVUtils.cmake:144 (find_package):\r\n>   Policy CMP0146 is not set: The FindCUDA module is removed.  Run \"cmake\r\n>   --help-policy CMP0146\" for policy details.  Use the cmake_policy command to\r\n>   set the policy and suppress this warning.\r\n\r\nThis PR forces OLD behaviour to suppress the warning and ensure the official CMake FindCUDA module is still used while available.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 123,
        "deletions": 5,
        "changed_files": 9,
        "created_at": "2023-07-31T14:33:56Z",
        "closed_at": "2023-08-03T06:13:42Z",
        "merged_at": "2023-08-03T06:13:42Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\n* Gelu activation layer on CUDA\r\n* Try to relax GEMM from ONNX\r\n\r\nresolves https://github.com/opencv/opencv/issues/24064\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 211,
        "deletions": 16,
        "changed_files": 7,
        "created_at": "2023-07-29T05:11:25Z",
        "closed_at": "2023-09-19T07:32:48Z",
        "merged_at": "2023-09-19T07:32:48Z",
        "body": "fix https://github.com/opencv/opencv/issues/24057\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ x The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 115,
        "changed_files": 6,
        "created_at": "2023-07-28T12:47:15Z",
        "closed_at": "2023-08-02T11:39:11Z",
        "merged_at": "2023-08-02T11:39:11Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nTODO:\r\n- [x] Test with OpenVINO 2021.4 (tested locally)\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Custom\r\n\r\nXbuild_image:Custom=ubuntu-openvino-2021.4.2:20.04\r\nbuild_image:Custom=ubuntu-openvino-2022.1.0:20.04\r\n\r\ntest_modules:Custom=dnn,python2,python3,java,gapi,video\r\n\r\nbuildworker:Custom=linux-1\r\n# disabled due high memory usage: test_opencl:Custom=ON\r\ntest_opencl:Custom=ON\r\ntest_bigdata:Custom=1\r\ntest_filter:Custom=*\r\n```\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5193,
        "deletions": 1105,
        "changed_files": 151,
        "created_at": "2023-07-27T16:31:54Z",
        "closed_at": "2023-08-01T07:49:09Z",
        "merged_at": "2023-08-01T07:49:09Z",
        "body": "Extra: https://github.com/opencv/opencv_extra/pull/1079\r\nConrib: https://github.com/opencv/opencv_contrib/pull/3538\r\n\r\n#18498 from firebladed:patch-1\r\n#22798 from lamm45:distransform-large\r\n#23540 from cudawarped:add_CAP_PROP_CODEC_FOURCC\r\n#23647 from AleksandrPanov:fix_charuco_board_detect\r\n#23664 from asmorkalov:as/solveLP_infeasible\r\n#23692 from asmorkalov:as/ffmpeg_fps_3.4\r\n#23702 from dkurt:py_rotated_rect\r\n#23724 from dkurt:java_without_ant\r\n#23729 from asmorkalov:as/create_samples_overflow\r\n#23754 from dkurt:remap_linear_transparent\r\n#23768 from opencv-pushbot:gitee/alalek/issue_23156\r\n#23796 from TolyaTalamanov:at/align-ie-backend-with-latest-openvino\r\n#23799 from TolyaTalamanov:at/ov20-backend-implement-missing-kernels\r\n#23801 from VadimLevin:dev/vlevin/python-stubs-api-refinement\r\n#23809 from VadimLevin:dev/vlevin/re-export-stubs-submodules\r\n#23812 from dizcza:tbb\r\n#23813 from VadimLevin:dev/vlevin/runtime-typing-module\r\n#23815 from LaurentBerger:CAP_IMAGES\r\n#23816 from VadimLevin:dev/vlevin/export-all-caps-enum-constants\r\n#23819 from asmorkalov:as/objdetect_no_dnn\r\n#23821 from asmorkalov:as/python_types_extra_imports\r\n#23825 from ulvido:4.x\r\n#23829 from fengyuentau:fixes4orbbec\r\n#23831 from asmorkalov:update_version_3.4.20-pre\r\n#23832 from asmorkalov:as/reshape_docs\r\n#23833 from asmorkalov:update_version_4.8.0-pre\r\n#23835 from VadimLevin:dev/vlevin/fix-ast-nodes-required-usage-imports\r\n#23838 from VadimLevin:dev/vlevin/numpy-array-typing\r\n#23841 from asmorkalov:as/ffmpeg_update_3.4\r\n#23842 from opencv-pushbot:gitee/alalek/fix_static_build_with_gapi_openvino\r\n#23843 from TolyaTalamanov:at/fix-missing-opaque-kind-for-kernel\r\n#23846 from asmorkalov:as/ffmpeg_update_4.x\r\n#23848 from AleksandrPanov:fix_detectDiamonds_api\r\n#23853 from fengyuentau:disable_fp16_warning\r\n#23855 from thekpaul:3.4_patched\r\n#23859 from TolyaTalamanov:at/ov-backend-core-wa\r\n#23860 from fengyuentau:fix_overflow_sigmoid_v3.4\r\n#23863 from asmorkalov:as/calibrate_py_rework\r\n#23881 from asmorkalov:as/fast_math_nan\r\n#23884 from TolyaTalamanov:at/fix-async-infer-ov-backend\r\n#23885 from hanliutong:UniversalIntrinsicRewriter\r\n#23892 from vrabaud:compile_fix\r\n#23896 from mshabunin:test-cap-images\r\n#23900 from kai-waang:fixing-typo\r\n#23901 from kai-waang:remove-duplicated\r\n#23909 from asmorkalov:as/exclude_3.4\r\n#23914 from AleksandrPanov:update_aruco_byteList_docs\r\n#23918 from kallaballa:custom_package_name\r\n#23920 from loongson-zn:4.x\r\n#23922 from vrabaud:imgwarp\r\n#23924 from ocpalo:patch-2\r\n#23927 from Avasam:partially-unknown-mat\r\n#23928 from Avasam:Add-missing-properties-to-error-class\r\n#23931 from asmorkalov:as/drawing_overflow\r\n#23936 from SaltFish-T:4.x\r\n#23938 from mshabunin/fix-warnings-gcc\r\n#23940 from mshabunin:fix-cap-images\r\n#23943 from vrabaud:avif_tsan\r\n#23944 from mshabunin:test-v4l2\r\n#23952 from zihaomu:fix_depth_conv_5x5\r\n#23954 from VadimLevin:dev/vlevin/matrix-type-constants-stubs\r\n#23955 from VadimLevin:dev/vlevin/overload-presence-check-fix\r\n#23956 from VadimLevin:dev/vlevin/recursive-re-export-submodules\r\n#23958 from VadimLevin:dev/vlevin/friendly-wrong-npy-type-message\r\n#23963 from opencv-pushbot:gitee/alalek/fixup_23842\r\n#23966 from hanliutong:popcount\r\n#23967 from YusukeKameda:4.x\r\n#23968 from mshabunin:doc-env\r\n#23969 from asmorkalov:as/python2_test_fix\r\n#23970 from mshabunin:fix-v4l-test\r\n#23972 from Avasam:partially-unknown-mat\r\n#23973 from mshabunin:riscv-unaligned-access\r\n#23986 from headshog:fix-numtrunc\r\n#23991 from buyuer:4.x\r\n#23999 from asmorkalov:as/opencv_logging\r\n#24001 from legrosbuffle:legrosbuffle-cvround-intrinsic\r\n#24003 from cudawarped:cuda_fix_skip_test_exception\r\n#24004 from dkurt:tflite_new_layers\r\n#24008 from iarspider:patch-1\r\n#24022 from VadimLevin:dev/vlevin/python-typing-cuda\r\n#24023 from VadimLevin:dev/vlevin/python-typing-magic-constants\r\n#24024 from TolyaTalamanov:at/add-onnx-openvino-execution-provider\r\n#24026 from VadimLevin:dev/vlevin/python-numpy-writeable-flag-check\r\n#24028 from VadimLevin:dev/vlevin/fix-flann-python-bindings\r\n#24029 from VadimLevin:dev/vlevin/python-add-cuda-stream-to-simple-types\r\n#24032 from vrabaud:ubsan\r\n#24040 from asmorkalov:as/cuda_dnn_eps_fix\r\n#24042 from vrabaud:circle\r\n#24043 from zixianweei:use-vaddq_f32-on-arm64\r\n#24045 from TolyaTalamanov:at/add-onnx-directml-execution-provider\r\n#24046 from VadimLevin:dev/vlevin/add-cuda-gpu-mat-to-big-types\r\n#24054 from mwangistan:4.x\r\n#24055 from asmorkalov:as/msvc_cxx20_warning_disable\r\n#24056 from dkurt:eltwise_prelu\r\n#24061 from VadimLevin:dev/vlevin/python-typing-highgui-refinement\r\n#24062 from VadimLevin:dev/vlevin/python-typing-redirect-error\r\n#24066 from VadimLevin:dev/vlevin/python-typing-register-dnn-layer\r\n\r\n~~#23971 from asmorkalov:as/ci-ubuntu-2204~~\r\n\r\nPrevious \"Merge 4.x\": #23979",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 58,
        "deletions": 16,
        "changed_files": 4,
        "created_at": "2023-07-27T15:05:28Z",
        "closed_at": "2023-08-02T11:28:47Z",
        "merged_at": "2023-08-02T11:28:47Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nrequired for https://github.com/opencv/opencv/pull/23987\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Custom\r\n\r\nXbuild_image:Custom=ubuntu-openvino-2021.4.2:20.04\r\nbuild_image:Custom=ubuntu-openvino-2022.1.0:20.04\r\n\r\ntest_modules:Custom=dnn,python2,python3,java,gapi,video\r\n\r\nbuildworker:Custom=linux-1\r\n# disabled due high memory usage: test_opencl:Custom=ON\r\ntest_opencl:Custom=ON\r\ntest_bigdata:Custom=1\r\ntest_filter:Custom=*\r\n```",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 182,
        "deletions": 1,
        "changed_files": 9,
        "created_at": "2023-07-27T10:10:54Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 206,
        "deletions": 78,
        "changed_files": 11,
        "created_at": "2023-07-26T22:41:07Z",
        "closed_at": "2023-07-27T08:28:01Z",
        "merged_at": "2023-07-27T08:28:01Z",
        "body": "This patch introduces typings generation for `dnn_registerLayer`/`dnn_unregisterLayer` manually defined in [`cv2/modules/dnn/misc/python/pyopencv_dnn.hpp`](https://github.com/opencv/opencv/blob/4.x/modules/dnn/misc/python/pyopencv_dnn.hpp)\r\n\r\nUpdates:\r\n\r\n- Add `LayerProtocol` to `cv2/dnn/__init__.pyi`:\r\n\r\n    ```python\r\n    class LayerProtocol(Protocol):\r\n        def __init__(\r\n            self, params: dict[str, DictValue],\r\n            blobs: typing.Sequence[cv2.typing.MatLike]\r\n        ) -> None: ...\r\n\r\n        def getMemoryShapes(\r\n            self, inputs: typing.Sequence[typing.Sequence[int]]\r\n        ) -> typing.Sequence[typing.Sequence[int]]: ...\r\n\r\n        def forward(\r\n            self, inputs: typing.Sequence[cv2.typing.MatLike]\r\n        ) -> typing.Sequence[cv2.typing.MatLike]: ...\r\n    ```\r\n\r\n- Add `dnn_registerLayer` function to `cv2/__init__.pyi`:\r\n\r\n    ```python\r\n    def dnn_registerLayer(layerTypeName: str,\r\n                          layerClass: typing.Type[LayerProtocol]) -> None: ...\r\n    ```\r\n\r\n- Add `dnn_unregisterLayer` function to `cv2/__init__.pyi`:\r\n\r\n    ```python\r\n    def dnn_unregisterLayer(layerTypeName: str) -> None: ...\r\n    ```\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1334,
        "deletions": 8,
        "changed_files": 11,
        "created_at": "2023-07-26T18:02:01Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Pull Request for GSoC 2023 Project5 - Simple Triangle Rendering\r\n\r\nThis is a pull request for OpenCV 3d module in 5.x branch, which is the work of GSoC 2023 project 5. The changes are demonstrated down below.\r\n1. Create rendering.cpp and rendering.hpp files in opencv/modules/src folder, which can render the input triangles through the triangleRastrize() function. This new function can now perform depth and color rendering successfully\r\n2. Create test_rendering.cpp file in the opencv/modules/test folder, which test the triangleRastrize() function in 4 different ways, (including empty set, constant color rendering, interpolated color rendering and clipping test rendering)\r\n3.  Add three new files in opencv/sample/opengl folder. The names are opengl_clipping_sample.cpp, opengl_color_sample.cpp and opengl_depth._sample.cpp. These files are set to be the OpenGL ground truth samples for the rendering image.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-26T13:52:03Z",
        "closed_at": "2023-07-27T06:26:42Z",
        "merged_at": "2023-07-27T06:26:42Z",
        "body": "`redirectError` is defined in `cv2_util.cpp` and manually exported in `cv2.cpp`\r\n\r\nPython interface for `redirectError`:\r\n\r\n```python\r\ndef redirectError(\r\n    onError: Callable[[int, str, str, str, int], None] | None\r\n) -> None: ...\r\n```\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 90,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-07-26T13:39:31Z",
        "closed_at": "2023-07-26T17:01:45Z",
        "merged_at": "2023-07-26T17:01:45Z",
        "body": "Manually add typing stubs for functions defined in `cv2_highgui.hpp`:\r\n- `createTrackbar`\r\n\r\n    ```python\r\n     def createTrackbar(trackbarName: str,\r\n                   windowName: str,\r\n                   value: int,\r\n                   count: int,\r\n                   onChange: Callable[[int], None]) -> None: ...\r\n    ```\r\n\r\n- `createButton`\r\n\r\n    ```python\r\n    def createButton(buttonName: str,\r\n                     onChange: Callable[[tuple[int] | tuple[int, Any]], None],\r\n                     userData: Any | None = ...,\r\n                     buttonType: int = ...,\r\n                     initialButtonState: int = ...) -> None: ...\r\n    ```\r\n\r\n- `setMouseCallback`\r\n\r\n    ```python\r\n    def setMouseCallback(\r\n        windowName: str,\r\n        onMouse: Callback[[int, int, int, int, Any | None], None],\r\n        param: Any | None = ...\r\n    ) -> None: ...\r\n    ```\r\n\r\ncloses opencv/opencv-python#875\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 253,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-07-26T13:33:40Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Overview\r\nExtend `cv::gapi::onnx::ep::DirectML` to accept `adapter name` as `ctor` parameter in order to select execution device by `name`.\r\nE.g:\r\n```\r\npp.cfgAddExecutionProvider(cv::gapi::onnx::ep::DirectML(\"Intel Graphics\"));\r\n```\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 156,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2023-07-26T11:52:21Z",
        "closed_at": "2023-08-02T11:13:07Z",
        "merged_at": "2023-08-02T11:13:07Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1183,
        "deletions": 1143,
        "changed_files": 11,
        "created_at": "2023-07-26T08:22:44Z",
        "closed_at": "2023-09-14T17:37:46Z",
        "merged_at": "2023-09-14T17:37:46Z",
        "body": "The goal of this series of PRs is to modify the SIMD code blocks guarded by CV_SIMD macro in the `opencv/modules/imgproc` folder: rewrite them by using the new Universal Intrinsic API. \r\n\r\nFor easier review, this PR includes a part of the rewritten code, and another part will be brought in the next PR (coming soon). I tested this patch on RVV (QEMU) and AVX devices, `opencv_test_imgproc` is passed.\r\n\r\nThe patch is partially auto-generated by using the [rewriter](https://github.com/hanliutong/rewriter), related PR https://github.com/opencv/opencv/pull/23885 and https://github.com/opencv/opencv/pull/23980.\r\n\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 141,
        "deletions": 15,
        "changed_files": 4,
        "created_at": "2023-07-25T17:28:05Z",
        "closed_at": "2023-07-27T13:36:41Z",
        "merged_at": "2023-07-27T13:36:41Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nresolves https://github.com/opencv/opencv/issues/24051\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n\r\n```\r\nforce_builders=Custom\r\n\r\nXbuild_image:Custom=ubuntu-openvino-2021.4.2:20.04\r\nbuild_image:Custom=ubuntu-openvino-2022.1.0:20.04\r\n\r\ntest_modules:Custom=dnn,python2,python3,java,gapi,video\r\n\r\nbuildworker:Custom=linux-1\r\n# disabled due high memory usage: test_opencl:Custom=ON\r\ntest_opencl:Custom=ON\r\ntest_bigdata:Custom=1\r\ntest_filter:Custom=*\r\n```",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-07-25T11:52:29Z",
        "closed_at": "2023-07-26T08:12:17Z",
        "merged_at": "2023-07-26T08:12:17Z",
        "body": "Replacement for https://github.com/opencv/opencv/pull/23974.\r\nSuppressed the warning as it's done for GCC and Clang.\r\nThe PR touches header files only. OpenCV does not fully support C++20 for now.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-25T08:44:21Z",
        "closed_at": "2023-07-26T17:53:18Z",
        "merged_at": "2023-07-26T17:53:18Z",
        "body": "### Pull Request Readiness Checklist\r\nThis PR fixes the issue: #24006 \r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2339,
        "deletions": 369,
        "changed_files": 20,
        "created_at": "2023-07-24T18:30:40Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n---\r\n### Summary\r\n\r\nThis is the major pull request for the project \"Multi-camera calibration part 2\" in GSoC 2023. [This](https://drive.google.com/file/d/1FESZG-ekE5LbTHCzPTaskWWCT9OYLbxb/view?usp=drive_link) links to the final report of the project. For details of how the project was extended can be found there.\r\n\r\nThe major contribution is to add the support for a mixed model of pinhole and fisheye camera models, and the support of calibrating cameras without constraints of overlapping field of view and complete.\r\n\r\nThe documentation is also improved with debugging advice on multi-camera calibration added. [This link](https://drive.google.com/file/d/1jjzHy_qFlrdj_fNIPDKPWb8JPuC9ZczU/view?usp=sharing) and [this](https://drive.google.com/file/d/1Q3YRZFRFP12C2prVdwxzGsSPOQo2pii0/view?usp=drive_link) correspond to the documentation for the implemented registerCameras. [This](https://drive.google.com/file/d/1Qxs6Yxb-WewvbmnaBXe2ip6yXCdL8zMy/view?usp=sharing) links to the documentation of the multiview calibration funtion. As for the tutorial, it can be found [here]( https://drive.google.com/file/d/1WSA6Ai_Q_iQNjQijZ9ZRwLRfPVFqJzCu/view?usp=sharing).\r\n\r\nBesides, some self captured data can be found in the opencv_extra (currently in pull request [1089](https://github.com/opencv/opencv_extra/pull/1089)).\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 102,
        "changed_files": 2,
        "created_at": "2023-07-22T09:45:36Z",
        "closed_at": "2023-07-23T18:12:28Z",
        "merged_at": "2023-07-23T18:12:28Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-21T14:59:08Z",
        "closed_at": "2023-07-26T10:18:32Z",
        "merged_at": "2023-07-26T10:18:32Z",
        "body": "This patch enables passing GpuMat as an in/out argument in several functions.\r\nPart of work for opencv/opencv_contrib#3534\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 198,
        "deletions": 63,
        "changed_files": 9,
        "created_at": "2023-07-21T14:06:37Z",
        "closed_at": "2023-07-26T13:00:21Z",
        "merged_at": "2023-07-26T13:00:21Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-07-21T12:31:24Z",
        "closed_at": "2023-07-25T08:41:10Z",
        "merged_at": "2023-07-25T08:41:10Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-07-21T12:12:07Z",
        "closed_at": "2023-07-26T17:00:23Z",
        "merged_at": "2023-07-26T17:00:22Z",
        "body": "For an empty radius, &v[0] would be accessed (though the called functions would not use it due to v.size() being 0). Also add checks for emptyness and fix the first element checks, in case we get INT_MAX to compare to.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-21T10:49:48Z",
        "closed_at": "2023-07-21T13:46:35Z",
        "merged_at": "2023-07-21T13:46:35Z",
        "body": "Resolves https://github.com/opencv/opencv/issues/23947\r\n\r\nIssue 1:\r\n```\r\n [ RUN      ] Test_Torch_nets.FastNeuralStyle_accuracy/0, where GetParam() = CUDA/CUDA\r\n/home/ci/opencv/modules/dnn/test/test_common.impl.hpp:79: Failure\r\nExpected: (normInf) <= (lInf), actual: 1.10242 vs 1.1\r\n  |ref| = 255\r\n[  FAILED  ] Test_Torch_nets.FastNeuralStyle_accuracy/0, where GetParam() = CUDA/CUDA (188 ms)\r\n```\r\n\r\nIssue 2:\r\n```\r\n[ RUN      ] Test_Torch_nets.FastNeuralStyle_accuracy/1, where GetParam() = CUDA/CUDA_FP16\r\n/home/ci/opencv/modules/dnn/test/test_common.impl.hpp:79: Failure\r\nExpected: (normInf) <= (lInf), actual: 25.654 vs 25\r\n  |ref| = 255\r\n[  FAILED  ] Test_Torch_nets.FastNeuralStyle_accuracy/1, where GetParam() = CUDA/CUDA_FP16 (1900 ms)\r\n```\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 212,
        "deletions": 68,
        "changed_files": 12,
        "created_at": "2023-07-21T10:44:58Z",
        "closed_at": "2023-08-04T08:28:51Z",
        "merged_at": "2023-08-04T08:28:51Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\n* MaxUnpooling with OpenVINO\r\n* Fully connected with transposed inputs/weights with OpenVINO\r\n* Enable backends tests for TFLite (related to https://github.com/opencv/opencv/issues/23992#issuecomment-1640691722)\r\n* Increase existing tests thresholds\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Custom\r\n\r\nXbuild_image:Custom=ubuntu-openvino-2021.4.2:20.04\r\nbuild_image:Custom=ubuntu-openvino-2022.1.0:20.04\r\n\r\ntest_modules:Custom=dnn,python2,python3,java,gapi,video\r\n\r\nbuildworker:Custom=linux-1\r\n# disabled due high memory usage: test_opencl:Custom=ON\r\ntest_opencl:Custom=ON\r\ntest_bigdata:Custom=1\r\ntest_filter:Custom=*\r\n```",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 1234,
        "deletions": 3,
        "changed_files": 6,
        "created_at": "2023-07-21T09:17:28Z",
        "closed_at": "2023-09-22T08:25:03Z",
        "merged_at": "2023-09-22T08:25:03Z",
        "body": "### This PR adding support for [Einsum Layer](https://pytorch.org/docs/stable/generated/torch.einsum.html) (in progress). \r\n\r\nThis PR is currently not to be merged but only reviewed. Test cases are located in [#1090](https://github.com/opencv/opencv_extra/pull/1090)RP in OpenCV extra\r\n\r\nresolves https://github.com/opencv/opencv/issues/23134\r\nresolves https://github.com/opencv/opencv/issues/19067\r\n\r\n**DONE**: \r\n - [x] 2-5D GMM support added\r\n - [x] Matrix transpose support added\r\n - [x] Reduction type comupte  'ij->j'\r\n - [x] 2nd shape computation - during forward \r\n\r\n**Next PRs**:\r\n- [ ] Broadcasting reduction \"...ii ->...i\"\r\n- [ ] Add lazy shape deduction. \"...ij, ...jk->...ik\"\r\n- [ ] Add implicit output computation support. \"bij,bjk ->\" (output subscripts should be \"bik\")\r\n- [ ] Add support for CUDA backend \r\n- [ ] BatchWiseMultiply optimize\r\n\r\n**Later in 5.x version (requires support for 1D matrices)**: \r\n- [ ] Add 1D vector multiplication support \r\n- [ ] Inter product \"i, i\" (problems with 1D shapes)\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 52,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-07-20T21:26:35Z",
        "closed_at": "2023-07-27T16:36:33Z",
        "merged_at": "2023-07-27T16:36:33Z",
        "body": "This should have been fixed with https://github.com/opencv/opencv/issues/23304\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 18,
        "changed_files": 1,
        "created_at": "2023-07-20T13:34:30Z",
        "closed_at": "2023-07-21T14:16:12Z",
        "merged_at": "2023-07-21T14:16:12Z",
        "body": "Details here: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=58006\r\nruntime error: call to function (unknown) through pointer to incorrect function type 'void (*)(const unsigned char **, const int *, unsigned char **, const int *, int, int)'\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-20T11:02:11Z",
        "closed_at": "2023-09-17T20:48:11Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\nWhen OpenCV is build on a Raspberry Pi with a 32-bit Debian OS, it errors with `undefined reference to '__atomic_load_8'`\r\nThe problem is the linkage of calib3d. Somehow it doesn't pull in `libatomic.so`.\r\nBy incorporating `${CMAKE_SHARED_LINKER_FLAGS}` into the `CMakeList.txt` this library is explicitly used in the build.\r\nOf course, the build must flag `-D CMAKE_SHARED_LINKER_FLAGS=-latomic`.\r\nSee also #[Failed to install on Raspberry Pi (ARM) 32 bit](https://github.com/scipy/scipy/issues/17670)",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-19T18:54:27Z",
        "closed_at": "2023-07-21T11:57:32Z",
        "merged_at": "2023-07-21T11:57:32Z",
        "body": "This patch fixes usage of `cuda::Stream` in function arguments.\r\n\r\nAffected modules: `cudacodec`: \r\n[`using namespace cuda`](https://github.com/opencv/opencv_contrib/blob/9dfe233020f669f17021dfc456fe77531e776b74/modules/cudacodec/include/opencv2/cudacodec.hpp#L62)  in public `cudacodec.hpp` header can be removed after merge of the patch.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 144,
        "deletions": 41,
        "changed_files": 7,
        "created_at": "2023-07-19T16:48:38Z",
        "closed_at": "2023-07-21T09:44:56Z",
        "merged_at": "2023-07-21T09:44:56Z",
        "body": "As a side-effect this patch improves reporting errors by FLANN `get_param`.\r\n\r\nresolves #21642\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-07-19T16:31:52Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Bug #24019\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [X] There is a reference to the original bug report and related work\r\n- [X] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-07-19T14:24:13Z",
        "closed_at": "2023-07-19T16:17:30Z",
        "merged_at": "2023-07-19T16:17:30Z",
        "body": "Example error output:\r\n```\r\nOpenCV(4.8.0-dev) :-1: error: (-5:Bad argument) in function 'rectangle'\r\n> Overload resolution failed:\r\n>  - img marked as output argument, but provided NumPy array marked as readonly\r\n>  - Expected Ptr<cv::UMat> for argument 'img'\r\n>  - img marked as output argument, but provided NumPy array marked as readonly\r\n>  - Expected Ptr<cv::UMat> for argument 'img'\r\n```\r\n\r\nresolves opencv/opencv-python#859\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-19T14:23:55Z",
        "closed_at": "2023-07-21T06:21:30Z",
        "merged_at": null,
        "body": "\r\nIssue: Emscripten builds without extra modules since June 15 changes. \r\n\r\nVersion 4.8.0+ issue \r\n```\r\n/Users/~/SOURCE/apothecary/apothecary/build/opencv/build_emscripten/build/modules/js_bindings_generator/gen/bindings.cpp:111:21:\r\n error: expected namespace name\r\n  111 | using namespace cv::aruco;\r\n      |                 ~~~~^\r\n/Users/~/SOURCE/apothecary/apothecary/build/opencv/build_emscripten/build/modules/js_bindings_generator/gen/bindings.cpp:112:9: \r\nerror: use of undeclared identifier 'aruco'\r\n  112 | typedef aruco::DetectorParameters aruco_DetectorParameters;\r\n      |         ^\r\n/Users/~/SOURCE/apothecary/apothecary/build/opencv/build_emscripten/build/modules/js_bindings_generator/gen/bindings.cpp:113:9: \r\nerror: use of undeclared identifier 'QRCodeDetectorAruco'\r\n  113 | typedef QRCodeDetectorAruco::Params QRCodeDetectorAruco_Params;\r\n      |         ^\r\n```\r\n\r\nCaused by: https://github.com/opencv/opencv/commit/61488885b54da3cd2a7fafc99c80ff491689e865\r\n\r\n\r\nProposed fix: Return of the define. This will mean QR params will also need that define \r\n@asmorkalov\r\n\r\n\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 207,
        "deletions": 2,
        "changed_files": 5,
        "created_at": "2023-07-19T14:22:37Z",
        "closed_at": "2023-07-21T09:18:07Z",
        "merged_at": "2023-07-21T09:18:07Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-07-19T13:43:39Z",
        "closed_at": "2023-07-20T06:18:29Z",
        "merged_at": "2023-07-20T06:18:29Z",
        "body": "This patch adds typing stubs generation for `__all__` and `__version__` constants.\r\n\r\nIntroduced `__all__` is intentionally empty for all generated modules stubs. \r\n\r\nType hints won't work for star imports\r\n\r\nresolves #23950\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 112,
        "deletions": 42,
        "changed_files": 4,
        "created_at": "2023-07-19T12:09:20Z",
        "closed_at": "2023-07-19T13:51:41Z",
        "merged_at": "2023-07-19T13:51:41Z",
        "body": "resolves #23946\r\nresolves #23945\r\nresolves opencv/opencv-python#871\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 102,
        "deletions": 35,
        "changed_files": 3,
        "created_at": "2023-07-19T05:17:20Z",
        "closed_at": "2023-08-11T08:28:57Z",
        "merged_at": "2023-08-11T08:28:57Z",
        "body": "As discussed in https://github.com/opencv/opencv_contrib/pull/3488#issuecomment-1598436515 decoder initialization when `VideoCapture` is only used for demuxing  (`CAP_PROP_FORMAT== -1`, `rawMode == true`) is unecessary.  Additionally if video sources can be parsed but not decoded, `VideoCapture` returns an error on decoder initialization preventing it from being used for demuxing.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-18T07:18:47Z",
        "closed_at": "2023-07-18T12:37:44Z",
        "merged_at": "2023-07-18T12:37:44Z",
        "body": "C++20 made it invalid to use simple-template-ids for constructors and destructors: https://eel.is/c++draft/diff.cpp17.class#2 GCC 11 and later throw an error on this, with the unhelpful message `expected unqualified-id before ')' token`. This PR fixes the problem.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4737,
        "deletions": 2565,
        "changed_files": 26,
        "created_at": "2023-07-17T18:10:14Z",
        "closed_at": "2023-07-27T14:51:17Z",
        "merged_at": "2023-07-27T14:51:17Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n\r\nBase branch is PR #23979. Merging PR #23078 and PR #23806 to 5.x\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 111,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2023-07-17T17:40:51Z",
        "closed_at": "2023-07-21T06:13:37Z",
        "merged_at": "2023-07-21T06:13:37Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nresolves https://github.com/opencv/opencv/issues/23992\r\n\r\n**Merge with extra**: https://github.com/opencv/opencv_extra/pull/1076\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-17T15:12:31Z",
        "closed_at": "2023-07-18T06:49:21Z",
        "merged_at": "2023-07-18T06:49:20Z",
        "body": "Fixes https://github.com/opencv/opencv/issues/24002.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-17T14:36:40Z",
        "closed_at": "2023-07-23T06:53:19Z",
        "merged_at": "2023-07-23T06:53:19Z",
        "body": "There is no reason to enable this only on windows. We've measured a 7x improvement in speed for `cvRound` using the intrinsic.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ X] I agree to contribute to the project under Apache 2 License.\r\n- [ X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ X] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ X] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ X] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 53,
        "changed_files": 7,
        "created_at": "2023-07-17T09:51:02Z",
        "closed_at": "2023-07-19T11:46:27Z",
        "merged_at": "2023-07-19T11:46:27Z",
        "body": "Address: https://github.com/opencv/opencv/issues/23994\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-14T09:01:11Z",
        "closed_at": "2023-07-18T13:26:09Z",
        "merged_at": "2023-07-18T13:26:09Z",
        "body": "If use -flto in gcc12.1, then will be warning appear.\r\n```\r\nlto-wrapper: warning: using serial compilation of 57 LTRANS jobs\r\nlto-wrapper: note: see the \u2018-flto\u2019 option documentation for more information\r\n```\r\n\r\nReference:\r\nhttps://stackoverflow.com/questions/72218980/gcc-v12-1-warning-about-serial-compilation\r\nhttps://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html\r\n\r\n>Use -flto=auto to use GNU make\u2019s job server, if available, or otherwise fall back to autodetection of the number of CPU threads present in your system.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 105,
        "deletions": 100,
        "changed_files": 3,
        "created_at": "2023-07-14T08:34:12Z",
        "closed_at": "2023-07-23T06:55:50Z",
        "merged_at": "2023-07-23T06:55:50Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 65,
        "deletions": 344,
        "changed_files": 51,
        "created_at": "2023-07-13T13:43:09Z",
        "closed_at": "2023-07-18T06:59:15Z",
        "merged_at": "2023-07-18T06:59:15Z",
        "body": "More complete replacement for https://github.com/opencv/opencv/pull/19555\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 573,
        "deletions": 54,
        "changed_files": 21,
        "created_at": "2023-07-13T11:05:12Z",
        "closed_at": "2023-09-28T13:24:43Z",
        "merged_at": "2023-09-28T13:24:43Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nTODO:\r\n- [x] DetectionOutput layer (https://github.com/opencv/opencv/pull/24069)\r\n- [x] Less FP32 fallbacks (i.e. Sigmoid, eltwise sum)\r\n- [x] Accuracy, performance tests (https://github.com/opencv/opencv/pull/24039)\r\n- [x] Single layer tests (convolution)\r\n- [x] ~~Fixes for OpenVINO 2022.1 (https://pullrequest.opencv.org/buildbot/builders/precommit_custom_linux/builds/100334)~~\r\n\r\n\r\nPerformace results for object detection model `coco_efficientdet_lite0_v1_1.0_quant_2021_09_06.tflite`:\r\n| backend | performance (median time) |\r\n|---|---|\r\n| OpenCV | 77.42ms |\r\n| OpenVINO 2023.0 | 10.90ms |\r\n\r\nCPU: `11th Gen Intel(R) Core(TM) i5-1135G7 @ 2.40GHz`\r\n\r\nSerialized model per-layer stats (note that Convolution should use `*_I8` primitives if they are quantized correctly): https://gist.github.com/dkurt/7772bbf1907035441bb5454f19f0feef\r\n\r\n---\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Custom\r\n\r\nXbuild_image:Custom=ubuntu-openvino-2021.4.2:20.04\r\nbuild_image:Custom=ubuntu-openvino-2022.1.0:20.04\r\n\r\ntest_modules:Custom=dnn,python2,python3,java,gapi,video\r\n\r\nbuildworker:Custom=linux-1\r\n# disabled due high memory usage: test_opencl:Custom=ON\r\ntest_bigdata:Custom=1\r\ntest_filter:Custom=*\r\n```",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-13T10:26:55Z",
        "closed_at": "2023-07-27T09:27:47Z",
        "merged_at": "2023-07-27T09:27:47Z",
        "body": "Hi! We've been fuzzing opencv with [sydr-fuzz](https://github.com/ispras/oss-sydr-fuzz) security predicates and we found numeric truncation error in `tif_dirread.c:4386`.\r\n\r\nIn function `TIFFReadDirectoryCheckOrder` on line 4386 variable `m` has type `uint16`, structure `TIFFDirEntry` has field `uint16 tdir_tag`. But on the right side of operator there is an integer type value (due to the integer promotion), so the numeric truncation may occur. Our tool has found input when `o->tdir_tag` is equal to 65535 (uint16_max), so then value `o->tdir_tag+1` truncates to zero in variable `m`. Then `m` is used in if operator on line 4380, and it is obvious, that `o->tdir_tag<m` can't be true after truncation and the break from the cycle will not occur even with not ascending order of tags. So we suggest to change the type `int16_t` of the variable `m` to type `uint32`.\r\n\r\n### Environment\r\n\r\n- OS: ubuntu 20.04\r\n- commit: a42b35598e2543d6dab3ac73be92fb77742e0747\r\n\r\n### How to reproduce this error\r\n\r\n1. Build [docker container](https://github.com/ispras/oss-sydr-fuzz/tree/master/projects/opencv):\r\n\r\n    ```\r\n    sudo docker build -t oss-sydr-fuzz-opencv .\r\n\r\n    ```\r\n\r\n2. Run docker container:\r\n\r\n    ```\r\n    sudo docker run --privileged --network host -v /etc/localtime:/etc/localtime:ro --rm -it -v $PWD:/fuzz oss-sydr-fuzz-opencv /bin/bash\r\n\r\n    ```\r\n\r\n3. Run on the following [input](https://github.com/opencv/opencv/files/12038289/sydr_ce171c30cd94046b3233028c74c7fce1a956c7e1_num_trunc_0_unsigned.txt):\r\n\r\n\r\n    ```\r\n     /out/imread_fuzzer sydr_ce171c30cd94046b3233028c74c7fce1a956c7e1_num_trunc_0_unsigned.txt\r\n\r\n    ```\r\n4. Output:\r\n\r\n    ```\r\n    /opencv/3rdparty/libtiff/tif_dirread.c:4386:5: runtime error: implicit conversion from type 'int' of value 65536 (32-bit, signed) to type 'uint16' (aka 'unsigned short') changed the value to 0 (16-bit, unsigned)\r\n    SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /opencv/3rdparty/libtiff/tif_dirread.c:4386:5\r\n    ```",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 404,
        "deletions": 125,
        "changed_files": 5,
        "created_at": "2023-07-13T08:24:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## PR for GSoC Point Cloud Compression\r\n[Issue for GSoC 2023](https://github.com/opencv/opencv/issues/23624)\r\n\r\n* We are **updating the Octree method create() by using OctreeKey**: Through voxelization, directly calculate the leaf nodes that the point cloud belongs to, and omit the judgment whether the point cloud is in the range when inserted. The index of the child node is calculated by bit operation.\r\n* We are also **introducing a new header file pcc.h (Point Cloud Compression) with API framework**.\r\n* We added tests for restoring point clouds from an octree.\r\n* Currently, the features related to octree creation and point cloud compression are part of the internal API, which means they are not directly accessible to users. However, our plan for the future is to **include only the 'PointCloudCompression' class in the 'opencv2/3d.hpp' header file**. This will provide an interface for utilizing the point cloud compression functionality.\r\n\r\nThe previous PR of this was closed due to repo name conflicts, therefore we resubmitted in this PR.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 466,
        "deletions": 518,
        "changed_files": 17,
        "created_at": "2023-07-12T13:18:11Z",
        "closed_at": "2023-08-11T05:33:34Z",
        "merged_at": "2023-08-11T05:33:34Z",
        "body": "The goal of this PR is to match and modify all SIMD code blocks guarded by `CV_SIMD` macro in the `opencv/modules/core` folder and rewrite them by using the new Universal Intrinsic API.\r\n\r\nThe patch is almost auto-generated by using the [rewriter](https://github.com/hanliutong/rewriter), related PR #23885.\r\n\r\nMost of the files have been rewritten, but I marked this PR as draft because, the `CV_SIMD` macro also exists in the following files, and the reasons why they are not rewrited are:\r\n\r\n1. ~~code design for fixed-size SIMD (v_int16x8, v_float32x4, etc.), need to manually rewrite.~~ Rewrited\r\n- ./modules/core/src/stat.simd.hpp\r\n- ./modules/core/src/matrix_transform.cpp\r\n- ./modules/core/src/matmul.simd.hpp\r\n\r\n2. Vector types are wrapped in other class/struct, that are not supported by the compiler in variable-length backends. Can not be rewrited directly.\r\n- ./modules/core/src/mathfuncs_core.simd.hpp \r\n```cpp\r\nstruct v_atan_f32\r\n{\r\n    explicit v_atan_f32(const float& scale)\r\n    {\r\n...\r\n    }\r\n\r\n    v_float32 compute(const v_float32& y, const v_float32& x)\r\n    {\r\n...\r\n    }\r\n\r\n...\r\n    v_float32 val90; // sizeless type can not used in a class\r\n    v_float32 val180;\r\n    v_float32 val360;\r\n    v_float32 s;\r\n};\r\n```\r\n\r\n3. The API interface does not support/does not match\r\n\r\n- ./modules/core/src/norm.cpp \r\nUse `v_popcount`, ~~waiting for #23966~~ Fixed\r\n- ./modules/core/src/has_non_zero.simd.hpp\r\nUse illegal Universal Intrinsic API: For float type, there is no logical operation `|`. Further discussion needed\r\n\r\n```cpp\r\n/** @brief Bitwise OR\r\n\r\nOnly for integer types. */\r\ntemplate<typename _Tp, int n> CV_INLINE v_reg<_Tp, n> operator|(const v_reg<_Tp, n>& a, const v_reg<_Tp, n>& b);\r\ntemplate<typename _Tp, int n> CV_INLINE v_reg<_Tp, n>& operator|=(v_reg<_Tp, n>& a, const v_reg<_Tp, n>& b);\r\n```\r\n\r\n```cpp\r\n#if CV_SIMD\r\n    typedef v_float32 v_type;\r\n    const v_type v_zero = vx_setzero_f32();\r\n    constexpr const int unrollCount = 8;\r\n    int step = v_type::nlanes * unrollCount;\r\n    int len0 = len & -step;\r\n    const float* srcSimdEnd = src+len0;\r\n\r\n    int countSIMD = static_cast<int>((srcSimdEnd-src)/step);\r\n    while(!res && countSIMD--)\r\n    {\r\n        v_type v0 = vx_load(src);\r\n        src += v_type::nlanes;\r\n        v_type v1 = vx_load(src);\r\n        src += v_type::nlanes;\r\n....\r\n        src += v_type::nlanes;\r\n        v0 |= v1; //Illegal ?\r\n....\r\n        //res = v_check_any(((v0 | v4) != v_zero));//beware : (NaN != 0) returns \"false\" since != is mapped to _CMP_NEQ_OQ and not _CMP_NEQ_UQ\r\n        res = !v_check_all(((v0 | v4) == v_zero));\r\n    }\r\n\r\n    v_cleanup();\r\n#endif\r\n```\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n\r\n\r\n```\r\nforce_builders=Custom\r\nXbuild_image:Custom=riscv-gcc\r\nXbuild_image:Custom=riscv-gcc-rvv\r\nXbuild_image:Custom=riscv-clang\r\nbuild_image:Custom=riscv-clang-rvv\r\nXbuild_image:Custom=riscv-clang-rvv-128\r\n\r\ntest_modules:Custom=core,imgproc,dnn\r\nbuildworker:Custom=linux-4\r\ntest_timeout:Custom=600\r\nbuild_contrib:Custom=OFF\r\n```",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 9934,
        "deletions": 930,
        "changed_files": 128,
        "created_at": "2023-07-12T11:26:53Z",
        "closed_at": "2023-07-13T10:58:23Z",
        "merged_at": "2023-07-13T10:58:23Z",
        "body": "Extra: https://github.com/opencv/opencv_extra/pull/1074\r\nContrib: https://github.com/opencv/opencv_contrib/pull/3527\r\n\r\n#21797 from anna-khakimova:ak/merge3_extend_supported_types\r\n#21959 from cpoerschke:4.x-intelligent-scissors-optimisation\r\n#22947 from chacha21:hasNonZero\r\n#23264 from AleksandrPanov:add_detect_qr_with_aruco\r\n#23595 from TolyaTalamanov:at/implement-openvino-backend\r\n#23596 from vrabaud:libavif\r\n#23666 from mshabunin:barcode-move\r\n#23668 from TolyaTalamanov:at/fix-resize-applying-logic-ie-backend\r\n#23688 from cpoerschke:4.x-pr-21959-prep\r\n#23721 from asmorkalov:as/openjpeg_2.5_warning_fix\r\n#23722 from asmorkalov:as/python_classifiers_update\r\n#23725 from asmorkalov:as/aruco_js_refresh\r\n#23732 from vekkuli:vekkuli-patch-create-featherblender\r\n#23740 from Peekabooc:4.x\r\n#23746 from Abdurrahheem:ash/graph_simplifier\r\n#23748 from AleksandrPanov:fix_cornerRefinementMethod_binding\r\n#23750 from mshabunin:fix-bgr2hls-access\r\n#23758 from AleksandrPanov:add_GenericGraphicalCode_interface\r\n#23761 from LaurentBerger:typeblobfromimages\r\n#23762 from TolyaTalamanov:at/gapi-ov-backend-hotfix\r\n#23763 from zihaomu:add_runtime_check\r\n#23766 from TolyaTalamanov:at/segmentation-demo-desync\r\n#23769 from asmorkalov:as/qrcode_js_fix\r\n#23775 from kai-waang:fixing-typo\r\n#23783 from zihaomu/remove_unsupported_character\r\n#23785 from damianofalcioni:4.x\r\n#23786 from TolyaTalamanov:at/expose-preprocessing-to-ie-backend\r\n#23788 from dkurt:py_scalar_assign\r\n#23789 from asmorkalov:as/python_aruco_qr\r\n#23790 from asmorkalov:as/qrcode_aruco_js\r\n#23795 from dkurt:tf_half_pixel_for_nn\r\n#23797 from asmorkalov:as/barcode_js_bindings\r\n#23798 from VadimLevin:dev/vlevin/runtime-typing-module\r\n#23800 from kai-waang:4.x\r\n#23807 from mshabunin:barcode-test\r\n#23721 from asmorkalov:as/openjpeg_2.5_warning_fix \r\n\r\nPrevious \"Merge 4.x\": #23718\r\n\r\n```\r\nforce_builders=Linux AVX2,Custom\r\nbuild_image:Docs=docs-js:18.04\r\nbuild_image:Custom=javascript\r\nbuildworker:Custom=linux-1,linux-4,linux-f1\r\n```",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 134,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2023-07-12T05:35:24Z",
        "closed_at": "2023-08-03T19:50:15Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n\r\nThis is a draft pull request for GSoC review purposes. Edits need to be made.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 81,
        "deletions": 81,
        "changed_files": 1,
        "created_at": "2023-07-12T05:10:11Z",
        "closed_at": "2023-07-25T11:52:39Z",
        "merged_at": null,
        "body": "use static_cast<int>() to convert the ACCESS_RW,ACCESS_WRITE,ACCESS_Read that after the '+' to solve the waring C5054 in VS2022 c++20\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2023-07-11T19:14:09Z",
        "closed_at": "2023-07-12T11:51:57Z",
        "merged_at": "2023-07-12T11:51:57Z",
        "body": "We experienced Segmentation Fault errors in _core_ `Flip` and _imgproc_ `Bayer` tests. Debugging has shown that issues are caused by an unaligned memory access in RVV code. This PR fixes them.\r\n\r\nBelow are quick performance comparison:\r\n\r\n<details>\r\n<summary>x86_64 performance results</summary>\r\n\r\n**Core i5-11600**\r\n\r\n|Name of Test|before|after|(x-factor)|\r\n|---|:-:|:-:|:-:|\r\n|Flip::OCL_FlipFixture::(640x480, 8UC1, FLIP_BOTH)|0.008|0.009|0.99|\r\n|Flip::OCL_FlipFixture::(640x480, 8UC1, FLIP_COLS)|0.009|0.009|1.00|\r\n|Flip::OCL_FlipFixture::(640x480, 8UC1, FLIP_ROWS)|0.008|0.008|1.05|\r\n|Flip::OCL_FlipFixture::(640x480, 32FC1, FLIP_BOTH)|0.033|0.033|1.00|\r\n|Flip::OCL_FlipFixture::(640x480, 32FC1, FLIP_COLS)|0.035|0.035|1.00|\r\n|Flip::OCL_FlipFixture::(640x480, 32FC1, FLIP_ROWS)|0.035|0.035|1.00|\r\n|Flip::OCL_FlipFixture::(640x480, 8UC4, FLIP_BOTH)|0.033|0.033|1.00|\r\n|Flip::OCL_FlipFixture::(640x480, 8UC4, FLIP_COLS)|0.035|0.035|1.00|\r\n|Flip::OCL_FlipFixture::(640x480, 8UC4, FLIP_ROWS)|0.037|0.036|1.00|\r\n|Flip::OCL_FlipFixture::(640x480, 32FC4, FLIP_BOTH)|0.151|0.152|0.99|\r\n|Flip::OCL_FlipFixture::(640x480, 32FC4, FLIP_COLS)|0.155|0.156|0.99|\r\n|Flip::OCL_FlipFixture::(640x480, 32FC4, FLIP_ROWS)|0.155|0.155|1.00|\r\n|Flip::OCL_FlipFixture::(1280x720, 8UC1, FLIP_BOTH)|0.026|0.026|1.00|\r\n|Flip::OCL_FlipFixture::(1280x720, 8UC1, FLIP_COLS)|0.026|0.026|1.00|\r\n|Flip::OCL_FlipFixture::(1280x720, 8UC1, FLIP_ROWS)|0.027|0.027|1.00|\r\n|Flip::OCL_FlipFixture::(1280x720, 32FC1, FLIP_BOTH)|0.100|0.101|1.00|\r\n|Flip::OCL_FlipFixture::(1280x720, 32FC1, FLIP_COLS)|0.103|0.103|1.00|\r\n|Flip::OCL_FlipFixture::(1280x720, 32FC1, FLIP_ROWS)|0.104|0.107|0.97|\r\n|Flip::OCL_FlipFixture::(1280x720, 8UC4, FLIP_BOTH)|0.100|0.101|1.00|\r\n|Flip::OCL_FlipFixture::(1280x720, 8UC4, FLIP_COLS)|0.103|0.104|1.00|\r\n|Flip::OCL_FlipFixture::(1280x720, 8UC4, FLIP_ROWS)|0.106|0.107|1.00|\r\n|Flip::OCL_FlipFixture::(1280x720, 32FC4, FLIP_BOTH)|0.600|0.608|0.99|\r\n|Flip::OCL_FlipFixture::(1280x720, 32FC4, FLIP_COLS)|0.602|0.609|0.99|\r\n|Flip::OCL_FlipFixture::(1280x720, 32FC4, FLIP_ROWS)|1.001|1.004|1.00|\r\n|Flip::OCL_FlipFixture::(1920x1080, 8UC1, FLIP_BOTH)|0.057|0.057|1.00|\r\n|Flip::OCL_FlipFixture::(1920x1080, 8UC1, FLIP_COLS)|0.056|0.056|1.00|\r\n|Flip::OCL_FlipFixture::(1920x1080, 8UC1, FLIP_ROWS)|0.061|0.061|1.00|\r\n|Flip::OCL_FlipFixture::(1920x1080, 32FC1, FLIP_BOTH)|0.214|0.215|1.00|\r\n|Flip::OCL_FlipFixture::(1920x1080, 32FC1, FLIP_COLS)|0.214|0.216|1.00|\r\n|Flip::OCL_FlipFixture::(1920x1080, 32FC1, FLIP_ROWS)|0.398|0.394|1.01|\r\n|Flip::OCL_FlipFixture::(1920x1080, 8UC4, FLIP_BOTH)|0.215|0.216|0.99|\r\n|Flip::OCL_FlipFixture::(1920x1080, 8UC4, FLIP_COLS)|0.214|0.216|0.99|\r\n|Flip::OCL_FlipFixture::(1920x1080, 8UC4, FLIP_ROWS)|0.276|0.278|0.99|\r\n|Flip::OCL_FlipFixture::(1920x1080, 32FC4, FLIP_BOTH)|1.517|1.519|1.00|\r\n|Flip::OCL_FlipFixture::(1920x1080, 32FC4, FLIP_COLS)|1.521|1.514|1.00|\r\n|Flip::OCL_FlipFixture::(1920x1080, 32FC4, FLIP_ROWS)|1.534|1.542|0.99|\r\n|Flip::OCL_FlipFixture::(3840x2160, 8UC1, FLIP_BOTH)|0.260|0.254|1.02|\r\n|Flip::OCL_FlipFixture::(3840x2160, 8UC1, FLIP_COLS)|0.257|0.250|1.03|\r\n|Flip::OCL_FlipFixture::(3840x2160, 8UC1, FLIP_ROWS)|0.403|0.412|0.98|\r\n|Flip::OCL_FlipFixture::(3840x2160, 32FC1, FLIP_BOTH)|1.450|1.459|0.99|\r\n|Flip::OCL_FlipFixture::(3840x2160, 32FC1, FLIP_COLS)|1.475|1.477|1.00|\r\n|Flip::OCL_FlipFixture::(3840x2160, 32FC1, FLIP_ROWS)|2.373|2.363|1.00|\r\n|Flip::OCL_FlipFixture::(3840x2160, 8UC4, FLIP_BOTH)|1.461|1.462|1.00|\r\n|Flip::OCL_FlipFixture::(3840x2160, 8UC4, FLIP_COLS)|1.481|1.473|1.01|\r\n|Flip::OCL_FlipFixture::(3840x2160, 8UC4, FLIP_ROWS)|1.551|1.546|1.00|\r\n|Flip::OCL_FlipFixture::(3840x2160, 32FC4, FLIP_BOTH)|6.487|6.449|1.01|\r\n|Flip::OCL_FlipFixture::(3840x2160, 32FC4, FLIP_COLS)|6.474|6.464|1.00|\r\n|Flip::OCL_FlipFixture::(3840x2160, 32FC4, FLIP_ROWS)|6.528|6.518|1.00|\r\n\r\n|Name of Test|before|after|(x-factor)|\r\n|---|:-:|:-:|:-:|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerBG2BGR)|0.003|0.003|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerBG2BGRA)|0.003|0.003|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerBG2BGR_VNG)|0.038|0.038|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerBG2GRAY)|0.003|0.003|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerGB2BGR)|0.003|0.003|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerGB2BGRA)|0.003|0.003|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerGB2BGR_VNG)|0.038|0.038|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerGB2GRAY)|0.003|0.003|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerGR2BGR)|0.003|0.003|1.01|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerGR2BGRA)|0.003|0.003|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerGR2BGR_VNG)|0.037|0.038|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerGR2GRAY)|0.003|0.003|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerRG2BGR)|0.003|0.003|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerRG2BGRA)|0.003|0.003|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerRG2BGR_VNG)|0.038|0.037|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerRG2GRAY)|0.003|0.003|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerBG2BGR)|0.042|0.043|0.97|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerBG2BGRA)|0.039|0.039|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerBG2BGR_VNG)|1.534|1.542|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerBG2GRAY)|0.031|0.031|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerGB2BGR)|0.039|0.042|0.92|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerGB2BGRA)|0.035|0.038|0.93|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerGB2BGR_VNG)|1.534|1.542|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerGB2GRAY)|0.028|0.032|0.87|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerGR2BGR)|0.038|0.043|0.89|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerGR2BGRA)|0.036|0.039|0.92|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerGR2BGR_VNG)|1.535|1.546|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerGR2GRAY)|0.028|0.031|0.90|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerRG2BGR)|0.038|0.042|0.92|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerRG2BGRA)|0.035|0.038|0.93|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerRG2BGR_VNG)|1.535|1.544|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerRG2GRAY)|0.029|0.028|1.02|\r\n</details>\r\n\r\n<details>\r\n<summary>AArch64 performance results</summary>\r\n\r\n**RK3588**\r\n\r\n|Name of Test|before|after|(x-factor)|\r\n|---|:-:|:-:|:-:|\r\n|Flip::OCL_FlipFixture::(640x480, 8UC1, FLIP_BOTH)|0.040|0.036|1.12|\r\n|Flip::OCL_FlipFixture::(640x480, 8UC1, FLIP_COLS)|0.018|0.018|1.01|\r\n|Flip::OCL_FlipFixture::(640x480, 8UC1, FLIP_ROWS)|0.011|0.011|1.01|\r\n|Flip::OCL_FlipFixture::(640x480, 32FC1, FLIP_BOTH)|0.239|0.261|0.92|\r\n|Flip::OCL_FlipFixture::(640x480, 32FC1, FLIP_COLS)|0.174|0.139|1.25|\r\n|Flip::OCL_FlipFixture::(640x480, 32FC1, FLIP_ROWS)|0.132|0.115|1.14|\r\n|Flip::OCL_FlipFixture::(640x480, 8UC4, FLIP_BOTH)|0.152|0.185|0.82|\r\n|Flip::OCL_FlipFixture::(640x480, 8UC4, FLIP_COLS)|0.086|0.110|0.78|\r\n|Flip::OCL_FlipFixture::(640x480, 8UC4, FLIP_ROWS)|0.067|0.089|0.75|\r\n|Flip::OCL_FlipFixture::(640x480, 32FC4, FLIP_BOTH)|1.120|1.277|0.88|\r\n|Flip::OCL_FlipFixture::(640x480, 32FC4, FLIP_COLS)|0.675|0.759|0.89|\r\n|Flip::OCL_FlipFixture::(640x480, 32FC4, FLIP_ROWS)|0.416|0.474|0.88|\r\n|Flip::OCL_FlipFixture::(1280x720, 8UC1, FLIP_BOTH)|0.110|0.119|0.92|\r\n|Flip::OCL_FlipFixture::(1280x720, 8UC1, FLIP_COLS)|0.064|0.057|1.13|\r\n|Flip::OCL_FlipFixture::(1280x720, 8UC1, FLIP_ROWS)|0.043|0.044|0.97|\r\n|Flip::OCL_FlipFixture::(1280x720, 32FC1, FLIP_BOTH)|0.837|0.851|0.98|\r\n|Flip::OCL_FlipFixture::(1280x720, 32FC1, FLIP_COLS)|0.487|0.519|0.94|\r\n|Flip::OCL_FlipFixture::(1280x720, 32FC1, FLIP_ROWS)|0.348|0.371|0.94|\r\n|Flip::OCL_FlipFixture::(1280x720, 8UC4, FLIP_BOTH)|0.783|0.840|0.93|\r\n|Flip::OCL_FlipFixture::(1280x720, 8UC4, FLIP_COLS)|0.484|0.502|0.96|\r\n|Flip::OCL_FlipFixture::(1280x720, 8UC4, FLIP_ROWS)|0.351|0.377|0.93|\r\n|Flip::OCL_FlipFixture::(1280x720, 32FC4, FLIP_BOTH)|3.199|3.580|0.89|\r\n|Flip::OCL_FlipFixture::(1280x720, 32FC4, FLIP_COLS)|1.763|2.033|0.87|\r\n|Flip::OCL_FlipFixture::(1280x720, 32FC4, FLIP_ROWS)|1.246|1.455|0.86|\r\n|Flip::OCL_FlipFixture::(1920x1080, 8UC1, FLIP_BOTH)|0.276|0.296|0.93|\r\n|Flip::OCL_FlipFixture::(1920x1080, 8UC1, FLIP_COLS)|0.201|0.206|0.98|\r\n|Flip::OCL_FlipFixture::(1920x1080, 8UC1, FLIP_ROWS)|0.164|0.165|0.99|\r\n|Flip::OCL_FlipFixture::(1920x1080, 32FC1, FLIP_BOTH)|1.841|2.070|0.89|\r\n|Flip::OCL_FlipFixture::(1920x1080, 32FC1, FLIP_COLS)|1.118|1.192|0.94|\r\n|Flip::OCL_FlipFixture::(1920x1080, 32FC1, FLIP_ROWS)|0.740|0.851|0.87|\r\n|Flip::OCL_FlipFixture::(1920x1080, 8UC4, FLIP_BOTH)|1.847|2.077|0.89|\r\n|Flip::OCL_FlipFixture::(1920x1080, 8UC4, FLIP_COLS)|1.105|1.211|0.91|\r\n|Flip::OCL_FlipFixture::(1920x1080, 8UC4, FLIP_ROWS)|0.738|0.851|0.87|\r\n|Flip::OCL_FlipFixture::(1920x1080, 32FC4, FLIP_BOTH)|7.048|8.085|0.87|\r\n|Flip::OCL_FlipFixture::(1920x1080, 32FC4, FLIP_COLS)|3.593|4.216|0.85|\r\n|Flip::OCL_FlipFixture::(1920x1080, 32FC4, FLIP_ROWS)|2.835|3.362|0.84|\r\n|Flip::OCL_FlipFixture::(3840x2160, 8UC1, FLIP_BOTH)|1.891|2.145|0.88|\r\n|Flip::OCL_FlipFixture::(3840x2160, 8UC1, FLIP_COLS)|0.991|1.146|0.86|\r\n|Flip::OCL_FlipFixture::(3840x2160, 8UC1, FLIP_ROWS)|0.796|0.937|0.85|\r\n|Flip::OCL_FlipFixture::(3840x2160, 32FC1, FLIP_BOTH)|9.008|10.067|0.89|\r\n|Flip::OCL_FlipFixture::(3840x2160, 32FC1, FLIP_COLS)|4.972|5.634|0.88|\r\n|Flip::OCL_FlipFixture::(3840x2160, 32FC1, FLIP_ROWS)|3.041|3.505|0.87|\r\n|Flip::OCL_FlipFixture::(3840x2160, 8UC4, FLIP_BOTH)|9.044|10.042|0.90|\r\n|Flip::OCL_FlipFixture::(3840x2160, 8UC4, FLIP_COLS)|4.970|5.625|0.88|\r\n|Flip::OCL_FlipFixture::(3840x2160, 8UC4, FLIP_ROWS)|3.122|3.506|0.89|\r\n|Flip::OCL_FlipFixture::(3840x2160, 32FC4, FLIP_BOTH)|28.244|30.723|0.92|\r\n|Flip::OCL_FlipFixture::(3840x2160, 32FC4, FLIP_COLS)|13.721|13.630|1.01|\r\n|Flip::OCL_FlipFixture::(3840x2160, 32FC4, FLIP_ROWS)|12.112|12.300|0.98|\r\n\r\n|Name of Test|before|after|(x-factor)|\r\n|---|:-:|:-:|:-:|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerBG2BGR)|0.009|0.009|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerBG2BGRA)|0.010|0.010|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerBG2BGR_VNG)|0.095|0.096|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerBG2GRAY)|0.008|0.008|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerGB2BGR)|0.009|0.009|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerGB2BGRA)|0.010|0.010|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerGB2BGR_VNG)|0.095|0.096|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerGB2GRAY)|0.008|0.008|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerGR2BGR)|0.009|0.009|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerGR2BGRA)|0.010|0.010|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerGR2BGR_VNG)|0.095|0.096|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerGR2GRAY)|0.008|0.008|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerRG2BGR)|0.009|0.009|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerRG2BGRA)|0.010|0.010|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerRG2BGR_VNG)|0.095|0.095|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(127x61, COLOR_BayerRG2GRAY)|0.008|0.008|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerBG2BGR)|0.162|0.163|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerBG2BGRA)|0.173|0.174|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerBG2BGR_VNG)|4.003|4.031|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerBG2GRAY)|0.174|0.147|1.19|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerGB2BGR)|0.162|0.163|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerGB2BGRA)|0.173|0.174|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerGB2BGR_VNG)|3.990|4.011|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerGB2GRAY)|0.151|0.171|0.88|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerGR2BGR)|0.165|0.163|1.01|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerGR2BGRA)|0.173|0.174|0.99|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerGR2BGR_VNG)|4.006|4.014|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerGR2GRAY)|0.154|0.171|0.90|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerRG2BGR)|0.163|0.163|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerRG2BGRA)|0.173|0.174|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerRG2BGR_VNG)|3.992|4.007|1.00|\r\n|cvtColorBayer8u::Size_CvtMode_Bayer::(640x480, COLOR_BayerRG2GRAY)|0.164|0.160|1.03|\r\n\r\n</details>",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2023-07-11T16:05:42Z",
        "closed_at": "2023-07-12T11:51:09Z",
        "merged_at": "2023-07-12T11:51:09Z",
        "body": "Fixes an issue in #23838 that re-introduced #23780 for `NumPyArrayGeneric`, `NumPyArrayFloat32`, `NumPyArrayFloat64` and all their aliases/subtypes/unions. As well as supporting generic static hints in python 3.8.\r\n\r\nRead https://github.com/opencv/opencv/pull/23927#discussion_r1256326835 for the full explanation.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-11T15:43:21Z",
        "closed_at": "2023-07-11T17:51:13Z",
        "merged_at": "2023-07-11T17:51:13Z",
        "body": "Related to https://github.com/opencv/ci-gha-workflow/pull/101\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-11T14:07:28Z",
        "closed_at": "2023-07-11T15:16:29Z",
        "merged_at": "2023-07-11T15:16:28Z",
        "body": "related #23944\r\n\r\nAdded FOURCC codes missing on older systems.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-07-11T13:50:23Z",
        "closed_at": "2023-07-11T17:53:02Z",
        "merged_at": "2023-07-11T17:53:02Z",
        "body": "Fix for BuildBot. \r\nRegression introduced in https://github.com/opencv/opencv/pull/23958\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 347,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-07-11T11:42:26Z",
        "closed_at": "2023-07-12T12:56:27Z",
        "merged_at": "2023-07-12T12:56:27Z",
        "body": "Collected most environment variables used to a single document.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-07-11T10:22:08Z",
        "closed_at": "2023-07-11T13:40:32Z",
        "merged_at": "2023-07-11T13:40:32Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n\r\nThe generated document is misaligned because the comment preceded the \"//!<\".\r\nhttps://docs.opencv.org/4.x/d8/d6a/group__imgcodecs__flags.html#ga292d81be8d76901bff7988d18d2b42ac\r\n\r\nI think a reasonable solution would be to write the comment before the comma.\r\nIs there another good solution?",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-07-11T08:31:53Z",
        "closed_at": "2023-07-13T09:22:47Z",
        "merged_at": "2023-07-13T09:22:47Z",
        "body": "I'm currently rewrite more code to the scalable Universal Intrinsic and I found that the Universal Intrinsic function `v_popcount` is missing for 64-bits integer in scalable RVV backend. This patch adds the missing implementation\r\n\r\nBTW, according to the [documentation](https://github.com/opencv/opencv/blob/6af4a029417b0ed6e393610b5d7d99a13eb06219/modules/core/include/opencv2/core/hal/intrin_cpp.hpp#L820C1-L834C2) below , `v_popcount`  is designed for all integer type, but the unit test for 64-bit integer type is missing. I also enable the test in this patch.\r\n\r\n\r\n```cpp\r\n/** @brief Count the 1 bits in the vector lanes and return result as corresponding unsigned type\r\n\r\nScheme:\r\n@code\r\n{A1 A2 A3 ...} => {popcount(A1), popcount(A2), popcount(A3), ...}\r\n@endcode\r\nFor all integer types. */\r\ntemplate<typename _Tp, int n>\r\ninline v_reg<typename V_TypeTraits<_Tp>::abs_type, n> v_popcount(const v_reg<_Tp, n>& a)\r\n....\r\n```\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 385,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-07-11T07:51:43Z",
        "closed_at": "2023-08-30T06:53:59Z",
        "merged_at": "2023-08-30T06:53:59Z",
        "body": "Should work as [`np.broadcast_to`](https://numpy.org/doc/stable/reference/generated/numpy.broadcast_to.html).\r\n\r\n## Benchmarks\r\n\r\nResults on M1:\r\n\r\n| src | dst | v1 (mean, ms) | v2 (mean, ms) |\r\n| - | - | - | - |\r\n| [1, 10, 100, 1000]   | [1000, 10, 100, 1000] | 124.79 | 63.41 |\r\n| [1000, 1, 100, 1000] | [1000, 10, 100, 1000] | 866.13 | 89.96 |\r\n| [1000, 10, 1, 1000]  | [1000, 10, 100, 1000] | 231.30 | 93.71 |\r\n| [1000, 10, 100, 1]   | [1000, 10, 100, 1000] | 3798.67 | 100.02 |\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\n\r\n```\r\nforce_builders=Win32,Linux32,Linux AVX2\r\n```",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-11T01:14:18Z",
        "closed_at": "2023-07-11T12:19:34Z",
        "merged_at": "2023-07-11T12:19:34Z",
        "body": "fixup #23842\r\n\r\nError message on `-DWITH_OPENVINO=ON -DBUILD_SHARED_LIBS=OFF`:\r\n```\r\nCMake Error: install(EXPORT \"OpenCVModules\" ...) includes target \"ocv.3rdparty.openvino\" more than once in the export set.\r\nCMake Error in CMakeLists.txt:\r\n  given target \"ocv.3rdparty.openvino\" more than once.\r\n```",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2720,
        "deletions": 5,
        "changed_files": 16,
        "created_at": "2023-07-10T20:58:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [v] I agree to contribute to the project under Apache 2 License.\r\n- [v] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [v] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 397,
        "deletions": 116,
        "changed_files": 5,
        "created_at": "2023-07-10T15:25:32Z",
        "closed_at": "2023-07-13T08:15:27Z",
        "merged_at": null,
        "body": "## PR for GSoC Point Cloud Compression\r\n[Issue for GSoC 2023](https://github.com/opencv/opencv/issues/23624)\r\n\r\n* We are **updating the Octree method create() by using OctreeKey**: Through voxelization, directly calculate the leaf nodes that the point cloud belongs to, and omit the judgment whether the point cloud is in the range when inserted. The index of the child node is calculated by bit operation.\r\n* We are also **introducing a new header file pcc.h (Point Cloud Compression) with API framework**.\r\n* We added tests for restoring point clouds from an octree.\r\n* Currently, the features related to octree creation and point cloud compression are part of the internal API, which means they are not directly accessible to users. However, our plan for the future is to **include only the 'PointCloudCompression' class in the 'opencv2/3d.hpp' header file**. This will provide an interface for utilizing the point cloud compression functionality.\r\n\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-07-10T15:08:13Z",
        "closed_at": "2023-07-11T07:42:41Z",
        "merged_at": "2023-07-11T07:42:41Z",
        "body": "Output string representation of NumPy array type if it is not convertible to OpenCV Mat type\r\n\r\nExample output from the test:\r\n\r\n```\r\ncv2.error: OpenCV(4.8.0-dev) :-1: error: (-5:Bad argument) in function 'dumpInputArray'\r\n> Overload resolution failed:\r\n>  - argument data type = object is not supported\r\n>  - Expected Ptr<cv::UMat> for argument 'argument'\r\n```\r\n\r\nResolves: #23106\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 36,
        "changed_files": 1,
        "created_at": "2023-07-10T12:07:38Z",
        "closed_at": "2023-08-02T14:45:15Z",
        "merged_at": "2023-08-02T14:45:15Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-10T11:43:12Z",
        "closed_at": "2023-07-11T15:45:27Z",
        "merged_at": "2023-07-11T15:45:27Z",
        "body": "Addresses the same issue as #23809 , but also handles nested modules case\r\n\r\ne.g. adds the following section to `cv2/gapi/__init__.pyi`:\r\n\r\n```python\r\nfrom cv2.gapi import core as core\r\nfrom cv2.gapi import ie as ie\r\nfrom cv2.gapi import imgproc as imgproc\r\nfrom cv2.gapi import oak as oak\r\nfrom cv2.gapi import onnx as onnx\r\nfrom cv2.gapi import ov as ov\r\nfrom cv2.gapi import own as own\r\nfrom cv2.gapi import render as render\r\nfrom cv2.gapi import streaming as streaming\r\nfrom cv2.gapi import video as video\r\nfrom cv2.gapi import wip as wip\r\n\r\n```\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [] There is a reference to the original bug report and related work\r\n- [] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-10T11:36:45Z",
        "closed_at": "2023-07-10T12:37:59Z",
        "merged_at": "2023-07-10T12:37:59Z",
        "body": "Every function has at least 1 overload (the **main** one), so before the fix `check_overload_presence` always produced `True`\r\n\r\nAs a coincide, removes unnecessary `import typing` in several modules stubs e.g. `cv2/gapi/core/cpu/__init__.pyi`\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-07-10T11:06:32Z",
        "closed_at": "2023-07-10T15:48:01Z",
        "merged_at": "2023-07-10T15:48:01Z",
        "body": "Adds missing typing stubs:\r\n\r\n- Matrix depths: `CV_8U`, `CV_8S` and etc.\r\n- Matrix type constants: `CV_8UC1`, `CV_32FC3` and etc.\r\n- Matrix type factory functions: `CV_*(channels) -> int` and `CV_MAKETYPE`\r\n\r\nResolves: #23910\r\n\r\nAdded content of `__init__.pyi`:\r\n\r\n``` python\r\n# Constants\r\nCV_8U: int\r\nCV_8UC1: int\r\nCV_8UC2: int\r\nCV_8UC3: int\r\nCV_8UC4: int\r\nCV_8S: int\r\nCV_8SC1: int\r\nCV_8SC2: int\r\nCV_8SC3: int\r\nCV_8SC4: int\r\nCV_16U: int\r\nCV_16UC1: int\r\nCV_16UC2: int\r\nCV_16UC3: int\r\nCV_16UC4: int\r\nCV_16S: int\r\nCV_16SC1: int\r\nCV_16SC2: int\r\nCV_16SC3: int\r\nCV_16SC4: int\r\nCV_32S: int\r\nCV_32SC1: int\r\nCV_32SC2: int\r\nCV_32SC3: int\r\nCV_32SC4: int\r\nCV_32F: int\r\nCV_32FC1: int\r\nCV_32FC2: int\r\nCV_32FC3: int\r\nCV_32FC4: int\r\nCV_64F: int\r\nCV_64FC1: int\r\nCV_64FC2: int\r\nCV_64FC3: int\r\nCV_64FC4: int\r\nCV_16F: int\r\nCV_16FC1: int\r\nCV_16FC2: int\r\nCV_16FC3: int\r\nCV_16FC4: int\r\n\r\ndef CV_8UC(channels: int) -> int: ...\r\n\r\ndef CV_8SC(channels: int) -> int: ...\r\n\r\ndef CV_16UC(channels: int) -> int: ...\r\n\r\ndef CV_16SC(channels: int) -> int: ...\r\n\r\ndef CV_32SC(channels: int) -> int: ...\r\n\r\ndef CV_32FC(channels: int) -> int: ...\r\n\r\ndef CV_64FC(channels: int) -> int: ...\r\n\r\ndef CV_16FC(channels: int) -> int: ...\r\n\r\ndef CV_MAKETYPE(depth: int, channels: int) -> int: ...\r\n```\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-07-09T16:21:51Z",
        "closed_at": "2023-07-14T14:34:40Z",
        "merged_at": "2023-07-14T14:34:40Z",
        "body": "Try to solve the issue: https://github.com/opencv/opencv/issues/23941\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-07-07T18:10:44Z",
        "closed_at": "2023-08-04T09:12:20Z",
        "merged_at": null,
        "body": "**Remove the error: error: ambiguous overload for \u2018operator!=\u2019 (operand types are \u2018__half\u2019 and \u2018double\u2019) **\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 130,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-07-07T14:32:09Z",
        "closed_at": "2023-07-10T09:54:43Z",
        "merged_at": "2023-07-10T09:54:43Z",
        "body": "This PR will support future improvement in #18498\r\n\r\n##### Instruction (from cap_v4l.cpp comment):\r\n* create 1 virtual device of type CAP (0x1) at /dev/video10\r\n   ```\r\n   sudo modprobe vivid ndevs=1 node_types=0x1 vid_cap_nr=10`\r\n   ```\r\n* make sure user have read/write access (e.g. via group 'video')\r\n   ```\r\n   $ ls -l /dev/video10\r\n   crw-rw----+ 1 root video ... /dev/video10\r\n   ```\r\n* set environment variable:\r\n   ```\r\n   export OPENCV_TEST_V4L2_VIVID_DEVICE=/dev/video10\r\n   ```\r\n* run v4l2 tests:\r\n   ```\r\n   opencv_test_videoio --gtest_filter=*videoio_v4l2*\r\n   ```\r\n\r\nReference: https://www.kernel.org/doc/html/v4.8/media/v4l-drivers/vivid.html\r\n\r\n##### Notes:\r\n* minor logging improvements in cap_v4l.cpp\r\n* not all formats are tested for now, excluded more complex JPEG and Bayer formats\r\n* picture contents is not tested",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-07-07T13:44:03Z",
        "closed_at": "2023-07-11T07:25:53Z",
        "merged_at": "2023-07-11T07:25:53Z",
        "body": "A common decoder cannot be shared with checkSignature which is used like a static function (on a static ist of decoders).\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 33,
        "changed_files": 1,
        "created_at": "2023-07-06T18:09:49Z",
        "closed_at": "2023-07-07T08:12:39Z",
        "merged_at": "2023-07-07T08:12:39Z",
        "body": "resolves #23935\r\n\r\nDiff looks slightly complex because I moved out common part (`grabFrame` call) and realigned the code. Actual fix is added `return false` to the `if (!haveImageReader(...))` block. Also unified log messages.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-06T16:52:53Z",
        "closed_at": "2023-07-07T07:21:55Z",
        "merged_at": null,
        "body": "Fixed typo error in the file. Changed the spelling from \"KERNAL\" to \"KERNEL\".\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 50,
        "deletions": 25,
        "changed_files": 8,
        "created_at": "2023-07-06T16:31:59Z",
        "closed_at": "2023-07-10T09:41:37Z",
        "merged_at": "2023-07-10T09:41:37Z",
        "body": "Related issue: https://github.com/opencv/opencv/issues/22218\r\n\r\n* Silenced or workarounded several strange warnings specific for GCC 11 (default in Ubuntu 22), GCC 12 and Clang 13\r\n* Reduced build process output (mostly for Java build)\r\n\r\nNote: patched gtest to avoid some warnings, the modification should not seriously interfere with future upgrades, even if this patch will be overwritten it won't be a serious problem.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2023-07-06T07:11:53Z",
        "closed_at": "2023-07-27T11:21:30Z",
        "merged_at": "2023-07-27T11:21:30Z",
        "body": "1.modify the search path of \"libopsproto.so\" in OpenCVFindCANN.cmake\r\n2.add the search path of \"libgraph_base.so\" in OpenCVFindCANN.cmake\r\n3.automatic check Ascend socVersion,and test on Ascend310/Ascend310B/Ascend910B well",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-07-05T11:10:18Z",
        "closed_at": "2023-07-21T09:28:14Z",
        "merged_at": "2023-07-21T09:28:14Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2800,
        "deletions": 414,
        "changed_files": 9,
        "created_at": "2023-07-05T07:27:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This patch optimizes some lasx functions and reduces the runtime of opencv_test_core from 662,238ms to 633603ms on the 3A5000 platform.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 22
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-07-04T21:57:49Z",
        "closed_at": "2023-07-10T09:40:07Z",
        "merged_at": "2023-07-10T09:40:07Z",
        "body": "May close #23925 . I am not sure this actually works because I can't figure out how to generate python bindings myself. But it looks right based on available API.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-04T20:48:47Z",
        "closed_at": "2023-07-11T07:32:49Z",
        "merged_at": "2023-07-11T07:32:49Z",
        "body": "Closes #23780 by specifying `ndarray`'s generic types. The use of `TYPE_CHECKING` and a type alias allows this to keep compatibility with all Python versions.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-04T18:19:16Z",
        "closed_at": "2023-07-05T06:38:29Z",
        "merged_at": "2023-07-05T06:38:29Z",
        "body": "It gives error when building projects with -Wpedantic -Werror\r\n\r\nerror: extra \u2018;\u2019 [-Werror=pedantic]\r\n\r\nIssue #23916\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 53,
        "deletions": 17,
        "changed_files": 2,
        "created_at": "2023-07-04T14:18:51Z",
        "closed_at": "2023-07-12T12:20:02Z",
        "merged_at": "2023-07-12T12:20:02Z",
        "body": "I believe this is a proper fix to #23562\r\n\r\nThe PR #23754 overwrites data while that should not be the case with transparent data. The original test is failing because points at the border do not get computed because they do not have 4 neighbors to be computed. Still ,we can approximate their computation with whatever neighbors that are available.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 114,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2023-07-04T11:55:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "If the scalar value used to fill the Mat can be unrolled to a sequence of identical bytes (typically 0), memset() can be used for a performance gain\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n\r\nI don't know how to add a test_perf for that",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-04T11:36:04Z",
        "closed_at": "2023-07-14T12:00:42Z",
        "merged_at": "2023-07-14T12:00:42Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x]  I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x]  The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [x]  There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-04T11:05:10Z",
        "closed_at": "2023-07-06T09:30:05Z",
        "merged_at": "2023-07-06T09:30:05Z",
        "body": "Merge after https://github.com/opencv/opencv/pull/23718\r\nMerge with https://github.com/opencv/ci-gha-workflow/pull/104",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-04T08:01:35Z",
        "closed_at": "2023-07-04T11:06:32Z",
        "merged_at": "2023-07-04T11:06:32Z",
        "body": "... so that OPENCV_CUSTOM_PACKAGE_INFO actually has full effect.\r\n\r\nAt the moment packages are generated (via cpack) with an invalid (by debian-standards) name. The version section of the name should at least start with the number and follow the pattern **major:minor.patch-arch**. at the moment the version string [is set to the git-hash](https://github.com/opencv/opencv/blob/67faf1610e665ea36b3f80c7fd6f9a68a0559900/cmake/OpenCVPackaging.cmake#L23) (which generates an invalid filename). \r\nanyway, the real problem is that i can't even be fixed by using ```OPENCV_CUSTOM_PACKAGE_INFO``` because ```VCS_VERSION``` is [used directly](https://github.com/opencv/opencv/blob/67faf1610e665ea36b3f80c7fd6f9a68a0559900/cmake/OpenCVPackaging.cmake#L55-L56) instead of assigning it to the ```CPACK_PACKAGE_VERSION``` and using that.\r\nThis pull request makes it possible to generate packages with debian conform names.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-07-04T06:02:37Z",
        "closed_at": "2023-07-07T07:20:18Z",
        "merged_at": null,
        "body": "removing this unnecessary if statement because deleting a null pointer has no effect. \r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 31,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2023-07-03T23:42:02Z",
        "closed_at": "2023-07-13T12:48:58Z",
        "merged_at": "2023-07-13T12:48:58Z",
        "body": "Improves documentation, issue [1939](https://github.com/opencv/opencv_contrib/issues/1939).\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 166,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2023-07-03T16:31:07Z",
        "closed_at": null,
        "merged_at": null,
        "body": "continuation of  [PR#19259](https://github.com/opencv/opencv/pull/19259) \r\n\r\nMake cuda::GpuMatND wrappable in InputArray/OutputArray\r\nThe goal for now is just wrapping, some functions are not supported (InputArray::size(), InputArray::convertTo(), InputArray::assign()...)\r\n\r\nNo new feature for cuda::GpuMatND\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [X] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-07-03T08:01:11Z",
        "closed_at": "2023-07-03T09:27:12Z",
        "merged_at": "2023-07-03T09:27:12Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-07-03T07:10:32Z",
        "closed_at": "2023-07-05T06:35:26Z",
        "merged_at": null,
        "body": "This patch optimizes some lasx functions and reduces the runtime of opencv_test_core from 662,238ms to 642,829ms on the 3A5000 platform.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-07-02T07:35:26Z",
        "closed_at": "2023-09-04T14:06:45Z",
        "merged_at": "2023-09-04T14:06:45Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-01T05:35:58Z",
        "closed_at": "2023-07-03T08:26:37Z",
        "merged_at": "2023-07-03T08:26:37Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 14,
        "changed_files": 8,
        "created_at": "2023-07-01T05:32:18Z",
        "closed_at": "2023-07-03T09:08:12Z",
        "merged_at": "2023-07-03T09:08:12Z",
        "body": "just read and correct some typos in `usac`\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-30T12:07:03Z",
        "closed_at": "2023-06-30T16:20:02Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2470,
        "deletions": 61,
        "changed_files": 12,
        "created_at": "2023-06-30T09:46:22Z",
        "closed_at": "2023-09-19T21:53:35Z",
        "merged_at": "2023-09-19T21:53:35Z",
        "body": "Merge with https://github.com/opencv/opencv_extra/pull/1073.\r\n\r\nThis PR integrates gemm from [ficus nn](https://github.com/vpisarev/ficus/tree/master/lib/NN). `Gemm` layer is created to replace `InnerProduct` layer for onnx models. Once this PR is merged or proved to be working fine, all `InnerProduct` layer calls will be replaced by `Gemm`.\r\n\r\nChecklist:\r\n\r\n- [x] ficus nn gemm integration.\r\n- [x] dedicated perf test.\r\n- [x] ~avoid re-packing for const A.~ Removed for simplicity.\r\n- [x] avoid re-packing for const B.\r\n- [x] acceleration for x86-64 platform.\r\n- [x] add backends.\r\n- [x] optimized for loongson.\r\n\r\n---\r\n\r\nBenchmarks:\r\n\r\nInput scales are collected from ViTs. First scale is A, second is B and third is C if presented. All cases are without transposition. Check CI reports for more tests on different scales (square, retanglular, ...).\r\n\r\n| Updated @ 0907                     | WXG      | WXI   | MXG      | MXI      | MAG      | MAI   | UXG      | UXI   | UAG      | UAI   |\r\n| ---------------------------------- | -------- | ----- | -------- | -------- | -------- | ----- | -------- | ----- | -------- | ----- |\r\n| [768, 768], [768, 768], [768]      | **7.54** | 25.97 | **2.17** | 6.22     | **2.25** | 7.08  | **3.72** | 13.14 | **5.91** | 20.75 |\r\n| [1024, 1024], [1024, 1024], [1024] | **9.53** | 60.19 | **5.01** | 17.38    | **5.19** | 16.89 | **7.47** | 33.31 | **8.21** | 50.76 |\r\n| [50, 768], [768, 2304]             | **2.03** | 6.26  | 1.3      | **1.19** | **0.75** | 1.59  | **2.23** | 2.26  | **4.85** | 6.27  |\r\n| [197, 768], [768, 2304]            | **6.85** | 20.62 | **1.76** | 4.69     | **1.77** | 6.14  | **3.69** | 9.12  | **4.54** | 17.71 |\r\n| [50, 1024], [1024, 3072]           | **3.98** | 8.57  | **1.13** | 2.94     | **1.2**  | 4.2   | **2.19** | 4.96  | **5.39** | 8.92  |\r\n| [197, 1024], [1024, 3072]          | **7.24** | 38.15 | **3.12** | 10.9     | **3.07** | 14.58 | **6.24** | 19.95 | **5.72** | 31.93 |\r\n\r\n***You can see basically all `xxG` columns have better speed***. `xxG` columns stand for Gemm layer performance on different hardware.\r\n\r\nNotations:\r\n- WXG: windows10_x64-Gemm\r\n- WSI: windows10_x64-InnerProduct\r\n- MXG: macos_x64-Gemm\r\n- MXI: macos_x64-InnerProduct\r\n- MAG: macos_arm64-Gemm\r\n- MAI: macos_arm64-InnerProduct\r\n- UXG: ubuntu_x64-Gemm\r\n- UXI: ubuntu_x64-InnerProduct\r\n- UAG: ubuntu_arm64-Gemm\r\n- UAI: ubuntu_arm64-InnerProduct\r\n\r\nAll data in ms (milliseconds).\r\n\r\n**Other platforms**:\r\n\r\n| Updated @ 0912 | loongnix_loongson-Gemm | loongnix_loongson-InnerProduct |\r\n| - | - | - |\r\n| A=[768, 768], B=[768, 768], C=[768], trans_a=0, trans_b=0 | **3.31** | 4.27 |\r\n| A=[1024, 1024], B=[1024, 1024], C=[1024], trans_a=0, trans_b=0 | 16.9 | **13.21** |\r\n| A=[50, 768], B=[768, 2304], trans_a=0, trans_b=0 | **1.55** | 3.68 |\r\n| A=[197, 768], B=[768, 2304], trans_a=0, trans_b=0 | **4.01** | 11.91 |\r\n| A=[50, 1024], B=[1024, 3072], trans_a=0, trans_b=0 | **2.55** | 35.41 |\r\n| A=[197, 1024], B=[1024, 3072], trans_a=0, trans_b=0 | **6.32** | 75.15 |\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 312,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2023-06-30T07:33:47Z",
        "closed_at": "2023-07-04T13:30:53Z",
        "merged_at": "2023-07-04T13:30:53Z",
        "body": "* Basic CAP_IMAGES tests\r\n* exposed `icvExtractPattern` for testing purposes\r\n\r\nRelated: single image reading support - #23815 and #23808",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 155,
        "deletions": 36,
        "changed_files": 2,
        "created_at": "2023-06-29T15:58:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Pertaining Issue: https://github.com/opencv/opencv/issues/5697\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-06-29T14:23:07Z",
        "closed_at": "2023-07-03T10:16:50Z",
        "merged_at": "2023-07-03T10:16:50Z",
        "body": "One variable is unknown while the other one is unused.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 14,
        "changed_files": 6,
        "created_at": "2023-06-29T10:41:12Z",
        "closed_at": "2023-06-30T09:53:11Z",
        "merged_at": null,
        "body": "Fix duplicated word typos in comments. The errors were first found with a regex search, then all of them manually checked. I've only committed those that are highly likely to be a typo.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-28T15:42:06Z",
        "closed_at": "2023-06-28T16:25:35Z",
        "merged_at": "2023-06-28T16:25:34Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 33,
        "changed_files": 1,
        "created_at": "2023-06-28T10:15:41Z",
        "closed_at": "2023-07-03T14:58:13Z",
        "merged_at": "2023-07-03T14:58:13Z",
        "body": "We introduced scalable RVV as a new Universal Intrinsic backend last summer and also introduced some changing of the Universal Intrinsic API: #22179. In order to make the current SIMD vectorized loops availableto the scalable backend, we need to rewrite the code already written by Universal Intrinsic.\r\n\r\nSince there are ~400 SIMD code blocks in ~50 files written by Universal Intinsic., thousands of lines of code need to be rewritten, which will be a huge work if done manually. Then I am developing a (semi-)automated rewriter/refactor based on clang-tidy, that can convert the convert existing code to the new API. The rewriter can already handle about 80% of the cases, and some corner cases are still under development. The link to the rewriter: https://github.com/hanliutong/rewriter\r\n\r\nThis patch is automatically generated by using the rewriter(except adding the macro `CV_SIMD_SCALABLE`). After building the rewriter (refer to [usage](https://github.com/hanliutong/rewriter#usage) in the readme), use the following command to process `modules/core/src/mean.simd.hpp`\r\n```bash\r\nclang-tidy --load ./libocv_intrinsic_tidy.so \\\r\n'--checks=-*,nlanes-check,operator-check,get0-check,lanetype-check' \\\r\n-p <path to>/opencv/build/ \\\r\n<path to>/opencv/modules/core/src/mean.simd.hpp \\\r\n-fix\r\n# Execute the above command twice, in case some operators are not detected in the first time.\r\n```\r\n\r\nthe clang-tidy will identify the statement that needs to be rewritten and use the new API to give suggestions for modification (the term `FIX IT HINT` in clang-tidy), such as:\r\n1. This is a `nlanes` in vector wrapper class used as loop step, need to be replaced with VTraits member `vlanes`.\r\n``` bash\r\nmean.simd.hpp:152:42: warning: Found nlanes. [nlanes-check]\r\n            for (int i = 0; i < v_int32::nlanes; ++i)\r\n                                ~~~~~~~~~^~~~~~\r\n                                VTraits<v_int32>::vlanes()\r\n```\r\n2. This is also a nlanes in vector wrapper class but is used as array length declaration, which must be a compile-time constant.\r\nThen `nlanes` need to be replaced with VTraits member `max_nlanes`.\r\n```bash\r\nmean.simd.hpp:149:64: warning: Found nlanes as constant. [nlanes-check]\r\n            int CV_DECL_ALIGNED(CV_SIMD_WIDTH) ar[2 * v_int32::nlanes];\r\n                                                      ~~~~~~~~~^~~~~~\r\n                                                      VTraits<v_int32>::max_nlanes\r\n```\r\n3. The overloaded operators are no longer supported in the scalable Universal Intrinsic API, use `v_op` instead.\r\n```bash\r\nmean.simd.hpp:134:19: warning: Found operator. [operator-check]\r\n            v_sum += v_tmp0;\r\n            ~~~~~~^~~~~~~~~\r\n            v_sum = v_add(v_sum, v_tmp0)\r\n```\r\n\r\nThe rewriter also supports other cases that do not using in this file. Please refer to the [capability](https://github.com/hanliutong/rewriter#capability) part in readme or the [examples](https://github.com/hanliutong/rewriter/tree/master/examples)\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Custom\r\nbuild_image:Custom=riscv-clang-rvv\r\nXbuild_image:Custom=riscv-clang-rvv-128\r\nXbuild_image:Custom=riscv-gcc-rvv-07\r\ntest_modules:Custom=core,imgproc,dnn\r\nbuildworker:Custom=linux-4\r\ntest_timeout:Custom=600\r\nbuild_contrib:Custom=OFF\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-28T09:31:58Z",
        "closed_at": "2023-06-28T11:52:15Z",
        "merged_at": "2023-06-28T11:52:15Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-06-28T02:58:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes https://github.com/opencv/opencv/issues/23872\r\n\r\nChecklist:\r\n1. [ ] remove `ReshapeAsShapeSubgraph` in tf_graph_simplifier or match only if Shape has only one output to Reshape.\r\n2. [x] fix strided slice with empty begin.\r\n3. [ ] add Shape for tf_importer (need to upgrade `graph.pb.h` to have `output_size()` like `NodeProto` in `onnx.pb.h` for shape inference during importing.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-27T18:38:45Z",
        "closed_at": "2023-07-07T06:04:09Z",
        "merged_at": "2023-07-07T06:04:09Z",
        "body": "Relates to https://github.com/opencv/opencv_contrib/issues/3150\r\n \r\n`-fast-math` option includes -ffinite-math-only option. Compiler expects that floats/doubles could not be NaN/Inf and does optimization accordingly. In particular __builtin_isnan and related built-in returns invalid result or optimized out by compiler.\r\n\r\nRelated discussion in GCC issue tracker: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=84949\r\nStackoverflow question: https://stackoverflow.com/questions/69463347/why-does-gcc-ffast-math-disable-the-correct-result-of-isnan-and-isinf\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-06-27T17:32:44Z",
        "closed_at": "2023-06-28T12:27:32Z",
        "merged_at": null,
        "body": "relates to https://github.com/opencv/opencv/pull/23833",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-27T11:28:07Z",
        "closed_at": "2023-06-27T12:59:24Z",
        "merged_at": "2023-06-27T12:59:24Z",
        "body": "Related: https://github.com/opencv/opencv/pull/23831",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-27T08:00:39Z",
        "closed_at": "2023-06-27T17:28:33Z",
        "merged_at": null,
        "body": "fix parameter bug\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-27T07:38:04Z",
        "closed_at": "2023-06-27T07:51:12Z",
        "merged_at": null,
        "body": "fix parameter bug\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-27T07:07:24Z",
        "closed_at": "2023-06-27T17:24:27Z",
        "merged_at": null,
        "body": "flip the correct image source (img) and not the computation image (smallImg).\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-26T17:18:40Z",
        "closed_at": "2023-06-27T13:01:35Z",
        "merged_at": null,
        "body": "dont print in INFO\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-26T17:17:44Z",
        "closed_at": "2023-06-27T13:00:28Z",
        "merged_at": null,
        "body": "dont print in INFO\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-26T07:54:21Z",
        "closed_at": "2023-06-26T18:22:29Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-06-25T16:45:23Z",
        "closed_at": "2023-06-26T13:07:09Z",
        "merged_at": null,
        "body": "Address: https://github.com/opencv/opencv/issues/23864\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-25T15:54:12Z",
        "closed_at": "2023-06-26T16:06:33Z",
        "merged_at": null,
        "body": "This is just a test of CI.\r\n\r\nDo not merge.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-25T13:56:59Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nbuild_image:Docs=docs-js:18.04\r\nbuild_image:Custom=javascript\r\nbuildworker:Custom=linux-1,linux-4,linux-f1\r\n```\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2358,
        "deletions": 854,
        "changed_files": 52,
        "created_at": "2023-06-24T14:37:55Z",
        "closed_at": "2023-08-04T07:50:03Z",
        "merged_at": "2023-08-04T07:50:03Z",
        "body": "This is updated version of https://github.com/opencv/opencv/pull/23591.\r\n\r\nThe related opencv_contrib PR: https://github.com/opencv/opencv_contrib/pull/3523\r\n\r\n* CV_Bool (boolean), CV_32U, CV_64S, CV_64U and CV_16BF (bfloat16) have been added. Similarly to float16, bfloat16 is always available, not matter if the target architecture supports hardware bf16 ops or not, because conversion to/from FP32 is trivial and super-fast (faster than `FP16<=>FP32`).\r\n* In order to preserve compatibility with other cv::Mat flags, we still use 12 bits for type. The 'depth' bit field now takes 5 bits (allowing for 32 different types), therefore 'channels' field has been shrinked from 9 to 7 bits, allowing 128 channels at maximum (down from 512). Don't worry, in deep learning we use 4D tensors, where channels is a dedicated dimensionality, so this limitation should not affect OpenCV DNN module. For image processing and even multi-spectral image processing 128 channels should probably be enough.\r\n* basic operations: copyTo(), setTo(), convertTo(), RNG::fill(), XML, YAML, Json I/O etc. are supported. Arithmetic operations are not extended yet, but at least they don't crash, they throw OpenCV error.\r\n\r\nLet's see how many tests fail.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 37,
        "changed_files": 1,
        "created_at": "2023-06-23T19:19:35Z",
        "closed_at": "2023-06-25T09:10:11Z",
        "merged_at": "2023-06-25T09:10:11Z",
        "body": "- Fixed width and height swap in board size\r\n- Fixed defaults in command line hint\r\n- Fixed board visualization for Charuco case\r\n- Used matchImagePoints method to handle partially detected Charuco boards\r\n\r\nReplaces: https://github.com/opencv/opencv/pull/23757, https://github.com/opencv/opencv/pull/23840\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-06-23T17:42:09Z",
        "closed_at": "2023-06-23T18:30:32Z",
        "merged_at": "2023-06-23T18:30:31Z",
        "body": "#23832 from asmorkalov:as/reshape_docs\r\n#23855 from thekpaul:3.4_patched\r\n#23860 from fengyuentau:fix_overflow_sigmoid_v3.4\r\n\r\nPrevious \"Merge 3.4\": #23827",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-23T13:24:38Z",
        "closed_at": "2023-06-23T16:47:42Z",
        "merged_at": "2023-06-23T16:47:42Z",
        "body": "Fixes #23850 \r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 45,
        "deletions": 18,
        "changed_files": 3,
        "created_at": "2023-06-23T12:33:14Z",
        "closed_at": "2023-06-23T16:49:06Z",
        "merged_at": "2023-06-23T16:49:06Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-23T09:14:09Z",
        "closed_at": "2023-06-23T16:50:20Z",
        "merged_at": null,
        "body": "Fixes #23850 \r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-23T09:02:50Z",
        "closed_at": "2023-06-23T09:05:24Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nAddress https://github.com/opencv/opencv/issues/23849\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-23T08:56:58Z",
        "closed_at": "2023-06-23T10:07:46Z",
        "merged_at": "2023-06-23T10:07:46Z",
        "body": "Single-case tested with success on Windows 11 with MinGW-w64 Standalone GCC v13.1.0 while building OpenCV 4.7.0\r\nBrought from #23849 \r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-23T08:20:28Z",
        "closed_at": "2023-06-23T16:52:05Z",
        "merged_at": "2023-06-23T16:52:05Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-22T22:01:59Z",
        "closed_at": "2023-06-23T13:22:38Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 2,
        "changed_files": 3,
        "created_at": "2023-06-22T12:17:42Z",
        "closed_at": "2023-06-22T14:30:44Z",
        "merged_at": "2023-06-22T14:30:44Z",
        "body": "`detectDiamonds` cannot be called from python, reproducer:\r\n\r\n```\r\nimport numpy as np\r\nimport cv2 as cv\r\n\r\ndetector = cv.aruco.CharucoDetector(\r\n    cv.aruco.CharucoBoard(\r\n        (3, 3), 200.0, 100.0,\r\n        cv.aruco.getPredefinedDictionary(cv.aruco.DICT_4X4_250)\r\n    )\r\n)\r\nimage = np.zeros((640, 480, 1), dtype=np.uint8)\r\nres = detector.detectDiamonds(image)\r\nprint(res)\r\n```\r\n\r\nThe error in `detectDiamonds` API fixed by replacing `InputOutputArrayOfArrays markerIds` with `InputOutputArray markerIds`.\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2023-06-22T10:16:08Z",
        "closed_at": "2023-06-22T18:00:07Z",
        "merged_at": "2023-06-22T18:00:07Z",
        "body": "Related PR in 3rdparty: https://github.com/opencv/opencv_3rdparty/pull/77\r\nPrevious FFmpeg Update: https://github.com/opencv/opencv/pull/23035\r\n\r\nSoftware versions:\r\n- FFmpeg version n4.4.4\r\n- OpenH264 version 1.8.0\r\n- libVPX version 1.13.0\r\n- libAOM version 3.6.1\r\n\r\n```\r\nforce_builders=Win64,Win32\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 95,
        "deletions": 23,
        "changed_files": 9,
        "created_at": "2023-06-21T18:24:42Z",
        "closed_at": "2023-06-22T09:46:26Z",
        "merged_at": "2023-06-22T09:46:26Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\n#### Overview\r\nThe PR is going to fix several problems:\r\n1. Major: `GKernel` doesn't hold `kind` for its outputs. Since `GModelBuilder` traverse graph from outputs to inputs once it reaches any output of the operation it will use its `kind` to create  `Data` meta for all operation outputs. Since it essential for `python` to know `GTypeInfo` (which is `shape` and `kind`) it will be confused.\r\n\r\nConsider this operation:\r\n```\r\n @cv.gapi.op('custom.square_mean', in_types=[cv.GArray.Int], out_types=[cv.GOpaque.Float, cv.GArray.Int])\r\n    class GSquareMean:\r\n        @staticmethod\r\n        def outMeta(desc):\r\n            return cv.empty_gopaque_desc(), cv.empty_array_desc()\r\n```\r\nEven though `GOpaque` is `Float`, corresponding metadata might have `Int` kind because it might be taken from `cv.GArray.Int`\r\nso it will be a problem if one of the outputs of these operation is graph output because python will cast it to the wrong type based on `Data` meta.\r\n\r\n2. Minor: Some of the OpenVINO `IR`'s doesn't any layout information for input. It's usually true only for `IRv10` but since `OpenVINO 2.0` need this information to correctly configure resize we need to put default layout if there no such assigned in `ov::Model`. \r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-21T14:20:23Z",
        "closed_at": "2023-06-21T19:42:28Z",
        "merged_at": "2023-06-21T19:42:28Z",
        "body": "Need to register external dependency if dnn module is not used:\r\n\r\n```\r\n-DWITH_OPENVINO=ON -DBUILD_opencv_dnn=OFF -DBUILD_SHARED_LIBS=OFF\r\n```\r\n\r\nSimilar to https://github.com/opencv/opencv/blame/1db1422fbdc1a03d1523b50ad9b05d72cbd39616/modules/dnn/CMakeLists.txt#L241",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-06-21T06:27:30Z",
        "closed_at": "2023-06-21T13:09:54Z",
        "merged_at": "2023-06-21T13:09:54Z",
        "body": "- FFmpeg version: 3.4.13\r\n- OpenH264 version 1.8.0\r\n- libvpx version 1.13.0\r\n\r\nPrevious update for 3.4: https://github.com/opencv/opencv/pull/21295\r\n\r\n```\r\nforce_builders=Win64,Win32\r\n```",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 27,
        "changed_files": 1,
        "created_at": "2023-06-21T05:13:56Z",
        "closed_at": "2023-06-23T19:20:28Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n\r\nFound some discrapency in the doc and the actual values, also fixed some formatting",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 108,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-20T18:37:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The test works in reverse: construct polynomial from its roots and compares with `solvePoly` results. Currently only real roots and monic polynomial are being generated.\r\n\r\nThis PR is intended to support future improvement of the `solvePoly` function.\r\n\r\nRelated PR #23714",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 177,
        "deletions": 39,
        "changed_files": 3,
        "created_at": "2023-06-20T17:11:38Z",
        "closed_at": "2023-06-20T18:16:51Z",
        "merged_at": "2023-06-20T18:16:51Z",
        "body": "This patch introduces conditional alias definition.\r\n\r\n- Fixes compatibility with NumPy versions < 1.20 and Python < 3.9\r\n- Updates enums handling to utilise introduced `ConditionalAliasTypeNode `\r\n\r\nGenerated `cv2/typing/__init__.py` content after patch:\r\n\r\n```python\r\nimport cv2.mat_wrapper\r\nimport numpy\r\nimport sys\r\nimport typing\r\n\r\nif numpy.lib.NumpyVersion(numpy.__version__) > \"1.20.0\" and sys.version_info >= (3, 9):\r\n    NumPyArrayGeneric = numpy.ndarray[typing.Any, numpy.dtype[numpy.generic]]\r\nelse:\r\n    NumPyArrayGeneric = numpy.ndarray\r\n\r\n\r\nif numpy.lib.NumpyVersion(numpy.__version__) > \"1.20.0\" and sys.version_info >= (3, 9):\r\n    NumPyArrayFloat32 = numpy.ndarray[typing.Any, numpy.dtype[numpy.float32]]\r\nelse:\r\n    NumPyArrayFloat32 = numpy.ndarray\r\n\r\n\r\nif numpy.lib.NumpyVersion(numpy.__version__) > \"1.20.0\" and sys.version_info >= (3, 9):\r\n    NumPyArrayFloat64 = numpy.ndarray[typing.Any, numpy.dtype[numpy.float64]]\r\nelse:\r\n    NumPyArrayFloat64 = numpy.ndarray\r\n\r\nMatLike = typing.Union[cv2.mat_wrapper.Mat, NumPyArrayGeneric]\r\nMatx33f = NumPyArrayFloat32\r\n\"\"\"NDArray(shape=(3, 3), dtype=numpy.float32)\"\"\"\r\nMatx33d = NumPyArrayFloat64\r\n\"\"\"NDArray(shape=(3, 3), dtype=numpy.float64)\"\"\"\r\nMatx44f = NumPyArrayFloat32\r\n\"\"\"NDArray(shape=(4, 4), dtype=numpy.float32)\"\"\"\r\nMatx44d = NumPyArrayFloat64\r\n\"\"\"NDArray(shape=(4, 4), dtype=numpy.float64)\"\"\"\r\n```\r\n\r\nResolves: #23822\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-06-20T13:34:43Z",
        "closed_at": "2023-06-20T15:34:08Z",
        "merged_at": "2023-06-20T15:34:08Z",
        "body": "Correct fix for #23821\r\n\r\nApart adding `import cv2.mat_wrapper` adds `import cv2.gapi.wip.draw` import to `cv2/typing/__init__.py`\r\n\r\n`cv2/typing/__init__.py` imports after fix:\r\n\r\n```python\r\nimport cv2\r\nimport cv2.dnn\r\nimport cv2.gapi.wip.draw\r\nimport cv2.mat_wrapper\r\nimport numpy\r\nimport typing\r\n```\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 363,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2023-06-20T13:02:15Z",
        "closed_at": "2023-06-20T13:03:46Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 7,
        "created_at": "2023-06-20T12:53:44Z",
        "closed_at": "2023-06-20T14:23:01Z",
        "merged_at": "2023-06-20T14:23:01Z",
        "body": "- [x] update version.js on docs.opencv.org\r\n\r\nprevious PR with version bump: #22972",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-20T12:17:00Z",
        "closed_at": "2023-06-21T06:04:17Z",
        "merged_at": "2023-06-21T06:04:17Z",
        "body": "Address https://github.com/opencv/opencv/issues/21125\r\nOpenCV does not provide any example that uses multi-dimensional reshape for now to reference.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 10,
        "changed_files": 8,
        "created_at": "2023-06-20T11:08:42Z",
        "closed_at": "2023-06-20T13:25:56Z",
        "merged_at": "2023-06-20T13:25:55Z",
        "body": "- [x] update version.js on docs.opencv.org\r\n\r\nprevious PR with version bump: #22971\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-06-20T09:10:28Z",
        "closed_at": "2023-06-21T10:11:40Z",
        "merged_at": "2023-06-21T10:11:40Z",
        "body": "Resolves the documentation issue from https://github.com/opencv/opencv/issues/23579.\r\n\r\nOrbbec is moving to support UVC directly so they do not provide the old `install.sh` for OpenNI SDK >= 2.3.0.86. Also in their new release of OpenNI SDK, paths of include headers and libraries are changed. Changing our cmake script for this change does not make sense since we cannot make this kind of change everytime they update. So just added a subsection providing `install.sh` for users as a workaround on our side.\r\n\r\n@Lecrapouille You may also take a look at this pull request.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 114,
        "deletions": 22,
        "changed_files": 8,
        "created_at": "2023-06-19T16:03:01Z",
        "closed_at": "2023-06-20T08:48:08Z",
        "merged_at": "2023-06-20T08:48:08Z",
        "body": "#22798 from lamm45:distransform-large\r\n#23664 from asmorkalov:as/solveLP_infeasible\r\n#23692 from asmorkalov:as/ffmpeg_fps_3.4\r\n#23729 from asmorkalov:as/create_samples_overflow\r\n#23768 from opencv-pushbot:gitee/alalek/issue_23156\r\n\r\nPrevious \"Merge 3.4\": #23667\r\n\r\n```\r\nforce_builders=Custom\r\nbuild_image:Docs=docs-js:18.04\r\nbuild_image:Custom=javascript\r\nbuildworker:Custom=linux-1,linux-4,linux-f1\r\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-17T06:42:54Z",
        "closed_at": "2023-06-20T10:35:18Z",
        "merged_at": "2023-06-20T10:35:18Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-16T18:52:02Z",
        "closed_at": "2023-06-16T19:27:48Z",
        "merged_at": "2023-06-16T19:27:48Z",
        "body": "Solves:\r\n```\r\nPython 3.9.5 (default, Nov 23 2021, 15:27:38) \r\n[GCC 9.3.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import cv2\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/ksenia/Projects/opencv-build-3.9/install/lib/python3.9/site-packages/cv2/__init__.py\", line 181, in <module>\r\n    bootstrap()\r\n  File \"/home/ksenia/Projects/opencv-build-3.9/install/lib/python3.9/site-packages/cv2/__init__.py\", line 175, in bootstrap\r\n    if __load_extra_py_code_for_module(\"cv2\", submodule, DEBUG):\r\n  File \"/home/ksenia/Projects/opencv-build-3.9/install/lib/python3.9/site-packages/cv2/__init__.py\", line 28, in __load_extra_py_code_for_module\r\n    py_module = importlib.import_module(module_name)\r\n  File \"/usr/lib/python3.9/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"/home/ksenia/Projects/opencv-build-3.9/install/lib/python3.9/site-packages/cv2/typing/__init__.py\", line 73, in <module>\r\n    MatLike = typing.Union[cv2.mat_wrapper.Mat, numpy.ndarray[typing.Any, numpy.dtype[numpy.generic]]]\r\nAttributeError: partially initialized module 'cv2' has no attribute 'mat_wrapper' (most likely due to a circular import)\r\n```\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-16T14:29:46Z",
        "closed_at": "2023-06-19T16:10:03Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 38,
        "changed_files": 2,
        "created_at": "2023-06-16T12:13:22Z",
        "closed_at": "2023-06-16T17:03:46Z",
        "merged_at": "2023-06-16T17:03:46Z",
        "body": "Alternative to https://github.com/opencv/opencv/pull/23818.\r\nRemoves duplication from interface part.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-16T10:18:53Z",
        "closed_at": "2023-06-16T16:34:48Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-06-15T19:53:26Z",
        "closed_at": "2023-06-16T17:03:19Z",
        "merged_at": "2023-06-16T17:03:19Z",
        "body": "- Export ALL_CAPS versions alongside from normal names for enum constants, since both versions are available in runtime\r\n- Change enum names entries comments to documentary strings\r\n\r\nBefore patch\r\n```python\r\nRMat_Access_R: int\r\nRMat_Access_W: int\r\nRMat_Access = int  # One of [R, W]\r\n```\r\nAfter patch\r\n```python\r\nRMat_Access_R: int\r\nRMAT_ACCESS_R: int\r\nRMat_Access_W: int\r\nRMAT_ACCESS_W: int\r\nRMat_Access = int\r\n\"\"\"One of [RMat_Access_R, RMAT_ACCESS_R, RMat_Access_W, RMAT_ACCESS_W]\"\"\"\r\n```\r\n\r\nResolves: #23776\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-06-15T19:31:35Z",
        "closed_at": "2023-07-04T13:31:29Z",
        "merged_at": "2023-07-04T13:31:29Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work https://github.com/opencv/opencv/issues/23808\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-06-15T18:40:16Z",
        "closed_at": "2023-07-05T14:51:32Z",
        "merged_at": "2023-07-05T14:51:32Z",
        "body": "Fixes #22632\r\n\r\nSimply search & replaced all instances of `confindece`\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [N/A] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 94,
        "deletions": 15,
        "changed_files": 6,
        "created_at": "2023-06-15T17:28:09Z",
        "closed_at": "2023-06-16T15:20:44Z",
        "merged_at": "2023-06-16T15:20:44Z",
        "body": "Enum names exist only during type checking.\r\nDuring runtime they should be denoted as named integral types\r\n\r\nThis patch fixes circular import issue introduced by #23798.\r\n\r\nBefore patch `TermCriteria` was defined as follows:\r\n```python\r\nTermCriteria = typing.Tuple[cv2.TermCriteria_Type, int, float]\r\n\"\"\"Any type providing sequence protocol is supported\"\"\"\r\n```\r\nwhich works fine during type checking, but introduces runtime failure:\r\n```python\r\n>>> import cv2\r\n...\r\n    TermCriteria = tuple[cv2.TermCriteria_Type, int, float]  # Any type providing sequence protocol is supported\r\n                         ^^^^^^^^^^^^^^^^^^^^^\r\nAttributeError: partially initialized module 'cv2' has no attribute 'TermCriteria_Type' (most likely due to a circular import)\r\n```\r\n\r\nGenerated `__init__.py` after patch will hide `cv2.TermCriteria_Type` enumeration by `typing.TYPE_CHECKNIG` guard.\r\n\r\n```python\r\nif typing.TYPE_CHECKING:\r\n    TermCriteria_Type = cv2.TermCriteria_Type\r\nelse:\r\n    TermCriteria_Type = int\r\n\r\nTermCriteria = typing.Tuple[TermCriteria_Type, int, float]\r\n\"\"\"Any type providing sequence protocol is supported\"\"\"\r\n```\r\n\r\nSo everything can be imported without any issues\r\n```python\r\n>>> import cv2\r\n>>> import cv2.typing\r\n>>> cv2.typing.TermCriteria\r\ntyping.Tuple[int, int, float]\r\n>>> \r\n```\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 13,
        "changed_files": 4,
        "created_at": "2023-06-15T16:36:02Z",
        "closed_at": "2023-06-16T10:08:24Z",
        "merged_at": "2023-06-16T10:08:24Z",
        "body": "Backported TBB support (https://github.com/opencv/opencv/pull/19384) for opencv 3.x.\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-06-15T16:15:56Z",
        "closed_at": "2023-06-16T12:14:49Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 67,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-06-15T13:36:01Z",
        "closed_at": "2023-06-16T17:01:24Z",
        "merged_at": "2023-06-16T17:01:24Z",
        "body": "- Re-export native submodules of cv2 package level.\r\n- Re-export  manually registered  symbols like cv2.mat_wrapper.Mat\r\n\r\n`__init__.pyi` file import section after patch\r\n\r\n```python\r\n# other imports \r\n\r\n# --- Added section ---\r\nfrom cv2 import Error as Error\r\nfrom cv2 import aruco as aruco\r\nfrom cv2 import cuda as cuda\r\nfrom cv2 import detail as detail\r\nfrom cv2 import dnn as dnn\r\nfrom cv2 import fisheye as fisheye\r\nfrom cv2 import flann as flann\r\nfrom cv2 import gapi as gapi\r\nfrom cv2 import ipp as ipp\r\nfrom cv2 import ml as ml\r\nfrom cv2 import ocl as ocl\r\nfrom cv2 import ogl as ogl\r\nfrom cv2 import parallel as parallel\r\nfrom cv2 import samples as samples\r\nfrom cv2 import segmentation as segmentation\r\nfrom cv2 import utils as utils\r\nfrom cv2 import videoio_registry as videoio_registry\r\nfrom cv2.mat_wrapper import Mat as Mat\r\n# --- Added section ---\r\n\r\n# Rest of the file is unchanged\r\n```\r\n\r\nResolves: #23777\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 97,
        "deletions": 84,
        "changed_files": 1,
        "created_at": "2023-06-15T12:35:34Z",
        "closed_at": "2023-06-16T07:10:27Z",
        "merged_at": "2023-06-16T07:10:27Z",
        "body": "* test whole barcode interface (common + specific)\r\n* do not use csv-files\r\n\r\nNote: there are minor limitations related to the `set` usage (e.g. algorithm may return multiple identical results and it will not be checked correctly), but this is intended for test simplicity.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 141,
        "deletions": 91,
        "changed_files": 7,
        "created_at": "2023-06-15T10:26:03Z",
        "closed_at": "2023-06-23T13:23:03Z",
        "merged_at": "2023-06-23T13:23:03Z",
        "body": "Fix for https://github.com/opencv/opencv/pull/23078\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 139,
        "deletions": 48,
        "changed_files": 9,
        "created_at": "2023-06-15T09:45:41Z",
        "closed_at": "2023-07-25T13:05:56Z",
        "merged_at": "2023-07-25T13:05:56Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\n**Merged with https://github.com/opencv/opencv_extra/pull/1075**\r\n\r\n[Issue for GSoC 2023](https://github.com/opencv/opencv/issues/23624)\r\nThe ply loader in 3D module doesn't support color attribute reading. I modified that to support color attribute reading & writing for the color attribute compression as described in proposal.\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 80,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2023-06-14T21:07:59Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fixes https://github.com/opencv/opencv/issues/22892\r\nmerge with https://github.com/opencv/opencv_extra/pull/1072\r\n\r\nThe issue is in spline interpolation. Only the points of the function can be interpolated using splines, but the contour points may not be a function. There may be several points with the same x coordinate and different y. It results in getting NaN when calculating spline.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 108,
        "deletions": 14,
        "changed_files": 5,
        "created_at": "2023-06-14T18:40:12Z",
        "closed_at": "2023-06-21T07:44:36Z",
        "merged_at": "2023-06-21T07:44:36Z",
        "body": "These patch introduce a customisation point to manually refine autogenerated stubs to fulfil conventions that are not expressed in C++ API.\r\nExample: functions accepting \"empty\" arguments in their C++ API accepts `None` in Python (`cv::resize` accepts empty `cv::Size` as `dsize`).\r\n\r\n- Mark `resize` `dsize` and `calcHist` `mask` arguments as optional regardless of their C++ API optionality\r\n\r\nBefore patch\r\n```python\r\n@typing.overload\r\ndef resize(src: cv2.typing.MatLike, dsize: cv2.typing.Size, dst: cv2.typing.MatLike | None = ..., fx: float = ..., fy: float = ..., interpolation: int = ...) -> cv2.typing.MatLike: ...\r\n@typing.overload\r\ndef resize(src: UMat, dsize: cv2.typing.Size, dst: UMat | None = ..., fx: float = ..., fy: float = ..., interpolation: int = ...) -> UMat: ...\r\n\r\n@typing.overload\r\ndef calcHist(images: typing.Sequence[cv2.typing.MatLike], channels: typing.Sequence[int], mask: cv2.typing.MatLike, histSize: typing.Sequence[int], ranges: typing.Sequence[float], hist: cv2.typing.MatLike | None = ..., accumulate: bool = ...) -> cv2.typing.MatLike: ...\r\n@typing.overload\r\ndef calcHist(images: typing.Sequence[UMat], channels: typing.Sequence[int], mask: UMat, histSize: typing.Sequence[int], ranges: typing.Sequence[float], hist: UMat | None = ..., accumulate: bool = ...) -> UMat: ...\r\n\r\n```\r\nAfter patch:\r\n```python\r\n@typing.overload\r\ndef resize(src: cv2.typing.MatLike, dsize: cv2.typing.Size | None, dst: cv2.typing.MatLike | None = ..., fx: float = ..., fy: float = ..., interpolation: int = ...) -> cv2.typing.MatLike: ...\r\n@typing.overload\r\ndef resize(src: UMat, dsize: cv2.typing.Size | None, dst: UMat | None = ..., fx: float = ..., fy: float = ..., interpolation: int = ...) -> UMat: ...\r\n\r\n\r\n@typing.overload\r\ndef calcHist(images: typing.Sequence[cv2.typing.MatLike], channels: typing.Sequence[int], mask: cv2.typing.MatLike | None, histSize: typing.Sequence[int], ranges: typing.Sequence[float], hist: cv2.typing.MatLike | None = ..., accumulate: bool = ...) -> cv2.typing.MatLike: ...\r\n@typing.overload\r\ndef calcHist(images: typing.Sequence[UMat], channels: typing.Sequence[int], mask: UMat | None, histSize: typing.Sequence[int], ranges: typing.Sequence[float], hist: UMat | None = ..., accumulate: bool = ...) -> UMat: ...\r\n\r\n```\r\n\r\nResolves: #23779\r\n\r\n- Export OpenCV `error` class to `cv2/__init__.pyi` - custom exception class\r\n```python\r\nclass error(Exception):\r\n    ...\r\n```\r\n\r\nResolves: #23781\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-06-14T17:10:20Z",
        "closed_at": "2023-06-15T14:28:34Z",
        "merged_at": "2023-06-15T14:28:34Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 905,
        "deletions": 317,
        "changed_files": 3,
        "created_at": "2023-06-14T15:30:49Z",
        "closed_at": "2023-06-20T10:29:23Z",
        "merged_at": "2023-06-20T10:29:23Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 115,
        "deletions": 79,
        "changed_files": 3,
        "created_at": "2023-06-14T15:03:22Z",
        "closed_at": "2023-06-15T11:41:13Z",
        "merged_at": "2023-06-15T11:41:13Z",
        "body": "### Provide cv2.typing aliases at runtime.\r\n\r\n- `cv2.typing` is generated as `__init__.py` instead of `__init__.pyi`\r\n- built-in generics are changed to types from built-in `typing` module to handle Python versions < 3.9\r\n- Type aliases comments are changed to doc strings. Example:\r\n\r\n```python\r\nimport typing\r\n\r\nIntPointer = int\r\n\"\"\"Represents an arbitrary pointer\"\"\"\r\nMatLike = typing.Union[cv2.mat_wrapper.Mat, numpy.ndarray[typing.Any, numpy.dtype[numpy.generic]]]\r\nMatShape = typing.Sequence[int]\r\nSize = typing.Sequence[int]\r\n\"\"\"Required length is 2\"\"\"\r\n```\r\n\r\nResolves: #23782\r\nResolves: #23778\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 6,
        "changed_files": 4,
        "created_at": "2023-06-14T13:56:54Z",
        "closed_at": "2023-06-15T14:29:21Z",
        "merged_at": "2023-06-15T14:29:21Z",
        "body": "Merge after https://github.com/opencv/opencv/pull/23666\r\nNo JS test for now as model files are required\r\nAlso hacked std::string as JS generator omits namespaces by some reason\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 157,
        "deletions": 9,
        "changed_files": 2,
        "created_at": "2023-06-14T11:58:16Z",
        "closed_at": "2023-06-20T09:33:09Z",
        "merged_at": "2023-06-20T09:33:09Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n\r\n\r\n```\r\nforce_builders=Custom\r\nbuild_image:Custom=ubuntu-openvino-2021.4.2:20.04\r\ntest_modules:Custom=gapi,python2,python3,java\r\nbuildworker:Custom=linux-1,linux-4\r\n# disabled due high memory usage: test_opencl:Custom=ON\r\ntest_opencl:Custom=OFF\r\ntest_bigdata:Custom=1\r\ntest_filter:Custom=*\r\n```",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-06-14T11:25:35Z",
        "closed_at": "2023-06-16T07:21:21Z",
        "merged_at": "2023-06-16T07:21:21Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nresolves https://github.com/opencv/opencv/issues/23745\r\n\r\nmerge with extra: https://github.com/opencv/opencv_extra/pull/1070\r\n\r\n![image](https://github.com/opencv/opencv/assets/25801568/d817afce-ccb4-4332-9bed-8490892cad22)\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-06-13T13:39:29Z",
        "closed_at": "2023-06-14T14:05:09Z",
        "merged_at": "2023-06-14T14:05:09Z",
        "body": "merge after https://github.com/opencv/opencv/pull/23769\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-13T12:39:38Z",
        "closed_at": "2023-06-13T15:07:53Z",
        "merged_at": "2023-06-13T15:07:53Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-06-13T07:46:04Z",
        "closed_at": "2023-06-13T15:12:00Z",
        "merged_at": "2023-06-13T15:12:00Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nresolves https://github.com/opencv/opencv/issues/23764\r\n\r\nI don't think that `scalefactor` as a `Scalar` is a good idea. Is there models with different scales for channels?\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 564,
        "deletions": 128,
        "changed_files": 3,
        "created_at": "2023-06-12T15:54:21Z",
        "closed_at": "2023-06-14T06:29:49Z",
        "merged_at": "2023-06-14T06:29:49Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2023-06-12T13:55:23Z",
        "closed_at": "2023-06-14T10:29:30Z",
        "merged_at": "2023-06-14T10:29:30Z",
        "body": "added Aruco MIP dictionaries: DICT_ARUCO_MIP_16h3, DICT_ARUCO_MIP_25h7, DICT_ARUCO_MIP_36h12 from [Aruco.js](https://github.com/damianofalcioni/js-aruco2), converted in opencv format using https://github.com/damianofalcioni/js-aruco2/blob/master/src/dictionaries/utils/dic2opencv.js\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 5,
        "created_at": "2023-06-11T15:08:41Z",
        "closed_at": "2023-06-12T14:49:37Z",
        "merged_at": "2023-06-12T14:49:37Z",
        "body": "MSVS compiler always gives a warning of `\u201c\u201d`. The `\u201c\u201d` should only be used in Chinese. So, I think we should replace them with `\"\"`.\r\n\r\n[warning C4819](https://stackoverflow.com/questions/10501634/warning-c4819-how-to-find-the-character-that-has-to-be-saved-in-unicode)\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2023-06-10T17:55:48Z",
        "closed_at": "2023-06-12T14:50:13Z",
        "merged_at": "2023-06-12T14:50:13Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-10T17:11:38Z",
        "closed_at": "2023-06-10T18:46:49Z",
        "merged_at": null,
        "body": "barrel and pincushion distortion documentation correction\r\n\r\nthe factor 1 + k_1 r^2 + k_2 r^4 + k_3 r^6 transforms distorted coords in undistorted coords, hence the correction. Barrel has distorted coords smaller than undistorted ones. So the factor must be INCRESASING(r) and not decreasing. Viceversa with pincushion\r\n\r\nplease check\r\nhttps://en.wikipedia.org/wiki/Distortion_(optics)\r\n\r\nhttps://www.foamcoreprint.com/blog/what-are-calibration-targets#:~:text=The%20Brown%20distortion%20model%2F%20Brown's,straight%20lines%20on%20camera%20images.\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 22,
        "changed_files": 3,
        "created_at": "2023-06-09T15:44:17Z",
        "closed_at": "2023-08-11T11:26:30Z",
        "merged_at": null,
        "body": "This fixes some (but not all) build errors on OpenBSD.",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 14,
        "changed_files": 2,
        "created_at": "2023-06-09T13:09:18Z",
        "closed_at": "2023-06-13T13:41:48Z",
        "merged_at": "2023-06-13T13:41:48Z",
        "body": "Address: regression https://github.com/opencv/opencv/issues/23737\r\n\r\n- Add new base class for QRCodeDetector to JS white-list\r\n- Resolve inheritance relations when all classes are parsed.\r\n- Add branch to handle `std::vector<std::string>` in method parameters.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nforce_builders=Custom\r\nbuild_image:Docs=docs-js:18.04\r\nbuild_image:Custom=javascript\r\nbuildworker:Custom=linux-1,linux-4,linux-f1\r\n```",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-09T09:49:16Z",
        "closed_at": "2023-06-10T06:23:26Z",
        "merged_at": "2023-06-10T06:23:26Z",
        "body": "fixes #23156",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2023-06-09T09:14:37Z",
        "closed_at": "2023-07-28T06:16:26Z",
        "merged_at": null,
        "body": "Fixes #23753\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 187,
        "deletions": 62,
        "changed_files": 5,
        "created_at": "2023-06-09T07:29:01Z",
        "closed_at": "2023-06-13T15:06:19Z",
        "merged_at": "2023-06-13T15:06:19Z",
        "body": "### Overview\r\n* Supported demo working with camera id (e.g `--input=0`)\r\n* Supported 3d output segmentation models (e.g `deeplabv3`)\r\n* Supported `desync` execution\r\n* Supported higher camera resolution\r\n* Changed the color map to pascal voc (https://cloud.githubusercontent.com/assets/4503207/17803328/1006ca80-65f6-11e6-9ff6-36b7ef5b9ac6.png)\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 24,
        "changed_files": 3,
        "created_at": "2023-06-08T00:35:35Z",
        "closed_at": "2023-06-09T06:18:12Z",
        "merged_at": "2023-06-09T06:18:12Z",
        "body": "Address https://github.com/opencv/opencv/issues/23760\r\nThe patch aims to add a runtime check for X86 platform without AVX(2).\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2023-06-07T14:44:06Z",
        "closed_at": "2023-06-08T06:50:34Z",
        "merged_at": "2023-06-08T06:50:34Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-07T14:18:38Z",
        "closed_at": "2023-06-08T06:59:01Z",
        "merged_at": "2023-06-08T06:59:01Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work https://github.com/opencv/opencv/issues/23759\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 166,
        "deletions": 132,
        "changed_files": 8,
        "created_at": "2023-06-07T07:43:52Z",
        "closed_at": "2023-06-09T12:46:32Z",
        "merged_at": "2023-06-09T12:46:32Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-06-07T02:10:36Z",
        "closed_at": "2023-06-23T19:19:51Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-06-06T17:08:17Z",
        "closed_at": "2023-06-16T15:30:21Z",
        "merged_at": "2023-06-16T15:30:21Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nresolves https://github.com/opencv/opencv/issues/23562\r\n\r\nI do think that this is a bug because with `INTER_CUBIC + BORDER_TRANSPARENT` the last column and row are preserved. So same should be done for `INTER_LINEAR`\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-05T20:09:33Z",
        "closed_at": "2023-06-06T08:34:08Z",
        "merged_at": "2023-06-06T08:34:08Z",
        "body": "related PR #22520\r\n\r\n* `mhls3` is read outside of array `interTmpM` (3 elements), it is not used anywhere\r\n* ~replacing `max_nlanes` with `vlanes` for array size is still in question, I think it should be OK~ It was not OK :smiley: ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 18,
        "changed_files": 6,
        "created_at": "2023-06-05T12:10:45Z",
        "closed_at": "2023-06-06T06:59:13Z",
        "merged_at": "2023-06-06T06:59:13Z",
        "body": "Fixes #23700\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-06-05T10:20:56Z",
        "closed_at": "2023-06-07T13:01:42Z",
        "merged_at": "2023-06-07T13:01:42Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nThis PR fixes issue mentioned in [#23663](https://github.com/opencv/opencv/issues/23663) \r\nMerge with https://github.com/opencv/opencv_extra/pull/1067\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2023-06-04T11:22:24Z",
        "closed_at": "2023-06-09T10:40:03Z",
        "merged_at": "2023-06-09T10:40:02Z",
        "body": "Fixing a typo in file `modules/stitching/include/opencv2/stitching/detail/motion_estimators.hpp` and `motion_estimators.cpp`, since the correct plural of \"path\" is \"paths\", not \"pathes\".\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 475,
        "changed_files": 37,
        "created_at": "2023-06-02T16:17:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This removes a bunch of pre-C++11 workrarounds that are no longer necessary as C++11 is now required.\r\n\r\nIt is a nice clean up and simplification.\r\n\r\n```\r\nforce_builders=Custom\r\nbuild_image:Custom=centos:7\r\nbuildworker:Custom=linux-1\r\n```",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2023-06-02T15:10:31Z",
        "closed_at": "2023-08-11T12:23:09Z",
        "merged_at": "2023-08-11T12:23:09Z",
        "body": "Although acceptable to Intel CPUs, it's still undefined behaviour according to the C++ standard.\r\n\r\nIt can be replaced with memcpy, which makes the code much simpler, and it generates the same assembly code with gcc and clang with -O2 (verified with godbolt).\r\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-02T13:48:02Z",
        "closed_at": "2023-06-06T07:00:36Z",
        "merged_at": "2023-06-06T07:00:36Z",
        "body": "Removed passing try_gpu parameter to FeatherBlender constructor because it only has sharpness parameter and does not support GPU branch,\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-02T07:34:02Z",
        "closed_at": "2023-06-03T07:13:11Z",
        "merged_at": "2023-06-03T07:13:11Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 74,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2023-06-01T11:22:05Z",
        "closed_at": "2023-06-10T06:21:24Z",
        "merged_at": "2023-06-10T06:21:24Z",
        "body": "Try to address https://github.com/opencv/opencv/issues/23723\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n\r\n```\r\nbuild_image:Docs=docs-js:18.04\r\nbuild_image:Custom=javascript\r\nbuildworker:Custom=linux-1,linux-4,linux-f1\r\n```",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 130,
        "deletions": 31,
        "changed_files": 7,
        "created_at": "2023-06-01T09:51:41Z",
        "closed_at": "2023-06-16T16:58:21Z",
        "merged_at": "2023-06-16T16:58:21Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nEnables a path of building Java bindings without ANT\r\n\r\n* Able to build OpenCV JAR and Docs without ANT\r\n  ```\r\n  --   Java:                          \r\n  --     ant:                         NO\r\n  --     JNI:                         /usr/lib/jvm/default-java/include /usr/lib/jvm/default-java/include/linux /usr/lib/jvm/default-java/include\r\n  --     Java wrappers:               YES\r\n  --     Java tests:                  NO\r\n  ```\r\n* Possible to build OpenCV JAR without ANT but tests still require ANT\r\n\r\n**Merge with**: https://github.com/opencv/opencv_contrib/pull/3502\r\n\r\nNotes:\r\n- Use `OPENCV_JAVA_IGNORE_ANT=1` to force \"Java\" flow for building Java bindings\r\n- Java tests still require Apache ANT\r\n- JAR doesn't include `.java` source code files.\r\n\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 27,
        "changed_files": 1,
        "created_at": "2023-06-01T07:50:51Z",
        "closed_at": "2023-06-01T10:53:36Z",
        "merged_at": "2023-06-01T10:53:36Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-01T07:23:47Z",
        "closed_at": "2023-06-02T06:40:46Z",
        "merged_at": "2023-06-02T06:40:46Z",
        "body": "Address: https://github.com/opencv/opencv/issues/23710\r\nWarning introduced in https://github.com/opencv/opencv/pull/23682\r\nTechnically, there is function prototype in openjp2/ht_dec.c:1096. It's only place where the function is used. I added warning suppression.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 86342,
        "deletions": 19535,
        "changed_files": 565,
        "created_at": "2023-05-31T11:44:14Z",
        "closed_at": "2023-07-05T14:19:28Z",
        "merged_at": "2023-07-05T14:19:27Z",
        "body": "Contrib PR: https://github.com/opencv/opencv_contrib/pull/3501\r\nExtra PR: https://github.com/opencv/opencv_extra/pull/1066\r\n\r\n#13879 from chacha21:REDUCE_SUM2\r\n#20370 from ddacw:stub-gen-next\r\n#21736 from anders-nylander:fix_android_sdk_tools_dependency\r\n#22245 from rprasanth:4.x\r\n#22275 from zihaomu:fp16_support_conv\r\n#22441 from vrabaud:hls_while\r\n#22471 from anna-khakimova:ak/fix_resize4lpi_tests\r\n#22614 from zihaomu:add_std2DB_API\r\n#22660 from zhouzq-thu:4.x\r\n#22700 from kallaballa:capture_backened_debug_msg\r\n#22750 from zihaomu:improve_blobFromImage\r\n#22889 from D-Alex:patch-1\r\n#23019 from tkram01:sampleIdxFix\r\n#23020 from Wwupup:yunetv2\r\n#23025 from savuor:backport3_stddev_calib_fix\r\n#23047 from fengyuentau:layer_norm\r\n#23055 from seanm:sprintf2\r\n#23061 from WanliZhong:gemm_cuda\r\n#23067 from sashashura:patch-3\r\n#23073 from savuor:fix_graphcut_used_edges_dense\r\n#23076 from inayd:22012-bugfixFillPoly\r\n#23108 from crackwitz:issue-23107\r\n#23111 from Yeatse:fix-apple-silicon-build\r\n#23120 from alalek:fixup_22246_2\r\n#23128 from Isydmr:update-fastNlMeansDenoising-documentation\r\n#23131 from y-guyon:align_ptr_intrin_sse\r\n#23138 from AleksandrPanov:aruco_fix_matchImagePoints\r\n#23139 from AleksandrPanov:add_py_charuco_sample\r\n#23148 from alalek:perf_drop_calibration\r\n#23153 from stefan523:ChArUco_pre460_pattern_support\r\n#23154 from tomoaki0705:handleNonBitExact\r\n#23161 from dkurt:dnn_tflite\r\n#23162 from zihaomu:issue_23151\r\n#23165 from labeeb-7z:optimizeDistanceTransform\r\n#23168 from genciberisha/bug/issue-22205_and_23105_encodeStructuredAppend_problem\r\n#23172 from lilohuang:master\r\n#23173 from tomoaki0705:fix_warning_master\r\n#23185 from y-guyon:parallel_tsan_data_race\r\n#23192 from zihaomu:clean_up_SIMD_code\r\n#23196 from labeeb-7z:printOptionInRoiSelector\r\n#23198 from mshabunin:fix-rvv-07\r\n#23203 from asmorkalov:as/xcode_warning_supression\r\n#23204 from whuaegeanse:fix-sift\r\n#23209 from CSBVision:patch-3\r\n#23210 from ibaiGorordo:rect_nfa_bugfix\r\n#23211 from TolyaTalamanov:at/pipeline-modeling-tool-perf-alignment\r\n#23217 from laitingsheng:4.x\r\n#23219 from fengyuentau:add_gelu\r\n#23222 from siilats:patch-1\r\n#23224 from VadimLevin:dev/vlevin/cxx-named-arguments\r\n#23225 from mshabunin:fix-clang-warnings\r\n#23237 from hzcyf:feature/orbbec_femto_mega_support\r\n#23243 from WanliZhong:accelerate_palm_det\r\n#23246 from mshabunin:rvv07-support\r\n#23247 from lilithgrigoryan:fix-focals-estimation\r\n#23250 from tintou:./tintou/glib-req\r\n#23255 from zihaomu:fused_cuda_naryeltwise\r\n#23260 from tintou:tintou/gtk-reduce-diff\r\n#23261 from vovka643:3.4\r\n#23268 from VadimLevin:dev/vlevin/bindings-io-arg-modifiers-fix\r\n#23271 from stefan523:aruco_testcase_fixes\r\n#23274 from alalek:dnn_flatbuffers_builtin\r\n#23275 from genciberisha:bug/issue-23249_detected_but_not_decoded_bug\r\n#23276 from vovka643:flann_corrections\r\n#23287 from alalek:dnn_tflite_fix_illegal_access\r\n#23290 from vovka643:4.x_depricated_backends\r\n#23292 from CSBVision:patch-4\r\n#23296 from fengyuentau:fix_identifying_constant\r\n#23300 from ippei-i:CAP_PROP_AUTO_WB-and-CAP_PROP_WHITE_BALANCE_BLUE_U_support_in_CAP_DSHOW\r\n#23301 from shtern:fix_quaternion\r\n#23305 from bhavitp:fix/calib3d/undistortion_grid\r\n#23307 from alalek:simd_comparison_fix_misused_64f_guard\r\n#23310 from hanliutong:fix_hal_compatibility\r\n#23319 from fengyuentau:fix_zoo_issue_136\r\n#23321 from a-sajjad72:patch-1\r\n#23325 from dkurt:dnn_input_info\r\n#23341 from TuNanTang:3.4\r\n#23342 from n0099:#23335\r\n#23343 from zihaomu:fix_test_onnx_conf\r\n#23344 from anderskiaer:singlefilejs\r\n#23350 from spikethehobbitmage:4.x\r\n#23353 from tingboliao:4.x\r\n#23354 from zihaomu:issue_23351\r\n#23356 from TuNanTang:OptimizeFixFitEllipseSample\r\n#23357 from zihaomu:fix_winograd_error_32bit\r\n#23358 from Abdurrahheem:fix_doc_dnn_custom_layers\r\n#23363 from vovka643:4.x_generate_charuco\r\n#23367 from LaurentBerger:msmf_doc\r\n#23371 from cudawarped:cuda_add_futher_python_interop\r\n#23375 from mshabunin:fix-v4l-verify\r\n#23377 from LaurentBerger:findsample\r\n#23380 from Zero-nnkn:pose_doc\r\n#23381 from ct2034:fix/typo\r\n#23383 from mshabunin:rvv-scalable-gcc\r\n#23386 from asmorkalov:issue23147\r\n#23388 from simonlynen:patch-2\r\n#23390 from just-gull:bugfix.21401.fix-macos-crash-when-keypress-does-nothing\r\n#23394 from thewoz:Cocoa-Scroll-Wheel\r\n#23399 from AleksandrPanov:aruco_fix_board\r\n#23401 from fengyuentau:fix_cann_layer_support\r\n#23402 from LaurentBerger:I23400\r\n#23409 from dkurt:dnn_tflite_quant\r\n#23410 from Kumataro:3.4-fix23397-step1\r\n#23417 from souch:souch-fix-parallel-backend-example\r\n#23418 from mshabunin:fix-rvv-07-old\r\n#23419 from dkurt:onnx_fixes\r\n#23433 from Kumataro:4.x-fix23416\r\n#23436 from siilats:patch-2\r\n#23442 from LaurentBerger:tuto_findFile\r\n#23443 from eplankin:3.4\r\n#23444 from opencv:AnnaPetrovicheva-add-funding-button\r\n#23446 from tantei3:bmp_fix\r\n#23447 from onuralpszr:gradle80_namespace\r\n#23448 from dmatveev:dm/gapi_fix_standalone_47\r\n#23449 from Zwyx:fix-mat-zeros-rows-cols\r\n#23451 from Zero2key:4.x\r\n#23460 from gottagofaster236:fix_obs_virtual_camera\r\n#23468 from migdall:migdall-issue-add-is-easier-pyintro-markdown\r\n#23469 from gottagofaster236:use_nv12_for_obs_camera\r\n#23475 from Abdurrahheem:lstm_fix_initialization\r\n#23476 from fengyuentau:add_note_for_yunet\r\n#23477 from TolyaTalamanov:at/handle-multimeta-giebackend\r\n#23479 from vovka643:4.x_charuco_calib\r\n#23482 from zihaomu:onnx_opset13_split\r\n#23484 from AleksandrPanov:fix_warnings_quirc\r\n#23485 from zihaomu:add_onnx_where\r\n#23486 from vovka643:4.x_calibration_with_aruco\r\n#23487 from Gaotianhong:4.x\r\n#23491 from fengyuentau:patch_for_segment_anything\r\n#23495 from smeng9:4.x\r\n#23499 from cabelo:yolov4-tiny\r\n#23501 from Abdurrahheem:additional_lstm_tests\r\n#23502 from seanm:sprintf3\r\n#23503 from seanm:issue13729\r\n#23506 from MvWouden:patch-1\r\n#23511 from zihaomu:issue_23465\r\n#23513 from komakai:fix_unrecognized_selector\r\n#23514 from tappytaps:mac-catalyst-fix\r\n#23515 from vovka643:4.x_aruco_stereo_calibration\r\n#23518 from mshabunin:security-update\r\n#23528 from WanliZhong:issue23278\r\n#23529 from dmatveev:dm/gapi_onnx_rt_1.14.1\r\n#23531 from kaingwade:orbbec_python_sample\r\n#23535 from komakai:fix_ocl_device_isintel\r\n#23538 from Avasam:patch-1\r\n#23541 from cudawarped:fix_3474\r\n#23545 from Abdurrahheem:tests_lstm_init_no_hidden_states\r\n#23555 from LaurentBerger:doc_format\r\n#23557 from WanliZhong:eltwise_cpu_bug\r\n#23560 from WanliZhong:eltwise_cuda_bug\r\n#23565 from MaximSmolskiy:fix-function-name-in-comment\r\n#23566 from seanm:atomic-bool\r\n#23567 from seanm:UBSan-overflow\r\n#23572 from gabrielnhn:depthmap_tutorial\r\n#23575 from vovka643:4.x_aruco_calib3d_calibration\r\n#23583 from siilats:patch-3\r\n#23587 from vovka643:4.x_aruco_calibrate_py\r\n#23594 from fdivitto:fdivitto-traincascade-patch\r\n#23597 from dmatveev:dm/gapi_onnx_py_integration\r\n#23598 from komakai:fix-objc-gen-baseclass\r\n#23600 from dkurt:flatbuffers_23.5.9\r\n#23601 from cudawarped:videocapture_threading\r\n#23604 from dkurt:dnn_no_protobuf\r\n#23606 from mshabunin:fix-ffmpeg-packet-limit\r\n#23612 from cpoerschke:3.4-issue-21532\r\n#23614 from Abdurrahheem:lstm_layout_attribute\r\n#23618 from LaurentBerger:unused_var\r\n#23619 from TinyTinni:pixel-info-font-color\r\n#23625 from zihaomu:improve_conv\r\n#23629 from asmorkalov:as/cpu_features_bindings\r\n#23631 from asmorkalov:as/eigen_NOMINMAX_warning_fix\r\n#23632 from asmorkalov:as/AffineFeature_mask_fix_3.4\r\n#23634 from dkurt:fix_nearest_exact\r\n#23638 from soyszala:issue#23633\r\n#23641 from zihaomu:ci_of_vulkan\r\n#23645 from Abdurrahheem:ash/tf_init_input_check\r\n#23646 from dkurt:dnn_ie_region_fix\r\n#23652 from rahulnoronha:patch-1\r\n#23655 from fengyuentau:qlinearsoftmax\r\n#23656 from peters:patch-2\r\n#23657 from asmorkalov:as/uyvy_cvtColor_size_check\r\n#23662 from akormous:docfix\r\n#23671 from zihaomu:fix_potential_bug\r\n#23672 from mshabunin:fix-javadoc17\r\n#23674 from dkurt:py_cv_maketype\r\n#23679 from dkurt:py_cv_type_macro\r\n#23682 from asmorkalov:as/openjpeg_2.5.0\r\n#23684 from LaurentBerger:I23683\r\n#23686 from LaurentBerger:I23685\r\n#23690 from chacha21:rotatedRectangleIntersection_precision\r\n#23691 from dkurt:pycv_float16_fixes\r\n#23694 from dkurt:update_matchTemplateMask\r\n#23695 from triple-Mu:triplemu/fix-python-binding\r\n#23698 from cpoerschke:4.x-pr-21959-perf\r\n#23703 from Abdurrahheem:ash/graph_simplifier\r\n#23707 from Orange-OpenSource:ONNX_Squeeze_negative_index_for_the_axes_attribute\r\n#23638 from  soyszala:issue#23633\r\n#23214 from  asmorkalov:as/xcode_warning_supression3.4\r\n#23349 form  zihaomu:optimize_vulkan_dnn\r\n#22245 from  rprasanth:4.x\r\n#23694 from dkurt:update_matchTemplateMask\r\n#23209 from  CSBVision:patch-3\r\n#23124 from  vicsyl:feature/dog_precision\r\n#23270  from vpisarev:sift_double_old_default\r\n#23272 from vpisarev:sift_double_old_default_upd\r\n#23613 from fengyuentau:refactor_reduce\r\n\r\nPrevious \"Merge 4.x\": #23189",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 26,
        "changed_files": 1,
        "created_at": "2023-05-31T05:50:35Z",
        "closed_at": "2023-06-23T08:34:37Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-31T03:09:45Z",
        "closed_at": "2023-06-02T09:36:58Z",
        "merged_at": null,
        "body": "Address: https://github.com/opencv/opencv/issues/23644\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2430,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-31T02:39:33Z",
        "closed_at": "2023-05-31T02:44:16Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [ ] I agree to contribute to the project under Apache 2 License.\r\n- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [ ] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-30T17:43:06Z",
        "closed_at": "2023-05-31T07:00:07Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 333,
        "deletions": 214,
        "changed_files": 15,
        "created_at": "2023-05-30T17:28:23Z",
        "closed_at": "2023-06-02T11:18:56Z",
        "merged_at": null,
        "body": "_Motivation:_ non-maximum suppression can be used not only as postprocessing in DNN-based algorithms, so we move it to _imgproc_ module together with other geometry- and contour-related algorithms (bounding rect, intersections, etc.).\r\n\r\n##### Notes: \r\n- I tried to preserve ABI and API compatibility with existing code, thus declaring aliases in `cv::dnn` namespace and keeping old functions in _dnn_ module (hidden from user, header file not installed). Maybe it is not really necessary because _dnn_ ABI is still considered experimental.\r\n- Python API will probably be broken (cv.dnn.NMSBoxes -> cv.NMSBoxes) (maybe we can put these functions to the `dnn` namespace in the _imgproc_ module to fix it...? :thinking:)\r\n- I did not check other bindings (JS?)",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-30T08:52:23Z",
        "closed_at": "2023-05-30T13:33:26Z",
        "merged_at": "2023-05-30T13:33:26Z",
        "body": "Addition of normalize_axis to ONNXImporter::parseSqueeze to prevent a bug when the attribute _axes_ contains negative values. Negative values are part of the ONNX standard: https://github.com/onnx/onnx/blob/main/docs/Changelog.md#Squeeze-11\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 257,
        "deletions": 125,
        "changed_files": 4,
        "created_at": "2023-05-29T13:14:51Z",
        "closed_at": "2023-05-30T14:41:41Z",
        "merged_at": "2023-05-30T14:41:41Z",
        "body": "Reverted named argument handling from #19156.\r\nPorted new solution from #23224\r\nThe port is required to harmonize 4.x -> 5.x merges.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-29T11:58:01Z",
        "closed_at": "2023-05-30T07:31:01Z",
        "merged_at": "2023-05-30T07:31:01Z",
        "body": "Added missing index for skipping branched subgraph simplification (such subgraphs are not valid for simplification)\r\n\r\nThis PR partially fixes issue reported here [#21634](https://github.com/opencv/opencv/issues/21634) \r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 71,
        "deletions": 10,
        "changed_files": 5,
        "created_at": "2023-05-29T08:54:40Z",
        "closed_at": "2023-06-22T12:09:53Z",
        "merged_at": "2023-06-22T12:09:53Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nrelated: https://github.com/opencv/opencv/issues/23546#issuecomment-1562894602\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 228,
        "deletions": 151,
        "changed_files": 7,
        "created_at": "2023-05-28T05:00:34Z",
        "closed_at": "2023-05-28T07:51:54Z",
        "merged_at": null,
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-27T19:41:43Z",
        "closed_at": "2023-05-29T08:02:59Z",
        "merged_at": "2023-05-29T08:02:59Z",
        "body": "Adding basic performance test that can be used before and after the #21959 changes etc. as per @asmorkalov's https://github.com/opencv/opencv/pull/21959#issuecomment-1565240926 comment.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [X] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-27T09:24:11Z",
        "closed_at": "2023-05-27T15:29:34Z",
        "merged_at": "2023-05-27T15:29:34Z",
        "body": "Fix error:\r\nUnboundLocalError: local variable 'typing_stub_files' referenced before assignment\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-05-26T15:56:25Z",
        "closed_at": "2023-05-27T06:42:56Z",
        "merged_at": "2023-05-27T06:42:56Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\n@asmorkalov, sorry for reopening. I tried to keep @captain-n3m0's initial commit.\r\n\r\nresolves https://github.com/opencv/opencv/issues/23585\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-26T11:57:02Z",
        "closed_at": "2023-05-26T17:47:13Z",
        "merged_at": "2023-05-26T17:47:13Z",
        "body": "Related PR: https://github.com/opencv/opencv/pull/23669\r\nIssue: https://github.com/opencv/opencv/issues/21006\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2023-05-26T10:41:43Z",
        "closed_at": "2023-05-26T15:56:21Z",
        "merged_at": "2023-05-26T15:56:21Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\n* Also, fixes `cv::norm` with `NORM_INF` and `CV_16F`\r\n\r\nresolves https://github.com/opencv/opencv/issues/23687\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 47,
        "deletions": 37,
        "changed_files": 2,
        "created_at": "2023-05-26T08:06:50Z",
        "closed_at": "2023-05-30T14:46:39Z",
        "merged_at": "2023-05-30T14:46:39Z",
        "body": "_rotatedRectangleIntersection() can be (statically) customized to use double instead of float for better accuracy\r\n\r\nthis is a proposal for experimentation around #23546\r\n\r\nfor better accuracy, _rotatedRectangleIntersection() could use double. It will still return cv::Point2f list for backward compatibility, but the inner computations are controlled by a typedef\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [X] There is a reference to the original bug report and related work\r\n- [x] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [x] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2292,
        "deletions": 7,
        "changed_files": 10,
        "created_at": "2023-05-26T07:58:30Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The patch proposes to improve int8 convolution 2D on the ARMv8 platform. And further optimization of X86 platform will be the next patch. It needs more time to rethink the pack data layout (PACK8 maybe) to fit the AVX/AVX2 or SSE instruction needs\r\n\r\nTest on Mac M1, \r\nResNet50_int8 takes from **33 ms -> 14 ms (2.3X)** .\r\nResNet50_int8 running by ONNXRuntime takes 16 ms.\r\n\r\n## Performance Test\r\nSince this patch only focuses on Conv2D on ARM, the Conv1D and Conv3D should be the same. And it will not affect other platform performance.\r\n\r\nTest with `./bin/opencv_perf_dnn '--gtest_filter=*Int8*' --gtest_output=xml:./perf/1-th.xml --perf_threads=1`.\r\n\r\n|Name of Test|4.x|patch|patch vs 4.x (x-factor)|\r\n|---|:-:|:-:|:-:|\r\n|conv1dInt8::Conv1D::(GFLOPS=0.000, K=[3], IN={1, 2, 19}, OCN=2, G=2, S=2, P=(1, 1), BIAS, OCV/CPU)|0.001|0.001|0.97|\r\n|conv1dInt8::Conv1D::(GFLOPS=0.000, K=[3], IN={1, 2, 25}, OCN=2, G=2, P=(2, 2), PM=SAME, OCV/CPU)|0.001|0.002|0.97|\r\n|conv1dInt8::Conv1D::(GFLOPS=0.000, K=[3], IN={1, 6, 10}, OCN=6, PM=VALID, BIAS, OCV/CPU)|0.001|0.001|1.03|\r\n|conv3dInt8::Conv3D::(GFLOPS=0.000, K=[1 x 1 x 1], IN={1, 4, 9, 10, 10}, OCN=4, S=[1 x 1 x 2], P=(1, 1) x (1, 1) x (1, 1), PM=VALID, OCV/CPU)|0.007|0.007|1.02|\r\n|conv3dInt8::Conv3D::(GFLOPS=0.000, K=[1 x 1 x 1], IN={1, 8, 1, 10, 10}, OCN=8, G=8, P=(1, 1) x (1, 1) x (1, 1), BIAS, OCV/CPU)|0.016|0.015|1.03|\r\n|conv3dInt8::Conv3D::(GFLOPS=0.000, K=[3 x 3 x 3], IN={1, 2, 19, 19, 19}, OCN=2, G=2, S=[2 x 2 x 2], P=(1, 1) x (1, 1) x (1, 1), BIAS, OCV/CPU)|0.043|0.043|1.00|\r\n|conv3dInt8::Conv3D::(GFLOPS=0.000, K=[3 x 4 x 2], IN={1, 4, 8, 10, 10}, OCN=4, G=4, S=[1 x 2 x 1], BIAS, OCV/CPU)|0.017|0.016|1.03|\r\n|conv3dInt8::Conv3D::(GFLOPS=0.001, K=[3 x 3 x 3], IN={1, 2, 25, 19, 19}, OCN=2, G=2, S=[1 x 2 x 2], P=(2, 2) x (2, 2) x (2, 2), PM=SAME, OCV/CPU)|0.108|0.109|1.00|\r\n|conv3dInt8::Conv3D::(GFLOPS=0.002, K=[3 x 1 x 4], IN={1, 14, 5, 10, 10}, OCN=14, PM=SAME, OCV/CPU)|0.072|0.070|1.03|\r\n|conv3dInt8::Conv3D::(GFLOPS=0.006, K=[5 x 5 x 5], IN={1, 4, 50, 19, 19}, OCN=4, S=[2 x 2 x 2], P=(1, 1) x (1, 1) x (1, 1), PM=VALID, OCV/CPU)|0.394|0.383|1.03|\r\n|conv3dInt8::Conv3D::(GFLOPS=0.027, K=[3 x 3 x 3], IN={1, 6, 10, 38, 50}, OCN=6, PM=VALID, BIAS, OCV/CPU)|1.656|1.649|1.00|\r\n|conv3dInt8::Conv3D::(GFLOPS=0.030, K=[5 x 5 x 5], IN={1, 6, 19, 19, 19}, OCN=6, G=2, OCV/CPU)|1.364|1.327|1.03|\r\n|conv3dInt8::Conv3D::(GFLOPS=0.045, K=[7 x 7 x 7], IN={1, 2, 38, 38, 38}, OCN=2, S=[1 x 2 x 1], OCV/CPU)|5.106|4.962|1.03|\r\n|conv3dInt8::Conv3D::(GFLOPS=0.053, K=[3 x 3 x 3], IN={1, 10, 98, 10, 10}, OCN=10, PM=SAME, OCV/CPU)|1.919|1.866|1.03|\r\n|conv3dInt8::Conv3D::(GFLOPS=0.071, K=[7 x 7 x 7], IN={1, 6, 15, 19, 19}, OCN=6, S=[2 x 1 x 1], P=(3, 3) x (3, 3) x (3, 3), PM=SAME, BIAS, OCV/CPU)|2.502|2.442|1.02|\r\n|conv3dInt8::Conv3D::(GFLOPS=0.093, K=[5 x 5 x 5], IN={1, 4, 40, 75, 75}, OCN=4, S=[2 x 2 x 2], OCV/CPU)|6.215|6.035|1.03|\r\n|conv3dInt8::Conv3D::(GFLOPS=0.116, K=[5 x 5 x 5], IN={1, 2, 21, 75, 100}, OCN=2, BIAS, OCV/CPU)|14.510|14.104|1.03|\r\n|conv3dInt8::Conv3D::(GFLOPS=1.267, K=[5 x 5 x 5], IN={1, 3, 75, 75, 100}, OCN=3, PM=SAME, BIAS, OCV/CPU)|110.184|107.006|1.03|\r\n|conv3dInt8::Conv3D::(GFLOPS=1.343, K=[3 x 3 x 3], IN={1, 11, 9, 150, 200}, OCN=11, PM=VALID, BIAS, OCV/CPU)|51.155|49.701|1.03|\r\n|convInt8::Conv::(GFLOPS=0.177, K=[1 x 1], IN={1, 512, 26, 26}, OCN=256, OCV/CPU)|1.855|0.514|3.61|\r\n|convInt8::Conv::(GFLOPS=0.177, K=[1 x 1], IN={1, 1024, 13, 13}, OCN=512, OCV/CPU)|1.830|0.489|3.74|\r\n|convInt8::Conv::(GFLOPS=0.178, K=[1 x 1], IN={1, 256, 52, 52}, OCN=128, OCV/CPU)|1.984|0.532|3.73|\r\n|convInt8::Conv::(GFLOPS=0.210, K=[1 x 1], IN={1, 576, 38, 50}, OCN=96, PM=SAME, BIAS, OCV/CPU)|2.251|0.606|3.72|\r\n|convInt8::Conv::(GFLOPS=0.231, K=[3 x 3], IN={1, 128, 56, 56}, OCN=32, P=[1 x 1], OCV/CPU)|3.115|0.907|3.44|\r\n|convInt8::Conv::(GFLOPS=0.231, K=[3 x 3], IN={1, 256, 14, 14}, OCN=256, P=[1 x 1], OCV/CPU)|2.372|0.661|3.59|\r\n|convInt8::Conv::(GFLOPS=0.280, K=[1 x 1], IN={1, 576, 38, 50}, OCN=128, PM=SAME, BIAS, OCV/CPU)|2.945|0.767|3.84|\r\n|convInt8::Conv::(GFLOPS=0.302, K=[3 x 3], IN={1, 64, 64, 64}, OCN=64, PM=SAME, OCV/CPU)|3.680|1.167|3.15|\r\n|convInt8::Conv::(GFLOPS=0.357, K=[1 x 1], IN={1, 64, 208, 208}, OCN=64, OCV/CPU)|5.340|1.783|2.99|\r\n|convInt8::Conv::(GFLOPS=0.420, K=[3 x 3], IN={1, 96, 38, 50}, OCN=128, PM=SAME, BIAS, OCV/CPU)|4.498|1.253|3.59|\r\n|convInt8::Conv::(GFLOPS=0.472, K=[3 x 3], IN={1, 128, 40, 40}, OCN=128, PM=SAME, OCV/CPU)|5.057|1.377|3.67|\r\n|convInt8::Conv::(GFLOPS=0.472, K=[3 x 3], IN={1, 256, 20, 20}, OCN=256, PM=SAME, OCV/CPU)|4.839|1.289|3.75|\r\n|convInt8::Conv::(GFLOPS=0.472, K=[3 x 3], IN={1, 512, 10, 10}, OCN=512, PM=SAME, OCV/CPU)|4.750|1.311|3.62|\r\n|convInt8::Conv::(GFLOPS=0.561, K=[3 x 3], IN={1, 128, 38, 50}, OCN=128, PM=SAME, BIAS, OCV/CPU)|5.993|1.597|3.75|\r\n|convInt8::Conv::(GFLOPS=0.624, K=[3 x 3], IN={1, 128, 46, 46}, OCN=128, P=[1 x 1], BIAS, OCV/CPU)|6.682|1.815|3.68|\r\n|convInt8::Conv::(GFLOPS=0.701, K=[3 x 3], IN={1, 128, 38, 50}, OCN=160, PM=SAME, BIAS, OCV/CPU)|7.368|1.983|3.72|\r\n|convInt8::Conv::(GFLOPS=0.798, K=[3 x 3], IN={1, 64, 104, 104}, OCN=64, P=[1 x 1], OCV/CPU)|9.386|2.586|3.63|\r\n|convInt8::Conv::(GFLOPS=0.798, K=[3 x 3], IN={1, 128, 52, 52}, OCN=128, P=[1 x 1], OCV/CPU)|8.522|2.269|3.76|\r\n|convInt8::Conv::(GFLOPS=0.798, K=[3 x 3], IN={1, 256, 26, 26}, OCN=256, P=[1 x 1], OCV/CPU)|8.161|2.199|3.71|\r\n|convInt8::Conv::(GFLOPS=0.798, K=[3 x 3], IN={1, 512, 13, 13}, OCN=512, P=[1 x 1], OCV/CPU)|8.044|2.169|3.71|\r\n|convInt8::Conv::(GFLOPS=0.830, K=[3 x 3], IN={1, 64, 75, 100}, OCN=96, PM=SAME, BIAS, OCV/CPU)|9.281|2.539|3.66|\r\n|convInt8::Conv::(GFLOPS=0.958, K=[3 x 3], IN={1, 192, 38, 38}, OCN=192, PM=SAME, OCV/CPU)|9.764|2.637|3.70|\r\n|convInt8::Conv::(GFLOPS=0.958, K=[3 x 3], IN={1, 384, 19, 19}, OCN=384, PM=SAME, OCV/CPU)|9.678|2.521|3.84|\r\n|convInt8::Conv::(GFLOPS=1.022, K=[3 x 3], IN={1, 576, 19, 19}, OCN=273, PM=SAME, BIAS, OCV/CPU)|10.506|2.830|3.71|\r\n|convInt8::Conv::(GFLOPS=1.112, K=[3 x 3], IN={1, 512, 10, 10}, OCN=1206, P=[1 x 1], BIAS, OCV/CPU)|11.009|2.979|3.70|\r\n|convInt8::Conv::(GFLOPS=1.181, K=[3 x 3], IN={1, 64, 160, 200}, OCN=128, S=[2 x 2], P=[1 x 1], BIAS, OCV/CPU)|12.861|4.473|2.88|\r\n|convInt8::Conv::(GFLOPS=1.182, K=[3 x 3], IN={1, 32, 320, 400}, OCN=64, S=[2 x 2], P=[1 x 1], BIAS, OCV/CPU)|14.615|6.187|2.36|\r\n|convInt8::Conv::(GFLOPS=1.195, K=[9 x 9], IN={1, 32, 240, 320}, OCN=3, P=[4 x 4], BIAS, OCV/CPU)|59.778|34.481|1.73|\r\n|convInt8::Conv::(GFLOPS=1.196, K=[3 x 3], IN={1, 384, 26, 26}, OCN=256, P=[1 x 1], OCV/CPU)|12.232|3.230|3.79|\r\n|convInt8::Conv::(GFLOPS=1.210, K=[3 x 3], IN={1, 32, 256, 256}, OCN=32, PM=SAME, OCV/CPU)|19.421|6.315|3.08|\r\n|convInt8::Conv::(GFLOPS=1.245, K=[3 x 3], IN={1, 64, 75, 75}, OCN=192, PM=SAME, BIAS, OCV/CPU)|13.154|3.534|3.72|\r\n|convInt8::Conv::(GFLOPS=1.245, K=[3 x 3], IN={1, 96, 75, 100}, OCN=96, PM=SAME, BIAS, OCV/CPU)|13.742|3.634|3.78|\r\n|convInt8::Conv::(GFLOPS=1.248, K=[3 x 3], IN={1, 256, 46, 46}, OCN=128, P=[1 x 1], BIAS, OCV/CPU)|13.355|3.483|3.83|\r\n|convInt8::Conv::(GFLOPS=1.258, K=[3 x 3], IN={1, 1280, 10, 10}, OCN=546, PM=SAME, BIAS, OCV/CPU)|12.636|3.457|3.65|\r\n|convInt8::Conv::(GFLOPS=1.261, K=[3 x 3], IN={1, 192, 38, 50}, OCN=192, PM=SAME, BIAS, OCV/CPU)|13.082|3.425|3.82|\r\n|convInt8::Conv::(GFLOPS=1.416, K=[3 x 3], IN={1, 128, 62, 82}, OCN=128, BIAS, OCV/CPU)|15.105|3.906|3.87|\r\n|convInt8::Conv::(GFLOPS=1.500, K=[3 x 3], IN={1, 128, 64, 84}, OCN=128, BIAS, OCV/CPU)|15.993|4.339|3.69|\r\n|convInt8::Conv::(GFLOPS=1.586, K=[3 x 3], IN={1, 128, 66, 86}, OCN=128, BIAS, OCV/CPU)|16.901|4.417|3.83|\r\n|convInt8::Conv::(GFLOPS=1.595, K=[3 x 3], IN={1, 256, 26, 26}, OCN=512, P=[1 x 1], OCV/CPU)|16.347|4.097|3.99|\r\n|convInt8::Conv::(GFLOPS=1.595, K=[3 x 3], IN={1, 256, 52, 52}, OCN=512, S=[2 x 2], P=[1 x 1], OCV/CPU)|15.933|4.444|3.59|\r\n|convInt8::Conv::(GFLOPS=1.595, K=[3 x 3], IN={1, 512, 13, 13}, OCN=1024, P=[1 x 1], OCV/CPU)|16.289|4.195|3.88|\r\n|convInt8::Conv::(GFLOPS=1.595, K=[3 x 3], IN={1, 512, 26, 26}, OCN=1024, S=[2 x 2], P=[1 x 1], OCV/CPU)|15.896|4.302|3.69|\r\n|convInt8::Conv::(GFLOPS=1.596, K=[3 x 3], IN={1, 64, 104, 104}, OCN=128, P=[1 x 1], OCV/CPU)|17.356|4.641|3.74|\r\n|convInt8::Conv::(GFLOPS=1.596, K=[3 x 3], IN={1, 64, 208, 208}, OCN=128, S=[2 x 2], P=[1 x 1], OCV/CPU)|17.384|6.031|2.88|\r\n|convInt8::Conv::(GFLOPS=1.596, K=[3 x 3], IN={1, 128, 52, 52}, OCN=256, P=[1 x 1], OCV/CPU)|16.858|4.230|3.98|\r\n|convInt8::Conv::(GFLOPS=1.596, K=[3 x 3], IN={1, 128, 104, 104}, OCN=256, S=[2 x 2], P=[1 x 1], OCV/CPU)|16.381|4.892|3.35|\r\n|convInt8::Conv::(GFLOPS=1.598, K=[3 x 3], IN={1, 32, 208, 208}, OCN=64, P=[1 x 1], OCV/CPU)|19.624|5.343|3.67|\r\n|convInt8::Conv::(GFLOPS=1.598, K=[3 x 3], IN={1, 32, 416, 416}, OCN=64, S=[2 x 2], P=[1 x 1], OCV/CPU)|19.713|8.014|2.46|\r\n|convInt8::Conv::(GFLOPS=1.659, K=[3 x 3], IN={1, 960, 10, 10}, OCN=960, PM=SAME, OCV/CPU)|16.439|4.400|3.74|\r\n|convInt8::Conv::(GFLOPS=1.660, K=[3 x 3], IN={1, 128, 75, 75}, OCN=128, G=128, P=[1 x 1], BIAS, OCV/CPU)|0.519|0.412|1.26|\r\n|convInt8::Conv::(GFLOPS=1.660, K=[3 x 3], IN={1, 128, 75, 75}, OCN=128, PM=SAME, OCV/CPU)|17.567|4.676|3.76|\r\n|convInt8::Conv::(GFLOPS=1.675, K=[3 x 3], IN={1, 128, 68, 88}, OCN=128, BIAS, OCV/CPU)|17.860|4.675|3.82|\r\n|convInt8::Conv::(GFLOPS=1.704, K=[3 x 3], IN={1, 256, 38, 38}, OCN=256, G=256, P=[1 x 1], BIAS, OCV/CPU)|0.307|0.288|1.06|\r\n|convInt8::Conv::(GFLOPS=1.704, K=[3 x 3], IN={1, 256, 38, 38}, OCN=256, PM=SAME, OCV/CPU)|17.413|4.522|3.85|\r\n|convInt8::Conv::(GFLOPS=1.704, K=[3 x 3], IN={1, 512, 19, 19}, OCN=512, G=512, P=[1 x 1], BIAS, OCV/CPU)|0.241|0.230|1.05|\r\n|convInt8::Conv::(GFLOPS=1.704, K=[3 x 3], IN={1, 512, 19, 19}, OCN=512, P=[1 x 1], BIAS, OCV/CPU)|17.097|4.478|3.82|\r\n|convInt8::Conv::(GFLOPS=1.704, K=[3 x 3], IN={1, 512, 19, 19}, OCN=512, PM=SAME, OCV/CPU)|17.101|4.464|3.83|\r\n|convInt8::Conv::(GFLOPS=1.766, K=[3 x 3], IN={1, 128, 70, 90}, OCN=128, BIAS, OCV/CPU)|18.959|4.885|3.88|\r\n|convInt8::Conv::(GFLOPS=1.859, K=[3 x 3], IN={1, 128, 72, 92}, OCN=128, BIAS, OCV/CPU)|19.818|5.186|3.82|\r\n|convInt8::Conv::(GFLOPS=1.888, K=[3 x 3], IN={1, 1024, 10, 10}, OCN=1024, G=1024, P=[1 x 1], BIAS, OCV/CPU)|0.623|0.375|1.66|\r\n|convInt8::Conv::(GFLOPS=1.888, K=[3 x 3], IN={1, 1024, 10, 10}, OCN=1024, PM=SAME, OCV/CPU)|18.726|5.036|3.72|\r\n|convInt8::Conv::(GFLOPS=1.954, K=[3 x 3], IN={1, 128, 74, 94}, OCN=128, BIAS, OCV/CPU)|20.831|5.410|3.85|\r\n|convInt8::Conv::(GFLOPS=1.995, K=[9 x 9], IN={1, 3, 320, 400}, OCN=32, P=[4 x 4], BIAS, OCV/CPU)|29.912|16.871|1.77|\r\n|convInt8::Conv::(GFLOPS=2.052, K=[3 x 3], IN={1, 128, 76, 96}, OCN=128, BIAS, OCV/CPU)|21.940|5.738|3.82|\r\n|convInt8::Conv::(GFLOPS=2.100, K=[3 x 3], IN={1, 144, 75, 75}, OCN=144, PM=SAME, OCV/CPU)|22.174|5.809|3.82|\r\n|convInt8::Conv::(GFLOPS=2.153, K=[3 x 3], IN={1, 128, 78, 98}, OCN=128, BIAS, OCV/CPU)|22.995|5.866|3.92|\r\n|convInt8::Conv::(GFLOPS=2.156, K=[3 x 3], IN={1, 576, 19, 19}, OCN=576, PM=SAME, OCV/CPU)|21.544|5.592|3.85|\r\n|convInt8::Conv::(GFLOPS=2.255, K=[3 x 3], IN={1, 128, 80, 100}, OCN=128, BIAS, OCV/CPU)|24.076|6.279|3.83|\r\n|convInt8::Conv::(GFLOPS=2.719, K=[3 x 3], IN={1, 96, 256, 256}, OCN=96, S=[2 x 2], PM=SAME, OCV/CPU)|32.037|13.747|2.33|\r\n|convInt8::Conv::(GFLOPS=3.319, K=[3 x 3], IN={1, 128, 75, 75}, OCN=256, P=[1 x 1], BIAS, OCV/CPU)|33.983|8.784|3.87|\r\n|convInt8::Conv::(GFLOPS=3.321, K=[3 x 3], IN={1, 64, 150, 150}, OCN=128, P=[1 x 1], BIAS, OCV/CPU)|36.112|9.664|3.74|\r\n|convInt8::Conv::(GFLOPS=3.398, K=[7 x 7], IN={1, 128, 46, 46}, OCN=128, P=[3 x 3], BIAS, OCV/CPU)|37.071|8.870|4.18|\r\n|convInt8::Conv::(GFLOPS=3.407, K=[3 x 3], IN={1, 512, 19, 19}, OCN=1024, D=[6 x 6], P=[6 x 6], BIAS, OCV/CPU)|33.777|8.733|3.87|\r\n|convInt8::Conv::(GFLOPS=3.408, K=[3 x 3], IN={1, 256, 38, 38}, OCN=512, P=[1 x 1], BIAS, OCV/CPU)|34.118|8.682|3.93|\r\n|convInt8::Conv::(GFLOPS=4.247, K=[3 x 3], IN={1, 480, 32, 32}, OCN=480, PM=SAME, OCV/CPU)|42.319|11.152|3.79|\r\n|convInt8::Conv::(GFLOPS=4.247, K=[5 x 5], IN={1, 144, 128, 128}, OCN=144, S=[2 x 2], PM=SAME, OCV/CPU)|46.412|17.075|2.72|\r\n|convInt8::Conv::(GFLOPS=4.566, K=[7 x 7], IN={1, 172, 46, 46}, OCN=128, P=[3 x 3], BIAS, OCV/CPU)|49.920|12.821|3.89|\r\n|convInt8::Conv::(GFLOPS=4.993, K=[3 x 3], IN={1, 256, 46, 46}, OCN=512, P=[1 x 1], BIAS, OCV/CPU)|49.940|12.645|3.95|\r\n|convInt8::Conv::(GFLOPS=4.993, K=[3 x 3], IN={1, 512, 46, 46}, OCN=256, P=[1 x 1], BIAS, OCV/CPU)|51.092|12.600|4.06|\r\n|convInt8::Conv::(GFLOPS=4.994, K=[3 x 3], IN={1, 128, 92, 92}, OCN=256, P=[1 x 1], BIAS, OCV/CPU)|51.197|12.895|3.97|\r\n|convInt8::Conv::(GFLOPS=4.997, K=[3 x 3], IN={1, 64, 184, 184}, OCN=128, P=[1 x 1], BIAS, OCV/CPU)|54.456|14.858|3.67|\r\n|convInt8::Conv::(GFLOPS=5.780, K=[5 x 5], IN={1, 672, 32, 32}, OCN=672, S=[2 x 2], PM=SAME, OCV/CPU)|57.474|16.081|3.57|\r\n|convInt8::Conv::(GFLOPS=6.116, K=[3 x 3], IN={1, 1152, 16, 16}, OCN=1152, PM=SAME, OCV/CPU)|60.098|15.982|3.76|\r\n|convInt8::Conv::(GFLOPS=6.118, K=[3 x 3], IN={1, 144, 128, 128}, OCN=144, PM=SAME, OCV/CPU)|67.054|19.418|3.45|\r\n|convInt8::Conv::(GFLOPS=6.637, K=[3 x 3], IN={1, 256, 75, 75}, OCN=256, P=[1 x 1], BIAS, OCV/CPU)|70.096|17.251|4.06|\r\n|convInt8::Conv::(GFLOPS=6.638, K=[3 x 3], IN={1, 128, 150, 150}, OCN=128, P=[1 x 1], BIAS, OCV/CPU)|71.063|19.003|3.74|\r\n|convInt8::Conv::(GFLOPS=6.641, K=[3 x 3], IN={1, 64, 150, 200}, OCN=192, PM=SAME, BIAS, OCV/CPU)|70.348|18.810|3.74|\r\n|convInt8::Conv::(GFLOPS=6.641, K=[3 x 3], IN={1, 64, 300, 300}, OCN=64, P=[1 x 1], BIAS, OCV/CPU)|78.107|22.628|3.45|\r\n|convInt8::Conv::(GFLOPS=6.814, K=[3 x 3], IN={1, 512, 38, 38}, OCN=512, P=[1 x 1], BIAS, OCV/CPU)|70.502|17.166|4.11|\r\n|convInt8::Conv::(GFLOPS=8.025, K=[3 x 3], IN={1, 1024, 19, 19}, OCN=1206, P=[1 x 1], BIAS, OCV/CPU)|79.460|20.257|3.92|\r\n|convInt8::Conv::(GFLOPS=9.986, K=[3 x 3], IN={1, 512, 46, 46}, OCN=512, P=[1 x 1], BIAS, OCV/CPU)|99.757|25.002|3.99|\r\n|convInt8::Conv::(GFLOPS=9.987, K=[3 x 3], IN={1, 256, 92, 92}, OCN=256, P=[1 x 1], BIAS, OCV/CPU)|105.271|26.138|4.03|\r\n|convInt8::Conv::(GFLOPS=9.989, K=[3 x 3], IN={1, 128, 184, 184}, OCN=128, P=[1 x 1], BIAS, OCV/CPU)|107.326|29.152|3.68|\r\n|convInt8::Conv::(GFLOPS=9.993, K=[3 x 3], IN={1, 64, 368, 368}, OCN=64, P=[1 x 1], BIAS, OCV/CPU)|117.673|34.496|3.41|\r\n|convInt8::Conv::(GFLOPS=10.087, K=[3 x 3], IN={1, 576, 38, 50}, OCN=512, PM=SAME, BIAS, OCV/CPU)|100.513|24.919|4.03|\r\n|convInt8::Conv::(GFLOPS=10.701, K=[3 x 3], IN={1, 512, 38, 38}, OCN=804, P=[1 x 1], BIAS, OCV/CPU)|105.973|26.492|4.00|\r\n|convInt8::Conv::(GFLOPS=11.797, K=[5 x 5], IN={1, 240, 64, 64}, OCN=240, PM=SAME, OCV/CPU)|121.791|33.743|3.61|\r\n|convInt8::Conv::(GFLOPS=11.797, K=[5 x 5], IN={1, 480, 32, 32}, OCN=480, PM=SAME, OCV/CPU)|117.839|31.109|3.79|\r\n|convInt8::Conv::(GFLOPS=16.987, K=[5 x 5], IN={1, 1152, 16, 16}, OCN=1152, PM=SAME, OCV/CPU)|192.331|44.622|4.31|\r\n|convInt8::Conv::(GFLOPS=23.122, K=[5 x 5], IN={1, 672, 32, 32}, OCN=672, PM=SAME, OCV/CPU)|242.516|59.674|4.06|\r\n\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 82,
        "deletions": 53,
        "changed_files": 1,
        "created_at": "2023-05-25T21:53:34Z",
        "closed_at": "2023-06-07T08:32:18Z",
        "merged_at": "2023-06-07T08:32:18Z",
        "body": "Preparation for the #21959 changes as per @asmorkalov's https://github.com/opencv/opencv/pull/21959#issuecomment-1560511500 suggestion.\r\n\r\n### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [X] I agree to contribute to the project under Apache 2 License.\r\n- [X] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [X] The PR is proposed to the proper branch\r\n- [ ] There is a reference to the original bug report and related work\r\n- [X] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-05-25T19:36:15Z",
        "closed_at": "2023-05-26T07:53:29Z",
        "merged_at": "2023-05-26T07:53:29Z",
        "body": "### Pull Request Readiness Checklist\r\n\r\nSee details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work  https://github.com/opencv/opencv/issues/23685\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-05-25T17:43:21Z",
        "closed_at": "2023-05-26T09:01:51Z",
        "merged_at": "2023-05-26T09:01:51Z",
        "body": "See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request\r\n\r\n- [x] I agree to contribute to the project under Apache 2 License.\r\n- [x] To the best of my knowledge, the proposed patch is not based on a code under GPL or another license that is incompatible with OpenCV\r\n- [x] The PR is proposed to the proper branch\r\n- [x] There is a reference to the original bug report and related work https://github.com/opencv/opencv/issues/23683\r\n- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable\r\n      Patch to opencv_extra has the same branch name.\r\n- [ ] The feature is well documented and sample code can be built with the project CMake\r\n",
        "comments": 0
    }
]