[
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-03T07:21:03Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-14T18:12:40Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 371,
        "deletions": 557,
        "changed_files": 1,
        "created_at": "2023-07-26T04:11:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "I add Azerbaijani language ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 371,
        "deletions": 557,
        "changed_files": 1,
        "created_at": "2023-07-25T19:14:16Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Done",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2023-07-13T13:54:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-01T18:48:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-11T15:25:36Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Readers can refer to the Chinese and English versions side by side for better understanding of the content.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 33,
        "deletions": 1,
        "changed_files": 6,
        "created_at": "2023-04-28T06:52:07Z",
        "closed_at": null,
        "merged_at": null,
        "body": "i change a typo in the license file where NONINFRINGEMENT  is supposed to be NON INFRINGEMENT or NON-INFRINGEMENT. i choose to change it  with NON-INFRINGEMENT with a hyphen",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-10T07:46:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The previous two versions of the Chinese translation were too old and not updated anymore. This is the latest Chinese version based on ChatGPT and manually corrected.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-12T16:32:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-02-26T06:27:43Z",
        "closed_at": "2023-02-26T06:48:09Z",
        "merged_at": null,
        "body": "fixed doc: missed `()` sign after on Functions should do one thing for isActiveClient function",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 174,
        "deletions": 80,
        "changed_files": 1,
        "created_at": "2023-02-18T09:22:54Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Add 2 New Topics to The Variables Section:\r\n1. Pick One Word Per Concept.\r\n2. Don\u2019t Pun.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-01T09:32:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-01-30T19:09:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Closes #387",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-01-30T18:37:40Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Update translation section to be consistent, and closes https://github.com/ryanmcdermott/clean-code-javascript/issues/389 (Aside: that's the flag of Uruguay, not Greece).",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2022-12-02T14:17:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 78,
        "deletions": 81,
        "changed_files": 2,
        "created_at": "2022-11-16T17:45:21Z",
        "closed_at": "2022-11-24T16:30:08Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-09T13:45:46Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Can I fork this repo",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 90,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-10-22T18:52:36Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-12T22:59:36Z",
        "closed_at": "2023-08-04T19:30:45Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-21T19:09:38Z",
        "closed_at": null,
        "merged_at": null,
        "body": "updated wrong url link in AVOID SIDE EFFECTS (part 2), changed it from https://facebook.github.io/immutable-js/ to https://github.com/immutable-js/immutable-js",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1126,
        "deletions": 1347,
        "changed_files": 1,
        "created_at": "2022-09-12T00:37:44Z",
        "closed_at": "2023-01-11T17:08:57Z",
        "merged_at": null,
        "body": "I made this translation because the Spanish spoken in Spain and Argentina/Uruguay has some not minor differences with the Spanish spoken in the rest of Latin America. Greetings!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 57,
        "deletions": 64,
        "changed_files": 1,
        "created_at": "2022-08-23T06:54:15Z",
        "closed_at": "2022-08-24T04:52:49Z",
        "merged_at": null,
        "body": "\u0627\u06cc\u0646 \u0627\u0632 \u062e\u0637 0 -195 \u0647\u0633\u062a .\u062e\u0648\u0634\u062d\u0627\u0644 \u0645\u06cc\u0634\u0645 \u062f\u0648\u0633\u062a\u0627\u0646 \u0631\u06cc\u0648\u06cc\u0648 \u06a9\u0646\u0646 \u0648 \u0646\u0638\u0631\u0627\u062a \u062e\u0648\u062f\u0634\u0648\u0646\u0648 \u0628\u0631\u0627\u0645 \u0628\u0641\u0631\u0633\u062a\u0646",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 138,
        "deletions": 139,
        "changed_files": 1,
        "created_at": "2022-08-21T13:23:24Z",
        "closed_at": "2022-08-21T13:23:57Z",
        "merged_at": null,
        "body": "Testing how pulling a request works",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 50,
        "changed_files": 1,
        "created_at": "2022-08-18T18:43:53Z",
        "closed_at": "2022-08-21T17:36:23Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-08-17T12:08:57Z",
        "closed_at": "2022-08-21T12:09:40Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-08-15T16:32:15Z",
        "closed_at": "2022-08-17T05:44:58Z",
        "merged_at": null,
        "body": "I have updated the broken link in the [Avoid Side Effects (part 2)] section for immutable-js",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-07-10T17:10:14Z",
        "closed_at": "2022-08-21T17:34:05Z",
        "merged_at": "2022-08-21T17:34:05Z",
        "body": "Closes #391 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 22,
        "changed_files": 1,
        "created_at": "2022-05-17T01:45:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The Moment library is deprecated in favor of Luxon.  Replace example based on moment with equivalent luxon code. [ref](https://momentjs.com/docs/#/-project-status/)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-05-07T02:21:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Above the example, we `setWidth(4)`. For `Square`, it should get 16.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-13T12:14:52Z",
        "closed_at": "2022-08-21T17:35:59Z",
        "merged_at": "2022-08-21T17:35:59Z",
        "body": "Replace broken link with up-to-date translation",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-02-20T19:37:03Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Hello.  This is a useful resource.\r\n\r\nWhen reading the section on the Interface Segregation Principle it occurred to me that the code section could give a stronger and clearer example.  The principle is \"Clients should not be forced to depend upon interfaces that they do not use.\"  Even knowing about the existence is a dependency, and it can be avoided in this case.  There is no reason for the client code to even know that animationModule exists or that DOMTraverser cares about it.\r\n\r\n(This sort of thing happens frequently in practice; e.g. if animationModule is added to a new version of DOMTraverser, old client code will not know about it, and making it optional in this way avoids having to update those calls.)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 149,
        "deletions": 152,
        "changed_files": 1,
        "created_at": "2022-02-18T11:11:26Z",
        "closed_at": "2022-02-18T11:12:07Z",
        "merged_at": null,
        "body": "Table of contents translation and fixing the links inside the document.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-09T19:21:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "link on Anki flashcards added",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-02-05T14:01:55Z",
        "closed_at": "2022-02-05T14:19:17Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-31T07:40:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-22T21:51:51Z",
        "closed_at": "2022-04-13T11:56:40Z",
        "merged_at": null,
        "body": "Following our conversation here: https://github.com/ryanmcdermott/clean-code-javascript/issues/367",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-06T02:05:53Z",
        "closed_at": null,
        "merged_at": null,
        "body": "\u2026or same vocabulary for same type of variable",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 125,
        "deletions": 80,
        "changed_files": 1,
        "created_at": "2021-10-05T16:56:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Use same type of casing style for same type of data in all the project",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2021-10-03T07:28:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Added ternary (conditional) operator which is an alternative form of the if/else statement that helps you to write conditional code blocks in a more concise way.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-08-19T12:13:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "i have modified/add one file\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-23T17:31:38Z",
        "closed_at": "2023-02-11T17:28:24Z",
        "merged_at": "2023-02-11T17:28:24Z",
        "body": "I've added a Persian translation to the list. It can help people who are speaking Persian or Farsi from all around the world to write cleaner code in Javascript.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-07-21T16:23:58Z",
        "closed_at": "2021-11-13T09:24:46Z",
        "merged_at": null,
        "body": "- Added Romanian translation to the list.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-07-09T02:15:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "I found this repository and translated it to study for myself.\r\nThere's already a Korean translation, but it's a little different from mine.\r\n\r\nI hope my contribution will be added. thanks :)",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-29T23:39:17Z",
        "closed_at": "2021-06-30T13:55:39Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-11T03:45:22Z",
        "closed_at": null,
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-08T04:53:20Z",
        "closed_at": "2021-05-23T18:13:02Z",
        "merged_at": null,
        "body": "For the sake of simplicity and make the example more readable",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 43,
        "changed_files": 1,
        "created_at": "2021-04-28T03:53:59Z",
        "closed_at": "2021-05-23T18:34:36Z",
        "merged_at": null,
        "body": "replace `avoid conditionals` with a more explicit & simple example  based on\r\nhttps://refactoring.com/catalog/replaceNestedConditionalWithGuardClauses.html",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 21,
        "changed_files": 1,
        "created_at": "2021-04-24T04:35:22Z",
        "closed_at": "2021-05-23T18:09:12Z",
        "merged_at": null,
        "body": "making `Favor functional programming over imperative programming` example more cleaner to understand and focus by separating the data and examples.\r\n\r\n![image](https://user-images.githubusercontent.com/59599950/115947608-12339f00-a4de-11eb-99af-3a34de8ce66a.png)\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2021-04-15T09:04:58Z",
        "closed_at": null,
        "merged_at": null,
        "body": "- Edit function call\r\n- Improve table html design\r\n- ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2021-04-11T02:24:57Z",
        "closed_at": null,
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 42,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2021-03-30T09:36:08Z",
        "closed_at": "2021-05-23T17:52:04Z",
        "merged_at": null,
        "body": "Change `arguments` to `parameters` \r\nadd `default parameter` vs `default value using ||` example in a open/closeable snippet",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-03-29T12:38:47Z",
        "closed_at": "2021-05-23T17:52:52Z",
        "merged_at": "2021-05-23T17:52:52Z",
        "body": "\"PER\" has the same meaning as \"IN_A\" but is less verbose",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2021-03-14T19:46:55Z",
        "closed_at": "2021-05-23T18:23:47Z",
        "merged_at": null,
        "body": "Grouping methods and their properties together",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-26T06:58:10Z",
        "closed_at": "2021-05-23T18:48:55Z",
        "merged_at": null,
        "body": "there are lots of example that let have cleaner and simpler code with new versions of JavaScript we can add them in this section.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-06T03:20:09Z",
        "closed_at": "2021-05-23T18:04:41Z",
        "merged_at": null,
        "body": "Hay there,\r\n\r\nI have just added \"Use let/const instead of var\" under the category \"Variables\". Let me know your thoughts on that.\r\n\r\nThanks,",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1448,
        "deletions": 1216,
        "changed_files": 1,
        "created_at": "2020-12-14T22:44:14Z",
        "closed_at": "2020-12-14T22:46:56Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-07T14:20:52Z",
        "closed_at": "2020-12-07T14:24:21Z",
        "merged_at": null,
        "body": "Hello, I wanna contribute your amazing clean-code-javascript repo for Burmese version. I'll translate them into my language for developers in my countries.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-18T11:42:06Z",
        "closed_at": "2020-10-18T16:37:36Z",
        "merged_at": null,
        "body": "This will find max of 123",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-10T16:08:01Z",
        "closed_at": "2021-01-21T03:27:40Z",
        "merged_at": "2021-01-21T03:27:40Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-10-08T03:17:17Z",
        "closed_at": "2020-10-08T03:23:25Z",
        "merged_at": "2020-10-08T03:23:25Z",
        "body": "Fix a typo related to issue #321 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2020-10-05T04:04:24Z",
        "closed_at": "2020-10-06T22:18:18Z",
        "merged_at": "2020-10-06T22:18:18Z",
        "body": "For issue #321 \r\n\r\nThis edit only affects the Avoid Side Effects (part 2) section.\r\nIt replaces the discussion of pass by reference with an explanation in terms of mutability. \r\nBy avoiding the confusing terminology and possible links to the implementation details of \r\ndifferent JS engines the explanation can be kept at an abstraction level that's great for \r\nbeginners and experts alike. I also cleaned up some grammar, typos, etc.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-03T15:25:12Z",
        "closed_at": "2020-10-03T17:38:50Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-09-06T12:26:21Z",
        "closed_at": "2020-10-07T18:41:04Z",
        "merged_at": "2020-10-07T18:41:04Z",
        "body": "Hey,\r\n\r\nI think it's a bit more clear like that. WDYT?\r\nAlso there was a little typo because `86_400_000` is not a number.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-08-13T09:19:56Z",
        "closed_at": "2020-10-07T20:09:10Z",
        "merged_at": null,
        "body": "Unfortunately I realized after I finished reading everything that there was a translated version.\r\nTo cut down on the number of unhappy people,I add a message under the TOC letting people know that a translated version has been created.\r\n\r\nOr maybe I should make it more prominent?\r\n\r\nclose #271",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-04-16T13:59:34Z",
        "closed_at": "2020-04-17T03:39:55Z",
        "merged_at": "2020-04-17T03:39:55Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-04-01T15:47:31Z",
        "closed_at": "2020-05-03T01:47:08Z",
        "merged_at": "2020-05-03T01:47:08Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-03-29T05:04:35Z",
        "closed_at": "2020-03-31T17:19:01Z",
        "merged_at": "2020-03-31T17:19:01Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 355,
        "deletions": 546,
        "changed_files": 1,
        "created_at": "2020-03-26T05:44:02Z",
        "closed_at": "2020-03-29T04:53:44Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-02-07T03:44:33Z",
        "closed_at": "2020-02-12T04:01:47Z",
        "merged_at": "2020-02-12T04:01:47Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2020-01-22T00:23:18Z",
        "closed_at": "2020-01-22T16:38:36Z",
        "merged_at": "2020-01-22T16:38:36Z",
        "body": "- sort translations\r\n- add Armenian to the list, closes #241",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-21T21:20:39Z",
        "closed_at": "2020-02-07T04:08:06Z",
        "merged_at": "2020-02-07T04:08:06Z",
        "body": "Small grammar correction",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-21T21:17:23Z",
        "closed_at": "2020-01-21T21:25:08Z",
        "merged_at": "2020-01-21T21:25:07Z",
        "body": "Small grammar correction.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-01-21T08:29:03Z",
        "closed_at": "2020-07-31T03:09:46Z",
        "merged_at": "2020-07-31T03:09:46Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-01-19T19:29:00Z",
        "closed_at": "2020-02-07T04:08:52Z",
        "merged_at": null,
        "body": "I added this sample:\r\n\r\n**Bad:**\r\n```javascript\r\nconst name = user && user.profile && user.profile.name;\r\n```\r\n**Good:**\r\n```javascript\r\nconst name = user?.profile?.name;\r\n```",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-18T13:44:42Z",
        "closed_at": "2020-01-19T05:11:00Z",
        "merged_at": "2020-01-19T05:11:00Z",
        "body": "`const MILLISECONDS_IN_A_DAY = 86_400_000;`\r\n\r\nWe can use numeric separator with \r\nhttps://babeljs.io/docs/en/babel-plugin-proposal-numeric-separator",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-01-10T13:06:53Z",
        "closed_at": "2020-01-20T22:47:56Z",
        "merged_at": "2020-01-20T22:47:56Z",
        "body": "I added one advantage and one bad example in function parameters.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-01-10T10:58:31Z",
        "closed_at": "2020-01-10T12:53:02Z",
        "merged_at": null,
        "body": "I added the advantage of named parameters and the related example.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-01-01T07:09:48Z",
        "closed_at": "2020-01-02T17:47:10Z",
        "merged_at": "2020-01-02T17:47:10Z",
        "body": "My ongoing work is on develop branch.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 208,
        "deletions": 263,
        "changed_files": 2,
        "created_at": "2020-01-01T05:33:01Z",
        "closed_at": "2020-01-01T07:02:34Z",
        "merged_at": null,
        "body": "I am translatting this repository to Bengali. My current work is being updated in the develop branch.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-11-22T13:48:42Z",
        "closed_at": "2021-05-23T18:06:37Z",
        "merged_at": null,
        "body": "Added a quick guideline & example about how you could substitute `let` with `const`, for the sake of readability, maintenance and overall cleaner code.\r\n\r\nWe could also export \"Functional programming\" to a section of its own, but maybe it's out of scope for this PR.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-11-21T19:41:00Z",
        "closed_at": "2019-11-22T04:46:38Z",
        "merged_at": "2019-11-22T04:46:38Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-11-18T13:08:20Z",
        "closed_at": "2019-11-18T16:00:03Z",
        "merged_at": "2019-11-18T16:00:03Z",
        "body": "Added traditional chinese  finally. \ud83c\udf89\ud83c\udf89\ud83c\udf89",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-11-05T23:34:27Z",
        "closed_at": "2020-10-07T20:24:29Z",
        "merged_at": null,
        "body": "saveCityZipCode(\r\n  address.match(cityZipCodeRegex)[1],\r\n  address.match(cityZipCodeRegex)[2]\r\n);\r\nThis is not just bad, and may be error. It is necessay to judge existence before use. Because we are compare good code with bad code, not error code.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-10-31T13:19:01Z",
        "closed_at": "2020-10-07T20:13:02Z",
        "merged_at": null,
        "body": "Better understanding definition for a car",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2019-10-25T14:11:09Z",
        "closed_at": "2019-10-29T15:34:12Z",
        "merged_at": "2019-10-29T15:34:12Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 79,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-10-03T04:23:27Z",
        "closed_at": "2020-10-07T20:15:21Z",
        "merged_at": null,
        "body": "-Ternary if-else operation",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 528,
        "deletions": 531,
        "changed_files": 1,
        "created_at": "2019-10-01T12:24:08Z",
        "closed_at": "2019-10-01T13:43:43Z",
        "merged_at": null,
        "body": "I have started to translate into Turkish and %60 is done for now. I am creating this PR in order to make it visible to prevent duplicate translation.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-08-21T13:11:48Z",
        "closed_at": "2019-08-23T16:49:10Z",
        "merged_at": "2019-08-23T16:49:10Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2019-08-08T22:24:48Z",
        "closed_at": "2019-08-08T22:55:57Z",
        "merged_at": "2019-08-08T22:55:57Z",
        "body": "Hello Ryan,\r\n\r\nThank for your guide. Enjoying reading it.\r\n\r\nI have noticed that http links on this guide are https compatible so I updated all of them to htttps.\r\n\r\n- https://www.osnews.com/images/comics/wtfm.jpg\r\n- https://gotwarlost.github.io/istanbul/\r\n- https://jstherightway.org/#testing-tools\r\n- https://standardjs.com/rules.html\r\n\r\nCheers \ud83d\udcaa",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-08-05T15:57:46Z",
        "closed_at": "2019-08-05T16:14:27Z",
        "merged_at": "2019-08-05T16:14:27Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2019-07-23T11:21:11Z",
        "closed_at": "2019-07-23T15:29:00Z",
        "merged_at": "2019-07-23T15:29:00Z",
        "body": "This distracted me from the code at hand, so I suggest changing the text to be more neutral.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-03-24T18:25:10Z",
        "closed_at": "2019-03-24T23:32:28Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2019-03-24T14:02:18Z",
        "closed_at": "2019-03-24T21:13:45Z",
        "merged_at": "2019-03-24T21:13:45Z",
        "body": "Hey Ryan, \r\n\r\nThis guide really helped (and still does) me become a better engineer. \r\n\r\nI translated it in French in a separate repo. I simply included a link to my French repo in the Translation section of the guide in this PR.\r\n\r\nIf you find it useful, do not hesitate to merge :)\r\n\r\nAll the best and thanks for your guides!",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-03-08T17:14:01Z",
        "closed_at": "2019-03-25T11:04:38Z",
        "merged_at": null,
        "body": "Hi, first thanks for this excelent project.\r\n\r\nThink that just as it is redundant to use the variables of the bad part above it is redundant that you use a paintCar function for an object that can hold the function internally.\r\n\r\nSo is better say to put all in a class and the method paint is from Car object.\r\n\r\nThanks.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2019-02-02T10:04:59Z",
        "closed_at": "2019-02-05T16:14:21Z",
        "merged_at": "2019-02-05T16:14:20Z",
        "body": "Added Spanish translation finally! :tada: ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2019-01-23T18:15:30Z",
        "closed_at": "2019-02-02T10:20:54Z",
        "merged_at": null,
        "body": "Added Spanish translations!\r\n\r\nSorry for the git history hahah I had some issues xD",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1438,
        "deletions": 1213,
        "changed_files": 1,
        "created_at": "2019-01-23T18:05:50Z",
        "closed_at": "2019-01-23T18:07:01Z",
        "merged_at": null,
        "body": "Add Spanish (Spain) translation",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2019-01-21T17:32:05Z",
        "closed_at": "2019-01-24T02:54:45Z",
        "merged_at": "2019-01-24T02:54:45Z",
        "body": "Unnecessary Array.prototype.map method.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2019-01-15T04:14:33Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Hello! Love this repo - incredibly useful, and I've bookmarked it for future reference.\r\n\r\nI'd like to suggest a change to the writeup on the Liskov Substitution Principle. The text right now indicates that instances of a parent and child class can be used interchangeably. This is incorrect - the _parent_ can be replaced by the _child_, but _not the other way around._ I've updated the wording and added a small illustrative example.\r\n\r\nThanks for maintaining this!",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-11-09T18:28:09Z",
        "closed_at": "2019-01-24T02:55:23Z",
        "merged_at": null,
        "body": "This is how i remove commas",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2018-10-13T12:10:32Z",
        "closed_at": "2018-10-15T21:07:18Z",
        "merged_at": "2018-10-15T21:07:18Z",
        "body": "Hi, i've added the link for the italian translation of your guide. \r\nThanks,\r\nFrancesco",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-09-23T03:53:07Z",
        "closed_at": "2019-01-24T03:00:44Z",
        "merged_at": null,
        "body": "",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2018-07-08T07:42:16Z",
        "closed_at": "2019-01-24T02:58:56Z",
        "merged_at": "2019-01-24T02:58:56Z",
        "body": "Enjoyed reading this article! Some slight suggestions: \r\n\r\n- rename ast variable to be more explicit (see, Avoid Mental Mapping)\r\n- rename function lexer to include a verb in it's name (see,\r\n  https://herbertograca.com/2016/09/03/clean-code-3-functions-by-robert-c-martin-uncle-bob/)\r\n- from my understanding, the term lexer is usally used for the\r\n  process of building a stream of tokens. So lexer and tokenize are\r\n  different names for the same thing",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-06-24T13:10:23Z",
        "closed_at": "2019-01-24T02:56:11Z",
        "merged_at": "2019-01-24T02:56:11Z",
        "body": "there are `nodeAdapter`,  no `httpNodeAdapter`",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-03-05T06:12:12Z",
        "closed_at": "2018-03-09T02:33:40Z",
        "merged_at": null,
        "body": "Typo fix from 'Make objects have private members' to 'Make objects to have private members(encapsulation)'",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2018-02-23T11:40:24Z",
        "closed_at": "2018-03-04T21:48:31Z",
        "merged_at": "2018-03-04T21:48:31Z",
        "body": "Like said in https://github.com/ryanmcdermott/clean-code-javascript#function-callers-and-callees-should-be-close, the code is read from top to bottom, so I'd prefer the definition of the *function parseBetterJSAlternative* above the functions called within.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2018-01-15T11:06:52Z",
        "closed_at": "2018-01-20T17:19:05Z",
        "merged_at": "2018-01-20T17:19:05Z",
        "body": "\u2026iting or conditionals\".\r\n\r\nDid not adhere to \"Don't add unneeded context\".",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-11-21T07:00:17Z",
        "closed_at": "2017-11-22T16:44:53Z",
        "merged_at": "2017-11-22T16:44:53Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-11-05T19:19:41Z",
        "closed_at": "2017-11-12T19:50:33Z",
        "merged_at": "2017-11-12T19:50:33Z",
        "body": "It doesn't need to be a global constant. JavaScript constants are block-scoped.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-10-16T15:02:56Z",
        "closed_at": "2017-10-16T15:19:37Z",
        "merged_at": "2017-10-16T15:19:37Z",
        "body": "fixed a typo",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-09-19T16:13:34Z",
        "closed_at": "2017-09-19T16:24:23Z",
        "merged_at": "2017-09-19T16:24:23Z",
        "body": "There's -> There are",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-09-02T23:48:02Z",
        "closed_at": "2017-09-06T03:16:41Z",
        "merged_at": "2017-09-06T03:16:41Z",
        "body": "There is a difference between the bad example and the good in the \"Favor functional programming over imperative programming\" section. The good one (functional) acts like two **for**s: the first with the creation of the new array and the second with the summing.\r\nBut you could use a object destructuring, which you recommend in the previous section, instead of using map method.\r\nAlso the use of INITIAL_VALUE makes sense now :)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-07-30T10:25:34Z",
        "closed_at": "2017-08-03T23:03:04Z",
        "merged_at": "2017-08-03T23:03:04Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-07-29T17:47:16Z",
        "closed_at": "2017-08-03T23:02:13Z",
        "merged_at": "2017-08-03T23:02:13Z",
        "body": "array is not javascript primitive..",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-07-19T20:47:49Z",
        "closed_at": "2017-07-19T20:59:54Z",
        "merged_at": "2017-07-19T20:59:54Z",
        "body": "Remove space before colon in object.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-14T20:37:13Z",
        "closed_at": "2020-10-07T20:18:15Z",
        "merged_at": null,
        "body": "",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-07-13T19:18:57Z",
        "closed_at": "2017-07-16T21:14:00Z",
        "merged_at": null,
        "body": "My translation",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2017-07-05T09:35:04Z",
        "closed_at": "2017-07-12T14:43:23Z",
        "merged_at": "2017-07-12T14:43:23Z",
        "body": "The proposed \"good\" way of coding was actually changing a property's name in the developers object.\r\n\r\nWhile one can argue that in this case they could be the same, the point of the example was to show that you can still remove duplicated code that require *different* things.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-06-14T16:23:39Z",
        "closed_at": "2019-02-11T01:08:29Z",
        "merged_at": null,
        "body": "Fixed the example to show usage of typescript. Also that same example works if you want to promote the usage of Flow",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2017-06-02T16:32:15Z",
        "closed_at": "2017-06-09T21:19:42Z",
        "merged_at": "2017-06-09T21:19:42Z",
        "body": "Capital letters in const, remove default data in class Car",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-28T21:31:24Z",
        "closed_at": "2017-06-02T04:47:17Z",
        "merged_at": "2017-06-02T04:47:17Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 623,
        "deletions": 584,
        "changed_files": 1,
        "created_at": "2017-05-28T20:27:48Z",
        "closed_at": "2017-05-28T21:27:16Z",
        "merged_at": null,
        "body": "I translated clean-code-javascript in Indonesian Language \ud83c\udf89\r\nthank you",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-05-15T22:19:03Z",
        "closed_at": "2017-05-15T23:43:40Z",
        "merged_at": "2017-05-15T23:43:40Z",
        "body": "I have just completed the Polish translation, please add my link to the list.\r\n\r\n- Related:\r\n\r\n    Want to translate to Arabic, Japanese, French, etc.? #148\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-05-06T10:58:53Z",
        "closed_at": "2017-05-11T04:14:01Z",
        "merged_at": "2017-05-11T04:14:01Z",
        "body": "The example for removing the duplicate code would not work because the getGithubLink() is not a function of the manager object, which would cause an error.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-05-02T19:37:53Z",
        "closed_at": "2017-05-04T16:04:45Z",
        "merged_at": "2017-05-04T16:04:45Z",
        "body": "...you will find that those **case**... -> ..you will find that those **cases**...",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2017-04-29T16:28:39Z",
        "closed_at": "2017-04-30T22:20:29Z",
        "merged_at": null,
        "body": "",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-04-28T21:46:55Z",
        "closed_at": "2021-05-23T18:50:49Z",
        "merged_at": null,
        "body": "I fixed package names in good code sample in \"Use Promises, not callbacks\" section. ",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-27T23:22:27Z",
        "closed_at": "2017-04-28T02:43:52Z",
        "merged_at": "2017-04-28T02:43:51Z",
        "body": "Thanks for creating an interesting to see a document. I translated it into Japanese. \r\nPlease add my translation stuff to the translation list.\r\n\r\nRelated:\r\n\r\n- Want to translate to Arabic, Japanese, French, etc.? #148",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-04-27T22:44:52Z",
        "closed_at": "2021-05-23T18:53:23Z",
        "merged_at": null,
        "body": "Was reading through the README and spotted the function name in \"Don't add unneeded context\" breaks the rule \"Function names should say what they do\". Want to throw a quick PR up for you!\r\n\r\nThanks!",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-04-25T17:41:04Z",
        "closed_at": "2017-04-25T18:25:36Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-04-25T13:53:09Z",
        "closed_at": "2017-04-25T16:28:15Z",
        "merged_at": "2017-04-25T16:28:15Z",
        "body": "In the Bad section, shouldn't it be config.cancellable !== undefined?",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-04-20T17:14:57Z",
        "closed_at": "2017-05-11T16:23:24Z",
        "merged_at": "2017-05-11T16:23:24Z",
        "body": "updating function name per #200 thanks to @marzelin to clean up some issues",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-04-20T00:27:26Z",
        "closed_at": "2021-05-24T15:52:20Z",
        "merged_at": null,
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-04-02T13:06:57Z",
        "closed_at": "2017-04-02T16:48:15Z",
        "merged_at": "2017-04-02T16:48:15Z",
        "body": "Remove extra space",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-02-16T15:47:15Z",
        "closed_at": "2017-02-17T05:38:24Z",
        "merged_at": "2017-02-17T05:38:24Z",
        "body": "currently translating it all to spanish.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-16T11:22:26Z",
        "closed_at": "2017-02-17T05:41:12Z",
        "merged_at": "2017-02-17T05:41:12Z",
        "body": "Fixed a mismatch between bad & good example that cause a distraction. That's in `Function callers and callees should be close` section.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-15T10:05:05Z",
        "closed_at": "2017-02-15T16:39:23Z",
        "merged_at": "2017-02-15T16:39:23Z",
        "body": "Like their site title,\r\nAngularJS not Angular.js\r\n\r\nReference: https://angularjs.org/",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 533,
        "deletions": 393,
        "changed_files": 1,
        "created_at": "2017-02-15T05:49:38Z",
        "closed_at": "2017-02-23T05:02:09Z",
        "merged_at": null,
        "body": "add chinese translation link to my repository.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2340,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2017-02-13T03:52:02Z",
        "closed_at": "2017-02-13T16:48:21Z",
        "merged_at": null,
        "body": "translate to chinese.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 22,
        "changed_files": 1,
        "created_at": "2017-02-10T09:07:15Z",
        "closed_at": "2017-02-11T01:31:20Z",
        "merged_at": "2017-02-11T01:31:20Z",
        "body": "\r\nfixed code style.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2017-02-09T09:56:20Z",
        "closed_at": "2017-02-10T16:43:27Z",
        "merged_at": "2017-02-10T16:43:27Z",
        "body": "Fixes #190 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-02-07T20:56:52Z",
        "closed_at": "2017-02-11T01:33:08Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 93,
        "deletions": 46,
        "changed_files": 1,
        "created_at": "2017-02-04T13:50:19Z",
        "closed_at": "2018-09-25T16:03:27Z",
        "merged_at": null,
        "body": "I have tried to learn more about ISP, and think the main idea is about avoiding \"fat\" interfaces when composing objects. I don't think the DOMParser example shows that. Let me know if I am misunderstanding the current DOMParser example, or have got the ideas of the Interface Segregation Principle wrong. I would very much appreciate it!\r\n\r\nFor this Repo, I have coded the examples using classes, because the other SOLID examples use that style of coding.\r\n\r\n\r\nNote:\r\nI prefer a more straight forward functions approach and have tried to accomplish that in this example (in my \"func remix\" fork): https://github.com/DavidVujic/clean-code-javascript/blob/master/examples/interface-segregation-principle-GOOD.js",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-02-04T09:30:35Z",
        "closed_at": "2017-02-05T20:35:27Z",
        "merged_at": "2017-02-05T20:35:27Z",
        "body": "Fixes some typo and logic issues",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-04T09:15:50Z",
        "closed_at": "2017-02-05T21:21:38Z",
        "merged_at": "2017-02-05T21:21:38Z",
        "body": "Hello! I added second translation to Russian. It was my promise [here](https://github.com/ryanmcdermott/clean-code-javascript/issues/148#issuecomment-274264014). It is relevant for today.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-02-04T05:51:46Z",
        "closed_at": "2017-02-05T20:37:54Z",
        "merged_at": "2017-02-05T20:37:54Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 33,
        "changed_files": 1,
        "created_at": "2017-02-01T08:19:46Z",
        "closed_at": "2017-02-02T05:23:53Z",
        "merged_at": "2017-02-02T05:23:52Z",
        "body": "The \"Use getters and setters\" section describes that it is hard to enforce the pattern, because JavaScript don't have the public and private keywords. I think this is actually an issue with JavaScript classes. With functions, properties can easily be private.\r\n\r\nDescribed in https://github.com/ryanmcdermott/clean-code-javascript/issues/180",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 28,
        "changed_files": 1,
        "created_at": "2017-01-30T12:19:29Z",
        "closed_at": "2017-01-30T15:38:17Z",
        "merged_at": "2017-01-30T15:38:17Z",
        "body": "The good example of the Liskov Substitution principle in the SOLID section is doing a switch case to set the width/height/length of the shapes. I think they should accept parameters on instantiation. Lot's of code can be deleted: the switch clause and all setters for width/height/length. Less code!",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 18,
        "changed_files": 1,
        "created_at": "2017-01-26T18:17:36Z",
        "closed_at": "2017-02-01T08:20:19Z",
        "merged_at": null,
        "body": "I think the SRP pattern can be applied to JavaScript functions and modules, with benefits:\r\n* less code\r\n* no need for state\r\n* testable code\r\n\r\nI think the code in this Pull Request has simplified the example code, also removed the duplication of the \"user\" property (both set in the UserSettings and UserAuth classes in the main branch).\r\n\r\nThis PR plays well with the \"SOLID\" PR: https://github.com/ryanmcdermott/clean-code-javascript/pull/178",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2017-01-26T14:51:46Z",
        "closed_at": "2017-02-01T08:20:30Z",
        "merged_at": null,
        "body": "The section is describing SOLID patterns, and not JavaScript classes. In this Pull Request, the chapter is renamed, and classes are also described in a separate section.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-26T13:04:45Z",
        "closed_at": "2017-01-28T02:05:14Z",
        "merged_at": "2017-01-28T02:05:14Z",
        "body": "As mentioned in #175, `showEmployeesList()` now [says what it does](https://github.com/AnnaNee/clean-code-javascript#function-names-should-say-what-they-do).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-26T12:26:30Z",
        "closed_at": "2017-01-27T04:19:43Z",
        "merged_at": "2017-01-27T04:19:43Z",
        "body": "The assertion should be same as others.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2017-01-24T13:15:39Z",
        "closed_at": "2017-01-27T04:36:16Z",
        "merged_at": null,
        "body": "Functions returning objects instead of classes may simplify composition, syntax and reuse.\r\n\r\nAlso, by using maker functions, the `this` keyword can be avoided when referencing to varables within the scope (closure).",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2017-01-24T12:15:52Z",
        "closed_at": "2017-01-25T05:20:16Z",
        "merged_at": "2017-01-25T05:20:16Z",
        "body": "Function constructors should be avoided. Using the `this` keyword will increase the risk for bugs. An example: if not using the `new` keyword when creating an instance of the Employee object, `this` will be bound to the global object, and not to the Employee instance.\r\n\r\nUse a maker function instead, returning an object, using variables existing in the scope of the function (closure).",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-23T20:54:30Z",
        "closed_at": "2017-01-24T03:46:15Z",
        "merged_at": "2017-01-24T03:46:15Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-23T18:14:17Z",
        "closed_at": "2017-01-24T03:51:15Z",
        "merged_at": "2017-01-24T03:51:15Z",
        "body": "**Pedal** is the act of using bicycle pedals. *Peddle* means to travel around selling something. I think you meant the former.\r\n\r\nBTW, thanks for the great guide!",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2017-01-23T12:10:47Z",
        "closed_at": "2017-01-24T03:49:57Z",
        "merged_at": null,
        "body": "Curcly brackets and return statements not needed when using arrow functions.\r\n\r\n```javascript\r\n.then((variable) => {\r\nreturn processAndReturn(variable);\r\n})\r\n```\r\n\r\n\r\n\r\nbecomes\r\n\r\n```javascript\r\n.then(variable => processAndReturn(variable))\r\n```",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2017-01-22T22:07:11Z",
        "closed_at": "2017-01-27T04:03:23Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-22T02:19:22Z",
        "closed_at": "2021-05-24T15:52:26Z",
        "merged_at": null,
        "body": "- Added a simple section description\r\n- Added a second case example where negative conditionals are a good choice.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-22T00:02:39Z",
        "closed_at": "2017-01-22T03:46:38Z",
        "merged_at": "2017-01-22T03:46:38Z",
        "body": "Added _this_ to verifyIfAmountCanBeSetted otherwise you get ReferenceError",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-21T02:38:54Z",
        "closed_at": "2017-01-21T19:37:25Z",
        "merged_at": "2017-01-21T19:37:25Z",
        "body": "#159 ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 113,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2017-01-20T20:47:09Z",
        "closed_at": "2017-01-21T20:00:29Z",
        "merged_at": null,
        "body": "Adds instructions for generating an epub file using pandoc, as well as a starter epub CSS file and generated file. I had to add pandoc metadata to the README.md file because I could not get the `--pub-metadata` flag to work as documented. ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-19T07:24:51Z",
        "closed_at": "2017-01-19T16:12:24Z",
        "merged_at": "2017-01-19T16:12:24Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-18T22:47:58Z",
        "closed_at": "2017-01-19T00:16:55Z",
        "merged_at": "2017-01-19T00:16:55Z",
        "body": "Add translation section in the same format of AirBnb style, with Brazilian Portuguese and Chinese translations.\r\n\r\nI\"m unable to tell the difference between \"Traditional\" and \"Simplified\" Chinese as AirBnb did in their translations, perhaps someone can help with this distinction.\r\n\r\nAlso, fix a minor markdown error.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-18T19:44:02Z",
        "closed_at": "2017-01-19T01:59:26Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2167,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-18T15:04:28Z",
        "closed_at": "2017-01-18T17:46:45Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2017-01-18T04:49:52Z",
        "closed_at": "2017-01-18T04:53:29Z",
        "merged_at": "2017-01-18T04:53:29Z",
        "body": "Ref: https://github.com/ryanmcdermott/clean-code-javascript/pull/151",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2017-01-17T16:59:31Z",
        "closed_at": "2017-01-17T17:03:35Z",
        "merged_at": "2017-01-17T17:03:35Z",
        "body": "`cart` is an Array. the ES6 spread operator can be used : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-17T14:20:33Z",
        "closed_at": "2017-01-18T04:18:48Z",
        "merged_at": null,
        "body": "Found the inconsistencies in the example in variable definition and functionaargument",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-16T17:43:36Z",
        "closed_at": "2017-01-16T20:14:30Z",
        "merged_at": "2017-01-16T20:14:30Z",
        "body": ":) ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-16T14:16:18Z",
        "closed_at": "2017-01-16T19:27:15Z",
        "merged_at": "2017-01-16T19:27:14Z",
        "body": "Animal->Human\r\ninto\r\nHuman->Animal\r\n\r\nbecause Human **is a** Animal",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 42,
        "deletions": 41,
        "changed_files": 1,
        "created_at": "2017-01-16T12:13:09Z",
        "closed_at": "2017-01-20T01:40:53Z",
        "merged_at": "2017-01-20T01:40:53Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-15T14:19:30Z",
        "closed_at": "2017-01-15T17:23:13Z",
        "merged_at": "2017-01-15T17:23:13Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-15T10:09:38Z",
        "closed_at": "2017-01-15T17:23:02Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-01-15T03:53:27Z",
        "closed_at": "2017-01-15T03:54:08Z",
        "merged_at": "2017-01-15T03:54:08Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2017-01-14T20:23:29Z",
        "closed_at": "2017-01-14T23:32:22Z",
        "merged_at": "2017-01-14T23:32:22Z",
        "body": "Related to #133 issue",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 101,
        "deletions": 43,
        "changed_files": 1,
        "created_at": "2017-01-14T18:59:57Z",
        "closed_at": "2021-05-24T15:52:40Z",
        "merged_at": null,
        "body": "This PR is regarding a discussion developers had on the issue #40.\r\n\r\nAs there was more positive reactions than negative ones I have decided to change the code example and description for the section to be more appropriate for JavaScript language and its features.\r\n\r\n@ryanmcdermott if there is anything I can improve, fire away ;)",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-14T16:32:09Z",
        "closed_at": "2017-01-20T01:42:02Z",
        "merged_at": "2017-01-20T01:42:02Z",
        "body": "I didn't know what was the second argument of `reduce` function and I had to look for it.\r\n\r\nI think that now it's more clear.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-13T12:36:09Z",
        "closed_at": "2017-01-13T15:33:25Z",
        "merged_at": "2017-01-13T15:33:24Z",
        "body": "lookupManager method was written as lookupMananger() ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-13T11:34:45Z",
        "closed_at": "2017-01-13T13:45:38Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2017-01-13T01:19:10Z",
        "closed_at": "2017-01-14T17:25:39Z",
        "merged_at": "2017-01-14T17:25:39Z",
        "body": "Great resource!\r\n\r\nHere's a fix for something I noticed in the `async/await` example. There's no need to `await` a call to `require`, and they might sooner be written in single lines to mimic the style used for the previous examples. I might have overlooked something though, if so, let me know!",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-12T18:09:24Z",
        "closed_at": "2021-05-24T15:52:46Z",
        "merged_at": null,
        "body": "Pull request as discussed in issue #49 \r\n\r\n- adds a new subsection \"Avoid Mental Mapping of iterator states\"\r\n- preview is available here: https://github.com/cookiengineer/clean-code-javascript/tree/iterator-names#avoid-mental-mapping-of-iterator-states\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2017-01-12T11:16:38Z",
        "closed_at": "2017-01-13T03:14:41Z",
        "merged_at": "2017-01-13T03:14:41Z",
        "body": "See [the comment](https://github.com/ryanmcdermott/clean-code-javascript/pull/65#issuecomment-272082413) of @ryanmcdermott.\r\n\r\nWith this PR:\r\n\r\n1. Bad and old examples become more comparable (let bad examples be bad only in regard to one appropriate case).\r\n2. Both examples do not contain type coercion (i.e. they use strict comparing).\r\n3. The new algorithm has less performance difference in small and large arrays comparing (some benchmarks have been done).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-12T09:51:53Z",
        "closed_at": "2017-01-17T03:48:44Z",
        "merged_at": "2017-01-17T03:48:44Z",
        "body": "Regarding #108. Is the example clear? ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2017-01-12T06:42:43Z",
        "closed_at": "2017-01-14T17:50:52Z",
        "merged_at": "2017-01-14T17:50:52Z",
        "body": "There is no need to create an arrow function to execute a function inside of the timeout.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-01-12T01:41:01Z",
        "closed_at": "2017-01-12T05:33:08Z",
        "merged_at": "2017-01-12T05:33:08Z",
        "body": "Assuming that waiting 1/1000 of a day was not intended.\r\nSecond parameter of setTimeout() is in milliseconds (https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout).",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-11T20:23:57Z",
        "closed_at": "2017-01-12T05:32:33Z",
        "merged_at": null,
        "body": "Line was likely copied by mistake",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2017-01-11T18:20:11Z",
        "closed_at": "2017-01-13T03:29:40Z",
        "merged_at": "2017-01-13T03:29:40Z",
        "body": "Pretty minor. But destructuring state using the regex was a little bit ambiguous since there is no state in the address (zip code instead).",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-11T18:05:01Z",
        "closed_at": "2017-01-12T05:40:34Z",
        "merged_at": null,
        "body": "The object passed to the function was not using the same name and it was a little bit confusing since on the `Good` example was using a not defined variable. ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2017-01-11T15:25:02Z",
        "closed_at": "2017-01-24T03:59:06Z",
        "merged_at": null,
        "body": "A drawback with a class extending the Array global, is that you are required to instantiate it using the 'new' keyword. Also, the 'diff' feature is limited to the subclass only.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 25,
        "changed_files": 1,
        "created_at": "2017-01-11T13:19:20Z",
        "closed_at": "2017-01-12T05:39:21Z",
        "merged_at": "2017-01-12T05:39:21Z",
        "body": "Add missed semicolons.\r\nComment out ellipses.\r\nUse object shorthand.\r\nDelete block padding.\r\nDelete default constructors.\r\n\r\n(With [this script's](https://github.com/ryanmcdermott/clean-code-javascript/issues/113) results.)",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-11T04:39:59Z",
        "closed_at": "2017-01-11T04:41:55Z",
        "merged_at": "2017-01-11T04:41:55Z",
        "body": "`SECONDS_IN_A_DAY` there was a typo in const.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-11T00:20:49Z",
        "closed_at": "2017-01-11T02:51:49Z",
        "merged_at": null,
        "body": "By removing the round brackets on arrow functions with one input we can improve readability.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-10T23:23:37Z",
        "closed_at": "2017-01-10T23:38:18Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-10T14:26:09Z",
        "closed_at": "2017-01-26T05:02:21Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-10T14:24:39Z",
        "closed_at": "2017-01-10T15:12:20Z",
        "merged_at": "2017-01-10T15:12:20Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2017-01-10T12:34:05Z",
        "closed_at": "2021-05-24T15:52:51Z",
        "merged_at": null,
        "body": "Hi,\r\n\r\nThank you for awesome work you've done here.\r\n\r\nSome ideas on \"Remove duplicate code\" which might be useful for somebody.\r\n\r\n### First of all, duplicating code isn't that bad :).\r\n\r\nGreat blog post covers this topic \u2014 [The Wrong Abstraction](https://www.sandimetz.com/blog/2016/1/20/the-wrong-abstraction).\r\nAnd the best quotes from that article state:\r\n\r\n> duplication is far cheaper than the wrong abstraction\r\n\r\nAnd:\r\n\r\n> prefer duplication over the wrong abstraction\r\n\r\nMost of the experienced devs to whom I showed this article were agree with it.\r\nTherefore it's a bit too categoricall to say:\r\n\r\n> Never ever, ever, under any circumstance, have duplicate code. There's no reason for it and it's quite possibly the worst sin you can commit as a professional developer.\r\n\r\nIt, in my opinion, might mislead begginers to belive that duplicate code is pure evil which will end up\r\nin abstraction mess and in even less maintanable code.\r\n\r\n### Secondly, bad example looks better for me.\r\n\r\n#### The reasons why I think it's better:\r\n\r\n1. You can easilly remove any of those functions without changing other one.\r\n2. They are easier to test.\r\n3. They are easier to maintain and extend.\r\n\r\n#### Why I don't like good example:\r\n\r\nFirst of all, after refactoring we have different result for developer:\r\n\r\n```js\r\nfunction showList(employees) {\r\n  employees.forEach(employee => {\r\n    // ...\r\n\r\n    const data = {\r\n      expectedSalary: expectedSalary,\r\n      experience: experience,\r\n      portfolio: portfolio // used to return \"githubLink\" for developer\r\n    };\r\n\r\n    // ...\r\n  });\r\n}\r\n```\r\n\r\nSo, if we want to keep contract of our functions as it was before refactoring we will have to do something like this (approximately):\r\n\r\n```js\r\nfunction showList(employees) {\r\n  employees.forEach(employee => {\r\n    const expectedSalary = employee.calculateExpectedSalary();\r\n    const experience = employee.getExperience();\r\n    const data = {\r\n      expectedSalary: expectedSalary,\r\n      experience: experience\r\n    };\r\n\r\n    if (employee.type === 'manager') {\r\n      data.portfolio = employee.getMBAProjects();\r\n    } else {\r\n      data.githubLink = employee.getGithubLink();\r\n    }\r\n\r\n    render(data);\r\n  });\r\n}\r\n```\r\n\r\nBut we still have that ugly `if` condition.\r\nBy introducing `if` here we define a place for futher comming additional logic and conditions.\r\nUntil, eventually, code becomes incomprehensible.\r\n\r\n### What we can do if we still want to refactor these functions?\r\n\r\n```javascript\r\n// Extracting common data from employee\r\n\r\nfunction getCommonEmployeeData(employee) {\r\n  const expectedSalary = developer.calculateExpectedSalary();\r\n  const experience = developer.getExperience();\r\n\r\n  return {\r\n    expectedSalary: expectedSalary,\r\n    experience: experience,\r\n  };\r\n}\r\n\r\n// Specific things live in separate functions\r\n\r\nfunction showDeveloperList(developers) {\r\n  developers.forEach(developer => {\r\n    const data = getCommonEmployeeData(developer);\r\n    data.githubLink = developer.getGithubLink();\r\n\r\n    render(data);\r\n  });\r\n}\r\n\r\nfunction showManagerList(managers) {\r\n  managers.forEach(manager => {\r\n    const data = getCommonEmployeeData(developer);\r\n    data.portfolio = manager.getMBAProjects();\r\n\r\n    render(data);\r\n  });\r\n}\r\n```\r\n\r\n1. By doing this we got rid of unnecessary condition in our code.\r\n2. It's now easier to extend or add new type of employee, hence we don't need to test not affected types.\r\n3. It's easier to write unit tests.\r\n4. We are following the single responsibility rule, hence each our functions is dedicated to specific type of employee and has no idea about other types.\r\n\r\nWhat do you think?",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-10T11:55:56Z",
        "closed_at": "2017-01-11T03:27:54Z",
        "merged_at": null,
        "body": "I renamed object key. This is a very small part, but by changing the object key value, the comparison between `bad code` and `good code` becomes better readable.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-10T10:09:54Z",
        "closed_at": "2017-01-10T15:19:38Z",
        "merged_at": "2017-01-10T15:19:38Z",
        "body": "Based on the **Error Handling** section.\r\nI think good example should all use `console.error` to deal with error messages.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-10T09:28:57Z",
        "closed_at": "2017-01-11T03:05:02Z",
        "merged_at": "2017-01-11T03:05:02Z",
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-10T04:03:49Z",
        "closed_at": "2017-01-10T04:05:17Z",
        "merged_at": null,
        "body": "example site: http://magicdawn.ml/clean-code-javascript\r\n\r\nIf this PR merged, have this settings will build a real doc page\r\n\r\n![image](https://cloud.githubusercontent.com/assets/4067115/21793472/b1a0d35c-d72c-11e6-9ad2-7786e7b07168.png)",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2017-01-10T01:15:35Z",
        "closed_at": "2017-01-10T03:12:06Z",
        "merged_at": null,
        "body": "Hi, I'm a Korean software Engineer.\r\n\r\nYour article is very interesting for me.\r\nSo, I want to translate it in Korean and share other Korean guys.\r\n\r\nThank you.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-10T00:49:28Z",
        "closed_at": "2017-01-10T03:13:58Z",
        "merged_at": "2017-01-10T03:13:58Z",
        "body": "https://github.com/danielstjules/buddy.js is a tool that exists to identify magic numbers. Here's the result of running the example in the readme:\r\n\r\n<img width=\"557\" alt=\"screen shot 2017-01-09 at 3 48 06 pm\" src=\"https://cloud.githubusercontent.com/assets/817212/21789622/39eb9776-d68b-11e6-9ae2-f20166be72c7.png\">\r\n\r\nHere's another example from the buddy.js readme:\r\n\r\n![intro-screenshot](http://danielstjules.com/github/buddyjs-intro.png)\r\n\r\nI also mention eslint, which added a magic number rule based on buddy.js in https://github.com/eslint/eslint/blob/660e0918933e6e7fede26bc675a0763a6b357c94/lib/rules/no-magic-numbers.js#L2 Not sure if it handles the same test cases, but it's the only general linter I know of that detects these things.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2017-01-09T18:42:03Z",
        "closed_at": "2017-01-10T03:18:52Z",
        "merged_at": "2017-01-10T03:18:52Z",
        "body": "(Here comes a bunch of PRs after a code fragments mass test with ESLint checks and Node.js runnings.)\r\n\r\nSee [no-shadow](http://eslint.org/docs/rules/no-shadow).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 19,
        "changed_files": 1,
        "created_at": "2017-01-09T18:30:27Z",
        "closed_at": "2017-01-10T03:26:51Z",
        "merged_at": "2017-01-10T03:26:51Z",
        "body": "(Here comes a bunch of PRs after a code fragments mass test with ESLint checks and Node.js runnings.)\r\n\r\nSee [no-use-before-define](http://eslint.org/docs/rules/no-use-before-define).\r\n\r\nClass declarations are not hoisted. So ['keep the caller right above the callee' rule](https://github.com/ryanmcdermott/clean-code-javascript#function-callers-and-callees-should-be-close) is less applicable here. Though the order of calls mitigates the danger of errors here, maybe in such a normative tip list this should be considered.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 30,
        "changed_files": 1,
        "created_at": "2017-01-09T17:56:33Z",
        "closed_at": "2017-01-11T03:16:05Z",
        "merged_at": "2017-01-11T03:16:05Z",
        "body": "(Here comes a bunch of PRs after a code fragments mass test with ESLint checks and Node.js runnings.)\r\n\r\n1. Add function name if it can't be inferred from the context. See [func-names](http://eslint.org/docs/rules/func-names).\r\n2. Replace anonymous functions with arrow functions when appropriate. See [prefer-arrow-callback](http://eslint.org/docs/rules/prefer-arrow-callback).\r\n3. Replace anonymous functions with method shorthand notation when appropriate. See [object-shorthand](http://eslint.org/docs/rules/object-shorthand).\r\n4. Remove a redundant IIFE. Fixes #30 temporarily.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-01-09T17:06:47Z",
        "closed_at": "2017-01-10T03:38:06Z",
        "merged_at": "2017-01-10T03:38:06Z",
        "body": "(Here comes a bunch of PRs after a code fragments mass test with ESLint checks and Node.js runnings.)\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-09T17:00:55Z",
        "closed_at": "2017-01-10T15:20:58Z",
        "merged_at": "2017-01-10T15:20:58Z",
        "body": "(Here comes a bunch of PRs after a code fragments mass test with ESLint checks and Node.js runnings.)\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-09T16:47:50Z",
        "closed_at": "2017-01-10T03:38:38Z",
        "merged_at": "2017-01-10T03:38:38Z",
        "body": "(Here comes a bunch of PRs after a code fragments mass test with ESLint checks and Node.js runnings.)\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-01-09T16:23:18Z",
        "closed_at": "2017-01-10T03:41:51Z",
        "merged_at": "2017-01-10T03:41:51Z",
        "body": "(Here comes a bunch of PRs after a code fragments mass test with ESLint checks and Node.js runnings.)\r\n\r\n(This commit also deletes a redundant `else`.)",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-01-09T16:11:14Z",
        "closed_at": "2017-01-10T15:22:45Z",
        "merged_at": "2017-01-10T15:22:45Z",
        "body": "(Here comes a bunch of PRs after a code fragments mass test with ESLint checks and Node.js runnings.)\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2017-01-09T16:05:28Z",
        "closed_at": "2017-01-10T03:25:12Z",
        "merged_at": null,
        "body": "Hi, I love this guide so much, but I find a long README is really hard to browse (the `back to top` and `table of content` are pretty nice though)\r\n\r\nBasically this is to introduce using [docute](https://github.com/egoist/docute) to serve README.md as a website, you don't need to build or change anything, it also generates a TOC in the sidebar so that we can quickly navigate between sections.   \r\n\r\nYou can just go to the settings and choose `docs` as github pages:\r\n\r\n![settings](https://docute.js.org/assets/deploy.png)\r\n\r\nHopefully we can visit the guide via https://ryanmcdermott.github.io/clean-code-javascript then, here's the preview (or try visit my fork https://egoistian.com/clean-code-javascript):\r\n\r\n![2017-01-09 11 53 57](https://cloud.githubusercontent.com/assets/8784712/21772855/e46270e4-d6c7-11e6-91ba-6b3c8addd573.png)\r\n\r\n**Feel free to close this if it's not what you want :D cheers**",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 36,
        "changed_files": 1,
        "created_at": "2017-01-09T16:00:11Z",
        "closed_at": "2017-01-10T03:41:17Z",
        "merged_at": "2017-01-10T03:41:17Z",
        "body": "(Here comes a bunch of PRs after a code fragments mass test with ESLint checks and Node.js runnings.)\r\n\r\nSee: http://eslint.org/docs/rules/class-methods-use-this\r\n\r\nThis commit adds using of `this`, deletes abundant arguments or inserts explicit ellipses (the last two fixes imply using of `this`).\r\n\r\nAlso, it corrects some indentation cases.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2017-01-09T15:17:58Z",
        "closed_at": "2017-01-09T15:19:15Z",
        "merged_at": "2017-01-09T15:19:15Z",
        "body": "(Here comes a bunch of PRs after a code fragments mass test with ESLint checks and Node.js runnings.)\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-09T15:13:55Z",
        "closed_at": "2017-01-09T15:18:10Z",
        "merged_at": "2017-01-09T15:18:10Z",
        "body": "`Fewer` should be used for countable objects.\r\n\r\nhttps://en.wikipedia.org/wiki/Fewer_vs._less",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2017-01-09T10:37:29Z",
        "closed_at": "2017-01-09T15:13:34Z",
        "merged_at": "2017-01-09T15:13:34Z",
        "body": "from 6 to 4 in Function callers and callees should be close",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2017-01-09T02:35:01Z",
        "closed_at": "2017-01-13T04:26:54Z",
        "merged_at": "2017-01-13T04:26:54Z",
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2017-01-09T02:15:39Z",
        "closed_at": "2017-01-11T03:16:51Z",
        "merged_at": "2017-01-11T03:16:51Z",
        "body": "(Here comes a bunch of PRs after a code fragments mass test with ESLint checks and Node.js runnings.)\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2017-01-09T01:19:11Z",
        "closed_at": "2017-01-11T03:17:45Z",
        "merged_at": "2017-01-11T03:17:45Z",
        "body": "(Here comes a bunch of PRs after a code fragments mass test with ESLint checks and Node.js runnings.)\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2017-01-09T01:03:06Z",
        "closed_at": "2017-01-09T15:16:16Z",
        "merged_at": "2017-01-09T15:16:16Z",
        "body": "(Here comes a bunch of PRs after a code fragments mass test with ESLint checks and Node.js runnings.)\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2017-01-09T00:13:26Z",
        "closed_at": "2017-01-09T15:15:20Z",
        "merged_at": "2017-01-09T15:15:20Z",
        "body": "(Here comes a bunch of PRs after a code fragments mass test with ESLint checks and Node.js runnings.)\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2017-01-08T13:28:48Z",
        "closed_at": "2017-01-11T02:52:59Z",
        "merged_at": null,
        "body": "Changed the mutation of data to be passed-in to the constructor\r\n\r\n`Decoupled Dependency` best practices is to make sure that inputs are dynamically configured in initializing hook (out of the class scope).\r\n\r\nParticularly in this example where HTTP methods are not commonly get changed it's prefered to configure outside the scope of the class",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-08T12:19:55Z",
        "closed_at": "2017-01-09T15:17:03Z",
        "merged_at": "2017-01-09T15:17:03Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-08T03:30:44Z",
        "closed_at": "2017-01-11T03:33:16Z",
        "merged_at": null,
        "body": "",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-08T02:24:40Z",
        "closed_at": "2017-01-08T16:46:53Z",
        "merged_at": null,
        "body": "Because it will never change",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-07T15:38:39Z",
        "closed_at": "2017-01-08T16:58:47Z",
        "merged_at": "2017-01-08T16:58:47Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2017-01-07T14:55:00Z",
        "closed_at": "2017-01-08T17:33:21Z",
        "merged_at": null,
        "body": "This is my attempt to fix #50 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 90,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2017-01-07T14:39:13Z",
        "closed_at": "2017-01-07T14:44:31Z",
        "merged_at": null,
        "body": "This is an attempt to fix #50 \r\n\r\n(please ignore all the merge-commits ^^)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2017-01-07T14:01:28Z",
        "closed_at": "2017-01-08T17:28:44Z",
        "merged_at": "2017-01-08T17:28:44Z",
        "body": "Addresses #52.\r\n\r\nI applied your format suggestion to stay consistent over the whole document.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 33,
        "changed_files": 1,
        "created_at": "2017-01-07T13:57:35Z",
        "closed_at": "2017-01-12T05:52:20Z",
        "merged_at": "2017-01-12T05:52:19Z",
        "body": "1.  Use object shorthand notation.\r\n2.  Remove default constructors (see http://eslint.org/docs/rules/no-useless-constructor).\r\n3.  Use functional Array methods instead of cycles and intermediate structures.\r\n\r\nThe third change also excludes hidden type coercion from array elements comparing.\r\n\r\nUsing the previous example:\r\n```js\r\n/******************************************************************************/\r\n'use strict';\r\n/******************************************************************************/\r\nclass SuperArray extends Array {\r\n  constructor(...args) {\r\n    super(...args);\r\n  }\r\n\r\n  diff(comparisonArray) {\r\n    var values = [];\r\n    var hash = {};\r\n\r\n    for (var i of comparisonArray) {\r\n      hash[i] = true;\r\n    }\r\n\r\n    for (var i of this) {\r\n      if (!hash[i]) {\r\n        values.push(i);\r\n      }\r\n    }\r\n\r\n    return values;\r\n  }\r\n}\r\n\r\nconst sa = new SuperArray(1, 2, 3);\r\nconsole.log(sa.diff(['1', '2', 3]));\r\n```\r\n```\r\n[]\r\n```\r\nUsing the new example:\r\n```js\r\nclass SuperArray extends Array {\r\n  diff(comparisonArray) {\r\n    return this.filter(elem => !comparisonArray.includes(elem));\r\n  }\r\n}\r\n\r\nconst sa = new SuperArray(1, 2, 3);\r\nconsole.log(sa.diff(['1', '2', 3]));\r\n```\r\n```\r\nSuperArray [ 1, 2 ]\r\n```\r\nAs additional feature, you can use `.diff()` chaining here. ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 25,
        "changed_files": 1,
        "created_at": "2017-01-07T13:55:44Z",
        "closed_at": "2017-01-11T04:44:07Z",
        "merged_at": "2017-01-11T04:44:07Z",
        "body": "Fixed few lines by adding missing semicolons.",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 123,
        "deletions": 26,
        "changed_files": 1,
        "created_at": "2017-01-07T13:20:25Z",
        "closed_at": "2017-01-07T13:20:51Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-01-07T13:17:10Z",
        "closed_at": "2017-01-08T18:18:36Z",
        "merged_at": "2017-01-08T18:18:36Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-07T12:30:56Z",
        "closed_at": "2017-01-08T18:23:44Z",
        "merged_at": null,
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2017-01-07T11:24:15Z",
        "closed_at": "2017-01-08T17:05:13Z",
        "merged_at": "2017-01-08T17:05:13Z",
        "body": "In the section \"Functions should do one thing\" this change uses\r\nthe Array.filter method to get the active clients, then emailing\r\nthose with the forEach loop.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-07T05:51:58Z",
        "closed_at": "2017-01-08T17:21:02Z",
        "merged_at": "2017-01-08T17:21:02Z",
        "body": "Here's a preview of [jsinspect](https://github.com/danielstjules/jsinspect) output when ran on the example.\r\n\r\n![screen shot 2017-01-06 at 9 44 43 pm](https://cloud.githubusercontent.com/assets/817212/21739776/0468e168-d45a-11e6-803b-931606eaf695.png)",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 34,
        "changed_files": 1,
        "created_at": "2017-01-07T05:43:05Z",
        "closed_at": "2017-01-08T17:26:39Z",
        "merged_at": null,
        "body": "per preceding rule \"ES6 constants when variable values do not change\"",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2017-01-07T05:18:56Z",
        "closed_at": "2017-01-08T18:12:33Z",
        "merged_at": "2017-01-08T18:12:33Z",
        "body": "the old code throws a ReferenceError exception",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-07T04:53:42Z",
        "closed_at": "2017-01-08T17:23:13Z",
        "merged_at": "2017-01-08T17:23:13Z",
        "body": "The save method isn't returning this, so the car variable\r\nis equal to undefined instead of a Car object.\r\n\r\nBTW, Thanks alot for this guide.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-07T03:52:02Z",
        "closed_at": "2017-01-08T17:35:22Z",
        "merged_at": "2017-01-08T17:35:22Z",
        "body": "Something looked off about this so I did a quick check in node.\r\nYou must have been distracted at the time of writing :)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 109,
        "deletions": 110,
        "changed_files": 1,
        "created_at": "2017-01-06T22:02:49Z",
        "closed_at": "2017-01-08T16:42:27Z",
        "merged_at": "2017-01-08T16:42:27Z",
        "body": "As discussed in #31 here my implementation of `const` and `let`.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2017-01-06T19:24:01Z",
        "closed_at": "2017-01-09T15:23:01Z",
        "merged_at": null,
        "body": "Instead of doing the following:\r\n```javascript\r\nvar result;\r\nif (condition) {\r\n    result = optionOne();\r\n} else {\r\n   result = optionTwo();\r\n}\r\n```\r\nit's cleaner to do this (and it also enables `const` instead of `var`)\r\n```javascript\r\nvar result (condition)\r\n                 ? optionOne()\r\n                 : optionTwo();\r\n```",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-01-06T19:19:07Z",
        "closed_at": "2017-01-11T03:20:24Z",
        "merged_at": "2017-01-11T03:20:24Z",
        "body": "Improve example to be more consistent and remove unneeded context",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-06T18:34:26Z",
        "closed_at": "2017-01-07T01:28:42Z",
        "merged_at": "2017-01-07T01:28:42Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-06T16:42:44Z",
        "closed_at": "2017-01-07T03:25:39Z",
        "merged_at": null,
        "body": "",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 78,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-01-06T16:42:18Z",
        "closed_at": "2017-01-07T03:13:30Z",
        "merged_at": "2017-01-07T03:13:30Z",
        "body": "",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-06T13:48:47Z",
        "closed_at": "2017-01-07T01:37:57Z",
        "merged_at": "2017-01-07T01:37:57Z",
        "body": "It's just a quick adjust in the \"Set default objects with Object.assign\" section where the results on the comment show de result after assign new attributes into the object.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 70,
        "changed_files": 1,
        "created_at": "2017-01-06T12:02:18Z",
        "closed_at": "2017-01-08T16:58:10Z",
        "merged_at": null,
        "body": "We should update most of var in let.\r\n\r\nI changed few var to const because i though it was more appropriate ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2017-01-06T08:52:10Z",
        "closed_at": "2017-01-11T03:29:28Z",
        "merged_at": "2017-01-11T03:29:28Z",
        "body": "This use the ES2015 way.\r\n\r\nI removed the match because it's not used and we could also declare a const all to grab the first item of the match if needed.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2017-01-06T07:25:18Z",
        "closed_at": "2017-01-15T18:53:28Z",
        "merged_at": null,
        "body": "A few things jump out at me here:\r\n\r\n- My personal opinion is that the ternary operator is a good way to clean code up. It prevents littering code with unnecessary `if` statements and, in this case, it prevents having to write `portfolio =` twice. Some might say the ternary operator is a little more clever than clear, but my opinion is the simplicity gains far outweigh the loss in clarity. If you agree, it's probably worth giving the operator its own heading.\r\n\r\n- I noticed your link to an Eric Elliott article earlier. I agree with him that ES6 should be used when possible. \r\n\r\n- I want to keep this PR atomic, but I think some clarity can be derived by cleaning up the object.\r\n\r\nI think this is an awesome idea and wonderful contribution to the community! Thanks!",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2017-01-06T04:58:58Z",
        "closed_at": "2017-01-06T05:12:08Z",
        "merged_at": "2017-01-06T05:12:08Z",
        "body": "per preceding rule \"ES6 constants when variable values do not change\"",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 28,
        "changed_files": 1,
        "created_at": "2017-01-06T04:16:49Z",
        "closed_at": "2017-01-11T03:23:09Z",
        "merged_at": "2017-01-11T03:23:09Z",
        "body": "- The original document asserted that \"Short-circuiting is cleaner than conditionals\"\r\n- ...only to override this assertion later with \"Use default arguments instead of short circuiting.\"\r\n- This is a poor design-choice for an advisory document.\r\n\r\n    - If you are going to say x > y,\r\n    - then later say z > x,\r\n    - you should just say z > x > y upfront.\r\n    - Otherwise, many people might not see the z > x later on,\r\n    - because many people will probably use this as a referential document. They probably won't read the entire work.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2017-01-06T04:12:30Z",
        "closed_at": "2017-01-11T03:30:48Z",
        "merged_at": "2017-01-11T03:30:48Z",
        "body": "This example should follow the guidelines about `const` vs `var` mentioned earlier",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-06T03:41:36Z",
        "closed_at": "2017-01-06T04:02:29Z",
        "merged_at": "2017-01-06T04:02:29Z",
        "body": "The original phrase \"As stated in the Gang of Four...\" is semantically incorrect.\r\n- The \"Gang of Four\" is a group of authors: Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides.\r\n- They wrote a famous book: Design Patterns.\r\n- Here, Ryan McDermott is referring to the software-design principle \"you should prefer composition over inheritance.\"\r\n- This principle was stated in the book, Design Patterns.\r\n- It was not stated in the Gang of Four -- the authors themselves.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-06T01:46:20Z",
        "closed_at": "2017-01-06T02:19:49Z",
        "merged_at": "2017-01-06T02:19:49Z",
        "body": "Use `console.error` at least as `console.log` essentially turns a thrown error into a muted console log.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-05T23:06:44Z",
        "closed_at": "2017-01-05T23:29:31Z",
        "merged_at": "2017-01-05T23:29:31Z",
        "body": "(ES6) When you declare a constant, the variable should stay the same throughout the program.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-05T21:34:13Z",
        "closed_at": "2017-01-06T02:34:42Z",
        "merged_at": "2017-01-06T02:34:42Z",
        "body": "In the \"good\" `Object.assign` example, the initial new object is redundant as the defaults are also specified in a new object.\r\n\r\nThis is a bit pedantic, and doesn't change the semantics of the example, just removes an unnecessary object creation.\r\n\r\n*Note:* I definitely wouldn't have bothered with this if I didn't make #4, and was looking at it anyway \ud83d\ude04 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-05T20:43:52Z",
        "closed_at": "2017-01-05T22:27:18Z",
        "merged_at": "2017-01-05T22:27:18Z",
        "body": "Hey there. As a Software Engineer who happens to be Nigerian, I think there are better ways of explaining a side effect than perpetuating stereotypes about a specific group of people. So I just made a small fix to make it more appropriate.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-05T14:39:21Z",
        "closed_at": "2017-01-05T14:51:23Z",
        "merged_at": "2017-01-05T14:51:23Z",
        "body": "Fixed typo\r\n\r\nHi.  First PR thought I might start on something simple.  Appreciate the document.  Hope I can put all of this into practice when developing.  Thanks",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-05T12:05:58Z",
        "closed_at": "2017-01-05T14:51:53Z",
        "merged_at": "2017-01-05T14:51:53Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-05T07:49:52Z",
        "closed_at": "2017-01-05T14:53:02Z",
        "merged_at": "2017-01-05T14:53:02Z",
        "body": "Property title is assigned to property buttonText.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2017-01-05T07:30:44Z",
        "closed_at": "2017-01-05T14:53:52Z",
        "merged_at": "2017-01-05T14:53:52Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-05T05:11:36Z",
        "closed_at": "2017-01-05T05:17:50Z",
        "merged_at": "2017-01-05T05:17:50Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-05T04:42:15Z",
        "closed_at": "2017-01-05T04:45:40Z",
        "merged_at": "2017-01-05T04:45:40Z",
        "body": "Fix #2",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-05T03:13:34Z",
        "closed_at": "2017-01-05T03:16:37Z",
        "merged_at": "2017-01-05T03:16:37Z",
        "body": "Must pass parameters to the conditional function or it might cause variable pollution.\r\n692 add fsm, listNode arguments\r\n696 add fsmInstance, listNodeInstance parameters",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-01-05T02:30:49Z",
        "closed_at": "2017-01-05T02:32:36Z",
        "merged_at": "2017-01-05T02:32:36Z",
        "body": "Filled and replace argument names in ### Functions should only be one level of abstraction\r\n308. fill code argument\r\n350. fill tokens argument\r\n361. replace ast into tokens",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-05T02:10:05Z",
        "closed_at": "2017-01-05T15:31:21Z",
        "merged_at": null,
        "body": "The object.assign arguments were reversed. The defaults were always overwriting the configuration object.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2017-01-04T23:26:40Z",
        "closed_at": "2017-01-04T23:27:21Z",
        "merged_at": null,
        "body": "The object full of defaults should come first since Object.assign will replace values in the first object with overridden values in the second.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-04T22:50:01Z",
        "closed_at": "2017-01-05T15:32:28Z",
        "merged_at": null,
        "body": "`Object.assign` mutates the first object. This can lead to unexpected side-effects.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-04T22:26:03Z",
        "closed_at": "2017-01-10T03:29:22Z",
        "merged_at": null,
        "body": "I might be wrong, but ideally you would want one argument (Unary function). Zero arguments implies that it isn't receiving the data in a pure way. And a function that isn't honest in its signature should be avoided.\r\n\r\nBTW, thanks for creating this repo, it's very helpful.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2017-01-04T21:46:43Z",
        "closed_at": "2017-01-05T01:34:14Z",
        "merged_at": "2017-01-05T01:34:14Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-04T21:40:38Z",
        "closed_at": "2017-01-05T01:38:36Z",
        "merged_at": "2017-01-05T01:38:36Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2017-01-04T21:11:18Z",
        "closed_at": "2017-01-05T15:30:09Z",
        "merged_at": null,
        "body": "In the \"Set default objects with Object.assign\" section your example would overwrite the data passed as a parameter with the default values. Changing the parameter order fixes the issue.\r\n\r\nAlso, the original version was mutating the passed object, but this is non-issue now.\r\n\r\nThanks to https://www.reddit.com/user/notNullOrVoid for spotting the mixed order.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-04T20:56:51Z",
        "closed_at": "2017-01-05T01:40:43Z",
        "merged_at": "2017-01-05T01:40:43Z",
        "body": "Without this, the `shape.getArea()` call below will cause an error.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-04T20:15:47Z",
        "closed_at": "2017-01-04T21:09:07Z",
        "merged_at": null,
        "body": "When using Object.assign(obj1, obj2) obj1 will be mutated and also returned by the function. To prevent that, pass an empty object literal as the first param and work with the returned value.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-04T19:56:39Z",
        "closed_at": "2017-01-05T01:32:34Z",
        "merged_at": "2017-01-05T01:32:34Z",
        "body": "",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2017-01-04T17:42:16Z",
        "closed_at": "2017-01-05T01:31:57Z",
        "merged_at": "2017-01-05T01:31:57Z",
        "body": "Just some corrections on spelling and minor formatting.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2017-01-04T06:29:27Z",
        "closed_at": "2017-01-04T15:28:54Z",
        "merged_at": "2017-01-04T15:28:54Z",
        "body": "The world almost just ended right here.",
        "comments": 2
    }
]