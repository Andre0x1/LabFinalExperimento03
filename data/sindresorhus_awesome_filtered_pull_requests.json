[
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-12T18:07:54Z",
        "closed_at": null,
        "merged_at": null,
        "body": "**[sir-kokabi/awesome-rtl](https://github.com/sir-kokabi/awesome-rtl)**\r\n\r\nThis is a list of tools with built-in support for right-to-left (RTL) languages, such as Persian, Farsi, Arabic, Urdu, and more. Many individuals and teams that use RTL languages invest significant effort in searching for tools that support RTL, as tools lacking RTL support can make writing on these platforms challenging and nightmarish. Anyone who is aware of a tool supporting RTL can assist others in reducing the effort required to find such tools.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n  - [**Add Spring Boot** #2810 comment](https://github.com/sindresorhus/awesome/pull/2810#issuecomment-1760087473)\r\n  - [**Add Generative AI Companies** #2763 (comment)](https://github.com/sindresorhus/awesome/pull/2763#issuecomment-1714445714)\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-09T20:11:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [ ] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [ ] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [ ] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [ ] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [ ] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [ ] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [ ] Your entry should be added at the bottom of the appropriate category.\r\n- [ ] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [ ] No blockchain-related lists.\r\n- [ ] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [ ] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [ ] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [ ] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [ ] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [ ] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [ ] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [ ] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [ ] Non-generated Markdown file in a GitHub repo.\r\n- [ ] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [ ] Not a duplicate. Please search for existing submissions.\r\n- [ ] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [ ] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [ ] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [ ] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [ ] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [ ] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [ ] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [ ] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [ ] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [ ] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [ ] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [ ] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-06T10:53:29Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/Athen-Player1/awesome-parenting\r\n\r\nSome digital tools/ guides and courses to help parents in navigating digital space safely and monitoring childs activity online\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [ ] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-06T04:57:49Z",
        "closed_at": null,
        "merged_at": null,
        "body": "[**https://github.com/lunohodov/awesome-astrophotography**](https://github.com/lunohodov/awesome-astrophotography)\r\n\r\n[Astrophotography](https://en.wikipedia.org/wiki/Astrophotography), also known as astronomical imaging, is the photography or imaging of astronomical objects, celestial events, or areas of the night sky.\r\n\r\nAstrophotography bears only a passing resemblance to normal photography. It is a vast topic where both beginners and veterans can easily get lost. This is a curated list of articles, books, guides and tutorials to help fellow enthusiasts navigate the amazing universe of astrophotography.\r\n\r\nHere a list of PRs I've reviewed so far:\r\n\r\n- https://github.com/sindresorhus/awesome/pull/2744#issuecomment-1748685839\r\n- https://github.com/sindresorhus/awesome/pull/2731#issuecomment-1749941951\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] **N/A** Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-03T08:25:31Z",
        "closed_at": "2023-10-14T18:48:28Z",
        "merged_at": "2023-10-14T18:48:28Z",
        "body": "It was in the \"Miscellaneous\" section",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-30T12:51:34Z",
        "closed_at": "2023-09-30T14:25:51Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [ ] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [ ] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [ ] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [ ] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [ ] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [ ] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [ ] Your entry should be added at the bottom of the appropriate category.\r\n- [ ] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [ ] No blockchain-related lists.\r\n- [ ] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [ ] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [ ] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [ ] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [ ] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [ ] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [ ] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [ ] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [ ] Non-generated Markdown file in a GitHub repo.\r\n- [ ] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [ ] Not a duplicate. Please search for existing submissions.\r\n- [ ] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [ ] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [ ] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [ ] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [ ] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [ ] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [ ] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [ ] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [ ] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [ ] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [ ] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [ ] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-24T11:17:57Z",
        "closed_at": "2023-09-24T14:55:37Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/ProjectDiscord/awesome\r\n\r\nThis is a list of discord tools, servers, bots, api wrappers and subreddits that could be pretty useful when either looking for a bot a server or a api wrapper to get started with It should be included cause yeah a lot of people use Discord daily and could use this kind of a list with things about discord and stuff\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-15T03:41:53Z",
        "closed_at": "2023-09-15T08:30:36Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [ ] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-09-13T14:06:05Z",
        "closed_at": "2023-10-14T21:46:41Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/zakarialaoui10/awesome-processing#readme**\r\n\r\n**\r\nProcessing is a flexible software sketchbook and language for learning how to code. It is based on Java, with additional simplifications such as additional classes and aliased mathematical functions and operations. It has a language syntax identical to Java but with a few modifications, and is designed from the ground up to provide an environment for visual arts.\r\n**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 16
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-30T11:47:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "https://github.com/AlexChalakov/awesome-generative-ai-companies\r\n\r\nIt is a thoroughly researched list of companies that indulge in Generative AI with over $5MM raised as of August 2023. It is useful for the following few reasons:\r\n- People would be able to keep informed regarding new intriguing and exciting Generative AI projects.\r\n- People would be able to \"job hunt\" through this list and see if there is a company that matches their interests.\r\n- The Industry is evolving and changing rapidly, so it would be useful to have somewhere where all of those companies could be monitored and listed.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n\r\n- https://github.com/sindresorhus/awesome/pull/2731#issuecomment-1678623907\r\n- https://github.com/sindresorhus/awesome/pull/2737#issuecomment-1678545588\r\n\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-30T11:20:48Z",
        "closed_at": "2023-08-30T11:41:20Z",
        "merged_at": null,
        "body": "\r\nhttps://github.com/AlexChalakov/awesome-generative-ai-companies\r\n\r\nIt is a thoroughly researched list of companies that indulge in Generative AI with over $5MM raised as of August 2023. It is useful for the following few reasons:\r\n- People would be able to keep informed regarding new intriguing and exciting Generative AI projects.\r\n- People would be able to \"job hunt\" through this list and see if there is a company that matches their interests.\r\n- The Industry is evolving and changing rapidly, so it would be useful to have somewhere where all of those companies could be monitored and listed.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n\r\n- https://github.com/sindresorhus/awesome/pull/2731#issuecomment-1678623907\r\n- https://github.com/sindresorhus/awesome/pull/2737#issuecomment-1678545588\r\n\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-18T17:15:37Z",
        "closed_at": null,
        "merged_at": null,
        "body": "https://github.com/kfriede/awesome-sentinel\r\n\r\nResources for Microsoft Azure Sentinel and related KQL, SIEM, and SOAR functionality \r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n    - https://github.com/sindresorhus/awesome/pull/2736\r\n    - https://github.com/sindresorhus/awesome/pull/2647\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n- [x] Has a Table of Contents section.\r\n- [x] Has an appropriate license.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-17T17:07:48Z",
        "closed_at": "2023-09-18T12:42:42Z",
        "merged_at": null,
        "body": "https://github.com/e2b-dev/awesome-ai-agents\r\n\r\nThis list features AI agents, structured into two parts: Open source projects, and Closed-source projects and companies.\r\n\r\nBy submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96 Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.\r\n\r\nRequirements for your pull request\r\n Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. Instead use #2242 for incubation visibility.\r\n Don't waste my time. Do a good job, adhere to all the guidelines, and be responsive.\r\n You have to review at least 2 other open pull requests.\r\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does not count as a review. PR Comments\r\n\r\nAdd Ukrainian IT Communities #2541 (comment)\r\n\r\nAdd Data Pipeline #2515\r\n\r\n You have read and understood the instructions for creating a list.\r\n\r\n This pull request has a title in the format Add Name of List. It should not contain the word Awesome.\r\n\r\n\u2705 Add Swift\r\n\u2705 Add Software Architecture\r\n\u274c Update readme.md\r\n\u274c Add Awesome Swift\r\n\u274c Add swift\r\n\u274c add Swift\r\n\u274c Adding Swift\r\n\u274c Added Swift\r\n Your entry here should include a short description about the project/theme of the list. It should not describe the list itself. The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\r\n\u2705 - [iOS](\u2026) - Mobile operating system for Apple phones and tablets. \u2705 - [Framer](\u2026) - Prototyping interactive UI designs. \u274c - [iOS](\u2026) - Resources and tools for iOS development. \u274c - [Framer](\u2026)\r\n\u274c - [Framer](\u2026) - prototyping interactive UI designs\r\n Your entry should be added at the bottom of the appropriate category.\r\n\r\n The title of your entry should be title-cased and the URL to your list should end in #readme.\r\n\r\nExample: - [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.\r\n No blockchain-related lists.\r\n\r\n The suggested Awesome list complies with the below requirements.\r\n\r\nRequirements for your Awesome list\r\n Has been around for at least 30 days.\r\nThat means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n\r\n Run awesome-lint on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\r\n\r\nReport Linter False Positives\r\n\r\n The default branch should be named main, not master.\r\n\r\n Includes a succinct description of the project/theme at the top of the readme. (Example)\r\n\r\n\u2705 Mobile operating system for Apple phones and tablets. \u2705 Prototyping interactive UI designs.\r\n\u274c Resources and tools for iOS development.\r\n\u274c Awesome Framer packages and tools.\r\n It's the result of hard work and the best I could possibly produce.\r\nIf you have not put in considerable effort into your list, your pull request will be immediately closed.\r\n\r\n The repo name of your list should be in lowercase slug format: awesome-name-of-list.\r\n\r\n\u2705 awesome-swift\r\n\u2705 awesome-web-typography\r\n\u274c awesome-Swift\r\n\u274c AwesomeWebTypography\r\n The heading title of your list should be in title case format: # Awesome Name of List.\r\n\r\n\u2705 # Awesome Swift\r\n\u2705 # Awesome Web Typography\r\n\u274c # awesome-swift\r\n\u274c # AwesomeSwift\r\n Non-generated Markdown file in a GitHub repo.\r\n\r\n The repo should have awesome-list & awesome as GitHub topics. I encourage you to add more relevant topics.\r\n\r\n Not a duplicate. Please search for existing submissions.\r\n\r\n Only has awesome items. Awesome lists are curations of the best, not everything.\r\n\r\n Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n\r\n Includes a project logo/illustration whenever possible.\r\n\r\nEither centered, fullwidth, or placed at the top-right of the readme. (Example) The image should link to the project website or any relevant website. The image should be high-DPI. Set it to maximum half the width of the original image.\r\n Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n\r\n Includes the Awesome badge.\r\n\r\nShould be placed on the right side of the readme heading. Can be placed centered if the list has a centered graphics header. Should link back to this list.\r\n Has a Table of Contents section.\r\n\r\nShould be named Contents, not Table of Contents.\r\nShould be the first section in the list.\r\nShould only have one level of nested lists, preferably none. Must not feature Contributing or Footnotes sections.\r\n Has an appropriate license.\r\n\r\nWe strongly recommend the CC0 license, but any Creative Commons license will work. Tip: You can quickly add it to your repo by going to this URL: https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0 (replace <user> and <repo> accordingly). A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and Unlicense. Place a file named license or LICENSE in the repo root with the license text. Do not add the license name, text, or a Licence section to the readme. GitHub already shows the license name and link to the full text at the top of the repo. To verify that you've read all the guidelines, please comment on your pull request with just the word unicorn.\r\n Has contribution guidelines.\r\n\r\nThe file should be named contributing.md. Casing is up to you. It can optionally be linked from the readme in a dedicated section titled Contributing, positioned at the top or bottom of the main content. The section should not appear in the Table of Contents.\r\n All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a Footnotes section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n\r\n Has consistent formatting and proper spelling/grammar.\r\n\r\nThe link and description are separated by a dash.\r\nExample: - [AVA](\u2026) - JavaScript test runner.\r\nThe description starts with an uppercase character and ends with a period. Consistent and correct naming. For example, Node.js, not NodeJS or node.js.\r\n Does not use hard-wrapping.\r\n\r\n Does not include a CI (e.g. GitHub Actions) badge.\r\nYou can still use a CI for linting, but the badge has no value in the readme.\r\n\r\n Does not include an Inspired by awesome-foo or Inspired by the Awesome project kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\nGo to the top and read it again.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-10T21:57:31Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n[https://github.com/terraHDB/awesome-harperdb](https://github.com/terraHDB/awesome-harperdb)\r\n\r\nThis list features helpful resources and awesome content about HarperDB.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n\r\nPR Comments\r\n- [https://github.com/sindresorhus/awesome/pull/2737#issuecomment-1674015928](https://github.com/sindresorhus/awesome/pull/2737#issuecomment-1674015928)\r\n- [https://github.com/sindresorhus/awesome/pull/2734#issuecomment-1673624403](https://github.com/sindresorhus/awesome/pull/2734#issuecomment-1673624403)\r\n\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n\r\n- [Report Linter False Positives](https://github.com/sindresorhus/awesome-lint/issues/168)\r\n\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-10T11:30:11Z",
        "closed_at": "2023-09-24T17:54:29Z",
        "merged_at": "2023-09-24T17:54:29Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/airscripts/awesome-steam-deck\r\n\r\nThis awesome list contains all the resources, spacing from software and hardware, suggested for Steam Deck's ecosystem.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n## Contributions\r\n- https://github.com/sindresorhus/awesome/pull/2560#issuecomment-1666832821\r\n- https://github.com/sindresorhus/awesome/pull/2737#issuecomment-1666827446\r\n- https://github.com/sindresorhus/awesome/pull/2742#issuecomment-1672808886\r\n- https://github.com/sindresorhus/awesome/pull/2744#issuecomment-1674008050\r\n- https://github.com/sindresorhus/awesome/pull/2751#issuecomment-1683590539\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-09T18:53:06Z",
        "closed_at": "2023-08-10T22:17:45Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/zeelsheladiya/Awesome-IDEs**\r\n\r\n**A curated list of Integrated Development Environments (IDEs) and related tools that can enhance your coding experience and boost your productivity.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- \r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x]  Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-06T06:45:57Z",
        "closed_at": "2023-10-07T04:11:37Z",
        "merged_at": "2023-10-07T04:11:37Z",
        "body": "**url to list**: https://github.com/hyperupcall/awesome-mastodon\r\n**explanation**: Mastodon is a very popular decentralized platform for hosting a social networking platform. It's built on top of ActivityPub and has cemented it's legacy as an alternative social media platform since the hostile takeover of Twitter last year.\r\n\r\nThis does not add a new list; it updates the link to Awesome Mastodon. Unicorn.\r\n\r\n~~The hueyy fork is reasonably popular and seems to be actively maintained.~~ \r\n\r\nI was somewhat confused since the PR template implies all PRs are requests for new awesome lists. Which means this pull request title is apparently invalid. I wasn't sure if reviews  were necessary in this case (looking at #2459 for instructions), so I did it anyways:\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- **(N/A, changing/update link, not adding)** [] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- [x] Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- [x] Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- [x] Should be named `Contents`, not `Table of Contents`.\r\n\t- [x] Should be the first section in the list.\r\n\t- [x] Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- [x] Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- [x] Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- [x] A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- [x] Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- [x] **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- [x] To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- [x] The file should be named `contributing.md`. Casing is up to you.\r\n\t- [x] It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- [x] The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- [x] The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- [x] The description starts with an uppercase character and ends with a period.\r\n\t- [x] Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n## Reviews\r\n\r\n- [Review 1](https://github.com/sindresorhus/awesome/pull/2736#issuecomment-1666741588)\r\n- [Review 2](https://github.com/sindresorhus/awesome/pull/2620#issuecomment-1666743598)\r\n\r\nCloses #2724",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-04T21:56:28Z",
        "closed_at": "2023-10-14T18:03:10Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/pmocz/awesome-astro-codes/blob/main/README.md\r\n\r\nAdd list of state-of-the-art multi-physics simulation codes used in astrophysics research.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\nI've read and complied with the below requirements\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [ ] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [ ] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-02T09:15:47Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/shi-rudo/awesome-stock-trading\r\n\r\nList about valuable tools and educational resources about stock trading.\r\n\r\nCommented pull requests: \r\nhttps://github.com/sindresorhus/awesome/pull/2391\r\nhttps://github.com/sindresorhus/awesome/pull/2734\r\nhttps://github.com/sindresorhus/awesome/pull/2692\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n## Requirements for your pull request\r\n\r\n- \u2705 Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. \r\n- \u2705 **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- \u2705 **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n- \u2705 You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- \u2705 This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n- \u2705 Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n- \u2705 Your entry should be added at the bottom of the appropriate category.\r\n- \u2705 The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n- \u2705 No blockchain-related lists.\r\n- \u2705 The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- \u2705 **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- \u2705 Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- \u2705 The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- \u2705 **Includes a succinct description of the project/theme at the top of the readme.\r\n- \u2705 It's the result of hard work and the best I could possibly produce.\r\n- \u2705 The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n- \u2705 The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n- \u2705 Non-generated Markdown file in a GitHub repo.\r\n- \u2705 The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- \u2705 Not a duplicate. Please search for existing submissions.\r\n- \u2705 Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- \u2705 Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- \u2705 Includes a project logo/illustration whenever possible.\r\n- \u2705 Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- \u2705 Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n- \u2705 Has a Table of Contents section.\r\n- \u2705 Has an appropriate license.\r\n- \u2705 Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n- \u2705 All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- \u2705 Has consistent formatting and proper spelling/grammar.\r\n- \u2705 Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- \u2705 Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- \u2705 Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-30T23:28:41Z",
        "closed_at": "2023-10-14T18:57:02Z",
        "merged_at": "2023-10-14T18:57:02Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/FonduAI/awesome-prompt-injection\r\n\r\nThe purpose of this repository is to provide resources for understanding, detecting, and mitigating these attacks, contributing to the creation of more secure machine learning models.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n\r\n- https://github.com/sindresorhus/awesome/pull/2729#issuecomment-1657288364\r\n- https://github.com/sindresorhus/awesome/pull/2731#issuecomment-1657289511\r\n\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-29T18:47:32Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/joewdavies/awesome-frontend-gis](https://github.com/joewdavies/awesome-frontend-gis)**\r\n\r\nThis list contains all the necessary resources to visualize and analyse geographic information on web browsers.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**PRs reviewed:**\r\n\r\n- [https://github.com/sindresorhus/awesome/pull/2729#issuecomment-1656827189](https://github.com/sindresorhus/awesome/pull/2729#issuecomment-1656827189)\r\n\r\n- [https://github.com/sindresorhus/awesome/pull/2690#issuecomment-1629555997](https://github.com/sindresorhus/awesome/pull/2690#issuecomment-1629555997)\r\n\r\n- - [https://github.com/sindresorhus/awesome/pull/2719#issuecomment-1646600801](https://github.com/sindresorhus/awesome/pull/2719#issuecomment-1646600801)\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-28T02:51:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/OTFCG/Awesome-Game-Analysis**\r\n\r\n**a repository dedicated to the collection and analysis of various games, including graphics breakdown, frame analysis, gameplay design, networking and anything about game development (much focus on the programming side).**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [X] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [X] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [X] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n\r\nOther PR's Reviewed prior to this PR:\r\n\r\n- https://github.com/sindresorhus/awesome/pull/2692\r\n- https://github.com/sindresorhus/awesome/pull/2524\r\n\r\n- [X] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [X] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [X] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [X] Your entry should be added at the bottom of the appropriate category.\r\n- [X] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [X] No blockchain-related lists.\r\n- [X] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [X] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [X] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [X] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [X] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [X] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [X] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [X] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [X] Non-generated Markdown file in a GitHub repo.\r\n**(we use the [toml format data](https://github.com/OTFCG/Awesome-Game-Analysis/blob/main/data/games.toml) for [generation workflow](https://github.com/OTFCG/Awesome-Game-Analysis/blob/main/.github/workflows/Awesome-Game-Analysis.yml) and [friendly change submission](https://github.com/OTFCG/Awesome-Game-Analysis/blob/main/CONTRIBUTING.md) and for convinient of our future production)**\r\n- [X] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [X] Not a duplicate. Please search for existing submissions.\r\n- [X] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [X] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [X] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [X] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [X] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [X] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n**(We only have a few headlines, so we don't need them)**\r\n- [X] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [X] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [X] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [X] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [X] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [X] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [X] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-21T05:17:11Z",
        "closed_at": "2023-07-24T01:30:47Z",
        "merged_at": null,
        "body": "This repository contains a hand-curated resources of Artificial Intelligence technologies built by India.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[[Awesome AI By Bharat](https://github.com/yogeshhk/Awesome-AI-By-Bharat)]**\r\n\r\n**[Artificial Intelligence technologies built by India]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [ ] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [ ] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [ ] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [ ] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 39,
        "changed_files": 1,
        "created_at": "2023-07-15T08:12:55Z",
        "closed_at": "2023-07-15T11:53:05Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [ ] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [ ] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [ ] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [ ] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [ ] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [ ] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [ ] Your entry should be added at the bottom of the appropriate category.\r\n- [ ] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [ ] No blockchain-related lists.\r\n- [ ] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [ ] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [ ] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [ ] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [ ] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [ ] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [ ] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [ ] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [ ] Non-generated Markdown file in a GitHub repo.\r\n- [ ] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [ ] Not a duplicate. Please search for existing submissions.\r\n- [ ] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [ ] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [ ] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [ ] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [ ] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [ ] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [ ] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [ ] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [ ] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [ ] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [ ] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [ ] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-12T17:44:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Neuromorphic or spiking networks - brain-inspired, third generation neural networks, where neurons communicating via spikes.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/artiomn/awesome-neuromorphic#readme\r\n\r\nSpiking or neuromorphic neural networks are artificial neural networks that more closely mimic natural neural networks. In addition to neuronal and synaptic state, SNNs incorporate the concept of time into their operating model. The idea is that neurons in the SNN do not transmit information at each propagation cycle, but rather transmit information only when a membrane potential reaches a specific value, called the threshold.\r\n\r\nThis is the important and fast-grown area, that must be added to the Machine Learning page.\r\n\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n\r\n**Other PR's Reviewed prior to this PR**\r\n\r\nhttps://github.com/sindresorhus/awesome/pull/2692\r\nhttps://github.com/sindresorhus/awesome/pull/2690\r\nhttps://github.com/sindresorhus/awesome/pull/2647\r\nhttps://github.com/sindresorhus/awesome/pull/2622\r\n\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [N/A] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 30,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-07T10:40:56Z",
        "closed_at": "2023-07-07T18:33:59Z",
        "merged_at": null,
        "body": "pip install pygame\r\nOnce you have Python and Pygame set up, you can create a new Python file, such as game.py, and paste the provided code into it. The code starts by importing the necessary modules: pygame and pygame.locals. The pygame.locals module provides constants for event types, keycodes, and other useful values.\r\n\r\nAfter that, the Pygame library is initialized using pygame.init(). This step is necessary before using any Pygame functions or classes.\r\n\r\nNext, the game window is set up using the pygame.display.set_mode() function. In the example, the window size is set to 800x600 pixels, but you can modify these values to fit your game's requirements. The pygame.display.set_caption() function is used to set the title of the game window.\r\n\r\nThe code then enters a game loop, controlled by the running variable. Inside the loop, events are handled using a for loop that iterates over pygame.event.get(). This retrieves a list of all the events that have occurred since the last time this function was called. The code checks for the QUIT event, which is triggered when the user tries to close the game window. If this event is detected, the running variable is set to False, and the game loop will exit.\r\n\r\nInside the game loop, you can update your game's logic and perform any necessary calculations or modifications. This is where you would handle user input, update the positions of game objects, check for collisions, and implement the game's rules.\r\n\r\nAfter updating the game logic, the code clears the game window by filling it with a black color using window.fill((0, 0, 0)). You can change the color by providing a different RGB value as a tuple.\r\n\r\nFinally, the updated game screen is rendered by calling pygame.display.update(). This function updates the contents of the game window to reflect any changes made.\r\n\r\nThe game loop continues until the running variable is set to False, typically when the user closes the game window. Once the loop exits, Pygame is cleaned up using pygame.quit().\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [ ] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [ ] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [ ] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [ ] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [ ] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [ ] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [ ] Your entry should be added at the bottom of the appropriate category.\r\n- [ ] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [ ] No blockchain-related lists.\r\n- [ ] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [ ] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [ ] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [ ] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [ ] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [ ] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [ ] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [ ] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [ ] Non-generated Markdown file in a GitHub repo.\r\n- [ ] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [ ] Not a duplicate. Please search for existing submissions.\r\n- [ ] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [ ] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [ ] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [ ] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [ ] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [ ] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [ ] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [ ] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [ ] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [ ] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [ ] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [ ] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-04T17:47:30Z",
        "closed_at": "2023-07-05T09:17:21Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/SwiftyEdit/SwiftyEdit#readme]**\r\n\r\n**[It's an open source content management system and totally free]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [ ] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [ ] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [ ] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [ ] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [ ] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [ ] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [ ] Your entry should be added at the bottom of the appropriate category.\r\n- [ ] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [ ] No blockchain-related lists.\r\n- [ ] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [ ] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [ ] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [ ] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [ ] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [ ] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [ ] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [ ] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [ ] Non-generated Markdown file in a GitHub repo.\r\n- [ ] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [ ] Not a duplicate. Please search for existing submissions.\r\n- [ ] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [ ] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [ ] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [ ] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [ ] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [ ] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [ ] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [ ] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [ ] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [ ] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [ ] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [ ] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-06-23T22:54:41Z",
        "closed_at": "2023-07-12T17:29:06Z",
        "merged_at": null,
        "body": "Neuromorphic or spiking networks - brain-inspired, third generation neural networks, where neurons communicating via spikes.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/artiomn/awesome-neuromorphic#readme\r\n\r\nSpiking or neuromorphic neural networks are artificial neural networks that more closely mimic natural neural networks. In addition to neuronal and synaptic state, SNNs incorporate the concept of time into their operating model. The idea is that neurons in the SNN do not transmit information at each propagation cycle, but rather transmit information only when a membrane potential reaches a specific value, called the threshold.\r\n\r\nThis is the important and fast-grown area, that must be added to the Machine Learning page.\r\n\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n\r\n**Other PR's Reviewed prior to this PR**\r\n\r\nhttps://github.com/sindresorhus/awesome/pull/2692\r\nhttps://github.com/sindresorhus/awesome/pull/2690\r\nhttps://github.com/sindresorhus/awesome/pull/2647\r\nhttps://github.com/sindresorhus/awesome/pull/2622\r\n\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [N/A] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-23T13:44:05Z",
        "closed_at": "2023-06-23T13:49:44Z",
        "merged_at": null,
        "body": "I think it would be beneficial to include description of the listed programming languages in a single sentence. \r\n\r\nThis provides orientation about language you may not have heard of, whether it is relevant to you, or creates curiosity to read further into it.\r\n\r\nI have some knowledge of Erlang and Elixir, so I thought I could help out in the same way that it would be beneficial for other awesome lists.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 118,
        "changed_files": 1,
        "created_at": "2023-06-23T08:02:35Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/docker/awesome-compose#readme]**\r\n\r\n**[official docker compose examples]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [ ] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [ ] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [ ] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [ ] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [ ] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [ ] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [ ] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-22T19:03:51Z",
        "closed_at": "2023-06-22T19:05:46Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[A curated list of Tech Radars](https://github.com/lotharschulz/awesome-techradar)**\r\n\r\n**A curated list of Technology Radars that helps software engineers to understand which technologies are used in organisations that publish Tech Radars**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-22T11:27:17Z",
        "closed_at": null,
        "merged_at": null,
        "body": "**https://github.com/dotintent/awesome-ble**\r\n\r\n**Bluetooth Low Energy (aka BLE) is nowadays the foundation for lots of IoT based project, the idea is to share our findings, solutions, and libraries about that as a giveback to the community.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] No blockchain-related lists.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-21T13:20:44Z",
        "closed_at": "2023-06-21T13:27:54Z",
        "merged_at": null,
        "body": "adding Repo Reviews \ud83d\ude4f\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [ ] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [ ] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [ ] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [ ] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [ ] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [ ] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [ ] Your entry should be added at the bottom of the appropriate category.\r\n- [ ] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [ ] No blockchain-related lists.\r\n- [ ] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [ ] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [ ] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [ ] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [ ] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [ ] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [ ] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [ ] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [ ] Non-generated Markdown file in a GitHub repo.\r\n- [ ] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [ ] Not a duplicate. Please search for existing submissions.\r\n- [ ] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [ ] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [ ] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [ ] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [ ] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [ ] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [ ] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [ ] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [ ] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [ ] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [ ] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [ ] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 104,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-20T15:34:48Z",
        "closed_at": "2023-06-20T20:32:40Z",
        "merged_at": null,
        "body": "Landing page to showing the offerings, considering blogs as the main offering.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [ ] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [ ] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [ ] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [ ] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [ ] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [ ] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [ ] Your entry should be added at the bottom of the appropriate category.\r\n- [ ] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [ ] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [ ] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [ ] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [ ] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [ ] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [ ] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [ ] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [ ] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [ ] Non-generated Markdown file in a GitHub repo.\r\n- [ ] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [ ] Not a duplicate. Please search for existing submissions.\r\n- [ ] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [ ] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [ ] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [ ] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [ ] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [ ] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [ ] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [ ] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [ ] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [ ] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [ ] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [ ] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-20T14:42:41Z",
        "closed_at": "2023-06-21T10:07:48Z",
        "merged_at": "2023-06-21T10:07:48Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/cosmos/awesome-cosmos\r\n\r\nThis list contains all the resources necessary to start building in the Interchain/Cosmos ecosystem.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [N/A] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n### PR reviewed:\r\n\r\n- https://github.com/sindresorhus/awesome/pull/2424#issuecomment-1329187507\r\n- https://github.com/sindresorhus/awesome/pull/2424#discussion_r1033595595",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-06T20:24:05Z",
        "closed_at": "2023-06-06T20:27:04Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [ ] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [ ] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [ ] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [ ] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [ ] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [ ] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [ ] Your entry should be added at the bottom of the appropriate category.\r\n- [ ] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [ ] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [ ] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [ ] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [ ] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [ ] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [ ] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [ ] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [ ] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [ ] Non-generated Markdown file in a GitHub repo.\r\n- [ ] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [ ] Not a duplicate. Please search for existing submissions.\r\n- [ ] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [ ] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [ ] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [ ] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [ ] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [ ] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [ ] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [ ] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [ ] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [ ] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [ ] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [ ] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-02T22:50:59Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/andrewdmaclean/awesome-feature-flag-management\r\n\r\nFeature flags, also known as feature toggles, are conditional statements that enable developers to control the availability and behavior of software features. They have become increasingly important in modern software development as they allow for safer and more flexible feature releases, enable A/B testing, facilitate gradual rollouts, and support targeted feature deployments. This repository aims to provide resources that will help developers manage these feature flags at any scale, and to help them level up their use of this tool.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n\r\n**Other PR's Reviewed prior to this PR**\r\n- https://github.com/sindresorhus/awesome/pull/2615#issuecomment-1554747429\r\n- https://github.com/sindresorhus/awesome/pull/2622#issuecomment-1554757413\r\n\r\n\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-30T17:59:48Z",
        "closed_at": "2023-06-21T10:45:09Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/ton-community/awesome-ton](https://github.com/ton-community/awesome-ton)**\r\n\r\nThis PR is to include the TON (The Open Network) in the Decentralized Systems list. TON is a scalable and flexible blockchain platform developed by Telegram, that aims to bring speed, efficiency, and broader usability to decentralized transactions and services.\r\n\r\nThe included resource, [ton-community/awesome-ton](https://github.com/ton-community/awesome-ton), is a curated list of awesome resources, tools, and projects related to TON. It covers a wide range of categories from wallets and explorers to development resources, making it a valuable addition to the list for developers and enthusiasts in the blockchain community.\r\n\r\nThank you for considering this addition.\r\n\r\nPR Review\r\n* https://github.com/sindresorhus/awesome/pull/2647#issuecomment-1568862506\r\n* https://github.com/sindresorhus/awesome/pull/2642#issuecomment-1568866147\r\n* https://github.com/sindresorhus/awesome/pull/2640#issuecomment-1568881327\r\n* https://github.com/sindresorhus/awesome/pull/2618#issuecomment-1568886614\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\nhttps://github.com/ton-community/awesome-ton/pull/42\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\nhttps://github.com/ton-community/awesome-ton/pull/44\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\nhttps://github.com/ton-community/awesome-ton/pull/50\r\n- [x] Includes a project logo/illustration whenever possible.\r\nhttps://github.com/ton-community/awesome-ton/pull/44\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\nhttps://github.com/ton-community/awesome-ton/pull/48\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\nhttps://github.com/ton-community/awesome-ton/pull/42\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\nhttps://github.com/ton-community/awesome-ton/pull/43\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\nhttps://github.com/ton-community/awesome-ton/pull/42\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\nhttps://github.com/ton-community/awesome-ton/pull/44\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\nhttps://github.com/ton-community/awesome-ton/pull/42\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-29T08:54:33Z",
        "closed_at": "2023-05-29T09:01:53Z",
        "merged_at": null,
        "body": "The Open Network is a high-performance blockchain platform that offers a secure and scalable environment for decentralized applications (dApps) and cryptocurrency transactions. Originally known as the Telegram Open Network (TON), it provides developers the tools to create industry-specific solutions while ensuring high-speed, reliable, and transparent digital financial exchanges.\r\n\r\nhttps://ton.org/\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-28T18:33:53Z",
        "closed_at": null,
        "merged_at": null,
        "body": "[Awesome E-Ink](https://github.com/asapelkin/awesome-eink#readme)\r\n\r\nThis list is about E-Ink awesome links, projects and resources. This repository aims to provide a guide to E-ink technology, products, and development resources. Whether you're an E-ink enthusiast, a developer working on E-ink applications, or just curious about this technology, this list could be a valuable resource. Also, E-Ink can help people to deal with some problems related to eye strain.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [ ] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [ ] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [ ] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [ ] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [ ] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [ ] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [ ] Your entry should be added at the bottom of the appropriate category.\r\n- [ ] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [ ] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [ ] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [ ] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [ ] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [ ] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [ ] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [ ] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [ ] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [ ] Non-generated Markdown file in a GitHub repo.\r\n- [ ] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [ ] Not a duplicate. Please search for existing submissions.\r\n- [ ] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [ ] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [ ] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [ ] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [ ] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [ ] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [ ] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [ ] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [ ] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [ ] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [ ] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [ ] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-26T14:16:44Z",
        "closed_at": "2023-07-18T12:09:04Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/semantalytics/awesome-kafka\r\n\r\nThis list is about kafka which is an open-source distributed event streaming platform used by many teams to manage stateful events.\r\n\r\nPRs Reviewed:\r\nhttps://github.com/sindresorhus/awesome/pull/2622\r\nhttps://github.com/sindresorhus/awesome/pull/2607\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-25T14:29:31Z",
        "closed_at": "2023-10-14T15:58:54Z",
        "merged_at": "2023-10-14T15:58:54Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/dstdev/awesome-hpc](https://github.com/dstdev/awesome-hpc)**\r\n\r\nA collection of tools an resources for High Performance Computing systems.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n\r\n**Reviewed PRs**\r\n\r\n* https://github.com/sindresorhus/awesome/pull/2638#issuecomment-1561593381\r\n* https://github.com/sindresorhus/awesome/pull/2593#issuecomment-1513597625\r\n\r\n\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-23T17:15:31Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/thedoubler/awesome-maps-data#readme\r\n\r\nDynamic curated collection of interactive websites with data and real-time data, engaging maps, and stunning visualisations for air, space, history, and statistics enthusiasts. More than Google Maps and not only\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\nHope all good.\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-22T00:53:38Z",
        "closed_at": "2023-05-22T00:59:21Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/rzashakeri/awesome-persian#awesome-persian--\r\n\r\nThis list of great things like courses, books, YouTube channels and ... is in the Persian speaking world\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-18T09:58:07Z",
        "closed_at": "2023-05-18T10:36:52Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [ ] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [ ] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [ ] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [ ] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [ ] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [ ] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [ ] Your entry should be added at the bottom of the appropriate category.\r\n- [ ] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [ ] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [ ] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [ ] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [ ] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [ ] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [ ] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [ ] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [ ] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [ ] Non-generated Markdown file in a GitHub repo.\r\n- [ ] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [ ] Not a duplicate. Please search for existing submissions.\r\n- [ ] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [ ] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [ ] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [ ] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [ ] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [ ] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [ ] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [ ] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [ ] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [ ] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [ ] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [ ] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-18T08:20:37Z",
        "closed_at": "2023-05-18T08:23:28Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-17T10:00:38Z",
        "closed_at": "2023-05-17T10:53:33Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/leo-brad/drip](https://github.com/leo-brad/drip)**\r\n\r\n**[A new parrallel open source project.I hope you enjoy it ]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [ ] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [ ] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [ ] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [ ] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [ ] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [ ] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [ ] Your entry should be added at the bottom of the appropriate category.\r\n- [ ] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [ ] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [ ] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [ ] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [ ] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [ ] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [ ] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [ ] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [ ] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [ ] Non-generated Markdown file in a GitHub repo.\r\n- [ ] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [ ] Not a duplicate. Please search for existing submissions.\r\n- [ ] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [ ] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [ ] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [ ] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [ ] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [ ] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [ ] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [ ] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [ ] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [ ] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [ ] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [ ] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-14T15:35:36Z",
        "closed_at": "2023-06-21T10:45:33Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/pinax-network/awesome-substreams\r\n\r\nList for Substreams which is a powerful blockchain indexing technology, developed for **The Graph** Network.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n  - https://github.com/sindresorhus/awesome/pull/2612#issuecomment-1546922040\r\n  - https://github.com/sindresorhus/awesome/pull/2569#issuecomment-1546925197\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-14T02:24:40Z",
        "closed_at": "2023-05-14T07:11:03Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/pinax-network/awesome-substreams\r\n\r\nList for Substreams which is a powerful blockchain indexing technology, developed for [The Graph Network](https://thegraph.com/).\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n  - https://github.com/sindresorhus/awesome/pull/2612#issuecomment-1546922040\r\n  - https://github.com/sindresorhus/awesome/pull/2569#issuecomment-1546925197\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-13T12:43:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "**https://github.com/MartinZikmund/awesome-uno-platform**\r\n\r\nThe list gathers most useful resources for developers working with Uno Platform.\r\n\r\n**Reviewed PRs**\r\n- https://github.com/sindresorhus/awesome/pull/2509#issuecomment-1463688010\r\n- https://github.com/sindresorhus/awesome/pull/2482#issuecomment-1463745158\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x]  **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x]  The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x]  Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x]  The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x]  The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n- [x] To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-11T18:02:46Z",
        "closed_at": "2023-10-14T16:20:57Z",
        "merged_at": "2023-10-14T16:20:57Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/hallvaaw/awesome-biological-image-analysis\r\n\r\nImage analysis is commonly used as a means to gain insight and deeper understanding in biological studies. It is used on all levels of the biological sciences ranging from subcellular to ecosystem levels. Although some of the principles and standards are universal, the methodology and portfolio of tools are becoming increasingly complex. This list is a collection of awesome image analysis resources for use in biological studies.\r\n\r\nI have reviewed #2442 and #2512.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-10T21:43:21Z",
        "closed_at": "2023-05-11T07:38:55Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [ ] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [ ] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [ ] Non-generated Markdown file in a GitHub repo.\r\n- [ ] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [ ] Not a duplicate. Please search for existing submissions.\r\n- [ ] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [ ] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [ ] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [ ] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [ ] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [ ] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [ ] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [ ] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [ ] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [ ] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [ ] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [ ] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-10T06:51:16Z",
        "closed_at": "2023-10-14T15:45:48Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\nhttps://github.com/101010ai/awesome-attacks-ai\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\nIt is a list that contains attacks against AI like ChatGPT etc\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [ ] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [ ] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [ ] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [ ] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [ ] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [ ] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [ ] Your entry should be added at the bottom of the appropriate category.\r\n- [ ] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [ ] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [ ] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [ ] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [ ] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [ ] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [ ] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [ ] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [ ] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [ ] Non-generated Markdown file in a GitHub repo.\r\n- [ ] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [ ] Not a duplicate. Please search for existing submissions.\r\n- [ ] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [ ] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [ ] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [ ] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [ ] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [ ] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [ ] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [ ] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [ ] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [ ] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-09T19:14:41Z",
        "closed_at": "2023-06-23T14:09:18Z",
        "merged_at": null,
        "body": "https://github.com/relatedcode/awesome-mojo#readme\r\n\r\n[Mojo\ud83d\udd25](https://www.modular.com/mojo) is a programming language that combines the usability of Python with the performance of C, unlocking unparalleled programmability of AI hardware and extensibility of AI models.\r\nDespite the fact that the language is early in its development, this list has the goal of collecting all the awesome resources that are and will be available for Mojo in the future.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n  - https://github.com/sindresorhus/awesome/pull/2512#issuecomment-1540002305\r\n  - https://github.com/sindresorhus/awesome/pull/2442#issuecomment-1540004428\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n  - \u2705 `Add Swift`\r\n  - \u2705 `Add Software Architecture`\r\n  - \u274c `Update readme.md`\r\n  - \u274c `Add Awesome Swift`\r\n  - \u274c `Add swift`\r\n  - \u274c `add Swift`\r\n  - \u274c `Adding Swift`\r\n  - \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n  - \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n  - \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n  - \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n  - \u274c `- [Framer](\u2026)`\r\n  - \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n  - Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n  - \u2705 `Mobile operating system for Apple phones and tablets.`\r\n  - \u2705 `Prototyping interactive UI designs.`\r\n  - \u274c `Resources and tools for iOS development.`\r\n  - \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n      **If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n  - \u2705 `awesome-swift`\r\n  - \u2705 `awesome-web-typography`\r\n  - \u274c `awesome-Swift`\r\n  - \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n  - \u2705 `# Awesome Swift`\r\n  - \u2705 `# Awesome Web Typography`\r\n  - \u274c `# awesome-swift`\r\n  - \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n  - Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n  - The image should link to the project website or any relevant website.\r\n  - **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n  - Should be placed on the right side of the readme heading.\r\n    - Can be placed centered if the list has a centered graphics header.\r\n  - Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n  - Should be named `Contents`, not `Table of Contents`.\r\n  - Should be the first section in the list.\r\n  - Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n  - Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n  - **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n    - Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n  - A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org/).\r\n  - Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n  - **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n  - To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n  - The file should be named `contributing.md`. Casing is up to you.\r\n  - It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n  - The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n  - The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n  - The description starts with an uppercase character and ends with a period.\r\n  - Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-09T18:36:34Z",
        "closed_at": "2023-05-09T19:10:03Z",
        "merged_at": null,
        "body": "https://github.com/relatedcode/awesome-mojo#readme\r\n\r\n[Mojo\ud83d\udd25](https://www.modular.com/mojo) is a programming language that combines the usability of Python with the performance of C, unlocking unparalleled programmability of AI hardware and extensibility of AI models.\r\nDespite the fact that the language is early in its development, this list has the goal of collecting all the awesome resources that are and will be available for Mojo in the future.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n  - https://github.com/sindresorhus/awesome/pull/2512#issuecomment-1540002305\r\n  - https://github.com/sindresorhus/awesome/pull/2442#issuecomment-1540004428\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n  - \u2705 `Add Swift`\r\n  - \u2705 `Add Software Architecture`\r\n  - \u274c `Update readme.md`\r\n  - \u274c `Add Awesome Swift`\r\n  - \u274c `Add swift`\r\n  - \u274c `add Swift`\r\n  - \u274c `Adding Swift`\r\n  - \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n  - \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n  - \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n  - \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n  - \u274c `- [Framer](\u2026)`\r\n  - \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n  - Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n  - \u2705 `Mobile operating system for Apple phones and tablets.`\r\n  - \u2705 `Prototyping interactive UI designs.`\r\n  - \u274c `Resources and tools for iOS development.`\r\n  - \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n      **If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n  - \u2705 `awesome-swift`\r\n  - \u2705 `awesome-web-typography`\r\n  - \u274c `awesome-Swift`\r\n  - \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n  - \u2705 `# Awesome Swift`\r\n  - \u2705 `# Awesome Web Typography`\r\n  - \u274c `# awesome-swift`\r\n  - \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n  - Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n  - The image should link to the project website or any relevant website.\r\n  - **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n  - Should be placed on the right side of the readme heading.\r\n    - Can be placed centered if the list has a centered graphics header.\r\n  - Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n  - Should be named `Contents`, not `Table of Contents`.\r\n  - Should be the first section in the list.\r\n  - Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n  - Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n  - **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n    - Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n  - A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org/).\r\n  - Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n  - **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n  - To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n  - The file should be named `contributing.md`. Casing is up to you.\r\n  - It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n  - The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n  - The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n  - The description starts with an uppercase character and ends with a period.\r\n  - Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-06T03:41:30Z",
        "closed_at": "2023-05-21T03:16:22Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/Yuan-ManX/awesome-game-ai-devtools\r\n\r\nHere is a awesome list of game AI development tools. Here we will keep track of the Game AI Development Tools, including programming, animation, effects, modeling, audio, music and more.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-05T18:00:41Z",
        "closed_at": "2023-05-06T06:58:26Z",
        "merged_at": null,
        "body": "https://github.com/relatedcode/awesome-mojo",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-01T21:51:28Z",
        "closed_at": "2023-10-14T16:02:50Z",
        "merged_at": null,
        "body": "[https://github.com/canerbasaran/awesome-monolith#readme]\r\n\r\n[List of content describing the benefits of starting projects with a monolith architecture]\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [ ] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [ ] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [ ] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [ ] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [ ] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [ ] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [ ] Your entry should be added at the bottom of the appropriate category.\r\n- [ ] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [ ] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [ ] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [ ] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [ ] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [ ] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [ ] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [ ] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [ ] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [ ] Non-generated Markdown file in a GitHub repo.\r\n- [ ] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [ ] Not a duplicate. Please search for existing submissions.\r\n- [ ] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [ ] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [ ] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [ ] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [ ] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [ ] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [ ] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [ ] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [ ] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [ ] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [ ] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [ ] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-01T20:56:49Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/cerberauth/awesome-openidconnect](https://github.com/cerberauth/awesome-openidconnect)**\r\n\r\nOpenID Connect with its ecosystem is quite complex now with a lot of libraries, specs, and providers. This list tried to aggregate the different existing libraries, providers, specs, and different resources to learn more about this protocol. The goal is to help a developer or a decision-maker to enter into this topic.\r\n\r\nPR Reviewed and commented:\r\n- https://github.com/sindresorhus/awesome/pull/2585\r\n- https://github.com/sindresorhus/awesome/pull/2571\r\n- https://github.com/sindresorhus/awesome/pull/2560\r\n- https://github.com/sindresorhus/awesome/pull/2498\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-25T06:08:34Z",
        "closed_at": "2023-10-14T15:35:29Z",
        "merged_at": "2023-10-14T15:35:29Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/pest-parser/awesome-pest**\r\n\r\n**pest is a general purpose parser written in Rust with a focus on accessibility, correctness, and performance. It uses parsing expression grammars (or [PEG](https://en.wikipedia.org/wiki/Parsing_expression_grammar)) as input, which are similar in spirit to regular expressions, but which offer the enhanced expressivity needed to parse complex languages. The list contains links to awesome projects using pest and tools for pest.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-04-22T03:18:12Z",
        "closed_at": "2023-04-22T04:10:43Z",
        "merged_at": null,
        "body": "Awesome lists about android apps and android libraries.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-17T03:53:12Z",
        "closed_at": "2023-05-06T03:25:55Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/Yuan-ManX/awesome-game-ai-devtools\r\n\r\nHere is a awesome list of game AI development tools. Here we will keep track of the Game AI Development Tools, including programming, animation, effects, modeling, audio, music and more. \r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-12T16:00:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/KeplerC/awesome-cloud-robotics\r\n\r\nCloud robotics is a field of robotics that attempts to invoke cloud technologies such as cloud computing, cloud storage, and other Internet technologies centered on the benefits of converged infrastructure and shared services for robotics.\r\nCloud robotics is an emerging branch of the robotics that is tight with open source community and the list of an entry point to the frameworks and research advancement.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\nhttps://github.com/sindresorhus/awesome/pull/2431#issuecomment-1505482851\r\nhttps://github.com/sindresorhus/awesome/pull/2569#issuecomment-1505499758\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-10T08:13:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "https://github.com/aabouzaid/awesome-kustomize\r\n\r\n[Kustomize](https://kustomize.io/) introduces a template-free way to customize Kubernetes manifests. It's extensible and uses a purely declarative approach to configuration customization, which will help you efficiently manage your Infrastructure as a code (IaC).\r\n\r\nKustomize is one of the [official](https://kubectl.docs.kubernetes.io/references/kustomize/) tools for managing Kubernetes resources, and this list will be the entry point for anyone to learn about Kustomize.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n  - https://github.com/sindresorhus/awesome/pull/2571#issuecomment-1501472676\r\n  - https://github.com/sindresorhus/awesome/pull/2736#issuecomment-1667879608\r\n  - https://github.com/sindresorhus/awesome/pull/2737#issuecomment-1667869111\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-02T13:01:27Z",
        "closed_at": "2023-05-19T10:35:17Z",
        "merged_at": "2023-05-19T10:35:17Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/thoughtspile/awesome-tiny-js#readme**\r\n\r\nThis is a list of small frontend libraries \u2014 mostly under 2Kb, with exceptions for select categories. Smaller frontend libraries help you build smaller apps, resulting in better user experience and fewer wasted resources. Apart from production usage: \r\n- A well-organized list of small libraries helps open-source developers focus their efforts on fields that are not already well-covered. \r\n- The cruft-free code of small libraries is an excellent learning material to understand how a class of libraries works \u2014 e.g. [hyperapp source](https://github.com/jorgebucaran/hyperapp/blob/main/index.js) is a great overview of virtual DOM.\r\n- Many people put considerable effort into engineering size-conscious libraries, and deserve recognition for that.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\t- https://github.com/sindresorhus/awesome/pull/2569#issuecomment-1493308363\r\n\t- https://github.com/sindresorhus/awesome/pull/2565#issuecomment-1493303277\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-02T09:48:19Z",
        "closed_at": "2023-10-14T15:30:37Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/A-make/awesome-control-theory**\r\n\r\n**Provides resources on Control Theory and Control Engineering. Getting pretty good traction.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [ ] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-30T20:36:53Z",
        "closed_at": "2023-06-21T11:03:22Z",
        "merged_at": "2023-06-21T11:03:22Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\nhttps://github.com/rickstaa/awesome-adsb\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\nThis pull request contains an ADS-B awesome list that can be used as a reference for ADS-B enthusiasts. **Automatic Dependent Surveillance\u2013Broadcast (ADS-B)** is a surveillance technology and form of Electronic [Conspicuity](https://en.wikipedia.org/wiki/Airborne_collision_avoidance_system#Aircraft_collision_avoidance) in which an [aircraft](https://en.wikipedia.org/wiki/Aircraft) determines its position via [satellite navigation](https://en.wikipedia.org/wiki/Satellite_navigation) or other sensors and periodically broadcasts it, enabling it to be tracked.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n  - https://github.com/sindresorhus/awesome/pull/2565#issuecomment-1493322685\r\n  - https://github.com/sindresorhus/awesome/pull/2509#issuecomment-1493325145\r\n  - https://github.com/sindresorhus/awesome/pull/2449#issuecomment-1493328849\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-30T13:10:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "**https://github.com/firefly-cpp/awesome-computational-intelligence-in-sports#readme**\r\n\r\nThis is a list of resources related to Computational Intelligence (CI) methods in sports. The list includes books, scientific literature, datasets, software, and web applications that are relevant to researchers who work on applying CI techniques in sports.\r\n\r\nThe list is curated to provide researchers with easy access to a wide range of resources on the topic. The resources in the list are cited using the MLA 8th edition format and cover a variety of sports such as cycling, soccer, track and field, triathlon, and wrestling.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [\u2714\ufe0f] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [\u2714\ufe0f] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [\u2714\ufe0f] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n    - #2560 -> [Comment](https://github.com/sindresorhus/awesome/issues/2560#issuecomment-1485589406_)\r\n    - #2550 -> [Comment](https://github.com/sindresorhus/awesome/issues/2550#issuecomment-1480877823_)\r\n- [\u2714\ufe0f] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [\u2714\ufe0f] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [\u2714\ufe0f] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [\u2714\ufe0f] Your entry should be added at the bottom of the appropriate category.\r\n- [\u2714\ufe0f] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [\u2714\ufe0f] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [\u2714\ufe0f] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [\u2714\ufe0f] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [\u2714\ufe0f] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [\u2714\ufe0f] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [\u2714\ufe0f] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [\u2714\ufe0f] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [\u2714\ufe0f] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [\u2714\ufe0f] Non-generated Markdown file in a GitHub repo.\r\n- [\u2714\ufe0f] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [\u2714\ufe0f] Not a duplicate. Please search for existing submissions.\r\n- [\u2714\ufe0f] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [\u2714\ufe0f] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [\u2714\ufe0f] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [\u2714\ufe0f] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [\u2714\ufe0f] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [\u2714\ufe0f] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [\u2714\ufe0f] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [\u2714\ufe0f] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [\u2714\ufe0f] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [\u2714\ufe0f] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [\u2714\ufe0f] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [\u2714\ufe0f] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [\u2714\ufe0f] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-23T18:24:05Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/beansource/awesome-orgs**\r\n\r\n**This is a list of awesome GitHub Organizations.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.** \u2705 \r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n  - [**#2525**](https://github.com/sindresorhus/awesome/pull/2525#pullrequestreview-1327267017), [**#2539**](https://github.com/sindresorhus/awesome/pull/2539#issuecomment-1464266843), & [**#2503**](https://github.com/sindresorhus/awesome/pull/2503#pullrequestreview-1355330749)\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.** \u2705 \r\n",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-12T10:34:14Z",
        "closed_at": "2023-03-12T10:34:50Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 32,
        "changed_files": 1,
        "created_at": "2023-03-11T19:54:46Z",
        "closed_at": "2023-03-13T07:17:38Z",
        "merged_at": "2023-03-13T07:17:38Z",
        "body": "This PR tweak the pull request template to use a check box list for contributor to check while making the PR to submit a new list.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-11T19:46:42Z",
        "closed_at": "2023-04-24T19:43:58Z",
        "merged_at": "2023-04-24T19:43:58Z",
        "body": "**<https://github.com/mcanouil/awesome-quarto#readme>**\r\n\r\n**This list is about [Quarto\u00ae](https://quarto.org/), an open-source scientific and technical publishing system built on Pandoc, allowing several HTML/PDF formats and computations through R/knitr or Jupyter.**\r\n\r\nPR Reviewed:\r\n- <https://github.com/sindresorhus/awesome/pull/2397#issuecomment-1280935757>\r\n- <https://github.com/sindresorhus/awesome/pull/2539#issuecomment-1464991303>\r\n\r\nMentionned in #2242: <https://github.com/sindresorhus/awesome/issues/2242#issuecomment-1200429106>\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- [x] Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-10T15:40:41Z",
        "closed_at": "2023-03-10T19:28:07Z",
        "merged_at": "2023-03-10T19:28:07Z",
        "body": "Removing a related resource that appears to be decommissioned. ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 502,
        "deletions": 498,
        "changed_files": 1,
        "created_at": "2023-03-08T17:40:58Z",
        "closed_at": "2023-03-09T02:11:07Z",
        "merged_at": null,
        "body": "listed sections in Alphabetical order\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-08T17:10:35Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Adding a list of Ukrainian IT Communities.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n[Ukrainian IT Communities](https://github.com/grem11n/awesome-it-communities-ua/#readme)\r\n\r\nThis is a list of Ukrainian communities such as forums, Telegram and Slack chats, and offline platforms that cover topics of programming, data science, QA, DevOps, and software engineering practices in general.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-07T21:50:59Z",
        "closed_at": "2023-06-21T10:46:51Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-03T04:05:45Z",
        "closed_at": "2023-06-21T10:43:38Z",
        "merged_at": null,
        "body": "https://github.com/klaytn/awesome-klaytn#readme\r\n\r\nThis list introduces all links related to core and ecosystem development of Klaytn, an open-source public blockchain designed for tomorrow's on-chain world. it will be very helpful for the developer community to accelerate blockchain adoption and build highly scalable dApps.\r\n\r\nPlease find the Reviewed PRs below:\r\nhttps://github.com/sindresorhus/awesome/pull/2512#issuecomment-1445644823\r\nhttps://github.com/sindresorhus/awesome/pull/2470#issuecomment-1445872896\r\nhttps://github.com/sindresorhus/awesome/pull/2513#issuecomment-1445858614\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-23T16:33:21Z",
        "closed_at": "2023-02-23T17:06:09Z",
        "merged_at": null,
        "body": "A collective list of free APIs for use in software and web development. It is useful a repository as it contain almost all the public APIs.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/public-apis/public-apis**\r\n\r\n**A collective list of free APIs for use in software and web development. It is useful a repository as it contain almost all the public APIs.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. Comments pointing out lint violation are allowed, but does **not** count as a review.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`. It should not contain the word `Awesome`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Does not use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Does not include a CI (e.g. GitHub Actions) badge.<br>You can still use a CI for linting, but the badge has no value in the readme.\r\n- Does not include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-13T21:34:38Z",
        "closed_at": "2023-02-14T03:51:21Z",
        "merged_at": null,
        "body": "https://github.com/bencherdev/bencher\r\n\r\n[Bencher](https://bencher.dev/) is a suite of [continuous benchmarking](https://bencher.dev/docs/explanation/continuous-benchmarking) tools designed to catch performance regressions in CI. That is, Bencher allows you to detect and prevent performance regressions before they make it to production.\r\n\r\nBencher consists of:\r\n\r\n    - `bencher` CLI\r\n    - Bencher API Server\r\n    - Bencher Web UI",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-13T18:54:44Z",
        "closed_at": "2023-03-07T17:15:08Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/dfinity/awesome-internet-computer#readme\r\n\r\nThis list relates to the [Internet Computer](https://internetcomputer.org/) (IC), a horizontally scalable blockchain that runs at web speed. The IC has a thriving community of developers with a growing toolset and adding it to this list would help support these developers in discovering the tools that they need to build decentralized applications on the IC.\r\n\r\nThis PR supersedes #2390 and accounts for everything requested in the initial review. I read through all the guidelines several times, but definitely let me know if there's anything else we need to change. Thank you!\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-13T13:12:17Z",
        "closed_at": "2023-09-13T14:04:01Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/zakarialaoui10/awesome-processing#readme**\r\n\r\n**\r\nProcessing is a flexible software sketchbook and language for learning how to code. It is based on Java, with additional simplifications such as additional classes and aliased mathematical functions and operations. It has a language syntax identical to Java but with a few modifications, and is designed from the ground up to provide an environment for visual arts.\r\n**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-09T20:10:33Z",
        "closed_at": "2023-02-10T08:47:51Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/dotnet/aspnetcore**\r\n\r\n**this includes asp.net core which is an enterprise framework and has been around for years. Asp.net is a Free, Cross-platform and Open-source framework for building web apps and services with .NET and C# **\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-09T19:54:13Z",
        "closed_at": "2023-02-09T20:01:41Z",
        "merged_at": null,
        "body": "Added Asp.net core to the list\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-07T06:08:24Z",
        "closed_at": "2023-06-21T10:43:59Z",
        "merged_at": null,
        "body": "https://github.com/avasdao/awesome-nexa\r\n\r\nThis is a curated list of awesome resources actively supporting the (recently launched) Nexa blockchain and its community of users.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-06T12:09:01Z",
        "closed_at": "2023-09-24T17:58:06Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n[KennethanCeyer/awesome-data-pipeline#readme](https://github.com/KennethanCeyer/awesome-data-pipeline#readme)\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\nData pipelines are important because they provide a streamlined and automated method for moving and processing data.\r\nBy sharing the trend of data pipelines with the public GitHub users by listing as the awesome format can have several benefits, including:\r\n\r\n- **Increased awareness**:<br />Sharing trends helps public understand the field & benefits of data pipeline.\r\n- **Improved decision making**:<br />Understanding data pipeline trends helps organizations adopt tools & technologies of data pipeline.\r\n- **Enhanced innovation**:<br/>Sharing data pipeline trends sparks new ideas & leads to better tools & technologies.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-05T18:51:57Z",
        "closed_at": "2023-09-24T17:56:49Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/LeoDog896/awesome-minestom\r\n\r\n`awesome-minestom` is a list for the Minecraft server implementation, [Minestom](https://github.com/Minestom/Minestom/). However, since its community mainly resides in discord, and the website only shows all projects tagged with `minestom-*`, it makes it hard to find good resources in it. Thus, it seems very appropriate to give it the awesome list that it deserves.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-05T14:54:06Z",
        "closed_at": "2023-09-24T17:56:06Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/ai-collection/ai-collection\r\n\r\nIt is a collection of awesome generative AI applications that have place for more visibility on the web. Every website is checked for quality and links are periodically checked using a Lychee GitHub Action. Websites that are not responsive are removed from the list. \r\nThe list passes the awesome-linter and I will make sure that it stays this way.\r\nThe list does not starts with an `awesome-` prefix but I saw awesome lists that does not start with it so trying to leave the name as is (e.g https://github.com/papers-we-love/papers-we-love)\r\n\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 16
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-05T14:38:11Z",
        "closed_at": "2023-02-06T12:06:49Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[\u26a0\ufe0f Note for linting errors]**\r\n\r\nThere is a Missing main header lint issue,\r\nbut, The heading provided in HTML instead of Markdown. (for center alignment)\r\n\r\nThis is an issue where Heading is actually provided but not recognized by lint.\r\nFor design purposes, we want to keep it this way.\r\n\r\n**[Insert URL to the list here]**\r\n[KennethanCeyer/awesome-data-pipeline#readme](https://github.com/KennethanCeyer/awesome-data-pipeline#readme)\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\nData pipelines are important because they provide a streamlined and automated method for moving and processing data.\r\nBy sharing the trend of data pipelines with the public GitHub users by listing as the awesome format can have several benefits, including:\r\n\r\n- **Increased awareness**:<br />Sharing trends helps public understand the field & benefits of data pipeline.\r\n- **Improved decision making**:<br />Understanding data pipeline trends helps organizations adopt tools & technologies of data pipeline.\r\n- **Enhanced innovation**:<br/>Sharing data pipeline trends sparks new ideas & leads to better tools & technologies.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-05T12:19:15Z",
        "closed_at": "2023-02-05T14:34:37Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\nhttps://github.com/KennethanCeyer/awesome-data-pipeline#readme\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\nData pipelines are important because they provide a streamlined and automated method for moving and processing data.\r\nBy sharing the trend of data pipelines with the public GitHub users by listing as the awesome format can have several benefits, including:\r\n\r\n1. Increased awareness: Sharing trends helps public understand the field & benefits of data pipeline.\r\n2. Improved decision making: Understanding data pipeline trends helps organizations adopt tools & technologies of data pipeline.\r\n3. Enhanced innovation: Sharing data pipeline trends sparks new ideas & leads to better tools & technologies.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-02T21:05:07Z",
        "closed_at": "2023-06-21T10:32:17Z",
        "merged_at": "2023-06-21T10:32:17Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Awesome Game Production](https://github.com/vhladiienko/awesome-game-production#readme)**\r\n\r\n**This list collects awesome resources for game producers specifically (sometimes oversimplified as Project Managers in game development), as leading a game production process requires numerous skills and knowledge in a whole variety of areas.**\r\n\r\nReviewed PRs:\r\n\r\n- https://github.com/sindresorhus/awesome/pull/2470 ([comment](https://github.com/sindresorhus/awesome/pull/2470#issuecomment-1402636074))\r\n- https://github.com/sindresorhus/awesome/pull/2503 ([comment](https://github.com/sindresorhus/awesome/pull/2503#issuecomment-1410874206))\r\n- https://github.com/sindresorhus/awesome/pull/2502 ([comment](https://github.com/sindresorhus/awesome/pull/2502#issuecomment-1410880202))\r\n- https://github.com/sindresorhus/awesome/pull/2448 ([comment](https://github.com/sindresorhus/awesome/pull/2448#issuecomment-1397550214))\r\n- https://github.com/sindresorhus/awesome/pull/2626#issuecomment-1563501053\r\n- https://github.com/sindresorhus/awesome/pull/2620#pullrequestreview-1444620992\r\n- https://github.com/sindresorhus/awesome/pull/2618#issuecomment-1563493647\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-31T18:48:11Z",
        "closed_at": "2023-10-14T18:50:18Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/Symbitic/awesome-babylonjs**\r\n\r\n**The list contains resources about the popular open-source game engine Babylon.js - a framework for web and native game development written in TypeScript.**\r\n\r\n> PR's reviewed:\r\n> \r\n> * [Add Hackathon #2433 (comment)](https://github.com/sindresorhus/awesome/pull/2433#issuecomment-1409775245)\r\n> * [Add Awesome ChatGPT Prompts #2449 (comment)](https://github.com/sindresorhus/awesome/pull/2449#issuecomment-1409781759)\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 23
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-29T15:06:52Z",
        "closed_at": "2023-06-30T13:17:29Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- bruh i added an existing one -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[add this list](https://github.com/FunkinCrew/funkin-resources)**\r\n\r\nthis list is all about fnf and i was wondering if i can put it here lol\r\n\r\nthis list is made by @FunkinCrew (fnf developers), not me\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-01-26T14:41:08Z",
        "closed_at": "2023-05-01T21:36:12Z",
        "merged_at": null,
        "body": "**[https://github.com/canerbasaran/awesome-monolith#readme]**\r\n\r\n**[List of content describing the benefits of starting projects with a monolith architecture]**\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-25T21:39:40Z",
        "closed_at": "2023-02-14T15:06:07Z",
        "merged_at": null,
        "body": "https://github.com/aliesbelik/awesome-locust\r\n\r\nThe list contains resources about the popular open-source load testing framework Locust, written in Python.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-24T19:01:27Z",
        "closed_at": "2023-06-21T10:16:28Z",
        "merged_at": "2023-06-21T10:16:28Z",
        "body": "**https://github.com/Karneades/awesome-security-card-games**\r\n\r\n**Security card games (which are sometimes known as tabletop exercises) help train skills for various areas of security, let discuss technical topics while playing a game. It's useful to find these good security card games for training and awareness purposes.**\r\n\r\n**The list is short but includes all the card games in the security area which I found over the last few years.**\r\n\r\nPR's reviewed:\r\n* https://github.com/sindresorhus/awesome/pull/2482#issuecomment-1402422558\r\n* https://github.com/sindresorhus/awesome/pull/2478#issuecomment-1402435267\r\n* https://github.com/sindresorhus/awesome/pull/2477#issuecomment-1402440102\r\n* https://github.com/sindresorhus/awesome/pull/2470#issuecomment-1402461450\r\n* https://github.com/sindresorhus/awesome/pull/2463#issuecomment-1402469481\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 917,
        "changed_files": 1,
        "created_at": "2023-01-15T09:58:18Z",
        "closed_at": "2023-01-15T10:02:11Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-10T03:14:56Z",
        "closed_at": "2023-06-22T11:10:11Z",
        "merged_at": "2023-06-22T11:10:11Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/stevinz/awesome-game-engine-dev**\r\n\r\n**Resources geared toward development of high-level, fully featured game engines. For curious minds or those interested in game engine development.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- [Comment on 2481](https://github.com/sindresorhus/awesome/pull/2481#issuecomment-1376649472)\r\n- [Comment on 2478](https://github.com/sindresorhus/awesome/pull/2478#issuecomment-1376658070)\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-08T18:35:06Z",
        "closed_at": "2023-01-15T19:23:55Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-06T11:41:39Z",
        "closed_at": "2023-04-23T17:50:27Z",
        "merged_at": null,
        "body": "I've created [Awesome Qubes](https://github.com/samet-g/awesome-qubess#readme)!\r\n\r\nThe project's aim is to provide security-focused features, such as AppArmor integration, a secure networking stack, and support for secure boot. It is designed to be easy to use and is suitable for both who want to be anonymous.\r\n\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n**[[awesome-qubes]](https://github.com/samet-g/awesome-qubes#readme)**\r\n\r\n**Qubes OS is a [security-focused](https://en.wikipedia.org/wiki/Security-focused_operating_system) desktop [Linux distribution](https://en.wikipedia.org/wiki/Linux_distribution) that aims to provide [security](https://en.wikipedia.org/wiki/Computer_security) through isolation.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-06T07:10:48Z",
        "closed_at": "2023-04-23T17:48:53Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nHello Unicorn,\r\n\r\nI've created [awesome-qubes-os](https://github.com/xn0px90/awesome-qubes-os#readme)\r\n\r\nThe project provides practical, usable security to vulnerable and actively-targeted individuals, such as journalists, activists, whistleblowers, and researchers. Qubes is designed with the understanding that people make mistakes, and it allows you to protect yourself from your own mistakes. It's a place where you can click on links, open attachments, plug in devices, and install software free from worry. It's a place where you have control over your software, not the other way around. \r\n\r\n**[https://github.com/xn0px90/awesome-qubes-os](https://github.com/xn0px90/awesome-qubes-os#readme)**\r\n\r\n**[Qubes OS is a free and open-source, security-oriented operating system for single-user desktop computing. Qubes OS leverages[ Xen-based virtualization](https://wiki.xen.org/wiki/Xen_Project_Software_Overview) to allow for the creation and management of isolated compartments called [qubes](https://www.qubes-os.org/doc/glossary#qube).]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-03T14:56:33Z",
        "closed_at": "2023-04-23T18:01:34Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/wmariuss/awesome-devops\r\n\r\nCombine the platforms, tools, practice and resources to create and improve DevOps culture, as well Site Reliability Engineering in a org.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-01T20:15:11Z",
        "closed_at": "2023-01-01T23:28:04Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-27T18:02:32Z",
        "closed_at": "2022-12-28T09:30:17Z",
        "merged_at": null,
        "body": "I looked for other [repos](https://github.com/Omikorin/awesome-carbon) but they seem inactive so I created a repo for it. I will keep it updated so you can add the repo to the list.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-27T13:24:02Z",
        "closed_at": "2023-04-23T18:36:05Z",
        "merged_at": "2023-04-23T18:36:05Z",
        "body": "Hello Unicorn,\r\n\r\nI've created [Awesome Certificates](https://github.com/PanxProject/awesome-certificates#readme)!\r\n\r\n**The project's aim is to provide free certifications & digital badges to earn, currently in computer science and infromation technology.**\r\n\r\nI have reviewed and commented on these PRs: [#2453](https://github.com/sindresorhus/awesome/pull/2453#issuecomment-1365686751), [#2465](https://github.com/sindresorhus/awesome/pull/2465#issuecomment-1366292048), [#2418](https://github.com/sindresorhus/awesome/pull/2418#pullrequestreview-1230586435), [ #2435](https://github.com/sindresorhus/awesome/pull/2435#pullrequestreview-1239212521) and [#2394](https://github.com/sindresorhus/awesome/pull/2394#pullrequestreview-1230445990).\r\n\r\nI've also followed the guidelines and checked project with `awesome-lint` with no issues detected. \r\n\r\nLooking forward to be awesome,\r\nThanks!\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-27T12:26:20Z",
        "closed_at": "2022-12-27T13:17:39Z",
        "merged_at": null,
        "body": "Hello Unicorn,\r\n\r\nI've created [Awesome Certificates](https://github.com/PanxProject/awesome-certificates#readme)!\r\n\r\n**The project's aim is to provide free computer science certifications & digital badges to earn.**\r\n\r\nI have reviewed and commented on these PRs: [#2453](https://github.com/sindresorhus/awesome/pull/2453#issuecomment-1365686751), [#2418](https://github.com/sindresorhus/awesome/pull/2418#pullrequestreview-1230586435) and [#2394](https://github.com/sindresorhus/awesome/pull/2394#pullrequestreview-1230445990).\r\n\r\nI've also followed the guidelines and checked project with `awesome-lint` with no issues detected. \r\n\r\nLooking forward to be awesome,\r\nThanks!",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-19T19:23:01Z",
        "closed_at": "2022-12-21T21:03:29Z",
        "merged_at": "2022-12-21T21:03:29Z",
        "body": "This PR updates the link to the Web Components awesome list, which has been transferred and renamed:\r\n\r\n- Before: https://github.com/mateusortiz/webcomponents-the-right-way\r\n- After: https://github.com/web-padawan/awesome-web-components\r\n\r\nBackground: @mateusortiz has created this repo, but he no longer works on maintaining it.\r\nWe agreed on this with Mateus as he has been inactive on GitHub for more than 2 years.\r\n\r\nAlso note that I've been maintaining this list since December 2018 for more than 4 years - see [this post](https://dev.to/webpadawan/web-components-the-right-way-project-relaunch-20d7).\r\nFor more on the reason for renaming see this PR: https://github.com/web-padawan/awesome-web-components/pull/69\r\n\r\nhanks in advance for taking a look at this PR \ud83d\ude4f  I'll try to do my best to review two PRs in this repository.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-14T23:08:07Z",
        "closed_at": "2023-06-21T10:01:47Z",
        "merged_at": "2023-06-21T10:01:47Z",
        "body": "This project lints correctly:\r\n```\r\n$ npx awesome-lint\r\n\u2714 Linting\r\n$\r\n```\r\nand has been out there for 30 days. Let's get it into the list! :)\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/satta/awesome-suricata#readme**\r\n\r\nThis list contains resources in support of Suricata, a Free intrusion detection/prevention system and Network Security Monitoring engine. Suricata is a state of the art software tool that is used by many organizations, and that has spawned an active community of users and developers providing software, information and rulesets to support Suricata's mission.\r\n\r\nAs a member of that community, I compiled this list to gather these resources and create some visibility for the awesome projects out there!\r\n\r\nMy 2 reviews:\r\n\r\n* https://github.com/sindresorhus/awesome/pull/2391#issuecomment-1352326001\r\n* https://github.com/sindresorhus/awesome/pull/2442#issuecomment-1352336421\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-14T00:12:31Z",
        "closed_at": "2023-06-20T23:06:40Z",
        "merged_at": "2023-06-20T23:06:40Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n[awesome-steam](https://github.com/RahulBirCodes/awesome-steam)\r\n\r\nA curated list of science, technology, engineering, art, and math (STEAM) resources to help aid students in specific classes across all grade levels or to provide curious minds with a starting point into numerous topics.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n\r\n- [Pull Request #2449](https://github.com/sindresorhus/awesome/pull/2449#pullrequestreview-1214943304)\r\n- [Pull Request #2448](https://github.com/sindresorhus/awesome/pull/2448#pullrequestreview-1216371914)\r\n\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2022-12-13T09:31:19Z",
        "closed_at": "2022-12-13T10:03:29Z",
        "merged_at": null,
        "body": "Theme with Ukraine is not actual now/\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-11T15:17:49Z",
        "closed_at": "2023-06-20T13:20:40Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n\r\nhttps://github.com/f/awesome-chatgpt-prompts\r\n\r\nA collection of prompt examples to be used with the ChatGPT model. It should be included because ChatGPT is a very popular AI Chatbot and the awesome repo linked has [3k stars](https://github.com/f/awesome-chatgpt-prompts/stargazers) despite being [created](https://github.com/f/awesome-chatgpt-prompts/commit/980e43eedfb2cb66297e7e4df120e8d3629c83db) less than 7 days ago.\r\n\r\nI know this doesn't meet the rule: **Has been around for at least 30 days.**. However, given the high level of interest in this project, I propose we make an exception.\r\n\r\n- PR to add the awesome badge: https://github.com/f/awesome-chatgpt-prompts/pull/39\r\n\r\nOpen Pull Requests I've reviewed:\r\n- https://github.com/sindresorhus/awesome/pull/2435#pullrequestreview-1212710458\r\n- https://github.com/sindresorhus/awesome/pull/2445#pullrequestreview-1212711880\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-10T21:08:34Z",
        "closed_at": "2023-04-23T17:55:21Z",
        "merged_at": "2023-04-23T17:55:21Z",
        "body": "https://github.com/bytecauldron/awesome-gamemaker\r\n\r\nGameMaker is a popular, beginner-friendly video game engine for 2D (and 3D) titles. The community has created many great extensions and resources over the years that are worth sharing with both beginner and advanced game developers.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-01T17:46:41Z",
        "closed_at": "2023-02-11T17:08:46Z",
        "merged_at": "2023-02-11T17:08:46Z",
        "body": "https://github.com/steven2358/awesome-generative-ai\r\n\r\nA list of models and services that allow people to generate text, code, images, audio, and so on. The included resources are \"modern\", meaning most of them are based on neural networks known as Large Language Models that have started to appear in 2020 with GPT-3. While the first models focused on the generation of text, and then computer code, in 2022 these models have meade headlines with the release of models that generate high-quality imagery. The list is ordered by the type of content that is to be generated, i.e. text, code, image, video, audio, and more.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive. \u2714\ufe0f\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. \u2714\ufe0f\r\n  - #2431\r\n  - #2433\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md). \u2714\ufe0f\r\n- This pull request has a title in the format `Add Name of List`. \u2714\ufe0f\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb. \u2714\ufe0f\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category. \u2714\ufe0f\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`. \u2714\ufe0f\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements. \u2714\ufe0f\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent. \u2714\ufe0f\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**. \u2714\ufe0f\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new). \u2714\ufe0f\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/). \u2714\ufe0f\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self) \u2714\ufe0f\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce. \u2714\ufe0f\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`. \u2714\ufe0f\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`. \u2714\ufe0f\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo. \u2714\ufe0f\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics. \u2714\ufe0f\r\n- Not a duplicate. Please search for existing submissions. \u2714\ufe0f\r\n- Only has awesome items. Awesome lists are curations of the best, not everything. \u2714\ufe0f\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file. \u2714\ufe0f\r\n- Includes a project logo/illustration whenever possible. \u2714\ufe0f\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though. \u2714\ufe0f\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge). \u2714\ufe0f\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section. \u2714\ufe0f\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license. \u2714\ufe0f\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines). \u2714\ufe0f\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents. \u2714\ufe0f\r\n- Has consistent formatting and proper spelling/grammar. \u2714\ufe0f\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap). \u2714\ufe0f\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme. \u2714\ufe0f\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough. \u2714\ufe0f\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-29T09:20:16Z",
        "closed_at": "2023-06-20T13:20:17Z",
        "merged_at": null,
        "body": "\r\n\r\ncheers\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/ringabout/awesome-nim#readme\r\n\r\nstatically typed compiled systems programming language; 14k stars; been around for a few years\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-21T22:17:07Z",
        "closed_at": "2022-11-22T07:31:06Z",
        "merged_at": null,
        "body": "https://github.com/ghuntley/awesome-github-blocks/\r\n\r\nCollation of all things related to https://blocks.githubnext.com/ which is currently in preview. As the preview expands and more things are created \"what is awesome\" rises to the top \ud83d\ude80 and what is not awesome will get \u2694\ufe0f'ed away.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-21T16:43:40Z",
        "closed_at": "2023-06-20T13:19:47Z",
        "merged_at": null,
        "body": "Hello! \r\nJust added the awesome-desci repo on your list. \r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 --> \r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/DeSciWorldDAO/awesome-desci#readme]**\r\n\r\n**[(De)centralized (Sci)ence is a nascent movement in the web3 space, where scientists are looking for blockchain-based solutions to structural issues we've got in traditional science. We are a community project that aims to be the global hub for the DeSci community. We would be very thankful if you add our list to your repo!\r\n]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\nunicorn\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 25
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-21T15:02:07Z",
        "closed_at": "2023-04-23T08:31:52Z",
        "merged_at": "2023-04-23T08:31:52Z",
        "body": "https://github.com/dribdat/awesome-hackathon\r\n\r\nTips and tools for running tolerant and productive hackathons. We started this list a year ago to connect with other hackathon organizers. In my opinion, hackathons are placed perfectly at the intersection of awesome \"Learning\" and \"Security\" topics.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive. :heavy_check_mark: \r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).** :heavy_check_mark: \r\n  - [#2431](https://github.com/sindresorhus/awesome/pull/2431#pullrequestreview-1188329868)\r\n  - [#2428](https://github.com/sindresorhus/awesome/pull/2428#pullrequestreview-1188337238)\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md). :heavy_check_mark: \r\n- This pull request has a title in the format `Add Name of List`. :heavy_check_mark: \r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.  :heavy_check_mark: \r\n- Your entry should be added at the bottom of the appropriate category.  :heavy_check_mark: \r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.  :heavy_check_mark: \r\n- The suggested Awesome list complies with the below requirements.  :heavy_check_mark: \r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.** :heavy_check_mark: \r\n- Don't open a Draft / WIP pull request while you work on the guidelines. :heavy_check_mark: \r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. :heavy_check_mark: \r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/). :heavy_check_mark: \r\n- **Includes a succinct description of the project/theme at the top of the readme.** :heavy_check_mark: \r\n- It's the result of hard work and the best I could possibly produce. :heavy_check_mark: \r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`. :heavy_check_mark: \r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`. :heavy_check_mark: \r\n- Non-generated Markdown file in a GitHub repo. :heavy_check_mark: \r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics. :heavy_check_mark: \r\n- Not a duplicate. Please search for existing submissions. :heavy_check_mark: \r\n- Only has awesome items. Awesome lists are curations of the best, not everything. :heavy_check_mark: \r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file. :heavy_check_mark: \r\n- Includes a project logo/illustration whenever possible. :heavy_check_mark: \r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though. :heavy_check_mark: \r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge). :heavy_check_mark: \r\n- Has a Table of Contents section. :heavy_check_mark: \r\n- Has an appropriate license. :heavy_check_mark: \r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines). :heavy_check_mark: \r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents. :heavy_check_mark: \r\n- Has consistent formatting and proper spelling/grammar. :heavy_check_mark: \r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap). :heavy_check_mark: \r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme. :heavy_check_mark: \r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough. :heavy_check_mark: \r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-18T19:33:11Z",
        "closed_at": "2023-06-20T13:19:21Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/LutingWang/awesome-knowledge-distillation-for-object-detection\r\n\r\nAbove is a curated list of distillation techniques designed for knowledge transfer between object detectors for higher accuracy and faster convergence. Since object detection is a core task in computer vision, the list goes under the `Computer Vision` entry.\r\n\r\nReviewed:\r\n1. https://github.com/sindresorhus/awesome/pull/2424#issuecomment-1320240700\r\n2. https://github.com/sindresorhus/awesome/pull/2426\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-15T06:49:49Z",
        "closed_at": "2022-11-15T14:31:31Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nThis PR adds an [awesome privacy computation](https://github.com/primihub/Awesome-Privacy-Computing).\r\n\r\nThere're many projects or articles in that repository. People could learn a lot from it.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-09T17:02:50Z",
        "closed_at": "2022-12-02T16:22:34Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/paulbradish/awesome-digital-marketing/#readme.md\r\n\r\nThis is a curated list of guides, resources, services, and tools that are highly regarded and often used within digital marketing. The list is intended to be a free, helpful resource for marketing professionals of all levels.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-07T23:35:10Z",
        "closed_at": "2022-11-08T06:11:23Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/animeishot/awesome-anti-censorship**\r\n\r\n**Awesome Anti-Censorship is a list of Awesome resources to combat internet censorship created to help people be able to explore the internet freely without being restricted.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-07T14:01:47Z",
        "closed_at": "2022-12-17T17:27:19Z",
        "merged_at": "2022-12-17T17:27:19Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nThis PR adds [an awesome-list for Supabase](https://github.com/lyqht/awesome-supabase). It contains official + community starters & resources, including community-made tools/libraries, articles, videos, livestreams and courses.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**: Reviewed #2422, #2417.  \r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions. \r\n   > \u26a0\ufe0f There is a similar submission #1965, however i believe this is a more refined version, with more contributions from the community, including the cofounder of Supabase.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything. \r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- [x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-07T04:03:13Z",
        "closed_at": "2022-11-07T04:05:10Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-04T18:15:44Z",
        "closed_at": "2023-05-08T19:32:00Z",
        "merged_at": "2023-05-08T19:32:00Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/readthedocs-examples/awesome-read-the-docs#readme\r\n\r\n#### Motivation tl;dr\r\n\r\nThere's a lot of stuff going on in the field of documentation and technical writing. Especially the world of academic writing and research engineering is moving closer to software engineering and software documentation. Whatever documentation project you are writing, you can get inspired from a rapidly developing world of themes, framework extensions, structure, writing style etc.\r\n\r\nThere's a lot of reasons why a documentation project might be interesting. Those reasons might not strike the reader by simply visiting the project. So we try to give a few tips in the description about what makes a particular project interesting.\r\n\r\nAnother reason that these projects are interesting to share is that _not_ just that the end-result is inspiring -- the code behind all these projects in the list is Open Source and linked directly from their output pages.\r\n\r\nThere are probably thousands more documentation projects on Read the Docs than one person can ever read in a life-time. Hence, this list needs to be _launched_, as in made open for contributions. We're hoping it can benefit from reviews here and start its journey towards wider community contributions in this fashion.\r\n\r\n#### Notes\r\n\r\nAbout the choice of \"Miscellaneous\": I noticed some themes around writing in general, will open an issue about this.\r\n\r\nAnother note: There are 0 awesome lists in the theme of documentation?\r\n\r\n\r\n### PR Reviews\r\n\r\n```\r\nhttps://github.com/sindresorhus/awesome/pull/2386\r\nhttps://github.com/sindresorhus/awesome/pull/2159#issuecomment-1303955577\r\nhttps://github.com/sindresorhus/awesome/pull/2585\r\n```\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 21
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-01T14:38:18Z",
        "closed_at": "2023-02-07T10:51:10Z",
        "merged_at": null,
        "body": "I added a **[\u2b06 back to top](#Contents)** button under every section to improve accessibility.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-27T12:47:54Z",
        "closed_at": "2023-06-20T13:18:24Z",
        "merged_at": null,
        "body": "Website - https://qwik.builder.io/\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Qwik](https://github.com/qwik-design/awesome-qwik)**\r\n\r\n**Advantages and benefits**\r\n- Improve developer experience for qwik ecosystem.\r\n- Saves time in researched and finding the relevant information about qwik.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-25T16:49:01Z",
        "closed_at": "2023-04-23T08:36:46Z",
        "merged_at": null,
        "body": "[BitShares](https://github.com/bitshares/awesome-bitshares#readme)\r\n\r\nBitShares Blockchain; the first Blockchain As Organization (BAO) and financial technology platform, starting from BitShares first release back in July 19, 2014 focusing on bringing about a beyond Bitcoin financial technology platform. BitShares Blockchain is an industrial-grade decentralized Web 3.0 platform built for high-performance financial technology and smart contracts. It represents the first decentralized autonomous community that lets its BTS core token holders decide on its future direction and products development.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-24T14:49:46Z",
        "closed_at": "2023-03-09T16:57:11Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Awesome Ecommerce](https://github.com/jluterek/awesome-ecommerce#readme)**\r\n\r\n**Ecommerce centric tools and software with a focus on options that are developer-friendly and API-First.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **(DONE) You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- (DONE) You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-19T20:17:07Z",
        "closed_at": "2022-10-24T10:05:06Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-12T16:12:20Z",
        "closed_at": "2022-10-12T16:36:44Z",
        "merged_at": null,
        "body": "Add Django to Back-End Development list\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n[Insert URL to the list here]\r\n**https://github.com/django/django#readme**\r\n\r\n[Explain what this list is about and why it should be included here]\r\n**Django is a high-level Python web framework that enables rapid development of secure and maintainable websites. Built by experienced developers, Django takes care of much of the hassle of web development, so we can focus on writing our app without needing to reinvent the wheel.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-08T22:40:24Z",
        "closed_at": "2023-02-03T14:12:48Z",
        "merged_at": "2023-02-03T14:12:48Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/tomodachi94/awesome-computercraft**\r\n\r\n**ComputerCraft is a Minecraft mod which adds programmable computers to the game.**\r\n\r\nReviewed PRs:\r\n\r\n- #2391\r\n- #2274\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 72,
        "changed_files": 1,
        "created_at": "2022-10-02T15:50:18Z",
        "closed_at": "2022-10-02T15:50:35Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-02T06:07:48Z",
        "closed_at": "2023-06-20T13:12:57Z",
        "merged_at": "2023-06-20T13:12:57Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/Matthias84/awesome-flying-fpv**\r\n\r\n**Open and DIY RC / FPV hard- and software. This topic is currently not refered and other existing lists are very limited **\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n\r\n*There are some existing linter warnings due to emojis, '...' or quotings that are IMHO pretty ok to me. There are 2..3 lines which don't match the official format, but seem to be essetial for the dedicated headings for readers. I shared the list with others to find whats missing, I guess it's a nice ressource for everyone interested in this topic.*\r\n*I'm sorry, I spend days to compile my list and fill in my knowledge. I'm ok with polishing it to match awesome style and the setup a linter and to fillin PRs, .... but I just lack the time to contribute even to manage other awesome lists and collect experience points. Feel free to stall this link, but I can't volunteer more than that*",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-28T10:10:22Z",
        "closed_at": "2023-02-06T17:18:46Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/horizon-ui/horizon-ui-chakra]**\r\n\r\n**[A needed admin template for React]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-23T12:16:47Z",
        "closed_at": "2023-02-11T06:57:35Z",
        "merged_at": "2023-02-11T06:57:35Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n<https://github.com/dh-tech/awesome-digital-humanities>\r\n\r\nDigital Humanities is a vibrant and growing academic field. It relies on digital resources and services. The best of them are compiled in this list by DHTech, an ADHO Special Interest Group.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-22T08:48:02Z",
        "closed_at": "2023-10-14T18:49:38Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/axolo-co/awesome-slack-apps**\r\n\r\n**List all the Slack apps a developers and his team might need. This list helps in making teams and individual more productive when using Slack.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\r\nI have reviewed 3 new PRs. I hope my comments are enough to support being the awesome project self-sustainable.\r\n[PR 2325](https://github.com/sindresorhus/awesome/pull/2325) => Commented.\r\n[PR 2288](https://github.com/sindresorhus/awesome/pull/2288) => Commented\r\n[PR 2288](https://github.com/sindresorhus/awesome/pull/2288) => Requested change\r\n[PR 2390](https://github.com/sindresorhus/awesome/pull/2390) => Commented\r\n\r\n\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n\t\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n\r\nI created an issue here:  https://github.com/sindresorhus/awesome-lint/issues/152\r\nfor this errors: \r\n![CleanShot 2022-09-22 at 12 31 20](https://user-images.githubusercontent.com/10532381/191724504-87bd767a-4dc5-45d7-a573-921d65d29479.jpg)\r\n\r\n\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-21T16:35:43Z",
        "closed_at": "2023-02-09T18:12:21Z",
        "merged_at": null,
        "body": "https://github.com/dfinity/awesome-icp#readme\r\n\r\nThis list relates to the Internet Computer, the world\u2019s first blockchain that runs at web speed and can increase its capacity without bound. Like the Internet (which is composed of many machines adhering to TCP/IP protocol) and blockchain protocols (such as Bitcoin and Ethereum). It has a thriving community of developers with a growing toolset and adding it to this list would help support these developers in discovering the tools that they need to develop on the IC.\r\n\r\nReviewed PRs:\r\n- https://github.com/sindresorhus/awesome/pull/2389#issuecomment-1253917789\r\n- https://github.com/sindresorhus/awesome/pull/2386#issuecomment-1253953714\r\n- https://github.com/sindresorhus/awesome/pull/2391#issuecomment-1254864005\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-21T14:37:01Z",
        "closed_at": "2023-10-17T08:34:03Z",
        "merged_at": "2023-10-17T08:34:03Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/sellisd/awesome-complexity**\r\n\r\n**A list of resources on Complex systems science.**\r\n\r\nReviewed PRs:\r\n\r\nhttps://github.com/sindresorhus/awesome/pull/2386#issuecomment-1252654547\r\nhttps://github.com/sindresorhus/awesome/pull/2382#issuecomment-1248949226\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-20T12:33:26Z",
        "closed_at": "2022-12-26T12:24:46Z",
        "merged_at": "2022-12-26T12:24:46Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/n0kovo/awesome-password-cracking](https://github.com/n0kovo/awesome-password-cracking)**\r\n\r\n**A list of tools, research, papers and other projects related to password cracking and password security.**\r\n\r\nReviewed PRs:\r\nhttps://github.com/sindresorhus/awesome/pull/2383#issuecomment-1253947475\r\nhttps://github.com/sindresorhus/awesome/pull/2382#issuecomment-1253953085\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2022-09-19T15:14:28Z",
        "closed_at": "2022-09-22T11:22:20Z",
        "merged_at": "2022-09-22T11:22:20Z",
        "body": "Renames the section 'Higher Education' to 'Health and Social Sciences' as 'Higher Education' applies to many items in the list. At the same time we are reducing the number of items in the 'Miscellaneous' section.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-16T17:05:09Z",
        "closed_at": "2023-04-23T19:46:20Z",
        "merged_at": "2023-04-23T19:46:20Z",
        "body": "https://github.com/MyHoneyBadger/awesome-github-wiki#readme\r\n\r\nProject documentation is a vital part of project management that why this list can be considered as list a good documentation examples on GitHub\r\n\r\nMy reviews:\r\nhttps://github.com/sindresorhus/awesome/pull/2382\r\nhttps://github.com/sindresorhus/awesome/pull/2316\r\nhttps://github.com/sindresorhus/awesome/pull/2335\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-16T04:53:49Z",
        "closed_at": "2022-12-07T13:45:05Z",
        "merged_at": "2022-12-07T13:45:05Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/master-co/awesome-master-css#readme**\r\n\r\n**Master CSS is a virtual CSS language with enhanced syntax, efficiently build your UI and design system with HTML only.**\r\n\r\nReviewed PRs:\r\n- https://github.com/sindresorhus/awesome/pull/2327#issuecomment-1221734776\r\n- https://github.com/sindresorhus/awesome/pull/2287#issuecomment-1221757581\r\n- https://github.com/sindresorhus/awesome/pull/2169#issuecomment-1229830939\r\n\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\nTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count! You have to actually point out mistakes or improvement suggestions.\r\n\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-16T01:43:51Z",
        "closed_at": "2022-09-16T04:47:30Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-15T18:13:11Z",
        "closed_at": "2022-09-21T09:38:56Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-09-13T12:51:38Z",
        "closed_at": "2022-09-20T21:37:40Z",
        "merged_at": null,
        "body": "Add Awesome Processing\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/zakarialaoui10/awesome-processing](https://github.com/zakarialaoui10/awesome-processing)**\r\n\r\n**very helpful forum and a great communtiy**\r\n**has a javascript and python version processin.js processing.py**\r\n**good books with excellent online ressources**\r\n**It is very well documented with lots of examples and fantastic tutorials**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-13T05:44:53Z",
        "closed_at": "2022-11-20T13:16:04Z",
        "merged_at": "2022-11-20T13:16:04Z",
        "body": "Adds Awesome Learn Gamedev repository\r\n\r\nhttps://github.com/notpresident35/awesome-learn-gamedev\r\n\r\nA collection of learning resources for game creators. Books, classes/courses, articles, and other lists of resources. Aimed at all disciplines that fall within the craft of game development.\r\n\r\nReviewed PRs: \r\n\r\n* [Add Developer Experience #2288 (comment)](https://github.com/sindresorhus/awesome/pull/2288#issuecomment-1214419750)\r\n* [Add Open Source Games #2171 (comment)](https://github.com/sindresorhus/awesome/pull/2171#issuecomment-1214421247)\r\n* [Add Processing #2373 (comment)](https://github.com/sindresorhus/awesome/pull/2373#pullrequestreview-1106175650)\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-07T14:29:06Z",
        "closed_at": "2023-04-23T08:15:57Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/zrosenbauer/awesome-bigtable](https://github.com/zrosenbauer/awesome-bigtable)**\r\n\r\n**[Bigtable](https://cloud.google.com/bigtable) is a fully managed, scalable NoSQL database service for large analytical and operational workloads, built and managed by Google.**\r\n\r\n**Note:** I cannot change the license without direct approval from Google's legal team (so not going to happen).\r\n\r\nPull Requests Reviewed:\r\n1. [https://github.com/sindresorhus/awesome/pull/1794](https://github.com/sindresorhus/awesome/pull/1794)\r\n2. [https://github.com/sindresorhus/awesome/pull/2327](https://github.com/sindresorhus/awesome/pull/2327)",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-06T07:06:36Z",
        "closed_at": "2022-09-06T08:02:57Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/wsvincent/awesome-django#readme**\r\n\r\n**A curated list of awesome things related to Django**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-25T04:24:18Z",
        "closed_at": "2022-08-25T13:12:36Z",
        "merged_at": null,
        "body": "**https://github.com/rjoydip/awesome-remix**\r\n\r\n**Curated list of resources: books, videos, articles about using Remix.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-25T14:23:55Z",
        "closed_at": "2022-07-25T14:52:49Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/whatsup/whatsup](https://github.com/whatsup/whatsup)**\r\n\r\n**Whatsup is a front-end framework with its own reactivity system and JSX components based on pure functions and generators. It is a mixture of react + mobs + generator and will probably be of interest to many developers.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-25T08:48:27Z",
        "closed_at": "2022-07-31T13:56:55Z",
        "merged_at": null,
        "body": "**[awesome-graphql-security](https://github.com/Escape-Technologies/awesome-graphql-security)**\r\n\r\nGraphQL Security is a niche ecosystem which get more and more attention as GraphQL grow.\r\n\r\nWe decided to create an awesome list to push this ecosystem ahead and we already reached a lot of people (55+ stars, 6 contributors, following guildelines and automated workflows...).\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-20T16:27:04Z",
        "closed_at": "2022-08-05T16:40:52Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/ThomasVitale/awesome-spring**\r\n\r\n**A curated list of awesome books, tutorials, courses, and resources for the Spring framework ecosystem.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n------- I reviewed PRs https://github.com/sindresorhus/awesome/pull/2274 and https://github.com/sindresorhus/awesome/pull/2278 -------\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-20T15:52:40Z",
        "closed_at": "2022-11-20T12:58:46Z",
        "merged_at": null,
        "body": "\r\n  \r\n  \r\n\r\n\r\n\r\n**https://github.com/MarketingPipeline/Awesome-CSS-Resources**\r\n\r\n**A fresh / new, bigger updated list of CSS frameworks & resource**\r\n\r\nPlease note - I have NOT added a short description. As all the other resources / links under CSS section do not have any description (assuming this is done purposely). \r\n\r\n  \r\n  \r\n  ",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-07-19T16:09:26Z",
        "closed_at": "2022-07-20T11:13:25Z",
        "merged_at": "2022-07-20T11:13:25Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-18T20:45:11Z",
        "closed_at": "2022-07-18T21:11:46Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[[awesome-networking]](https://github.com/nyquist/awesome-networking)**\r\n\r\n**Computer Networking is covering technolgies usually found in switches, routers, access points, load balancers, proxies, but also the internet and cloud computing**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\nReviewed:\r\n- [Add ZeroNet #2327](https://github.com/sindresorhus/awesome/pull/2327)\r\n\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-17T16:42:42Z",
        "closed_at": "2023-02-12T06:39:27Z",
        "merged_at": "2023-02-12T06:39:27Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/zolagonano/awesome-zeronet#readme**\r\n\r\nZeroNet is a distributed web-like peer-to-peer network, this list is going to help new users to find the sites, tools, implementations, plugins, and guides on ZeroNet\r\n\r\nReviewed PRs:\r\n- #2275 \r\n- #2325 \r\n\r\nNew reviewed PRs:\r\n- #2316 \r\n- #2302 \r\n- #2370 \r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 19
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-15T12:07:06Z",
        "closed_at": "2022-12-16T23:29:47Z",
        "merged_at": "2022-12-16T23:29:47Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\nhttps://github.com/aleixmorgadas/awesome-engineering-strategy\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\nUseful Engineer Strategy resources. It contains Books list, posts, and open Engineering Strategies and Open Architectures.\r\n\r\nReviewed PR:\r\n- https://github.com/sindresorhus/awesome/pull/2316#issuecomment-1183511728\r\n- https://github.com/sindresorhus/awesome/pull/2302#issuecomment-1185483548\r\n- https://github.com/sindresorhus/awesome/pull/2370#pullrequestreview-1100158778\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 22
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-12T11:29:23Z",
        "closed_at": "2022-07-12T11:29:44Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-09T15:11:19Z",
        "closed_at": "2022-07-23T10:37:54Z",
        "merged_at": "2022-07-23T10:37:54Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/YuzheSHI/awesome-agi-cocosci/#readme\r\n\r\nI add AGI & CoCoSci to Awesome to fill-in its absence of academic resources on artificial general intelligence and computational cognitive sciences. \r\n\r\n- AGI & CoCoSci provides users with following resources:\r\n\t- Classic and cutting-edge research papers and books categorized in diverse intelligent phenomena, with direct links and links to *Google Scholar All Versions*, some of which also include links to codes and project websites;\r\n\t- Established institutes and researchers on related topics;\r\n\t- Eminent scientists and thinkers on related topics with their historical representative books;\r\n\t- BibTex templates for composing papers with latex on related topics.\r\n\r\nArtificial General Intelligence an emerging inter-discipline field that combines artificial intelligence and computational cognitive sciences as majority, alone with probability and mathematical statistics, formal logic, cognitive and developmental psychology, computational philosophy, cognitive neuroscience, and computational sociology. We are promoting high-level machine intelligence by getting inspirations from the way that human learns and thinks, while obtaining a deeper understanding of human cognition simultaneously. We believe that this kind of reciprocative research is a potential way towards our big picture: building intelligent agents with the capacity to handle human-level tasks such as abstracting, explaining, learning, planning, and making decisions.\r\n\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-07T14:23:06Z",
        "closed_at": "2022-07-12T00:15:44Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[AI Audio Startups](https://github.com/csteinmetz1/ai-audio-startups)**\r\n\r\n**It is a awesome community list of startups working with AI for audio and music tech.**",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-07T09:20:39Z",
        "closed_at": "2023-06-20T13:05:28Z",
        "merged_at": null,
        "body": "**[Insert URL to the list here]**\r\nhttps://github.com/cosmos/awesome-cosmos\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\nThis list is about the Cosmos SDK which is a framework for building blockchains, similar to Substrate. It is mostly relevant for developers to help them find resources and start building in the Cosmos ecosystem.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-06T00:09:14Z",
        "closed_at": "2023-02-06T17:32:11Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n- [Awesome Quantitative Finance](https://github.com/yabdellah/Finance)\r\n\r\nQuantitative finance is the use of mathematical models to analyze financial markets. This list aims to make it easier for students and professionals to find valuable information, tools and techniques related to the theory of mathematical finance. I hope this list will help people quickly find the best resources available for a specific subject.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n  - PRs reviewed - https://github.com/sindresorhus/awesome/pull/2302#pullrequestreview-1032077522 - https://github.com/sindresorhus/awesome/pull/2317#issuecomment-1178113862 - https://github.com/sindresorhus/awesome/pull/2316#issuecomment-1178112394\r\n\r\n\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-05T03:08:36Z",
        "closed_at": "2022-07-05T23:58:55Z",
        "merged_at": null,
        "body": "Quantitative finance is the use of mathematical models to analyze financial markets. This list aims to make it easier for students and professionals to find valuable information, tools and techniques related to the theory of mathematical finance. I hope this list will help people quickly find the best resources available for a specific subject.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-28T17:25:17Z",
        "closed_at": "2022-11-19T20:45:58Z",
        "merged_at": "2022-11-19T20:45:58Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/MystenLabs/awesome-move**\r\n\r\n**[Move](https://github.com/move-language/move) is a programming language for writing safe smart contracts originally developed at Facebook in 2019 as part of the [Diem](https://github.com/diem/diem) project. This is a curated list of code and content from the Move programming language community (801\u2b50) maintained by multiple Move developers. Move does not yet have its own Awesome list in the \"Awesomeverse\", but the growing community definitely would benefit from one. The list was first announced here: https://github.com/sindresorhus/awesome/issues/2242#issuecomment-1113513351**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n\r\n    * https://github.com/sindresorhus/awesome/pull/2275#pullrequestreview-1009352952\r\n    * https://github.com/sindresorhus/awesome/pull/2278#pullrequestreview-1009290429\r\n    * https://github.com/sindresorhus/awesome/pull/2336#pullrequestreview-1049592003\r\n    * https://github.com/sindresorhus/awesome/pull/2287#issuecomment-1160318390\r\n    * https://github.com/sindresorhus/awesome/pull/2372#issuecomment-1245218202\r\n    * https://github.com/sindresorhus/awesome/pull/2382#issuecomment-1249530501\r\n    * https://github.com/sindresorhus/awesome/pull/2383#issuecomment-1250017489\r\n\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-28T07:15:26Z",
        "closed_at": "2022-06-28T07:27:37Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/digitalisx/awesome-memory-forensics**\r\n\r\n**A curated list of awesome Memory Forensics for DFIR.**\r\n\r\nHello, I made a list of memory forensics, one of the areas of cybersecurity. This will help a lot of people who explore and investigate memory. \ud83d\ude42\r\n\r\nIn accordance with guidance sought to meet the conditions, constantly checking.Review of the many people's attention and please.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-06-26T19:47:51Z",
        "closed_at": "2022-06-26T19:50:44Z",
        "merged_at": "2022-06-26T19:50:44Z",
        "body": "React is a library not a framework :)!\r\nhttps://digitalya.co/blog/is-react-a-framework-or-library/",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-23T08:26:37Z",
        "closed_at": "2022-06-23T23:40:08Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/rjoydip/awesome-snapcraft**\r\n\r\n**A curated list of awesome snapcraft apps [https://snapcraft.io](https://snapcraft.io/)**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\nReviewed: #2275 and #2285 \r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-22T15:58:20Z",
        "closed_at": "2022-06-22T17:12:50Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n[awesome-remix](https://github.com/rjoydip/awesome-remix)\r\n\r\nA curated list of awesome [**remix**][remix] resources.\r\n\r\n[awesome-snapcraft](https://github.com/rjoydip/awesome-snapcraft)\r\n\r\nA curated list of awesome snapcraft apps [https://snapcraft.io](https://snapcraft.io/)\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n\r\n[remix]: https://remix.run",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-22T12:53:54Z",
        "closed_at": "2023-02-06T17:31:50Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://awesome.tools\r\n\r\nIt is not a list, is a web page with search for any github awesome list\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-21T19:47:21Z",
        "closed_at": "2022-11-19T20:26:56Z",
        "merged_at": "2022-11-19T20:26:56Z",
        "body": "Adds:\r\n```md\r\n- [Hydrogen](https://github.com/shopify/awesome-hydrogen#readme) - Edge-first framework for building Shopify storefronts with React\r\n```\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\nhttps://github.com/shopify/awesome-hydrogen#readme\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\nThis list is to help users of the Hydrogen framework find relevant tools and resources to help them accelerate their build. It is a place for us to show off the best of the community and various integrations with the Hydrogen framework.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-21T18:38:42Z",
        "closed_at": "2023-02-11T07:03:16Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/prokopsimek/awesome-developer-experience/**\r\n\r\n**The developer experience is like UX but more oriented to development. The list contains resources, tools, and tips to improve the dev team's effectiveness and better API/Docs delivery to developers.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\nI have reviewed 3 PRs earlier. I hope my comments are enough to support being the awesome project self-sustainable.\r\n- https://github.com/sindresorhus/awesome/pull/2007#issuecomment-835217620\r\n- https://github.com/sindresorhus/awesome/pull/1954#issuecomment-835220660\r\n- https://github.com/sindresorhus/awesome/pull/1950#issuecomment-835221917\r\n\r\nI have reviewed 3 **new** PRs. I hope my comments are enough to support being the awesome project self-sustainable.\r\n- https://github.com/sindresorhus/awesome/pull/2270#issuecomment-1162197413\r\n- https://github.com/sindresorhus/awesome/pull/2278#issuecomment-1162193420\r\n- https://github.com/sindresorhus/awesome/pull/2289#issuecomment-1162285544\r\n\r\n`awesome-lint` is satisfied (\u2714 Linting)\r\n\r\nThank you for your reviews! I am here to improve whatever could be improved. I also know that the list is not long enough as other lists but I believe in support from the community to improve the list. \r\n\r\nPlease, suggest any changes or improvements.\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-20T10:08:24Z",
        "closed_at": "2023-06-20T13:04:27Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**(https://github.com/kgolubic/awesome-memgraph)**\r\n\r\n**Memgraph is an in-memory graph database. I'm curating Memgraph Awesome list and I believe that it is a good add-on to this list.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\nI've reviewed following PRs:\r\n\r\n- [Add Scapy](https://github.com/sindresorhus/awesome/pull/2285)\r\n- [Add ZkEVM](https://github.com/sindresorhus/awesome/pull/2278)\r\n- [Add Computational Geometry](https://github.com/sindresorhus/awesome/pull/2275)\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 18
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-19T17:27:11Z",
        "closed_at": "2022-11-19T20:16:15Z",
        "merged_at": "2022-11-19T20:16:15Z",
        "body": "https://github.com/secdev/awesome-scapy\r\n\r\nScapy is a Python-based interactive packet manipulation program and library. It's actually pretty well-known among the Networking/Cybersecurity communities, well enough so that the \"The\" in the listing isn't that presumptuous.\r\n\r\nThis awesome list aims at grouping tools, exploits and other fun projects that use it. Sometimes when security researchers find vulnerabilities, it would have been using Scapy so that's dope.)\r\n\r\n<details>\r\n<summary>Full requirements</summary>\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n\r\n</details>\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-16T02:59:06Z",
        "closed_at": "2022-06-16T03:02:42Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-07T09:23:39Z",
        "closed_at": "2022-11-19T20:13:01Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\nhttps://github.com/LuozhuZhang/awesome-zkevm\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\nA curated list of awesome zkEVM resources, libraries, tools and more. zkEVM is a Fully EVM compatible and zk friendly virtual machine.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-01T05:36:38Z",
        "closed_at": "2022-11-19T20:10:08Z",
        "merged_at": "2022-11-19T20:10:08Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/atkirtland/awesome-computational-geometry**\r\n\r\n**Computational geometry is a topic in computer science that focuses on solving problems in geometry. Applications of computational geometry include computer-aided design, robotics, GIS systems, and computer vision. There is no existing list for computational geometry, but it is a large enough topic in computer science to warrant a place in Awesome. I hope that it encourages other contributors to write lists for other similar topics.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n\r\nI reviewed [#2274](https://github.com/sindresorhus/awesome/pull/2274) and [#2270](https://github.com/sindresorhus/awesome/pull/2270).\r\n\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-30T23:26:36Z",
        "closed_at": "2023-02-06T17:31:28Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Awesome iOS Security](https://github.com/Cy-clon3/awesome-ios-security)**\r\n**https://github.com/Cy-clon3/awesome-ios-security**\r\n\r\n**A curated list of awesome iOS application security resources.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-26T17:45:46Z",
        "closed_at": "2022-09-21T12:37:02Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-22T04:03:34Z",
        "closed_at": "2022-06-09T14:29:02Z",
        "merged_at": "2022-06-09T14:29:01Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/brootware/awesome-cyber-security-university**\r\n\r\n**Cyber Security University is A curated list of awesome and free educational resources that focuses on learn by doing.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n\r\n  - [x] Reviewed https://github.com/sindresorhus/awesome/pull/2249\r\n  - [x] Reviewed https://github.com/sindresorhus/awesome/pull/2267\r\n\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-20T14:42:52Z",
        "closed_at": "2022-06-05T11:24:06Z",
        "merged_at": "2022-06-05T11:24:05Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/collective/awesome-plone**\r\n\r\n**This is a list of add-ons for Plone curated by the Plone community. The CMS Plone has been around for more than 20 years, has a very active community and more than 1000 add-ons. This list should help developers find add-ons that are most helpful.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-20T08:02:11Z",
        "closed_at": "2022-06-05T11:14:54Z",
        "merged_at": "2022-06-05T11:14:54Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n[Awesome Open Hardware](https://github.com/delftopenhardware/awesome-open-hardware#readme)\r\n\r\nThe awesome Open Hardware list is made for people wanting to learn more about open source hardware (projects). On the one hand it has the most awesome example project for people to get inspired. On the other hand it has more in depth papers and background information about the topic.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.  \r\n\r\nI reviewed #2265 \r\nand #2257 \r\n\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-17T16:15:36Z",
        "closed_at": "2023-02-06T17:20:25Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[awesome-apple-security](https://github.com/BlackSquirrelz/awesome-apple-security)**\r\n\r\n**Apple Security is a relatively niche field in cyber security, getting started with it is requires a high amount of personal research. This list aims to make it easier for newcomers and more experienced infosec professionals to find valuable information, resources, tools and techniques related to Apple Security. I hope this list will help people to do security research and quickly gain a foothold in this topic.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [X] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n\r\n- [X]  **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n\r\n\tReviewed: #2257 #2263\r\n\r\n- [X] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [X] This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [X] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [X] Your entry should be added at the bottom of the appropriate category.\r\n- [X] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [X] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [X] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [X] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [X] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [X] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [X] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [X] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [X] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [X] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [X] Non-generated Markdown file in a GitHub repo.\r\n-  [X] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [X] Not a duplicate. Please search for existing submissions.\r\n- [X] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [X] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [X] _(Don't have a logo)_ Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [X] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [X] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [X] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [X] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [X] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [X] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [X] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [X] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [X] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- [X] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-16T18:17:49Z",
        "closed_at": "2022-05-17T10:57:34Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-15T09:01:23Z",
        "closed_at": "2022-05-15T15:39:17Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/5t3ph/smolcss**\r\n\r\n**This PR adds a curated list of snippets for modern CSS layouts and components.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-05-13T03:39:04Z",
        "closed_at": "2022-05-13T06:37:40Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-10T07:53:36Z",
        "closed_at": "2022-06-05T11:10:56Z",
        "merged_at": null,
        "body": "add A curated list of Smart Contract Security materials and resources For Researchers\r\n\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-09T22:30:01Z",
        "closed_at": "2022-06-05T11:07:31Z",
        "merged_at": "2022-06-05T11:07:30Z",
        "body": "https://github.com/inoue0426/awesome-computational-biology\r\n\r\nComputational Biology is a rapidly growing field in Computer Science in recent years. In particular, it is closely related to graph theory and machine learning, but the various information on preprocessing, data sets, and methods are scattered and not coherent. For this reason, we have created this repository. In addition, since there is no one related to Computational Biology yet, we think that it is worth being included in Awsome. I hope that this repository will contribute to other research, and I also hope that it will be made available on Awsome so that more people will be able to view it.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n\r\nReviewed: #2189 #2153\r\n\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- [x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-05-02T11:07:01Z",
        "closed_at": "2022-05-02T12:24:10Z",
        "merged_at": "2022-05-02T12:24:10Z",
        "body": "Repository does not exist anymore\r\n\r\nDidn't follow template due to not adding.\r\n\r\nUnicorn",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-26T01:56:02Z",
        "closed_at": "2022-06-05T11:02:13Z",
        "merged_at": "2022-06-05T11:02:13Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/taosdata/awesome-tdengine**\r\n\r\n**It's about a time-series database named TDengine**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it. **Instead use [#2242](https://github.com/sindresorhus/awesome/issues/2242) for incubation visibility**.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-21T14:07:07Z",
        "closed_at": "2022-04-22T00:02:51Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-20T14:08:21Z",
        "closed_at": "2022-04-20T14:51:48Z",
        "merged_at": "2022-04-20T14:51:48Z",
        "body": "## Motivation\r\nTo prevent draft PRs and reduce list-redundancy.\r\n\r\n## Changes\r\nReference the issue when mentioning \"No draft PRs\".",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-03-31T21:12:43Z",
        "closed_at": "2022-04-01T06:34:14Z",
        "merged_at": "2022-04-01T06:34:13Z",
        "body": "The repository for the Ansible list has been transferred to the ansible-community org,\r\nAs this PR does not add a List, but instead just updates an url, to avoid unnecessary redirection, I cannot 100% adhere to the Guidelines. But I will try to go trough them thoroughly, and for what it's worth, I checked that the List still adheres to the Guidelines!\r\n\r\nI Reviewed the following PR's:\r\n\r\n- https://github.com/sindresorhus/awesome/pull/2217\r\n- https://github.com/sindresorhus/awesome/pull/2215\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2022-03-30T19:46:33Z",
        "closed_at": "2022-03-30T19:48:14Z",
        "merged_at": null,
        "body": "Hey! We noticed your repository had a few instances of gendered language. We've attempted to make the changes to gender neutral language :)\n\nYou can learn more about this project and why gender neutral language matters at [inclusivecoding.wixsite.com](https://inclusivecoding.wixsite.com/home). If you have feedback for this bot, please provide it [here](https://forms.gle/MnEH24gWbzPLSnnv7).",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2022-03-30T19:28:26Z",
        "closed_at": "2022-03-30T19:35:23Z",
        "merged_at": null,
        "body": "Hey! We noticed your repository had a few instances of non gender neutral language. We've made the changes for you :)\n\nYou can learn more about this project and why gender neutral language matters here - [Inclusive Coding](https://inclusivecoding.wixsite.com/home).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-03-27T00:25:21Z",
        "closed_at": "2022-03-30T09:11:43Z",
        "merged_at": "2022-03-30T09:11:43Z",
        "body": "looks like this repository has been deleted.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-26T11:05:42Z",
        "closed_at": "2022-06-05T10:55:45Z",
        "merged_at": "2022-06-05T10:55:45Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\nhttps://github.com/gofiber/awesome-fiber\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\nA list about Fiber middlewares, boilerplates, recipes, articles and tools. Fiber is popular and fast Go framework so it should be included.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-22T04:11:34Z",
        "closed_at": "2022-04-04T04:11:18Z",
        "merged_at": null,
        "body": "**https://github.com/warrant-dev/awesome-authorization**\r\n\r\n**This list contains info and best practices for implementing application authorization and access control.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-18T13:47:12Z",
        "closed_at": "2022-06-05T10:51:34Z",
        "merged_at": "2022-06-05T10:51:34Z",
        "body": "https://github.com/osmlab/awesome-openstreetmap\r\n\r\nThis list offers a curated selection of projects interacting with [OpenStreetMap](https://www.openstreetmap.org), the open and free mapping project. With this list we aim to provide a starting point for people wanting to get into either mapping for OpenStreetMap or using the map-data for projects.\r\nBeing listed in the index of awesome-lists will help guide interested readers towards our list and make it easier for them to find what they are looking for! \ud83d\ude42 \r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- [x] To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- [x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n- [x] **Go to the top and read it again.**\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-18T10:44:01Z",
        "closed_at": "2022-03-18T13:32:53Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/leha-code/awesome-minecraft-pi**\r\n\r\n**Minecraft Pi Edition mods, and related things.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-17T16:06:10Z",
        "closed_at": "2022-06-05T10:48:00Z",
        "merged_at": "2022-06-05T10:48:00Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/kareniel/awesome-evm-security**\r\n\r\n**This list covers the many domains that a security professional would want information on to get started when working in the EVM space.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.  \r\n\t ------- **I reviewed PRs #2212 and #2202** -------\r\n- [x] You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- [x] Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- [x] The image should link to the project website or any relevant website.\r\n\t- [x] **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- [x] Should be named `Contents`, not `Table of Contents`.\r\n\t- [x] Should be the first section in the list.\r\n\t- [x] Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- [x] Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- [x] Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- [x] The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- [x] The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- [x] The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- [x] The description starts with an uppercase character and ends with a period.\r\n\t- [x] Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- [x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-15T22:41:03Z",
        "closed_at": "2022-06-05T10:32:24Z",
        "merged_at": "2022-06-05T10:32:24Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n[Esri/awesome-arcgis-developer](https://github.com/Esri/awesome-arcgis-developer)\r\n\r\nIt is a curated list of resources to help developers using [ArcGIS](https://developers.arcgis.com/) to build mapping and location analysis solutions. I think it should be included because there is no ArcGIS/Esri awesome list, and also because [Esri](https://en.wikipedia.org/wiki/Esri)'s technology (ArcGIS) [is a well-known brand](https://trends.google.com/trends/explore?date=all&q=arcgis,Mapbox,leaflet,openstreetmap) used by a huge number of developers. \r\n\r\n**For reference, you can see Esri/ArcGIS market position in g2.com:**\r\n\r\nInside the [GIS Software](https://www.g2.com/categories/gis#grid) category (compared to Google Maps API, Mapbox, Bing, OpenStreetMap, AzureMaps, ...).\r\n\r\n[![esri-g2](https://user-images.githubusercontent.com/826965/158482618-08fd0da3-0630-4fdb-88a7-5dfa77777724.png)](https://www.g2.com/categories/gis#grid)\r\n\r\nInside the [Location Intelligence software](https://www.g2.com/categories/location-intelligence#grid) category (compared to Google Maps, Carto, Salesforce Maps, ...).\r\n\r\n[![arcgis-g2 com](https://user-images.githubusercontent.com/826965/158483826-989d3431-d198-4cc8-8517-31a89d72036a.png)](https://www.g2.com/categories/location-intelligence#grid)\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-07T08:21:29Z",
        "closed_at": "2022-06-13T07:38:13Z",
        "merged_at": "2022-06-13T07:38:12Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nThis PR adds [awesome-snmp](https://github.com/eozer/awesome-snmp). Awesome-snmp is a curated list of awesome SNMP libraries, tools, and other resources. \r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-23T15:12:52Z",
        "closed_at": "2022-06-05T10:11:38Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n[Development Containers (devcontainers)](https://github.com/manekinekko/awesome-devcontainers#readme)\r\n\r\nAdds reference to Development Containers awesome list. Maintained by community members and Microsoft engineers.\r\nThis should be included because development containers (based on docker) are becoming the de-facto reproducible environment approach for both local and remote for VS Code projects and Github Codespaces.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\nI did\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-17T06:45:22Z",
        "closed_at": "2022-06-05T10:10:08Z",
        "merged_at": null,
        "body": "add photonics resources\r\nhttps://github.com/joamatab/awesome_photonics\r\n\r\nAdd curated list For photonic engineers, physicists and hobbyists\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-02-17T04:04:19Z",
        "closed_at": "2022-02-17T05:07:08Z",
        "merged_at": "2022-02-17T05:07:07Z",
        "body": "this pull request is for removing dead list **awesome-rubymotion**\r\nmore info in https://github.com/sindresorhus/awesome/issues/2187.\r\nFixes https://github.com/sindresorhus/awesome/issues/2187.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-16T02:00:10Z",
        "closed_at": "2022-02-17T06:44:58Z",
        "merged_at": null,
        "body": "add awesome photonics \r\nhttps://github.com/joamatab/awesome_photonics\r\n\r\n\r\nAdd curated list For photonic engineers, physicists and hobbyists\r\n\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-15T09:01:26Z",
        "closed_at": "2022-06-05T10:04:53Z",
        "merged_at": "2022-06-05T10:04:53Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/Karneades/awesome-malware-persistence**\r\n\r\n**A curated list of awesome malware persistence tools and resources.**\r\n\r\n**Malware persistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access.**\r\n\r\nThe main repository which was started 2 years ago has more than 90 stars and is a reference repository regarding this specific awesome malware topic. The **awesome malware persistence list exists since more then 2 years but was integrated the main project about malware persistence until now**. (https://github.com/Karneades/malware-persistence)\r\n\r\nThe only lint error besides the age is now a duplicate URL because I point to one specific location in a repo in addition to the main link. Rest was fixed using the awesome-lint workflow before PR.\r\n\r\nCommented on various PRs: #2050, #2160, #2170, #2171, #2186, #2189 ([GitHub search](https://github.com/sindresorhus/awesome/pulls?q=commenter%3Akarneades))\r\n\r\nContributed in the past to various awesome lists, including the lists for threat hunting, forensics, malware analysis, incident response, compiler, podcast and ebpf. Because contributing to awesome lists feels awesome and getting a PR done here without missing a requirement would feel awesome too!\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-02-14T11:36:35Z",
        "closed_at": "2022-02-14T15:45:30Z",
        "merged_at": "2022-02-14T15:45:30Z",
        "body": "**this is just a fix for issue #2179**\r\n\r\nFixes #2179\r\n\r\nMy default branch is `main` but it being used for another pull request, so i'm using this one for now.\r\nPlease check #2179, for more information where @web-padawan (maintainer of that repo) asked to update following information.\r\n\r\n---\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2022-02-14T06:43:56Z",
        "closed_at": "2022-02-14T15:44:27Z",
        "merged_at": "2022-02-14T15:44:27Z",
        "body": "**Fixing some minor problems:**\r\n- making url `https://` from `http://`\r\n- some github links got changed and they redirect to new ones. \r\n   maybe because, maintainer of that list changed the username \r\n   or transferred it to someone else. \r\n   (please see the comments in every commit to find more info about it)\r\n\r\nI'm not sure if i am complying with those rule because i'm not trying to add any new list.\r\nnot sure if those kind of fixing pull request is allowed or not in the first place.\r\nI have read the all the rules and tried my best to follow those.\r\n\r\nI did similar thing in https://github.com/troxler/awesome-css-frameworks/pull/66 ,\r\nand planing to do it to all other lists too.\r\nIf you have any recommendation or suggestion please let me know.\r\n\r\nevery pull request looks like over reviewed. can't find anything new to add.\r\nhope i didn't make any major mistake.\r\n\r\n---\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-09T07:28:12Z",
        "closed_at": "2022-02-09T08:07:23Z",
        "merged_at": null,
        "body": "Added 'Awesome Azure Architecture' list to the awesome lists.\r\n\r\nhttps://github.com/lukemurraynz/awesome-azure-architecture#readme\r\n\r\nA curated list of AWESOME blogs, videos, tutorials, code, tools & scripts, related to the design and implementation of solutions in Microsoft Azure.\r\n\r\nThis list contains anything that can help with your Microsoft Azure architecture and quickly get you up and running when designing, planning, and implementing services that empower organisations around the planet to achieve more. This list should be added to the awesome list index, to help point people in the right direction to assist with learning/adopting and architecting Azure solutions.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-02-05T21:57:51Z",
        "closed_at": "2022-09-27T08:50:45Z",
        "merged_at": "2022-09-27T08:50:45Z",
        "body": "**https://github.com/michelpereira/awesome-open-source-games**\r\n\r\nThe purpose of this is to keep a list of Open Source Games that are hosted on GitHub, so the others can fork and learn more about gaming.\r\n\r\n- The list is around for 4+ years.\r\n- It's maintainer is no longer maintaining it\r\n- As suggested at #1198 I want to be the new maintainer\r\n\r\n- Reviewed PRs: #2111 \r\n- Comments made: #2099 (comment)\r\n- Suggestion made to other lists: #1907 (comment)\r\n\r\nFixes #1198\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-02T09:06:30Z",
        "closed_at": "2022-06-02T14:10:01Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/abenhamdine/awesome-extjs\r\n\r\nExtJS is a commercial javascript framework, originately developped by Yahoo then by Sencha.\r\nIt's mainly used in entreprise applications, by large corps.\r\n\r\nThis is the only list related to ExtJS.\r\nIt has 77 stars, wich can looks small but the ExtJS is a small ecosystem given it's a commercial framework.  \r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-31T07:46:31Z",
        "closed_at": "2022-11-19T20:02:49Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/ehsanghaffarii/awesome-clubhouse]**\r\n\r\n**[A list of tools and resources for Clubhouse social audio app]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 19
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-24T22:26:30Z",
        "closed_at": "2022-02-13T11:37:09Z",
        "merged_at": "2022-02-13T11:37:09Z",
        "body": "Adds reference to Algorand themed awesome list. Maintained by community developers and solution architects from Algorand.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Awesome Algorand](https://github.com/aorumbayev/Awesome-Algorand)**\r\n\r\n**An awesome list created for Algorand Blockchain development community. References and aggregates all known Algorand related resources useful for development or getting familiar with the ecosystem of tools. Actively maintained by community and several engineers from Algorand.**\r\n\r\n>Uses awesome-list linter tool as part of the CI. Additionally hosted on gh-pages and available at [awesomealgo.com](https://awesomealgo.com).\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-24T13:16:41Z",
        "closed_at": "2022-01-24T13:25:41Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\nhttps://github.com/bregman-arie/devops-exercises#readme\r\n**[Explain what this list is about and why it should be included here]**\r\nDevops Related Information readme added. It's vastly informative about development and operations related information\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-23T12:29:31Z",
        "closed_at": "2022-06-02T13:53:53Z",
        "merged_at": "2022-06-02T13:53:53Z",
        "body": "List URL: [awesome-capacitor](https://github.com/riderx/awesome-capacitor)\r\n\r\nThis list provides resources on Capacitor to help anyone start building web native apps. It focuses on the plugins part for now but will be enhanced with the community.\r\n\r\nReviewed the following 4 PRs:\r\n- https://github.com/sindresorhus/awesome/pull/2160\r\n- https://github.com/sindresorhus/awesome/pull/2155\r\n- https://github.com/sindresorhus/awesome/pull/2169\r\n- https://github.com/sindresorhus/awesome/pull/2170\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-22T21:24:14Z",
        "closed_at": "2022-06-02T12:24:33Z",
        "merged_at": "2022-06-02T12:24:33Z",
        "body": "[Conversational AI](https://github.com/jyguyomarch/awesome-conversational-ai)\r\n\r\nThis list provides resources on Conversational AI to help anyone start building chatbots and digital assistants. It focuses on the technical part of the topic (NLU, clients, platforms) so I think it fits best in Computer science, but it will also cover topics such as Conversational Ux.\r\n\r\nReviewed the following two PRs:\r\n\r\n- #2067 \r\n- #2153 \r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-01-22T20:10:35Z",
        "closed_at": "2022-11-04T23:56:36Z",
        "merged_at": null,
        "body": "Since this is not awesome list contributions, so I removed the pull request templates.\r\n---\r\nThis pull request adding awesome list template for **awesome**. Which is to make it easier for people to contribute their awesome list.\r\n\r\nAlso I'm added ready-to-fork template here: https://github.com/bl0cknumber/awesome-template\r\n\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-21T21:53:35Z",
        "closed_at": "2022-02-27T08:35:55Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[MathWorks Excellence in Innovation](https://github.com/mathworks/MathWorks-Excellence-in-Innovation)**\r\n\r\n**It provides students and faculty with a list of industry relevant project ideas for their capstone, senior design class or Master thesis.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-21T04:06:07Z",
        "closed_at": "2022-01-21T04:07:06Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-01-19T09:51:19Z",
        "closed_at": "2022-09-23T12:08:35Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n<https://github.com/dh-tech/awesome-dhtools#readme>\r\n\r\nDigital Humanities is a vibrant and growing academic field. It relies on digital resources and services. The best of them are compiled in this list by DHTech, an ADHO Special Interest Group.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 16
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-17T09:53:54Z",
        "closed_at": "2022-01-17T16:16:12Z",
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-14T22:14:21Z",
        "closed_at": "2022-06-02T11:33:32Z",
        "merged_at": "2022-06-02T11:33:32Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n[Awesome Zig](https://github.com/catdevnull/awesome-zig)\r\n\r\nAbout the [Zig programming language](https://ziglang.org). Retake on https://github.com/sindresorhus/awesome/pull/1894 with my maintained fork.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n\t- https://github.com/sindresorhus/awesome/pull/2150#issuecomment-1013483629\r\n\t- https://github.com/sindresorhus/awesome/pull/2151#issuecomment-1013502299\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n](https://github.com/sindresorhus/awesome/pull/2151#issuecomment-1013502299)",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-13T22:03:44Z",
        "closed_at": "2022-02-13T11:12:27Z",
        "merged_at": "2022-02-13T11:12:27Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/dhondta/awesome-executable-packing\r\n\r\nThis provides a full bibliography, links to packers, unpackers and other related tools for executable formats (PE, ELF, ...). This aims to complement the *Malware Analysis* list.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-13T18:22:08Z",
        "closed_at": "2022-01-15T05:31:30Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-06T21:33:00Z",
        "closed_at": "2022-01-06T21:49:32Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-12-29T16:51:20Z",
        "closed_at": "2022-01-23T14:22:44Z",
        "merged_at": "2022-01-23T14:22:44Z",
        "body": "**https://github.com/Strift/awesome-esports**\r\n\r\n**This is a list of programming libraries, softwares, and educational or research material related to esports. It is intended to help companies, developers, and other actors in the esports field.**\r\n\r\nI helped reviewing 2 PRs. My comments can be found here:\r\n- https://github.com/sindresorhus/awesome/pull/2133#issuecomment-1002670649\r\n- https://github.com/sindresorhus/awesome/pull/2035#issuecomment-1002680536\r\n\r\nAfter reading the rules, I acknowledge that this awesome list is missing logo.\r\n\r\nPS: I _think_ Gaming is the correct category for Esports, but I'm totally open to discussion.\r\n\r\nThank you for your time.\r\n\r\nCheers,\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-12-29T07:09:38Z",
        "closed_at": "2021-12-29T11:24:59Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n(https://github.com/suhwan-cho/awesome-video-object-segmentation)\r\n\r\nThis list contains video object segmentation (VOS) papers accepted by leading computer vision conferences. Although VOS has attracted extensive attentions in recent years, there is no well-organized page that contains recent VOS papers. I believe that this list will be helpful to the newcomers and existing researchers who are interested in this field.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-12-26T03:21:27Z",
        "closed_at": "2022-02-05T21:59:30Z",
        "merged_at": null,
        "body": "**https://github.com/michelpereira/awesome-open-source-games**\r\n\r\nThe purpose of this is to keep a list of Open Source Games that are hosted on GitHub, so the others can fork and learn more about gaming.\r\n\r\n- The list is around for 4+ years.\r\n- It's maintainer is no longer maintaining it\r\n- As suggested at #1198 I want to be the new maintainer\r\n\r\n- Reviewed PRs: #2111 \r\n- Comments made: #2099 (comment)\r\n- Suggestion made to other lists: #1907 (comment)\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 16
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-12-26T00:49:14Z",
        "closed_at": "2021-12-26T03:00:53Z",
        "merged_at": null,
        "body": "**https://github.com/michelpereira/games/**\r\n\r\nThe purpose of this is to keep a list of Open Source Games that are hosted on GitHub, so the others can fork and learn more about gaming.\r\n\r\n- The list is around for 4+ years.\r\n- It's maintainer is no longer maintaining it\r\n- As suggested at #1198 I want to be the new maintainer\r\n\r\n- Reviewed PRs: #2111 \r\n- Comments made: #2099 (comment)\r\n- Suggestion made to other lists: #1907 (comment)\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 736,
        "deletions": 722,
        "changed_files": 1,
        "created_at": "2021-12-25T23:14:14Z",
        "closed_at": "2021-12-26T00:29:55Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**Please Note: This is __NOT__ a awesome list addition. This is __NOT__ another list.** \r\n\r\n**For easier access, each list on the [main README](https://github.com/sindresorhus/awesome/blob/main/readme.md) has been sorted alphabetically. This includes section headings. I made the mistake of making all of these changes by hand, instead of automating it, so if there are errors, feel free to correct me. In this alphabetization, I assumed that NULL comes before a character (i.e. __AMA__ _NULL_ comes before __AMA__ ZON). I also assumed capital letters come before lowercase.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-12-21T07:16:57Z",
        "closed_at": "2021-12-21T13:17:28Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[SVGView](https://github.com/exyte/SVGView)**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\nThere are no SVG parsers yet neither in here nor built-in into Swift or SwiftUI\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-12-19T09:17:27Z",
        "closed_at": "2021-12-19T11:12:21Z",
        "merged_at": null,
        "body": "https://github.com/stupid-kid-af/Gradient-Generator-Javascript/\r\n\r\nA Gradient Generator web app built with HTML and javascript.\r\nMake your gradients with direction with a single click\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-11-30T06:23:07Z",
        "closed_at": "2022-01-17T18:18:23Z",
        "merged_at": "2022-01-17T18:18:23Z",
        "body": "https://github.com/naimo84/awesome-nodered\r\n\r\nNode-RED is a programming tool for wiring together hardware devices, APIs and online services.\r\nIt provides a browser-based editor that makes it easy to wire together flows using the wide range of nodes in the palette that can be deployed to its runtime in a single-click. \r\nThis list is about useful third-party nodes and basics.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-11-24T03:49:33Z",
        "closed_at": "2022-02-27T08:37:55Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/motoko-unofficial/awesome-motoko\r\n\r\nThe [Internet Computer](https://dfinity.org/) is a smart contract operation platform similar to Ethereum. At this stage, the Internet Computer only mainly supports [Motoko](https://smartcontracts.org/docs/language-guide/motoko.html) and Rust to realize the smart contract logic. Therefore, Motoko is to the Internet Computer just like Solidity is to the Ethereum. Internet Computers and Motoko are both recently launched. It is recommended that an awesome list is convenient for Motoko developers to learn and use motoko.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-11-24T03:03:35Z",
        "closed_at": "2021-11-24T11:32:35Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/Graphics-Programming-Virtual-Meetup/awesome-graphics-programming**\r\n\r\n**This list contains curated resources for learning graphics programming. Awesome project currently has lists on specific graphics APIs such as Vulkan, but this list is API-agnostic and also includes resources on Computer Graphics theory.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the requirements \ud83d\udd96\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-11-19T10:18:27Z",
        "closed_at": "2022-01-23T11:05:01Z",
        "merged_at": null,
        "body": "https://github.com/twf-nikhila/Awesome-Black-Friday-Cyber-Monday-deals\r\n\r\nThis list contains a curated Black Friday & Cyber Monday deals list. It's get updated yearly by the community for the community. Anyone can submit a PR to get their products listed. Including it here will help many developed, techies, entrepreneurs to see the curated lists in one place. Meaning no need to subscribe to email just to getting deals details.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-11-17T15:48:20Z",
        "closed_at": "2021-11-17T15:48:48Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/pawl/awesome-etl**\r\n\r\n**ETL framework can save big data developer when process data with a pipeline or action graph**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-11-17T13:23:10Z",
        "closed_at": "2022-07-20T13:11:50Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/YuzheSHI/awesome-agi-cocosci/#readme\r\n\r\nI add AGI & CoCoSci to Awesome to fill-in its absence of academic resources on artificial general intelligence and computational cognitive sciences. \r\n\r\n- AGI & CoCoSci provides users with following resources:\r\n\t- Classic and cutting-edge research papers and books categorized in diverse intelligent phenomena, with direct links and links to *Google Scholar All Versions*, some of which also include links to codes and project websites;\r\n\t- Established institutes and researchers on related topics;\r\n\t- Eminent scientists and thinkers on related topics with their historical representative books;\r\n\t- BibTex templates for composing papers with latex on related topics.\r\n\r\nArtificial General Intelligence an emerging inter-discipline field that combines artificial intelligence and computational cognitive sciences as majority, alone with probability and mathematical statistics, formal logic, cognitive and developmental psychology, computational philosophy, cognitive neuroscience, and computational sociology. We are promoting high-level machine intelligence by getting inspirations from the way that human learns and thinks, while obtaining a deeper understanding of human cognition simultaneously. We believe that this kind of reciprocative research is a potential way towards our big picture: building intelligent agents with the capacity to handle human-level tasks such as abstracting, explaining, learning, planning, and making decisions.\r\n\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 19
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-11-15T09:59:29Z",
        "closed_at": "2021-11-15T10:29:00Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-29T13:39:12Z",
        "closed_at": "2021-10-29T15:17:24Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-29T10:30:41Z",
        "closed_at": "2021-10-29T15:16:53Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-28T19:30:24Z",
        "closed_at": "2021-10-29T08:59:09Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](https://github.com/sindresorhus/awesome/blob/main/create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](https://github.com/sindresorhus/awesome/blob/main/awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](https://github.com/sindresorhus/awesome/blob/main/awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-20T16:37:51Z",
        "closed_at": "2022-06-02T11:29:49Z",
        "merged_at": "2022-06-02T11:29:49Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/directus-community/awesome-directus\r\n\r\nList with interesting links related to [Directus]([https://github.com/directus/directus) (application which provides a real-time API and App dashboard for managing SQL database content) which helps users to find and share resources like:\r\n* Tools and libraries to integrate Directus into their project\r\n* Extensions to full-fill their use-cases\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-10-20T16:24:15Z",
        "closed_at": "2021-10-20T16:54:58Z",
        "merged_at": "2021-10-20T16:54:58Z",
        "body": "Currently, the relative links don't work in the pull requests itself.\r\n\r\nAlso tried using with a slash at the beginning (`[Link](/...)`) but this doesn't work either.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-20T16:13:35Z",
        "closed_at": "2021-10-20T16:13:57Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-18T14:59:43Z",
        "closed_at": "2022-01-24T07:52:42Z",
        "merged_at": "2022-01-24T07:52:42Z",
        "body": "https://github.com/zenitysec/awesome-low-code\r\n\r\nThis is a list of awesome low-code application development platforms, resources, and tools to help citizen and professional developers dive into the low-code world.\r\nLow-code platforms place more power in the hands of business professionals by letting them build application with minimal to no coding skills requires, mostly through a drag and drop interface. This empowers the business to address their own issues rather than ask for IT's help. It also helps proffesional developers accelarate time-to-market and reduce their maintenance costs. The low-code ecosystem is very large, and this list tries to help people navigate it.\r\n\r\nThe list helps business users and developers answer the following questions (and many more):\r\n\r\n- Which low-code platforms are relevant for my use case?\r\n- Where can I learn about low-code and become a better low-code developer?\r\n- What are some common use-cases for low-code?\r\n- Where can I discuss my low-code challanges and ideas with likeminded colleagues?\r\n\r\nWe continously expand this list to include platforms, categories, books, learning materials, reference materials, ready-to-use solutions and more. Including this list as part of the awesome list of awesome topics would help share the knowledge about low-code, improve the knowledge base and make it easier for people to learn about it.\r\n\r\nNote that we use _awesome-list_ as part of PR validation so there's no need to check for those issues.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-15T14:41:45Z",
        "closed_at": "2021-10-15T17:55:18Z",
        "merged_at": null,
        "body": "Adding BerylDB\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-14T19:40:25Z",
        "closed_at": "2022-01-23T11:19:55Z",
        "merged_at": "2022-01-23T11:19:55Z",
        "body": "https://github.com/aliesbelik/awesome-gatling\r\n\r\nThis list contains resources about the popular open-source, developer-centric performance testing framework Gatling.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-14T17:52:06Z",
        "closed_at": "2021-10-14T17:56:42Z",
        "merged_at": null,
        "body": "\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/vincentbonnetcg/awesome-ml-character**\r\n\r\n**Nowadays, the modelling/simulation/animation/rendering of digital characters/humans rely more on machine learning than standard computer graphic techniques. This page is a collection of papers about characters/humans generation with machine learning techniques.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-06T21:05:23Z",
        "closed_at": "2022-02-27T08:48:06Z",
        "merged_at": "2022-02-27T08:48:06Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/nekofar/awesome-slim\r\n\r\nThe list is about [Slim](https://github.com/slimphp/Slim), a PHP micro framework that helps you quickly write simple yet powerful web applications and APIs. It should be included since (1) the isn't already a `Slim` awesome list and (2) `Slim` is a popular framework for PHP back-end development.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-03T02:46:39Z",
        "closed_at": "2021-10-03T06:27:19Z",
        "merged_at": null,
        "body": "This page has been moved to\u00a0https://webpack.js.org/awesome-webpack",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-02T22:20:25Z",
        "closed_at": "2021-10-03T06:36:13Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[xrpl.rocks](https://xrpl.rocks) `||` [yyolk/awesome-xrpl](https://github.com/yyolk/awesome-xrpl)**\r\n\r\n**This list should be included as it's adhering to the **\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-02T04:49:15Z",
        "closed_at": "2021-10-02T05:26:21Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-27T11:40:06Z",
        "closed_at": "2021-09-27T13:58:24Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-27T11:39:30Z",
        "closed_at": "2021-09-27T12:04:38Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/FayasNoushad/Telegram-Bot-List**\r\n\r\n**a collective list of Telegram ( Instant messaging platform ) Bots**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-27T10:22:01Z",
        "closed_at": "2021-09-27T11:27:10Z",
        "merged_at": null,
        "body": "Added telegram bots list",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-23T19:36:02Z",
        "closed_at": "2021-09-24T14:29:47Z",
        "merged_at": null,
        "body": "Adds Django web framework to bottom of Back-End Development section.\r\n\r\nhttps://github.com/wsvincent/awesome-django\r\n\r\nDjango is a back-end web application framework written in Python.\r\n\r\n## Yes, I have read and complied with the requirements for a PR. ##",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-21T12:05:37Z",
        "closed_at": "2021-11-24T10:35:19Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/effector/awesome\r\n\r\nThis list should be included to allow the outer world to explore effector tools and repositories.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-18T13:04:38Z",
        "closed_at": "2021-09-18T13:09:50Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/fosslife/awesome-ricing\r\n\r\nThis list is about Awesome resources for Ricing .\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-09T18:44:13Z",
        "closed_at": "2022-02-27T08:38:19Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/m8/awesome-arduino\r\n\r\nArduino is one of the most popular electronics platform. It will be great to see Arduino in this list.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-09T17:42:32Z",
        "closed_at": "2021-09-22T11:14:56Z",
        "merged_at": "2021-09-22T11:14:56Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/stn1slv/awesome-integration\r\n\r\nThis is a list of awesome software for various integration scenarios:\r\n- API Management\r\n- API Gateway\r\n- Enterprise Service Bus\r\n- Business Process Management and Workflow engines\r\n- Data Integration (or ETL)\r\n- Managed File Transfer\r\n- Robotic Process Automation\r\n- etc.\r\n\r\nIt also includes useful resources such as integration patterns and styles, API and connectors specifications, and some others.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\nPR reviewed\r\n- #2050 \r\n- #2053 \r\n----\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-08T12:10:24Z",
        "closed_at": "2021-11-26T04:57:42Z",
        "merged_at": "2021-11-26T04:57:42Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/rockerBOO/awesome-neovim\r\n\r\nThis list lists plugins for the neovim text editor.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-04T07:19:02Z",
        "closed_at": "2021-09-17T08:44:11Z",
        "merged_at": "2021-09-17T08:44:10Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/msub2/awesome-webxr#readme**\r\n\r\nThis list is about WebXR, which comprises a group of standards making it possible to view/experience virtual reality and augmented reality content through a web browser.\r\n\r\n*\u2705 Passes `awesome-lint` as of 9/13/21.*\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n  - https://github.com/sindresorhus/awesome/pull/2035#issuecomment-912923331\r\n  - https://github.com/sindresorhus/awesome/pull/2045#issuecomment-912922400\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-08-31T06:19:18Z",
        "closed_at": "2021-08-31T22:21:51Z",
        "merged_at": "2021-08-31T22:21:51Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/herrbischoff/awesome-macos-command-line#readme\r\n\r\nIt has been taken off github, so I believe it no longer qualifies as being awesome, because it will be hard to contribute to it now.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-08-26T09:06:09Z",
        "closed_at": "2022-06-02T11:19:30Z",
        "merged_at": null,
        "body": "https://github.com/saintmalik/awesome-oss-docs\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\nA curated list of awesome Open Source Documentations for people whole love contributing to docs, only documenation that allows contributions are in the list.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\nPRs i reviewed\r\n\r\n- #2045\r\n- #2035\r\n\r\n----\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-08-23T16:32:58Z",
        "closed_at": "2021-08-23T21:44:34Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/M3-org/awesome-metaverse\r\nhttps://github.com/M3-org/awesome-vrchat\r\n\r\nVRChat is the most popular social VR app, the list is often used for making virtual worlds outside the platform as well. awesome-metaverse is a collection of resources pertaining to the future of the internet with 3D / VR / AR.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-08-19T21:17:25Z",
        "closed_at": "2021-08-19T21:18:40Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/ubc-lib-geo/awesome-wildfire]**\r\n\r\n**[This is a compilation of wildland fire resources in Canada, including maps, data, research, podcasts, and Twitter accounts. ]**\r\n\r\nI have reviewed:\r\n- [#2001](https://github.com/sindresorhus/awesome/pull/2001)\r\n- [#1985](https://github.com/sindresorhus/awesome/pull/1985)\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The title of your entry should be title-cased and the URL to your list should end in `#readme`.\r\n\t- Example: `- [Software Architecture](https://github.com/simskij/awesome-software-architecture#readme) - The discipline of designing and building software.`\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-08-16T08:01:10Z",
        "closed_at": "2021-09-19T08:45:45Z",
        "merged_at": "2021-09-19T08:45:45Z",
        "body": "unicorn",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-08-02T14:18:01Z",
        "closed_at": "2021-08-03T15:43:41Z",
        "merged_at": null,
        "body": "**Bootstrap 5 Cheatsheet**\r\n\r\nIt is an interactive list of Bootstrap 5 classes, variables, and mixins. It also helps you easily find the differences between Bootstrap 4 and Bootstrap 5. Besides, it is the only Bootstrap 5 CheatSheet you will ever need whether you are upgrading your Bootstrap 4 project or starting a new Bootstrap 5 project.\r\n\r\nFurthermore, it is aimed towards a large community of bootstrap users who find it difficult to search for bootstrap classes, variables, and mixins. Thus, you'll surely find it amazing, and very useful.\r\n\r\n**Key Features\ud83d\udee0**\r\n\r\n\u2022 Search for your class, variable, or mixin\r\n\u2022 Highlight Difference Between Bootstrap 4 & 5 Classes\r\n\u2022 Also, Live preview of HTML & code snippet\r\n\u2022 Update code snippet on the go\r\n\u2022 Easily copy the code snippet and use it\r\n\r\n**Useful links\ud83d\udd17**\r\n\r\n\u2022 Website: https://bootstrap-cheatsheet.themeselection.com/\r\n\u2022 GitHub: https://github.com/themeselection/bootstrap-cheatsheet",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-25T14:37:43Z",
        "closed_at": "2021-07-28T08:36:33Z",
        "merged_at": null,
        "body": "https://github.com/saintmalik/awesome-oss-docs\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\nA curated list of awesome Open Source Documentations for people whole love contributing to docs, only documenation that allows contributions are in the list.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-01T17:18:57Z",
        "closed_at": "2021-07-29T11:27:55Z",
        "merged_at": "2021-07-29T11:27:55Z",
        "body": "https://github.com/friedger/awesome-stacks-chain#readme\r\n\r\n**This is a list of awesome resources and projects on the Stacks blockchain, maintained by the Stacks community. Stacks is a blockchain project that brings smart contracts to a chain that has native visibility into Bitcoin state. There are many current and in-progress projects against the Stacks chain, and as a community we feel passionate about being included in the Awesome list.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\nPRs reviewed\r\n\r\n- #2019 \r\n- #2023 \r\n\r\n---\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 12
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-30T07:21:13Z",
        "closed_at": "2021-07-28T12:16:14Z",
        "merged_at": "2021-07-28T12:16:14Z",
        "body": "**https://github.com/mfkl/awesome-vlc**\r\n\r\n**This is a list of awesome resources about the VLC apps and ecosystem, as weel as the LibVLC SDK.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\r\n- https://github.com/sindresorhus/awesome/pull/2035#issuecomment-871150166\r\n- https://github.com/sindresorhus/awesome/pull/1966#issuecomment-871151807\r\n\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-29T13:56:37Z",
        "closed_at": "2021-07-05T16:49:57Z",
        "merged_at": "2021-07-05T16:49:56Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://www.trackawesomelist.com**\r\n\r\n**This is another way to browse awesome repos, for example, https://www.trackawesomelist.com/sindresorhus/awesome/ , we can view it by time. It solved my needs, when I stared some awesome repos before, that's the thing. With this, I can get the latest updates of my favorite awesome repo. I wonder if you also need it. I think it's nice if this is listed at Related category**\r\n\r\nI reviewed https://github.com/sindresorhus/awesome/pull/2010 , https://github.com/sindresorhus/awesome/pull/2035 \r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-25T08:33:05Z",
        "closed_at": "2022-02-27T08:37:42Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nSource: https://github.com/beucismis/awesome-fetch\r\n\r\nThis list is about command-line tools that fetch system information. Listed by different languages. A awesome place to explore.\r\n\r\nI reviewed #2010, #2037\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 23
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-22T08:55:10Z",
        "closed_at": "2021-07-28T00:06:23Z",
        "merged_at": "2021-07-28T00:06:23Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/lodthe/awesome-internships\r\n\r\nA lot of students look for summer internships. This repo contains useful information for them, i. e. companies who are hiring interns, guides on how to create a cv, behavioral interview advice.\r\n\r\nI reviewed: \r\n- #1959\r\n- #1961\r\n- #1966\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-21T07:27:21Z",
        "closed_at": "2021-06-23T19:59:04Z",
        "merged_at": null,
        "body": "**https://github.com/casbin/awesome-auth**\r\n\r\n**Awesome auth is a curated list of authentication & authorization software and libraries . And this list exists because it benefits many groups of people \u2014 system administrators, security researchers and the developers who care about the security of their systems.**\r\n\r\n**Reviews:**\r\n\r\n- [#2012](https://github.com/sindresorhus/awesome/pull/2012#issuecomment-864687982)\r\n- [#2020](https://github.com/sindresorhus/awesome/pull/2020#issuecomment-864686517)\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n  Try to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n  - \u2705 `Add Swift`\r\n  - \u2705 `Add Software Architecture`\r\n  - \u274c `Update readme.md`\r\n  - \u274c `Add Awesome Swift`\r\n  - \u274c `Add swift`\r\n  - \u274c `add Swift`\r\n  - \u274c `Adding Swift`\r\n  - \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n  - \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n  - \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n  - \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n  - \u274c `- [Framer](\u2026)`\r\n  - \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n  - \u2705 `Mobile operating system for Apple phones and tablets.`\r\n  - \u2705 `Prototyping interactive UI designs.`\r\n  - \u274c `Resources and tools for iOS development.`\r\n  - \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n  **If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n  - \u2705 `awesome-swift`\r\n  - \u2705 `awesome-web-typography`\r\n  - \u274c `awesome-Swift`\r\n  - \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n  - \u2705 `# Awesome Swift`\r\n  - \u2705 `# Awesome Web Typography`\r\n  - \u274c `# awesome-swift`\r\n  - \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n  - Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n  - The image should link to the project website or any relevant website.\r\n  - **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n  - Should be placed on the right side of the readme heading.\r\n    - Can be placed centered if the list has a centered graphics header.\r\n  - Should link back to this list.\r\n- Has a Table of Contents section.\r\n  - Should be named `Contents`, not `Table of Contents`.\r\n  - Should be the first section in the list.\r\n  - Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n  - Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n  - **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n    - Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n  - A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n  - Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n  - **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n  - To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n  - The file should be named `contributing.md`. Casing is up to you.\r\n  - It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n  - The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n  - The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n  - The description starts with an uppercase character and ends with a period.\r\n  - Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-15T16:47:00Z",
        "closed_at": "2021-06-15T16:58:03Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]** https://github.com/UlugbekMuslitdinov/awesome-django#readme\r\n\r\n**[Explain what this list is about and why it should be included here]**: This list contains sources about Django Python Web Framework. Django holds one of the leading positions in the Web Development tools list and it deserves to get the place in your list also.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-05T21:42:16Z",
        "closed_at": "2021-06-05T21:49:51Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/Moldy-Community/moldy*\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\nA opensource project and tool for help to the world\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Moldy`\r\n\t- \u2705 `Add Miscellaneous`\r\n\t- \u2705 `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-06-01T17:36:01Z",
        "closed_at": "2021-06-01T19:07:57Z",
        "merged_at": "2021-06-01T19:07:57Z",
        "body": "Fixes the issue mentioned here: https://github.com/sindresorhus/awesome/pull/2003#issuecomment-851994765\r\n\r\nWe need to use `origin/main` instead of just `main` for the git diff command.\r\n\r\nAlso, awesome-lint [depends on seeing all git history](https://github.com/sindresorhus/awesome-lint/issues/105#issuecomment-637475566) so we removed the flag for clone depth.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-28T21:02:27Z",
        "closed_at": "2021-06-01T20:06:03Z",
        "merged_at": null,
        "body": "This one is actively maintained and mirror of original the one. Although it has more commits than it's source (https://notabug.org/koz.ross/awesome-c).",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-28T15:02:59Z",
        "closed_at": "2021-07-04T12:30:29Z",
        "merged_at": "2021-07-04T12:30:29Z",
        "body": "https://github.com/mdbootstrap/awesome-mdbootstrap\r\n\r\nMDB is a powerful UI Kit & Tools that includes a massive library of components that make it a breeze to design websites, web apps, and mobile applications.  It's mainly made to save designers valuable time while building modern-looking websites. It would be great if everyone could get to know MDBootstrap and compare its awesome projects with other tools: :D\r\n \r\nI reviewed:\r\n\r\n- https://github.com/sindresorhus/awesome/pull/1973\r\n- https://github.com/sindresorhus/awesome/pull/1938\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-27T12:03:23Z",
        "closed_at": "2021-07-05T16:46:15Z",
        "merged_at": "2021-07-05T16:46:15Z",
        "body": "**https://github.com/golemfactory/awesome-golem**\r\n\r\n**Golem is a free and open-source, distributed, permissionless and censorship-resistant marketplace for computational resources. Users run the Golem daemon (Yagna) and with it they can act as one of two non-exclusive roles. Either as a provider of computation that offers to sell their resources, or a requestor offering to buy resources by running tasks. Together the participants form the Golem Network.**\r\n\r\n**Reviews:**\r\n- [#1981](https://github.com/sindresorhus/awesome/pull/1981#issuecomment-848884919)\r\n- [#2021](https://github.com/sindresorhus/awesome/pull/2021#issuecomment-848882439)\r\n- [#2001](https://github.com/sindresorhus/awesome/pull/2001#pullrequestreview-670440682)\r\n- [#2033](https://github.com/sindresorhus/awesome/pull/2033#issuecomment-866928114)\r\n- [#2038](https://github.com/sindresorhus/awesome/pull/2038#issuecomment-873950862)\r\n- [#2039](https://github.com/sindresorhus/awesome/pull/2039#issuecomment-872476066)\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-26T07:21:52Z",
        "closed_at": "2022-06-02T11:14:48Z",
        "merged_at": "2022-06-02T11:14:48Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\nhttps://github.com/erwanlemerrer/awesome-audit-algorithms\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\nA curated list of audit algorithms for getting insights from black-box algorithms.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 14
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-26T06:17:39Z",
        "closed_at": "2021-05-26T06:21:47Z",
        "merged_at": null,
        "body": "Neovim is a Vim-fork focused on extensibility and usability\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-24T11:35:15Z",
        "closed_at": "2021-09-17T15:54:40Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n[**https://github.com/drushadrusha/awesome-maps**](https://github.com/drushadrusha/awesome-maps)\r\n\r\n**This is curated list of interactive maps and datasets on maps.**\r\n\r\n**My comments on other pull requests:**\r\n[#1997](https://github.com/sindresorhus/awesome/pull/1997)\r\n[#1064](https://github.com/sindresorhus/awesome/pull/1964)\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-23T04:19:40Z",
        "closed_at": "2021-07-27T12:30:50Z",
        "merged_at": null,
        "body": "**https://github.com/networktocode/awesome-network-automation**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\nMassive list of network automation resources\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-22T06:50:32Z",
        "closed_at": "2021-07-27T12:31:35Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/pluja/awesome-privacy**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\nThis is a curated list of services and alternatives that respect users' privacy. I think this should be included here because privacy is a right and people need easy ways to learn and choose how to protect their privacy. This list provides awesome alternatives to a lot of services and provides knowledge, this is why I think it is awesome.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\t#1997 \r\n        #1965 \r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 607,
        "deletions": 607,
        "changed_files": 1,
        "created_at": "2021-05-20T04:09:55Z",
        "closed_at": "2021-05-20T06:47:15Z",
        "merged_at": null,
        "body": "Hey, how are you guys? In this PR, I alphabetized all the contents in the README file.\r\n\r\nI alphabetized as stated below:\r\n- the contents section stayed at the top\r\n- the links in the contents header are all alphabetized\r\n- headers themselves are in ABC order\r\n- the lists in the header are alphabetized\r\n- the sublists are also correctly alphabetized\r\n\r\n\r\nIf you noticed any problems with missing content/wrong alphabetization, please just leave a comment or [email me](mailto:hi@drew.cx) with the problem and I'll update it!\r\n\r\nThanks,\r\nDrew",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-19T09:04:27Z",
        "closed_at": "2021-05-19T10:04:21Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/romeland/awesome-rome\r\n\r\nRome is a linter, compiler, bundler, and more for JavaScript, TypeScript, JSON, HTML, Markdown, and CSS. Rome is designed to replace Babel, ESLint, webpack, Prettier, Jest, and others. Rome unifies functionality that has previously been separate tools. Building upon a shared base allows us to provide a cohesive experience for processing code, displaying errors, parallelizing work, caching, and configuration.\r\n\r\nReviews\r\n\r\n - https://github.com/sindresorhus/awesome/pull/2001#issuecomment-843814499\r\n - https://github.com/sindresorhus/awesome/pull/2013#issuecomment-843811993\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2021-05-16T18:34:07Z",
        "closed_at": "2021-05-17T05:51:30Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-15T00:42:47Z",
        "closed_at": "2021-06-05T12:22:26Z",
        "merged_at": "2021-06-05T12:22:25Z",
        "body": "Add APA Technology Divisions GitHub Repo for Urban Planning.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/APA-Technology-Division/urban-and-regional-planning-resources\r\nWorking Previous Link is [here](https://github.com/APA-Technology-Division/planning-technology-resources).\r\n\r\nThis list is sponsored by the [APA Technology Division](https://tech.planning.org/) and is intended to catalog urban planning tools  and resources. \r\n\r\nWe have an issue discussing compliance with awesome-list standards here. \r\nhttps://github.com/APA-Technology-Division/planning-technology-resources/issues/14\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\nWe have reviewed there requirements for inclusion, and have made edits sufficient to pass awesome-lint checks. We needed to add a disable flag for our TOC (there was error with no clear direction to resolve), but are willing to work through that if that is determined to be necessary. Generally, we felt the awesome-lint process while difficult improved the quality of our repo. \r\nEdit*\r\nWe are not going to rename our repo to awesome-urban-planning because of the existing of a training where this repo name is used, and there are concerns the name would not be inclusive from our membership. \r\nWe hope that the  mission to create an index of knowledge resources is sufficient for compliance, but we are willing to discuss edits. \r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\nPRs reviewed\r\n\r\n- #1950 \r\n- #2012 \r\n- #2011 \r\n\r\nContributions also have been made to awesome-gis and other lists to support the spirit of open-source.\r\n\r\n---\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-14T19:32:59Z",
        "closed_at": "2021-07-06T10:15:24Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/Punkays/awesome-zabbix#readme**\r\n\r\n**This list talks about an open source open source monitoring tool, Zabbix**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-13T19:07:28Z",
        "closed_at": "2021-09-17T15:54:20Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/bernardoduarte/awesome-version-managers**\r\n\r\n**A Version Manager is a piece of software that allows a user to handle multiple versions of the same programming language with ease of use. This is an awesome list of Version Managers, containing those that are most recommended and that are more mature. The idea of this list is to allow someone to use a new language more easily, without worries about version problems.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\nI have reviewed 3 PRs.\r\n\r\n[#1725 (comment)](https://github.com/sindresorhus/awesome/pull/1725#issuecomment-597017443)\r\n[#1684 (comment)](https://github.com/sindresorhus/awesome/pull/1684#issuecomment-597011588)\r\n[#1666 (comment)](https://github.com/sindresorhus/awesome/pull/1666#issuecomment-597030946)\r\n\r\n`awesome-lint` is satisfied (\u2714 Linting)\r\n\r\n`unicorn` I've read all the guidelines ;D\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-08T09:03:41Z",
        "closed_at": "2021-09-17T15:54:06Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/prokopsimek/awesome-developer-experience**\r\n\r\n**The developer experience is like UX but more oriented to development. The list contains resources, tools, and tips to improve the dev team's effectiveness and better API/Docs delivery to developers.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n_I have read it 2 times and hopefully, I didn't forget anything._\r\n\r\nI have reviewed 3 PRs. I hope my comments are enough to support being the awesome project self-sustainable.\r\n- https://github.com/sindresorhus/awesome/pull/2007#issuecomment-835217620\r\n- https://github.com/sindresorhus/awesome/pull/1954#issuecomment-835220660\r\n- https://github.com/sindresorhus/awesome/pull/1950#issuecomment-835221917\r\n\r\n`awesome-lint` is satisfied (\u2714 Linting)\r\n\r\nThank you for your reviews! I am here to improve whatever could be improved. I also know that the list is not long enough as other lists but I believe in support from the community to improve the list. \r\n\r\nPlease, suggest any changes or improvements.\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-08T08:34:54Z",
        "closed_at": "2021-05-08T08:39:21Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/prokopsimek/awesome-developer-experience**\r\n\r\n**The list is about Developer Experience topic - best practices in development, resources and tips how to improve DX, and tools related to better DX**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-07T11:40:36Z",
        "closed_at": "2021-07-28T00:18:55Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n[https://github.com/mehdihadeli/awesome-software-architecture](https://github.com/mehdihadeli/awesome-software-architecture)\r\n\r\nSome articles and resources to learn and practice about software architecture, patterns, and principles.\r\n\r\n**PR reviewed**\r\n4 pull requests I've reviewed: [#1936](https://github.com/sindresorhus/awesome/pull/1936#issuecomment-769943730) , [#1931](https://github.com/sindresorhus/awesome/pull/1931#issuecomment-769940411) , [#1944](https://github.com/sindresorhus/awesome/pull/1944#issuecomment-779087538), [#1947](https://github.com/sindresorhus/awesome/pull/1947#issuecomment-779093450), [#2006](https://github.com/sindresorhus/awesome/pull/2006#issuecomment-834295373)\r\n\r\n[#1947(comment)](https://github.com/sindresorhus/awesome/pull/1947#issuecomment-779093450)\r\n[#1936(comment)](https://github.com/sindresorhus/awesome/pull/1936#issuecomment-769943730)\r\n[#1931(comment)](https://github.com/sindresorhus/awesome/pull/1931#issuecomment-769940411)\r\n[#1944 (comment)](https://github.com/sindresorhus/awesome/pull/1944#issuecomment-779087538)\r\n[#2006(comment)](https://github.com/sindresorhus/awesome/pull/2006#issuecomment-834295373)\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-07T08:45:44Z",
        "closed_at": "2021-05-17T17:24:31Z",
        "merged_at": "2021-05-17T17:24:31Z",
        "body": "https://github.com/innocenzi/awesome-inertiajs\r\n\r\nThis list is related to [Inertia.js](https://inertiajs.com), a protocol for making single-page applications without having to design and write an API. Inertia.js requires a back-end and a front-end adapter, but I added it to the \"front-end development\" category because I think it's what fits the most, given the fact that there is no \"web development\" category, and that people use Inertia.js in order to make SPAs.\r\n\r\n---\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- [x] You have read and understood the [instructions for creating a list](create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- [x] Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- [x] The image should link to the project website or any relevant website.\r\n\t- [x] **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- [ ] Should be placed on the right side of the readme heading.\r\n\t\t- [x] Can be placed centered if the list has a centered graphics header.\r\n\t- [x] Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- [x] Should be named `Contents`, not `Table of Contents`.\r\n\t- [x] Should be the first section in the list.\r\n\t- [ ] Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- [x] Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n- [x] Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- [x] The file should be named `contributing.md`. Casing is up to you.\r\n\t- [x] It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t[x] The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- [x] The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- [x] The description starts with an uppercase character and ends with a period.\r\n\t- [x] Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- [x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-03T18:30:43Z",
        "closed_at": "2021-05-03T18:44:04Z",
        "merged_at": "2021-05-03T18:44:04Z",
        "body": "Remove Awesome Chalice, since @sindresorhus only cares about showing ads next to our content with NO ATTRIBUTION",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-02T17:35:00Z",
        "closed_at": "2021-05-02T18:20:26Z",
        "merged_at": "2021-05-02T18:20:26Z",
        "body": "Addresses https://github.com/sindresorhus/awesome/pull/1962#issuecomment-830787984\r\n\r\nThe problem was that you need to add a `--` between the branch and the file path.\r\nhttps://git-scm.com/docs/git-diff\r\n\r\nMaybe I removed that part by accident when refactoring the code.\r\n\r\nAnyway, this is working now.\r\n\r\nSorry for the hiccup @sindresorhus ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-02T15:31:53Z",
        "closed_at": "2021-05-02T15:41:02Z",
        "merged_at": null,
        "body": "Added README which curated awesome R programming blogs from the web\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/Jeet1994/awesome-R-blogs/blob/master/README.md**\r\n\r\n**A carefully curated list of awesome blogs from the web on R programming.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-02T14:05:50Z",
        "closed_at": "2021-07-06T10:20:04Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/Raniazy/awesome-mlops**\r\n\r\n**I added my Awesome MLOps list in Machine Learning section, which is a curated list of interesting findings about MLOps. **\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-30T09:14:10Z",
        "closed_at": "2021-04-30T09:14:58Z",
        "merged_at": null,
        "body": "I added my Awesome Privacy list, which is a curated list of tools and services that respect your privacy.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/paulaime/Awesome-Privacy**\r\n\r\n**It's a curated list of tools and services that respect your privacy.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-27T15:11:37Z",
        "closed_at": "2021-04-27T15:23:45Z",
        "merged_at": null,
        "body": "This PR aims to show the Contributor Over Time for this repo, no contents changed.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-26T06:18:47Z",
        "closed_at": "2021-11-24T10:33:12Z",
        "merged_at": null,
        "body": "**[Insert URL to the list here]**\r\n\r\nhttps://github.com/xflywind/awesome-nim\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n[Nim](https://nim-lang.org/) is a statically typed compiled systems programming language.\r\n\r\nGood for everything from shell scripting to web front & backend, to ML, HPC, and embedded.\r\nProductivity: human readable and expressive like Python, with few sigils\r\nType system: strong static typing, nice generics, concepts, and type classes\r\nPerformance: matches C and C++, always gives control to the programmer\r\nPortability: compiles to C, C++, and Javascript\r\nNative use of all libraries in target languages (no ABI issues) + really nice FFI\r\nSingle (tiny) executable with no deps\r\nWrite server/client in the same language and share code between front/back end\r\nLinux, Windows, and Mac\r\nIterating: Very fast compile speed\r\nTop tier metaprogramming:\r\nHygienic AST Macros a core part of the language, very flexible syntax\r\nRuns a VM of Nim at compile time giving you most of the language (bar pointers) to generate code or run procedures and store them as const\r\nEg; async implemented just with macros, doesn't need special language support\r\nEg; can automate building types and code from file data at compile time\r\n\r\nRef https://old.reddit.com/r/programming/comments/jc91xp/nim_14/g90ysdl/?context=2\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests]\r\n#1983\r\n#1974\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-23T16:56:33Z",
        "closed_at": "2021-05-02T11:06:51Z",
        "merged_at": "2021-05-02T11:06:51Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/Anant/awesome-cassandra**\r\n\r\n**Apache Cassandra is a free and open-source, distributed, wide column store, NoSQL database management system designed to handle large amounts of data across many commodity servers, providing high availability with no single point of failure.**\r\n\r\n**Reviews**\r\n- [#1950](https://github.com/sindresorhus/awesome/pull/1950#issuecomment-824898027)\r\n- [#1964](https://github.com/sindresorhus/awesome/pull/1964#issuecomment-824895450)\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-04-22T16:43:07Z",
        "closed_at": "2021-07-29T13:20:51Z",
        "merged_at": "2021-07-29T13:20:51Z",
        "body": "As we've going through the process of rebranding organisation (GraknLabs becomes Vaticle and Grakn becomes TypeDB), it makes sense to update the reference in Awesome Lists",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-19T13:44:05Z",
        "closed_at": "2021-05-26T07:17:20Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/erwanlemerrer/awesome-audit-algorithms\r\n\r\nA curated list of audit algorithms for getting insights from black-box algorithms.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-12T13:53:58Z",
        "closed_at": "2021-04-19T09:23:48Z",
        "merged_at": "2021-04-19T09:23:48Z",
        "body": "https://github.com/chalice-dev/awesome-chalice#readme\r\n\r\nChalice is a framework for writing serverless Python applications on AWS Lambda.\r\n\r\nI reviewed:\r\n- https://github.com/sindresorhus/awesome/pull/1983\r\n- https://github.com/sindresorhus/awesome/pull/1954\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/chalice-dev/awesome-chalice#readme\r\n\r\nThis is an awesome list of need-to-know links relating to AWS Chalice, a previously hidden gem for writing serverless Python applications on AWS Lambda.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-11T21:39:21Z",
        "closed_at": "2021-06-04T19:11:06Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-09T15:19:00Z",
        "closed_at": "2021-07-27T12:19:45Z",
        "merged_at": null,
        "body": "https://github.com/p6m7g8/awesome-projen\n\nReviewed: #1794, #1823, #1980\n\nThis list provides the projen community a central place for reference patterns and use.\n\n`projen` is actually pretty important, it is used by several MAJOR opensource projects like:\n- CDK8s now in the Cloud Native Computing Foundation (CNCF)\n- CDKtf HashiCorp's terraform CDK\n- Armkit Community Driven Azure CDK\n- Constructs the AWS projects underpinning AWS CDK\n- Construct Cataloge the Open Source index of CDK Constructs\n\nThere are already over 1,000 GitHub repos using projen and it was featured at CDK Day 2020.\nIt will be featured again at CDK Day in 2021. This is a global community driven event attracting\nthousands.\n\nAs projen itself is an NPM module it needs maintenance so this already includes\ndependabot, mergify, codecov, codeql, synk to keep it up to date without intervention.\n\nThis list, based on p6-projen-project-awesome-list, is self updating too.\n\nAll PRs also run npx awesome-lint automatically before allowing merge.\n\nI have gone to great lenghts to automate in code the requests in the pull_request_template.\n\nI am open to anything I missed.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-05T16:07:22Z",
        "closed_at": "2021-05-12T07:57:23Z",
        "merged_at": "2021-05-12T07:57:23Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/altamiracorp/awesome-xai\r\n\r\nThis list pulls together some of the most \"awesome\" resources for Explainable AI. It's up to date with the academic literature and includes critiques (which is an essential part of the research).\r\n\r\nContributions:\r\nhttps://github.com/sindresorhus/awesome/pull/1947#issuecomment-813462788\r\nhttps://github.com/sindresorhus/awesome/pull/1939#issuecomment-813425951\r\n\r\nI've read this list a half-dozen times. I think I got it all right.\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n[x]  **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n[x]  **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n[x] You have read and understood the [instructions for creating a list](create-list.md).\r\n[x] This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n[x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n[x] Your entry should be added at the bottom of the appropriate category.\r\n[x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n[x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n[x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n[x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n[x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n[x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n[x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n[x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n[x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n[x] Non-generated Markdown file in a GitHub repo.\r\n[x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n[x] Not a duplicate. Please search for existing submissions.\r\n[x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n[x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n[x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n[x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n[x] Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n[x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n[x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n[x] Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n[x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n[x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n[x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n[x] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n[x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-05T15:45:23Z",
        "closed_at": "2021-04-05T16:06:40Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/altamiracorp/awesome-xai\r\n\r\nThis list pulls together some of the most \"awesome\" resources for Explainable AI. It's up to date with the academic literature and includes critiques (which is an essential part of the research).\r\n\r\nContributions:\r\nhttps://github.com/sindresorhus/awesome/pull/1947#issuecomment-813426974\r\nhttps://github.com/sindresorhus/awesome/pull/1939#issuecomment-813425951\r\n\r\nI've read this list a half-dozen times. I think I got it all right.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-28T23:50:39Z",
        "closed_at": "2021-06-03T20:28:32Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-27T13:32:46Z",
        "closed_at": "2021-04-02T19:51:59Z",
        "merged_at": "2021-04-02T19:51:59Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/nix-community/awesome-nix\r\n\r\nThis awesome list is a Nix-Community-maintained curation of Nix and NixOS resources, tooling, and communication for all levels of Nix experience. This list encompasses the package manager, expression language, and the derivative projects, including NixOS and NixOps.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. I reviewed prs #1959 and #1936. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n\r\n\r\nI'm not 100% positive on the section to add Nix to. It's so generally applicable that describing it as a programming language, development tool, or stack-centric system just doesn't fit, so I think \"Platform\" would work best.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-20T20:49:01Z",
        "closed_at": "2021-05-28T12:50:19Z",
        "merged_at": null,
        "body": "https://github.com/vitejs/awesome-vite\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\nThis list is maintained by the Vite team, and contains all things related to ViteJS\r\n\r\nI reviewed #1769 & #1758.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-18T18:52:59Z",
        "closed_at": "2021-03-19T07:05:01Z",
        "merged_at": "2021-03-19T07:05:00Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/sindresorhus/awesome**\r\n\r\n**Discussed with Sindre over email about adding this awesome list visualizer ( http://awesome.digitalbunker.dev/ ) to the Resources section**\r\n<img width=\"1086\" alt=\"Screen Shot 2021-03-18 at 11 51 33 AM\" src=\"https://user-images.githubusercontent.com/6252012/111681288-4c739780-87e0-11eb-810d-b8f8a77484ce.png\">\r\n\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-11T16:18:39Z",
        "closed_at": "2021-03-11T16:33:33Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n[https://github.com/zrosenbauer/awesome-bigtable](https://github.com/zrosenbauer/awesome-bigtable)\r\n\r\nDelightful list of Google Bigtable resources, packages and interesting finds. The Bigtable community is small and I put this together to help connect the disparate groups that utilize Bigtable to back their OSS projects, companies etc.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-03-11T06:31:10Z",
        "closed_at": "2023-02-11T06:45:18Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n- https://github.com/DopplerHQ/awesome-bots\r\n- https://github.com/DopplerHQ/awesome-interview-questions\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n**Awesome Interview Questions**\r\nList of interview guides for each language and framework. All I am doing is updating the name as the repo has moved.\r\n\r\n**Awesome Bots**\r\nList of bots companies can use to automate the services they leverage.\r\n\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-10T17:33:57Z",
        "closed_at": "2021-09-17T15:48:53Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/GiovanniSM20/awesome-supabase]**\r\n\r\n**[Is about a new platform that is an alternative to Firebase and it's open source and you can self-host and not suffer a vendor-lock]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-10T09:30:45Z",
        "closed_at": "2021-07-27T12:07:33Z",
        "merged_at": null,
        "body": "Add GPT-3\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/elyase/awesome-gpt3**\r\n\r\n**Awesome GPT-3 is a collection of demos and articles about the OpenAI GPT-3 API.\r\nGPT3 is the largest language model so far. It is still not open for everyone, but it will someday.\r\nIt is so powerful natural language process model, and this awesome GPT3 can help researchers to get some ideas for\r\nnew applications.**\r\n\r\n\r\n\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-09T18:44:19Z",
        "closed_at": "2021-07-27T12:07:04Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/vadim0x60/awesome-artificial-humour**\r\n\r\n**Artificial Humour is both an interesting scientific field and a fun way to spend a night. Awesome Artificial Humour is probably the best repository on this topic online**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-03-08T23:22:55Z",
        "closed_at": "2021-04-19T09:59:15Z",
        "merged_at": "2021-04-19T09:59:15Z",
        "body": "Note: This PR is a repeat of #1851 since the fork or original fork was deleted. This PR address comments there.\r\n\r\n\r\nI really appreciate this project and wanted to try to give back so it's a little easier for everyone involved.\r\nTo that end, I created this PR to **automatically lint new lists** when someone opens a PR to add them.\r\n\r\n## Benefits\r\n  - It will save time of maintainers by allowing them to look at the error message first\r\n  - It will provide immediate feedback to people who make a PR\r\n  - It helps people having trouble installing `awesome-lint`\r\n  - It is free\r\n\r\n## Risks\r\n  - As far as I know, there is no risk to users or maintainers.\r\n\r\n## What it does\r\n- PR will lint **NEW** lists that are requesting to be added.\r\n- PR will **NOT** lint [this](https://github.com/sindresorhus/awesome/) repo itself. If that functionality is desired it can happen in a separate PR (see https://github.com/sindresorhus/awesome/pull/1794).\r\n- PR will **NOT** lint the current lists in the readme.\r\n\r\n## How it does it\r\nThis PR creates a GitHub action that will do the following every time a new commit is pushed to an open PR:\r\n1. Find the URL that is being added using `git diff`\r\n2. Clone that repo\r\n3. Run `awesome-lint`on that repo.\r\n\r\nThe above 3 steps will **ONLY** run if `readme.md` is changed.\r\nIf readme is changed and no new URL is detected in the readme it will NOT fail with a helpful error message.\r\nError can be ignored if it is a cosmetic PR\r\n\r\n[Here](https://github.com/RayBB/awesome/pull/2) are examples of failing commits.\r\n\r\n## Final notes\r\n\r\n\"Squash and Merge\" this PR or let me know and I will squash it manually.\r\n\r\nFeel free to edit this any way you see fit or ask me to make the edits. \ud83d\udc4d\r\nIf there are any questions on how this works drop them here and I'll try my best to answer.\r\n\r\nAgain, thanks so much for all the hard work the maintainers put into this repo! \ud83d\udc4f ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-07T18:59:36Z",
        "closed_at": "2021-03-18T13:08:25Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Python in Learning](https://github.com/quobit/awesome-python-in-education)**\r\n\r\n**Python in learning is a list of Python learning resources, like tutorials, webpages and others, game engines, like Ursina Engine, Panda3D and others, and more!**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 23
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-05T08:31:22Z",
        "closed_at": "2021-07-07T13:52:22Z",
        "merged_at": "2021-07-07T13:52:21Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/mostafatouny/awesome-theoretical-computer-science/**\r\n\r\n**Theoretical computer science curated list of valuable resources. It is the interplay of mathematics and computer science, distinguished by its mathematical rigor and technique. Theoretical computer science is not widely popular. So it is not easy to find resources or a community for it. That is the role of this awesome list**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 20
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-04T00:24:41Z",
        "closed_at": "2021-07-27T12:06:15Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/nahberry/awesome-recon-tools**\r\n\r\n**This is a complied list of awesome tools for the reconnaissance and footprinting of network and email information. These tools are extremely useful for ethical hacking and security.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-26T13:12:28Z",
        "closed_at": "2021-02-26T13:17:56Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/Rabios/awesome-raylib**\r\n\r\n**This is an awesome list for raylib, A simple and easy to use game programming library, It's list, I added it to Games section cause it's amazing**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-21T18:07:38Z",
        "closed_at": "2021-07-27T12:05:39Z",
        "merged_at": null,
        "body": "Hello,\r\n\r\nI added https://github.com/Kikobeats/awesome-full-text-search under the JavaScript section since this is the list I'm maintaining for the last 5 years.\r\n\r\n- [x] branch name is `main`.\r\n- [x] linter is reporting 0 issues.\r\n- [x] added the item with a description in the right position.",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-21T14:56:01Z",
        "closed_at": "2021-07-29T11:58:23Z",
        "merged_at": "2021-07-29T11:58:23Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/dersvenhesse/awesome-scriptable#readme**\r\n\r\n**The iOS app Scriptable allows users to create automations in JavaScript. With the release of widgets in iOS 14 and the power of Scriptable, users created wonderful widgets which are curated in this list.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive. \r\n- [x] https://github.com/sindresorhus/awesome/pull/1908#issuecomment-728321253, https://github.com/sindresorhus/awesome/pull/1891#issuecomment-720091351, https://github.com/sindresorhus/awesome/pull/1894#issuecomment-721341637, https://github.com/sindresorhus/awesome/pull/1902#issuecomment-727579512\r\n**You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- [x] You have read and understood the [instructions for creating a list](create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- [x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-21T11:36:15Z",
        "closed_at": "2021-07-27T12:28:56Z",
        "merged_at": null,
        "body": "Hello,\r\n\r\nThe [awesome-cli](https://github.com/Kikobeats/awesome-cli) group the best resources for creating your own CLI using JavaScript, and also a lot of goods CLI that combines the best of UNIX philosophy and user experience.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-21T11:21:58Z",
        "closed_at": "2021-07-06T09:52:31Z",
        "merged_at": null,
        "body": "Hello,\r\n\r\nI just added https://github.com/teslahunt/awesome-tesla, a list I'm maintaining that collects the best third-party utilities, libraries, and tools to know more about Tesla motors vehicles.",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-19T04:49:39Z",
        "closed_at": "2021-07-27T12:25:52Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/dmitryvinn/awesome-dev-advocacy#README\r\n\r\nThis lists include awesome resources necessary for anyone starting, planning to get involved with or wants to improve skills in the field of Developer Advocacy.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-15T12:49:58Z",
        "closed_at": "2021-04-12T14:32:47Z",
        "merged_at": null,
        "body": "- [x] This GitHub Action will auto check URLs present in the repository to check whether they are working or not.\r\n- [x] This will also make sure that the PR's URLs are also checked before merging into `main`\r\n- [x] And is scheduled to check if the existing URLs are working as expected. _The cron is scheduled at 23:23 UTC_",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-09T17:36:27Z",
        "closed_at": "2021-04-05T15:55:31Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/MadhuNimmo/awesome-reddit-channels]**\r\n\r\n**[This repo contains the list of popular Reddit channels every programmer should follow]**\r\n\r\nPR reviewed\r\n2 pull requests I've reviewed: #1941 and #1946\r\nhttps://github.com/sindresorhus/awesome/pull/1941#issuecomment-776115535\r\nhttps://github.com/sindresorhus/awesome/pull/1946#issuecomment-776114300\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-09T06:53:28Z",
        "closed_at": "2021-03-07T12:37:21Z",
        "merged_at": null,
        "body": "This is a primer with the maximum amount of data as I may realize on completely different aspects of the biohacking community.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/mafiaguy/awesome-biohacking]**\r\n\r\n**[This list aims to help starters as well as seasoned Bio Hacker to find everything related to Biohacking at one place.]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-06T05:33:17Z",
        "closed_at": "2021-02-06T06:13:11Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-04T07:46:17Z",
        "closed_at": "2021-03-07T12:26:55Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/mafiaguy/awsome-biohacking]**\r\n\r\n**[This is a primer with the maximum amount of data as I may realize on completely different aspects of the biohacking community.]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-03T23:03:00Z",
        "closed_at": "2021-02-03T23:03:43Z",
        "merged_at": null,
        "body": "Awesome-Svelte: https://github.com/rocketlaunchr/awesome-svelte#readme",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-28T14:58:38Z",
        "closed_at": "2021-07-27T12:28:34Z",
        "merged_at": null,
        "body": "<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/mehdihadeli/awesome-dotnet-core-education\r\n\r\nIn this repository I will gather useful articles and resources about .net core.\r\n\r\n**PR reviewed**\r\n4 pull requests I've reviewed: [#1936](https://github.com/sindresorhus/awesome/pull/1936#issuecomment-769943730) , [#1931](https://github.com/sindresorhus/awesome/pull/1931#issuecomment-769940411) , [#1944](https://github.com/sindresorhus/awesome/pull/1944#issuecomment-779087538), [#1947](https://github.com/sindresorhus/awesome/pull/1947#issuecomment-779093450)\r\n\r\n[#1947(comment)](https://github.com/sindresorhus/awesome/pull/1947#issuecomment-779093450)\r\n[#1936(comment)](https://github.com/sindresorhus/awesome/pull/1936#issuecomment-769943730)\r\n[#1931(comment)](https://github.com/sindresorhus/awesome/pull/1931#issuecomment-769940411)\r\n[#1944 (comment)](https://github.com/sindresorhus/awesome/pull/1944#issuecomment-779087538)\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 20
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-28T13:27:28Z",
        "closed_at": "2021-05-07T11:11:54Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n[https://github.com/mehdihadeli/awesome-dotnet-async](https://github.com/mehdihadeli/awesome-dotnet-async)\r\n\r\nIn This repository I collected useful articles and resources about async, threading, and channels in .Net platform.\r\n\r\n**PR reviewed**\r\n4 pull requests I've reviewed: [#1936](https://github.com/sindresorhus/awesome/pull/1936#issuecomment-769943730) , [#1931](https://github.com/sindresorhus/awesome/pull/1931#issuecomment-769940411) , [#1944](https://github.com/sindresorhus/awesome/pull/1944#issuecomment-779087538), [#1947](https://github.com/sindresorhus/awesome/pull/1947#issuecomment-779093450)\r\n\r\n[#1947(comment)](https://github.com/sindresorhus/awesome/pull/1947#issuecomment-779093450)\r\n[#1936(comment)](https://github.com/sindresorhus/awesome/pull/1936#issuecomment-769943730)\r\n[#1931(comment)](https://github.com/sindresorhus/awesome/pull/1931#issuecomment-769940411)\r\n[#1944 (comment)](https://github.com/sindresorhus/awesome/pull/1944#issuecomment-779087538)\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-26T13:17:07Z",
        "closed_at": "2021-01-27T14:02:38Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/CipherDogs/awesome-cyber#readme\r\n\r\ncyber is a brand new protocol (a procedure that helps computers to do things in a certain way) for adding and searching information onto a knowledge graph (a compilation of facts about something that provides meaning to the user). And rank this information. In other words, it's a decentralized google\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-26T11:56:59Z",
        "closed_at": "2021-07-06T10:34:24Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n[https://github.com/tahayigitmelek/awesome-google-play-apps/](https://github.com/tahayigitmelek/awesome-google-play-apps/)\r\n\r\nAwesome list of the best store applications for Android. I did not come across such a title in the project, I created a list of applications that I think would be useful. (I've been dealing with this list for a long time, but recently I had the opportunity to publish it on the GitHub platform. I followed every rule except the 30-day rule.)\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 11
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-25T11:27:26Z",
        "closed_at": "2021-03-10T07:40:17Z",
        "merged_at": "2021-03-10T07:40:17Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/graknlabs/awesome**\r\n\r\n**Grakn is an open-source knowledge graph database with built-in rule-based inferencing**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n[x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n[x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n[x] You have read and understood the [instructions for creating a list](create-list.md).\r\n[x] This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n[x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n[x] Your entry should be added at the bottom of the appropriate category.\r\n[x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n[x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n[x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n[x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n[x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n[x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n[x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n[x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n[x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n[x] Non-generated Markdown file in a GitHub repo.\r\n[x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n[x] Not a duplicate. Please search for existing submissions.\r\n[x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n[x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n[ ] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n[x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n[x] Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t[x] Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t[x] Should link back to this list.\r\n[x] Has a Table of Contents section.\r\n\t[x] Should be named `Contents`, not `Table of Contents`.\r\n\t[x] Should be the first section in the list.\r\n\t[x] Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t[x] Must not feature `Contributing` or `Footnotes` sections.\r\n[x Has an appropriate license.\r\n\t[x] **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t[x] A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t[x] Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t[x] **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n[x] Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t[x] The file should be named `contributing.md`. Casing is up to you.\r\n\t[x] It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t[x] The section should not appear in the Table of Contents.\r\n[x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n[x] Has consistent formatting and proper spelling/grammar.\r\n\t[x] The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t[x] The description starts with an uppercase character and ends with a period.\r\n\t[x] Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n[x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n[x] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n[x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-24T12:26:31Z",
        "closed_at": "2021-01-24T13:47:15Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/tahayigitmelek/awesome-mobile-store-apps]**\r\n\r\n**[Awesome list of the best store applications for Android. I did not come across such a title in the project, I created a list of applications that I think would be useful.]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-23T08:24:26Z",
        "closed_at": "2021-08-16T17:56:53Z",
        "merged_at": "2021-08-16T17:56:53Z",
        "body": "https://github.com/godotengine/awesome-godot\r\n\r\nUpdating Awesome Godot list link from the now unmaintained Calinou one to the godotengine maintained one\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-23T04:33:54Z",
        "closed_at": "2021-03-07T11:42:18Z",
        "merged_at": "2021-03-07T11:42:18Z",
        "body": "https://github.com/n2cholas/awesome-jax#readme\r\n\r\nJAX brings automatic differentiation and the XLA compiler together through a numpy-like API for high performance machine learning research on accelerators like GPUs and TPUs.\r\n\r\nI think JAX is an excellent alternative to frameworks like TensorFlow and PyTorch for researchers. A curated list of existing projects/libraries and other resources will help researchers build off others' work and use JAX effectively.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n\r\n> Commented on PRs: #1932, #1917.\r\n\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n\r\n> Fixed all issues except false positives on list items, opened issue [here](https://github.com/sindresorhus/awesome-lint/issues/136).\r\n\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n\r\n> The library is named JAX with all uppercase, which is why it isn't titlecase.\r\n\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n\r\n> I used the logo from the JAX repo, which is 250px tall, and set the height to 100px (< half the width). If it must be precisely half, I will change this.\r\n\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-14T12:16:58Z",
        "closed_at": "2021-01-18T07:42:46Z",
        "merged_at": "2021-01-18T07:42:46Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/michelpereira/awesome-games-of-coding/**\r\n\r\nThe purpose of this list is to practice a new programming language by coding a game, solving puzzles or teaching robots to attack and defend itself like in Vindinium.\r\n\r\n- The list is around for 4+ years.\r\n- Have been discussed on Hackernews: https://news.ycombinator.com/item?id=13566247\r\n- Reviewed PRs: #1886\r\n- Comments made: #1912 (comment)\r\n- Suggestion made to other lists: #1907 (comment)\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-13T16:05:57Z",
        "closed_at": "2021-01-23T22:40:04Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/hodovani/awesome-javascript-data-science/blob/main/README.md\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\nA curated list of awesome libraries for doing data science in your\r\nbrowser or Node.js environment. That doesn't just mean Javascript: thanks to WebAssembly, many data\r\nscience libraries from other languages are now available in the browser.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-13T07:46:00Z",
        "closed_at": "2021-03-07T12:36:10Z",
        "merged_at": null,
        "body": "Added new item to programming language (Typescript)\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n[See here](https://github.com/sb16072007/awesome#readme)\r\n\r\n**Added TypeScript to the list**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-11T13:48:54Z",
        "closed_at": "2021-01-12T06:34:05Z",
        "merged_at": null,
        "body": "Thanks for creating and maintaining the Awesome list.\r\n\r\nGotta say, maybe it's me but the instructions below are extremely unclear... Is a \"list\" like an entry? Hope I did everything right...\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]** ?? Link to what list?\r\n\r\n**[Explain what this list is about and why it should be included here]** ??\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-10T19:37:10Z",
        "closed_at": "2021-01-10T19:45:10Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/ecency/awesome-hive#readme**\r\n\r\n**Open source platform built for blockchain social networks, games and different financial applications.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions. `Reviewed:` #1175 and #1770\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-02T10:41:07Z",
        "closed_at": "2021-06-05T10:25:49Z",
        "merged_at": null,
        "body": "Add some Startpages for more productivity and efficiency.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/jnmcfly/awesome-startpage\r\n\r\nEveryone hordes bookmarks and links lists in a diverse manner. As a point of origin, a Startpage provides a home for your most frequently visited pages. This List contains beautiful and useful Startpages to start your browse right.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-30T09:00:20Z",
        "closed_at": "2020-12-30T10:17:05Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/NexClipper/exporterhub.io**\r\n\r\n**This is for easy to use & find out the exporters list of prometheus**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-29T13:41:56Z",
        "closed_at": "2021-07-27T12:24:44Z",
        "merged_at": "2021-07-27T12:24:44Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/kdeldycke/awesome-billing**\r\n\r\n**Why is this list awesome?**\r\n\r\nAny company needs at one point to get money from customers. That's when things gets messy for us developers, as we try to reconcile the complexity of the business with our software stack.\r\n\r\nThis awesome list helps software engineers bootstrap billing & payments systems and make sense of invoicing, pricing, accounting, marketplace, fraud and business intelligence.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n\u2705 I read this PR template multiple times. Better yet: I contributed to refining it: https://github.com/sindresorhus/awesome/commit/488c1051a3089e386ed223a5b45ab8ff8c53397c\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n  Sort of. I'm involved in the community by other means:\r\n    \u2757 I already contributed to this repository: https://github.com/sindresorhus/awesome/commits?author=kdeldycke\r\n    \u2757 I pushed code to `awesome-lint` to automate even more the work of reviewing lists: https://github.com/sindresorhus/awesome-lint/commits?author=kdeldycke\r\n- [x] You have read and understood the [instructions for creating a list](create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n    \u2705 This repository has been active since June 2019: https://github.com/kdeldycke/awesome-billing/commit/2f87a717d13399f3aad681126307c08a36753a2f\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n  \u2705 `awesome-lint` is run on each commit via a GitHub action: https://github.com/kdeldycke/awesome-billing/actions?query=workflow%3ALint \r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n  \u2705 I've been working on it for a year and a half, made 250+ commits, and highly curated the list (we're far from a simple collection of links).\r\n- [ ] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- [x] Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- [x] The image should link to the project website or any relevant website.\r\n\t- [x] **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- [x] Should be placed on the right side of the readme heading.\r\n\t\t- [x] Can be placed centered if the list has a centered graphics header.\r\n\t- [x] Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- [x] Should be named `Contents`, not `Table of Contents`.\r\n\t- [x] Should be the first section in the list.\r\n\t- [x] Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- [x] Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- [x] **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- [x] Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- [x] **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- [x] To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- [x] The file should be named `contributing.md`. Casing is up to you.\r\n\t- [x] It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- [x] The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- [x] The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- [x] The description starts with an uppercase character and ends with a period.\r\n\t- [x] Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- [x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-22T20:08:31Z",
        "closed_at": "2020-12-22T20:08:55Z",
        "merged_at": null,
        "body": "Created a list to add to the Awesome Security resources that are already here.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-20T12:27:22Z",
        "closed_at": "2020-12-20T12:33:33Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://chartscss.org/**\r\n\r\n**CSS data visualization framework**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-19T19:11:53Z",
        "closed_at": "2021-04-24T18:24:21Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/chrvadala/awesome-protocols\r\n\r\nA curated list of main protocol and open standards, each one with link to the official RFC document.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-15T12:32:22Z",
        "closed_at": "2021-03-10T08:33:26Z",
        "merged_at": "2021-03-10T08:33:26Z",
        "body": "[Testing] Adding Software Testing & QA Roadmap repository link\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\nhttps://github.com/fityanos/awesome-quality-assurance-roadmap\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\nThis repository includes:\r\n- Rich roadmap highlights software testing and software QA.\r\n- Test Plan sample pdf for downloading and private usage.\r\n- Translations to support community.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n",
        "comments": 18
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-12-12T23:46:25Z",
        "closed_at": "2020-12-18T07:16:08Z",
        "merged_at": "2020-12-18T07:16:08Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/mjhea0/awesome-flask\r\n\r\nThis PR is a follow up of #1918.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-09T19:33:48Z",
        "closed_at": "2021-01-31T09:42:20Z",
        "merged_at": "2021-01-31T09:42:20Z",
        "body": "https://github.com/balintkissdev/awesome-dos\r\n\r\nMaintained for over a year, this list provides a collection of DOS-related articles, programming tutorials, Youtube videos and list of DOS games with their source code, making this a starting point for anyone who want to try out retro-programming for this nostalgic operating system.\r\n\r\nTried my best to adhere to the guidelines. Ran `awesome-lint`, however, I disabled checking for `no-repeat-punctuation` for a list entry, because the original article name contained three periods (`...`).\r\n\r\nReviewed #1868 and #1915.\r\n\r\nLet me know what would you change in the content, organization or the format.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-07T15:42:49Z",
        "closed_at": "2021-03-07T14:33:18Z",
        "merged_at": "2021-03-07T14:33:18Z",
        "body": "**https://github.com/kdeldycke/awesome-iam**\r\n\r\n**Why is this list awesome?**\r\n\r\nBackend development might be tedious and full of pitfalls. This awesome list focus on the whole Identity and Access Management  (IAM for shorts), and help you out with concepts, tutorial and tools about managing accounts, users, roles, permissions, authentication and authorization.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n\u2705 I have read this PR template multiple times. Better yet: [I contributed to refining it](https://github.com/sindresorhus/awesome/commit/488c1051a3089e386ed223a5b45ab8ff8c53397c).\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other open pull requests.**\r\n  Sort of. I'm involved in the community by other means:\r\n    \u2705 I already [contributed to this repository](https://github.com/sindresorhus/awesome/commits?author=kdeldycke).\r\n    \u2705 I [pushed code to `awesome-lint`](https://github.com/sindresorhus/awesome-lint/commits?author=kdeldycke) to automate even more the work of reviewing lists>\r\n- [x] You have read and understood the instructions for creating a list.\r\n- [x] This pull request has a title in the format `Add Name of List`.\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n  \u2705 This repository [has been active since June 2019](https://github.com/kdeldycke/awesome-iam/commit/2982a50158ad86ab58d4788ae8f1b7808f99799e).\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- [x] Run `awesome-lint` on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please report it.\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.**\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n  \u2705 I worked on this for 2 years, made 400+ commits, highly curated the list (we're far from a simple collection of links), and was involved into the community.\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n- [x] The heading title of your list should be in title case format: `# Awesome Name of List`.\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as GitHub topics. I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- [x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-01T03:08:25Z",
        "closed_at": "2021-01-14T11:32:43Z",
        "merged_at": null,
        "body": "https://github.com/michelpereira/awesome-games-of-coding/\r\n\r\nThe purpose of this list is to practice a new programming language by coding a game, solving puzzles or teaching robots to attack and defend itself like in Vindinium.\r\n\r\n- The list is around for 4+ years.\r\n- Have been discussed on Hackernews: https://news.ycombinator.com/item?id=13566247\r\n- Reviewed PRs: https://github.com/sindresorhus/awesome/pull/1886\r\n- Comments made: https://github.com/sindresorhus/awesome/pull/1912#issuecomment-736183488\r\n- Suggestion made to other lists: https://github.com/sindresorhus/awesome/pull/1907#issuecomment-736186556\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n\r\n\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-30T17:43:52Z",
        "closed_at": "2021-03-07T12:03:41Z",
        "merged_at": "2021-03-07T12:03:41Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/agamm/awesome-developer-first**\r\n\r\n**There is a growing trend of developer-first products, products that target developers specifically. There is currently no place that aggregates all of them. This can help developers to find relevant products and tools. This is highly related to the trend of outsourcing tasks (JAMStack mantra) like auth0/firebase and more replace a lot of the work required for authentication which was coded again and again. Now there are more products in several areas that solve the same developer pain points. This is why I decided to help myself and others find these products.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n> Check\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n> Check\r\n> https://github.com/sindresorhus/awesome/pull/1905\r\n> https://github.com/sindresorhus/awesome/pull/1912\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n> Check\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n> Check\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n> Check\r\n- Your entry should be added at the bottom of the appropriate category.\r\n> Check\r\n- The suggested Awesome list complies with the below requirements.\r\n> Check\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n> Check\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n> Check\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n> Check\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n> Check\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n> Check\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n> Check\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n> Check\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n> Check\r\n- Non-generated Markdown file in a GitHub repo.\r\n> Check\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n> Check\r\n- Not a duplicate. Please search for existing submissions.\r\n> Check\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n> Check\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n> Check\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)]\r\n(https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n> Not needed, but tried.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n> Check\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n> Check\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n> Check\r\n\t- Should be the first section in the list.\r\n> Check\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n> Check\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n> Check\r\n- Has an appropriate license.\r\n> Check\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n> Check\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n> Check\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n> Check\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n> Check\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n> Check\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n> Check\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n> Check\r\n\t- The section should not appear in the Table of Contents.\r\n> Check\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n> Check\r\n- Has consistent formatting and proper spelling/grammar.\r\n> Check\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n> Check\r\n\t- The description starts with an uppercase character and ends with a period.\r\n> Check\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n> Check\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n> Check\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n> Check\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n> Check\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2020-11-28T04:12:53Z",
        "closed_at": "2020-11-28T04:33:33Z",
        "merged_at": "2020-11-28T04:33:33Z",
        "body": "This PR makes no substantive changes to the list. Instead, it simply corrects links to two lists I maintain by updating the URL referencing their GitHub repository addresses, which future-proofs the links in the event their current redirects stop working.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-26T14:41:29Z",
        "closed_at": "2021-03-07T12:19:49Z",
        "merged_at": null,
        "body": "Add awesome-autism to list. Repo for autism resources.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-22T20:12:51Z",
        "closed_at": "2020-11-23T07:06:49Z",
        "merged_at": null,
        "body": "https://github.com/appcircleio\r\nhttps://appcircle.io/\r\n\r\nThis repo contains a list of Appcircle workflows with sample apps, tutorials, and resources to help you learn a Mobile DevOps platform for continuous integration.\r\n\r\n\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-18T08:25:54Z",
        "closed_at": "2020-11-18T10:07:01Z",
        "merged_at": null,
        "body": "Add concent and awesome-state",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-16T14:45:02Z",
        "closed_at": "2020-12-22T06:06:05Z",
        "merged_at": "2020-12-22T06:06:05Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/szenergy/awesome-lidar**\r\n\r\n**A curated list of awesome LIDAR sensors and its applications. LIDAR is a remote sensing sensor that uses laser light to measure the surroundings in ~cm accuracy. The sensory data is usually referred as point cloud which means set of data points in 3D or 2D. The list contains hardwares, datasets, point cloud-processing algorithms, point cloud frameworks, simulators etc. I think the point-cloud algorithms and LIDAR sensors deserve to be part of the list.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n\r\n> Checked:\r\n\r\n#1876 , #1848, #1894 and #1865\r\n\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n> Checked, LIDAR is acronym, this is why it is capitals.\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n> Checked, this is an SVG in my case, so I hope it can be considered as high-DPI, if not I can replace\r\n\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-16T12:19:44Z",
        "closed_at": "2021-03-09T16:29:50Z",
        "merged_at": "2021-03-09T16:29:50Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/mbiesiad/awesome-translations**\r\n\r\n**This list contains libraries, platforms, apps and articles about translation and localization. This list should be included because languages are barriers for people, and such a list can help a little to bridge those barriers by helping developers localize their apps, introducing new translation technologies and new projects in this field.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- [x] You have read and understood the [instructions for creating a list](create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- [x] Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- [x] The image should link to the project website or any relevant website.\r\n\t- [x] **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- [x] Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- [x] Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- [x] Should be named `Contents`, not `Table of Contents`.\r\n\t- [x] Should be the first section in the list.\r\n\t- [x] Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- [x] Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- [x] **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- [x] A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- [x] Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- [x] **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- [x] To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- [x] The file should be named `contributing.md`. Casing is up to you.\r\n\t- [x] It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- [x] The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- [x] The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- [x] The description starts with an uppercase character and ends with a period.\r\n\t- [x] Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- [x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 24
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-16T07:44:50Z",
        "closed_at": "2020-11-16T08:18:00Z",
        "merged_at": null,
        "body": "\r\n**https://github.com/spring-projects/spring-boot**\r\n\r\n**Spring Boot helps you to create Spring-powered, production-grade applications and services with absolute minimum fuss. It takes an opinionated view of the Spring platform so that new and existing users can quickly get to the bits they need.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-15T17:21:11Z",
        "closed_at": "2021-01-10T10:37:12Z",
        "merged_at": "2021-01-10T10:37:12Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/protontypes/awesome-robotic-tooling]**\r\n\r\n**[Robotic resources and tools for professional development in C++ or Python with a touch of ROS, autonomous driving and aerospace. This list was created mainly at my work at the department of autonomous logistics at DHL. Our goal was to create a complete development environment for robotics based on open tooling. All the tools we used and other interesting resources we found are in this list. It is the largest list of free and open resources in robotics. Many members of the open-source robotic community participated on this list. As the field of robotics today also has a lot of overlaps with the automotive and aerospace sector, there are also many projects in this area.  ]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n**Check**\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\nhttps://github.com/sindresorhus/awesome/pull/1898#issuecomment-727601773\r\nhttps://github.com/sindresorhus/awesome/pull/1895#issuecomment-727599542\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n**Check**\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n\r\n**Check**\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n**Check**\r\n- Your entry should be added at the bottom of the appropriate category.\r\n**Check**\r\n- The suggested Awesome list complies with the below requirements.\r\n**Check**\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n**Check**\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n**Check**\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n**Check**. Linter for PR also included\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n**Check**\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n**Check**\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n**Check**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n**Check**\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n**Check**\r\n- Non-generated Markdown file in a GitHub repo.\r\n**Check**\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n**Check**\r\n- Not a duplicate. Please search for existing submissions.\r\n**Check**\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n**Check**\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n**Check**\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n**Check**\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n**Check**\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n**Check**\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n**Check**\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n**Check**\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n**Check**\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n**Check**\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n**Check**\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n**Check**\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n**Check**\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n**Check**\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-11-15T14:13:14Z",
        "closed_at": "2020-11-22T13:16:24Z",
        "merged_at": null,
        "body": "Hi, I decided to archive [my awesome-sysadmin list](https://github.com/n1trux/awesome-sysadmin) and move it to a Flarum installation I manage:\r\n\r\nhttps://awesome.tilde.fun/t/sysadmin\r\n\r\nWhile this certainly means that the list can be inaccessible at any time, I try to make sure to host it indefinitely. Flarum uses Markdown format and I'm sure we can find a way to mirror this to a git repository somehow.\r\n\r\nThe reason for my decision is that searching via tags and discussing the software is way easier in Flarum than it is in a Github markdown list. I will try to create an extension to mirror the layout/design of the initial markdown list with a powerful search interface, but for now I think Flarum's search features are good enough\u2122.\r\n\r\nI'll enable Github OAuth access so everyone with a Github account can log in into the awesome-sysadmin forum and contribute there.\r\n\r\nTagging @nodiscc and @Kickball for consideration.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2020-11-15T01:47:33Z",
        "closed_at": "2020-12-18T07:16:39Z",
        "merged_at": "2020-12-18T07:16:39Z",
        "body": "[https://github.com/nijaru/awesome-tiny](https://github.com/nijaru/awesome-tiny)\r\n\r\nTiny proof of concept projects to learn about various topics.\r\n\r\n---\r\n\r\nPasses awesome lint. I believe I found a bug in awesome lint as well having to do with use of [] brackets.\r\n\r\nMain branch is named main.\r\n\r\nHas a succinct description at the top.\r\n\r\nThe repository name is in all lowercase.\r\n\r\nTitle is in the proper case.\r\n\r\nHas proper topics.\r\n\r\nSparsely titled links have descriptions.\r\n\r\nContains awesome badge.\r\n\r\nHas a contents section.\r\n\r\nHas appropriate license.\r\n\r\nHas contributing.md\r\n\r\n---\r\n\r\nReviewed #1894 and #1898.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-14T21:26:45Z",
        "closed_at": "2020-11-14T23:38:18Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/LinuxCafeFederation/awesome-android**\r\n\r\n**This list contains a lot of awesome open-source Android apps, from some new and interesting projects to very well known and appreciated apps. The reason why it should be included is that it is a very good quality list, the maintainers constantly update and improve it, and the topic is very popular.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- [x] You have read and understood the [instructions for creating a list](create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- [x] Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- [x] The image should link to the project website or any relevant website.\r\n\t- [x] **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- [x] Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- [x] Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- [x] Should be named `Contents`, not `Table of Contents`.\r\n\t- [x] Should be the first section in the list.\r\n\t- [x] Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- [x] Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- [x] **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- [x] A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- [x] Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- [x] **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- [x] To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- [x] The file should be named `contributing.md`. Casing is up to you.\r\n\t- [x] It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- [x] The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- [x] The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- [x] The description starts with an uppercase character and ends with a period.\r\n\t- [x] Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- [x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-14T00:24:44Z",
        "closed_at": "2020-11-14T01:13:27Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/adelaFA-13/awasome-testing.git**\r\n\r\n*I want learn about software testing**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-10T11:52:49Z",
        "closed_at": "2020-12-19T17:39:17Z",
        "merged_at": "2020-12-19T17:39:17Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/TheComputerM/awesome-svelte**\r\n\r\nSvelte is a new and upcoming compiler that compiles to js and makes faster apps as there is no almost no runtime,\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 16
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-05T17:32:48Z",
        "closed_at": "2021-07-27T12:01:47Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/kucherenko/awesome-project-questions**\r\n\r\n**A list of questions that engineers / architects / managers should ask before the start of a project.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-05T16:43:07Z",
        "closed_at": "2020-12-20T09:54:29Z",
        "merged_at": "2020-12-20T09:54:29Z",
        "body": "**https://github.com/j0hnm4r5/awesome-creative-technology**\r\n\r\n**Awesome Creative Technology is a list of businesses & groups that specialize in Creative Technology, which is a field that combines computing, design, art, and user experience. It is a reference for job seekers and inspiration.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n## Requirements\r\n\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- [x] You have read and understood the [instructions for creating a list](create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for the Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- [x] Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- [x] The image should link to the project website or any relevant website.\r\n\t- [x] **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- [x] Should be placed on the right side of the readme heading.\r\n\t\t- [x] Can be placed centered if the list has a centered graphics header.\r\n\t- [x] Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- [x] Should be named `Contents`, not `Table of Contents`.\r\n\t- [x] Should be the first section in the list.\r\n\t- [x] Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- [x] Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- [x] **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- [x] A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- [x] Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- [x] **Do not** add the license name, text, or a `License` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- [x] To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- [x] The file should be named `contributing.md`. Casing is up to you.\r\n\t- [x] It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- [x] The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- [x] The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- [x] The description starts with an uppercase character and ends with a period.\r\n\t- [x] Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- [x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-03T14:33:46Z",
        "closed_at": "2020-11-20T19:30:44Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/nrdmn/awesome-zig\r\n\r\nThis list should be added as it helps to spread an incredible new language with immeasurable possibilities.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- [x] You have read and understood the [instructions for creating a list](create-list.md).\r\n- [ ] This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [ ] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [ ] Your entry should be added at the bottom of the appropriate category.\r\n- [ ] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n-  [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [ ] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- \u2705 Not a duplicate. Please search for existing submissions.\r\n- \u2705 Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- \u2705 Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [ ] Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [ ] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [ ] Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [ ] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- [x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-02T00:07:58Z",
        "closed_at": "2021-06-03T19:59:50Z",
        "merged_at": null,
        "body": "https://github.com/neiesc/awesome-minimalist\r\n\r\nA curated list of awesome resources, pointers, and tips related to minimalist frameworks (simple and lightweight). Everything in alphabetical order.\r\n\r\nList with 6 years or more. Well documented, 96 contributors.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-01T09:50:00Z",
        "closed_at": "2020-11-02T00:41:55Z",
        "merged_at": "2020-11-02T00:41:55Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[https://github.com/protontypes/awesome-sustainable-technology](https://github.com/protontypes/awesome-sustainable-technology)**\r\n\r\n**[Open source projects sustaining stable climate, energy supply and vital natural resources. So far there is no comparable list in this area. Sustainable technologies concern us all and ensure that knowledge and technology in this area will remain our superiority in the long term.  ]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n> Check\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n> Check: \r\nhttps://github.com/sindresorhus/awesome/pull/1861#issuecomment-719894240\r\nhttps://github.com/sindresorhus/awesome/pull/1865#issuecomment-720052776\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n> Check\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n> Check\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n> Check\r\n- Your entry should be added at the bottom of the appropriate category.\r\n> Check\r\n- The suggested Awesome list complies with the below requirements.\r\n> Check\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n> Check\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n> Check\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n> Check: I have one false positives:\r\n  \u2716  440:4  Text \"OSX\" should be written as \"macOS\"  remark-lint:awesome-spell-check\r\nThe listed project is not about macOS.\r\n\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n> Check\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n> Check\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n\r\n> Check. Quite hard word.\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n\r\n> Check\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n\r\n> Check\r\n- Non-generated Markdown file in a GitHub repo.\r\n\r\n> Check\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n> Check\r\n- Not a duplicate. Please search for existing submissions.\r\n> Check\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n> Check. \r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n> Check\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n\r\n> Check\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n> Check\r\n\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n> Check\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n> Check\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n> Check\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n> Check\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n\r\n> Check\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n> Check\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n> Check\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n> Check\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-30T18:52:41Z",
        "closed_at": "2020-11-02T17:29:15Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/hacf-fr/awesome-francophone-home-assistant**\r\n\r\n**This is a list of resources dedicated to Home Assistant for french speaking community**\r\nMost of the resources available on Internet and on the official Home Assistant network are for English speaking users. We want to support the francophone community by promoting the resources available in their native language.\r\n\r\nPR reviewed: #1886, #1879 \r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-29T15:02:17Z",
        "closed_at": "2020-10-29T15:11:18Z",
        "merged_at": "2020-10-29T15:11:18Z",
        "body": "This PR fix canonical URL of the `Awesome Engineering Team Management` repository as suggested by @sindresorhus at https://github.com/sindresorhus/awesome/pull/1887#issuecomment-718792635 .\r\n\r\nThis is a follow up of https://github.com/sindresorhus/awesome/pull/1887 .",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-27T00:55:10Z",
        "closed_at": "2020-10-27T02:45:03Z",
        "merged_at": null,
        "body": "Added icons-font-customization - A collection of over 33,000 high-quality free svg icons and tools for generating customized icon font.\r\n\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/uuware/icons-font-customization**\r\n\r\n**A collection of over 33,000 high-quality free svg icons and tools for generating customized icon font.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=master&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-24T23:50:04Z",
        "closed_at": "2020-10-29T14:31:37Z",
        "merged_at": "2020-10-29T14:31:36Z",
        "body": "**https://github.com/kdeldycke/awesome-management**\r\n\r\n**Why is this list awesome?**\r\n\r\nYou wonder what it looks like to be a manager from the inside? You just started your first job as the leader of a team? You're stuck into the day-to-day operations of the job? You need to move up to the next level? This awesome list is written for you!\r\n\r\nThis body of work stands out from generic leadership and management literature, by providing uncompromising insights and practical advices to bootstrap your journey into the management career track, from a technical background.\r\n\r\nThis list provides a progression to help with the transition to management. From general to specifics. It starts with an overview of the role, then describes its requirements, its position relatives to others. Then we delves into the day-to-day tools of the trade, both organizational and behavioral. At last we discuss about some of the dark sides of the job.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n\u2757I read this PR template multiple times. Better yet: I contributed to refining it: https://github.com/sindresorhus/awesome/commit/488c1051a3089e386ed223a5b45ab8ff8c53397c\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n  Sort of. I'm involved in the community by other means:\r\n    \u2757 I already contributed to this repository: https://github.com/sindresorhus/awesome/commits?author=kdeldycke\r\n    \u2757 I pushed code to `awesome-lint` to automate even more the work of reviewing lists: https://github.com/sindresorhus/awesome-lint/commits?author=kdeldycke\r\n- [x] You have read and understood the [instructions for creating a list](create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n  \u2757This repository has been active since January 2019: https://github.com/kdeldycke/awesome-management/commit/6d161db7ae1b1295736fbe01988e48dace111942\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n  \u2757There is false positives with `awesome-lint`, which I reported and proposed a PR at: https://github.com/sindresorhus/awesome-lint/pull/127 \r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n  \u2757I worked on this for 2 years, made 500+ commits, highly curated the list (we're far from a simple collection of links), and was involved into the community\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=master&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- [x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 16
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-24T11:11:16Z",
        "closed_at": "2021-01-12T07:47:36Z",
        "merged_at": "2021-01-12T07:47:36Z",
        "body": "https://github.com/sdassow/awesome-veganism\r\n\r\nThis list contains entries to make veganism easy and accessible to everyone who is interested. There are many rather random, unmoderated, or unmaintained lists created by individuals or companies, with sometimes questionable quality. This list is an attempt to create a community driven approach to guarantee no-nonsense content, 100% aligned with the life-style, in order to minimise the effort needed for an awesome experience.\r\n\r\n - The list is around for 2+ months.\r\n - Checked with awesome-lint.\r\n - Reviewed PRs: https://github.com/sindresorhus/awesome/pull/1876#issuecomment-706613089, https://github.com/sindresorhus/awesome/pull/1879#issuecomment-706614447, https://github.com/sindresorhus/awesome/pull/1884, and merged PRs to see what success looks like.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=master&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-19T12:16:18Z",
        "closed_at": "2020-10-19T12:18:31Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\nhttps://github.com/ramene/awesome-deepnote#readme\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\nHi there, I'm Daniel, I'm from Deepnote. We're a small startup creating a better data science notebook and one of our users made this super cool repo with a list of interesting projects in Deepnote, so I thought it would be nice to add it here :)\r\nBtw thanks for keeping this list, it's an awesome source of great projects!\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=master&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-18T02:07:18Z",
        "closed_at": "2020-10-29T23:47:06Z",
        "merged_at": "2020-10-29T23:47:06Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/mourarthur/awesome-credit-modeling**\r\n\r\nThe list consolidates several resources on the subject of credit risk modeling and credit scoring. The financial services industry has seen deep changes in the past decade due to the increase in data variety and availability when it comes to determining a consumer's creditworthiness.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\t- Reviewed PRs: #1784 , #1797 , #1798 , #1803 .\r\n- [x] You have read and understood the [instructions for creating a list](create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`.\r\n\t- PR Name: **Add Credit Modeling**\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- Entry: **Methods for classifying credit applicants into risk classes.**\r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n- [x] The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues.\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.**\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics).\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [ ] Includes a project logo/illustration whenever possible.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- [x] Should be placed on the right side of the readme heading.\r\n\t- [x] Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- [x] Should be named `Contents`, not `Table of Contents`.\r\n\t- [x] Should be the first section in the list.\r\n\t- [x] Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- [x] Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- [x] Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- [x] **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n- [x] Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- [x] The file should be named `contributing.md`. Casing is up to you.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- [x] The link and description are separated by a dash.\r\n\t- [x] The description starts with an uppercase character and ends with a period.\r\n\t- [x] Consistent and correct naming.\r\n- [x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Doesn't include a Travis badge.\r\n- [x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-13T14:42:23Z",
        "closed_at": "2020-10-28T21:50:42Z",
        "merged_at": "2020-10-28T21:50:42Z",
        "body": "Original PR [#1837](https://github.com/sindresorhus/awesome/pull/1837) was orphaned by mistake. This PR replaces it.\r\n\r\n[https://github.com/iamericfletcher/awesome-r-learning-resources#readme](https://github.com/iamericfletcher/awesome-r-learning-resources#readme)\r\n\r\nThis list is a collection of resources related to R, a programming language and environment for statistical computing and graphics. It is meant to help users from all skill levels and backgrounds deepen their understanding of R, resulting in a more knowledgable programming population that benefits everybody involved.\r\n\r\nReviewed PRs: #1857 #1848\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=master&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 13
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-09T17:40:45Z",
        "closed_at": "2021-01-10T10:35:26Z",
        "merged_at": "2021-01-10T10:35:26Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/wernerkrauss/awesome-silverstripe-cms\r\n\r\nSilverstripe CMS a rapid development MVC framework that serves as a classic fully fledged CMS or as a headless CMS, which can be queried either via GraphQL or a custom API.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=master&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name or text to the readme. GitHub already shows the license name at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 14
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2020-10-08T10:51:20Z",
        "closed_at": "2021-04-19T09:24:22Z",
        "merged_at": "2021-04-19T09:24:22Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/androiddevnotes/awesome-android-learning-resources/**\r\n\r\nAwesome Android Learning Resources aims to be the starting point for Android App Developers to find the finest learning content for Android App Development.\r\n\r\nThe content is Android Kotlin App development focused. Android Java content which can be of benefit to developers is listed and tagged with [JAVA]\r\n\r\nContent in languages other than English is tagged according to ISO 639-2 codes.\r\n\r\nDisclaimer: I have added the Awesome Badge along with the other badges to maintain consistency.\r\n\r\nPR reviewed: \r\n\r\n- [1876](https://github.com/sindresorhus/awesome/pull/1876#issuecomment-705485257)\r\n\r\n- [1848](https://github.com/sindresorhus/awesome/pull/1848#issuecomment-705483741)\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=master&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name or text to the readme. GitHub already shows the license name at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 12
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-02T17:53:37Z",
        "closed_at": "2020-10-02T21:07:07Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=master&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name or text to the readme. GitHub already shows the license name at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-02T14:51:53Z",
        "closed_at": "2021-01-17T09:55:34Z",
        "merged_at": "2021-01-17T09:55:34Z",
        "body": "[https://github.com/klaufel/awesome-design-systems](https://github.com/klaufel/awesome-design-systems)\r\n\r\nAbout design system definition, is an ever evolving collection of reusable components, guided by rules that ensure consistency and speed, by being the single source of truth for any product development, this `awesome` list, focused on frontend development of design systems. A curated list of bookmarks, articles  and more resources of design systems focused on developers.\r\n\r\n### PR reviewed\r\n\r\n3 pull requests I've reviewed: #1865, #1863 and #1859\r\n\r\nhttps://github.com/sindresorhus/awesome/pull/1865#issuecomment-703268307\r\nhttps://github.com/sindresorhus/awesome/pull/1859#issuecomment-703269398\r\nhttps://github.com/sindresorhus/awesome/pull/1863#issuecomment-703268737\r\n<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- [x] Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [x] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [x] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n\t- Must not feature `Contributing` or `Footnotes` sections.\r\n- [x] Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=main&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name, text, or a `Licence` section to the readme. GitHub already shows the license name and link to the full text at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- [x] Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n\t- It can optionally be linked from the readme in a dedicated section titled `Contributing`, positioned at the top or bottom of the main content.\r\n\t- The section should not appear in the Table of Contents.\r\n- [x] All non-important but necessary content (like extra copyright notices, hyperlinks to sources, pointers to expansive content, etc) should be grouped in a `Footnotes` section at the bottom of the readme. The section should not be present in the Table of Contents.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- [x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**",
        "comments": 16
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-02T10:25:47Z",
        "closed_at": "2020-10-02T12:31:09Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/lmmentel/awesome-python-chemistry#readme\r\n\r\nA curated list of awesome Python frameworks, libraries, software and resources related to Chemistry.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2020-10-01T08:40:57Z",
        "closed_at": "2020-10-01T10:15:42Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**[Insert URL to the list here]**\r\n\r\n**[Explain what this list is about and why it should be included here]**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=master&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name or text to the readme. GitHub already shows the license name at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-29T16:12:18Z",
        "closed_at": "2021-02-26T10:35:36Z",
        "merged_at": "2021-02-26T10:35:36Z",
        "body": "**https://github.com/aureooms/awesome-qr-code**\r\n\r\n**This is a curated list of QR code libraries, software and resources.** I created it because I could not find any other such list. I have used some of the listed items and even created some.\r\n\r\nI have reviewed [the following open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+reviewed-by%3Aaureooms): #1816, #1851, #1868, #1869.\r\n\r\n## Requirements for your pull request\r\n\r\n- [x] **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n- [x] You have read and understood the [instructions for creating a list](create-list.md).\r\n- [x] This pull request has a title in the format `Add Name of List`.\r\n- [x] Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** \r\n- [x] Your entry should be added at the bottom of the appropriate category.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- [x] **Has been around for at least 30 days.**\r\n- [x] Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues.\r\n- [x] The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- [x] **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n- [x] It's the result of hard work and the best I could possibly produce.\r\n- [x] The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n- [x] The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n- [x] Non-generated Markdown file in a GitHub repo.\r\n- [x] The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics).\r\n- [x] Not a duplicate. Please search for existing submissions.\r\n- [ ] Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- [ ] Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- [x] Includes a project logo/illustration whenever possible.\r\n\t- [x] Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- [x] The image should link to the project website or any relevant website.\r\n\t- [x] **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- [x] Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- [x] Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- [x] Should be placed on the right side of the readme heading.\r\n\t- [x] Should link back to this list.\r\n- [x] Has a Table of Contents section.\r\n\t- [x] Should be named `Contents`, not `Table of Contents`.\r\n\t- [x] Should be the first section in the list.\r\n\t- [x] Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n- [x] Has an appropriate license.\r\n\t- [x] Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- [x] **Do not** add the license name or text to the readme. GitHub already shows the license name at the top of the repo.\r\n- [x] Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- [x] The file should be named `contributing.md`. Casing is up to you.\r\n- [x] Has consistent formatting and proper spelling/grammar.\r\n\t- [x] The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- [x] The description starts with an uppercase character and ends with a period.\r\n\t- [x] Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- [x] Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- [x] Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- [x] Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.",
        "comments": 19
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-29T15:17:25Z",
        "closed_at": "2021-03-07T12:19:22Z",
        "merged_at": null,
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\nhttps://github.com/n370/awesome-headless-cms#readme\r\n\r\nThis list is all about headless and decoupled CMS.\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=master&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name or text to the readme. GitHub already shows the license name at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-28T09:11:16Z",
        "closed_at": "2020-10-31T10:30:39Z",
        "merged_at": "2020-10-31T10:30:39Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/tobiasvl/awesome-chip-8**\r\n\r\n**Created in 1977, CHIP-8 is the original fantasy console. It has been implemented on countless computers the last 40 years, and there are over 4000 CHIP-8 repositories on GitHub, mostly emulators. New software is also being made for CHIP-8, in an annual game jam.**\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=master&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name or text to the readme. GitHub already shows the license name at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-25T16:43:15Z",
        "closed_at": "2020-11-20T10:57:53Z",
        "merged_at": "2020-11-20T10:57:53Z",
        "body": "https://github.com/substrate-developer-hub/awesome-substrate\r\n\r\nA curated lists of awesome projects and resources related to the Substrate blockchain development framework. \r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n## Requirements for your pull request\r\n\r\n:heavy_check_mark:  **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n:heavy_check_mark:  **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\r\n> https://github.com/sindresorhus/awesome/pull/1867\r\n> https://github.com/sindresorhus/awesome/pull/1866\r\n> https://github.com/sindresorhus/awesome/pull/1859\r\n\r\n:heavy_check_mark:  You have read and understood the [instructions for creating a list](create-list.md).\r\n:heavy_check_mark:  This pull request has a title in the format `Add Name of List`.\r\n:heavy_check_mark:  Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\r\n> [Substrate](https://substrate.dev/) - Framework for writing scalable, upgradeable blockchains in Rust.\r\n\r\n:heavy_check_mark:  Your entry should be added at the bottom of the appropriate category.\r\n:heavy_check_mark:  The suggested Awesome list complies with the below requirements.\r\n\r\n:heavy_check_mark: :heavy_check_mark: :heavy_check_mark: **Go to the top and read it again.**\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-25T16:42:54Z",
        "closed_at": "2021-01-09T19:27:32Z",
        "merged_at": "2021-01-09T19:27:32Z",
        "body": "<!-- Congrats on creating an Awesome list! \ud83c\udf89 -->\r\n\r\n<!-- Please fill in the below placeholders -->\r\n\r\n**https://github.com/JoseDeFreitas/awesome-youtubers**\r\n\r\n**\"Watch videos and playlists from YouTubers that teach you about technology.\" In this list, you can find YouTube channels that teach several technology topics, such as programming, design, security, and a lot more. I created this list because I find very often video tutorials much better than documentation. You can learn a lot with the playlists and videos these YouTubes have created.**\r\n\r\n2 pull requests I've reviewed: #1859 and #1866.\r\n\r\n_The only issue [awesome-lint](https://github.com/sindresorhus/awesome-lint) is throwing is \"Missing main list heading\". The title is correct, but not using markdown format (`# Title`) but instead HTML tags (`<h1>Title</h1>`). This is because I want the header to be centered, and I couldn't do it without HTML. I've already seen lists that have also a centered title. This is not a big issue though. If you want me to set the title to markdown code instead of HTML I can do it without problems, it's just a styling issue._\r\n\r\n### By submitting this pull request I confirm I've read and complied with the below requirements \ud83d\udd96\r\n\r\n<details>\r\n<summary>Pull request and list requirements</summary>\r\n\r\n**Please read it multiple times. I spent a lot of time on these guidelines and most people miss a lot.**\r\n\r\n## Requirements for your pull request\r\n\r\n- **Don't waste my time.** Do a good job, adhere to all the guidelines, and be responsive.\r\n- **You have to review at least 2 other [open pull requests](https://github.com/sindresorhus/awesome/pulls?q=is%3Apr+is%3Aopen).**\r\n\tTry to prioritize unreviewed PRs, but you can also add more comments to reviewed PRs. Go through the below list when reviewing. This requirement is meant to help make the Awesome project self-sustaining. Comment here which PRs you reviewed. You're expected to put a good effort into this and to be thorough. Look at previous PR reviews for inspiration. **Just commenting \u201clooks good\u201d or simply marking the pull request as approved does not count!** You have to actually point out mistakes or improvement suggestions.\r\n- You have read and understood the [instructions for creating a list](create-list.md).\r\n- This pull request has a title in the format `Add Name of List`.\r\n\t- \u2705 `Add Swift`\r\n\t- \u2705 `Add Software Architecture`\r\n\t- \u274c `Update readme.md`\r\n\t- \u274c `Add Awesome Swift`\r\n\t- \u274c `Add swift`\r\n\t- \u274c `add Swift`\r\n\t- \u274c `Adding Swift`\r\n\t- \u274c `Added Swift`\r\n- Your entry here should include a short description about the project/theme of the list. **It should not describe the list itself.** The first character should be uppercase and the description should end in a dot. It should be an objective description and not a tagline or marketing blurb.\r\n\t- \u2705 `- [iOS](\u2026) - Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `- [Framer](\u2026) - Prototyping interactive UI designs.`\r\n\t- \u274c `- [iOS](\u2026) - Resources and tools for iOS development.`\r\n\t- \u274c `- [Framer](\u2026)`\r\n\t- \u274c `- [Framer](\u2026) - prototyping interactive UI designs`\r\n- Your entry should be added at the bottom of the appropriate category.\r\n- The suggested Awesome list complies with the below requirements.\r\n\r\n## Requirements for your Awesome list\r\n\r\n- **Has been around for at least 30 days.**<br>That means 30 days from either the first real commit or when it was open-sourced. Whatever is most recent.\r\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\r\n- Run [`awesome-lint`](https://github.com/sindresorhus/awesome-lint) on your list and fix the reported issues. If there are false-positives or things that cannot/shouldn't be fixed, please [report it](https://github.com/sindresorhus/awesome-lint/issues/new).\r\n- The default branch should be named [`main`, not `master`](https://www.zdnet.com/article/github-to-replace-master-with-alternative-term-to-avoid-slavery-references/).\r\n- **Includes a succinct description of the project/theme at the top of the readme.** [(Example)](https://github.com/willempienaar/awesome-quantified-self)\r\n\t- \u2705 `Mobile operating system for Apple phones and tablets.`\r\n\t- \u2705 `Prototyping interactive UI designs.`\r\n\t- \u274c `Resources and tools for iOS development.`\r\n\t- \u274c `Awesome Framer packages and tools.`\r\n- It's the result of hard work and the best I could possibly produce.\r\n\t**If you have not put in considerable effort into your list, your pull request will be immediately closed.**\r\n- The repo name of your list should be in lowercase slug format: `awesome-name-of-list`.\r\n\t- \u2705 `awesome-swift`\r\n\t- \u2705 `awesome-web-typography`\r\n\t- \u274c `awesome-Swift`\r\n\t- \u274c `AwesomeWebTypography`\r\n- The heading title of your list should be in [title case](https://capitalizemytitle.com/) format: `# Awesome Name of List`.\r\n\t- \u2705 `# Awesome Swift`\r\n\t- \u2705 `# Awesome Web Typography`\r\n\t- \u274c `# awesome-swift`\r\n\t- \u274c `# AwesomeSwift`\r\n- Non-generated Markdown file in a GitHub repo.\r\n- The repo should have `awesome-list` & `awesome` as [GitHub topics](https://help.github.com/articles/about-topics). I encourage you to add more relevant topics.\r\n- Not a duplicate. Please search for existing submissions.\r\n- Only has awesome items. Awesome lists are curations of the best, not everything.\r\n- Does not contain items that are unmaintained, has archived repo, deprecated, or missing docs. If you really need to include such items, they should be in a separate Markdown file.\r\n- Includes a project logo/illustration whenever possible.\r\n\t- Either centered, fullwidth, or placed at the top-right of the readme. [(Example)](https://github.com/sindresorhus/awesome-electron)\r\n\t- The image should link to the project website or any relevant website.\r\n\t- **The image should be high-DPI.** Set it to maximum half the width of the original image.\r\n- Entries have a description, unless the title is descriptive enough by itself. It rarely is though.\r\n- Includes the [Awesome badge](awesome.md#awesome-badge).\r\n\t- Should be placed on the right side of the readme heading.\r\n\t\t- Can be placed centered if the list has a centered graphics header.\r\n\t- Should link back to this list.\r\n- Has a Table of Contents section.\r\n\t- Should be named `Contents`, not `Table of Contents`.\r\n\t- Should be the first section in the list.\r\n\t- Should only have one level of [nested lists](https://commonmark.org/help/tutorial/10-nestedLists.html), preferably none.\r\n- Has an appropriate license.\r\n\t- **We strongly recommend the [CC0 license](https://creativecommons.org/publicdomain/zero/1.0/), but any [Creative Commons license](https://creativecommons.org/choose/) will work.**\r\n\t\t- Tip: You can quickly add it to your repo by going to this URL: `https://github.com/<user>/<repo>/community/license/new?branch=master&template=cc0-1.0` (replace `<user>` and `<repo>` accordingly).\r\n\t- A code license like MIT, BSD, Apache, GPL, etc, is not acceptable. Neither are WTFPL and [Unlicense](https://unlicense.org).\r\n\t- Place a file named `license` or `LICENSE` in the repo root with the license text.\r\n\t- **Do not** add the license name or text to the readme. GitHub already shows the license name at the top of the repo.\r\n\t- To verify that you've read all the guidelines, please comment on your pull request with just the word `unicorn`.\r\n- Has [contribution guidelines](awesome.md#include-contribution-guidelines).\r\n\t- The file should be named `contributing.md`. Casing is up to you.\r\n- Has consistent formatting and proper spelling/grammar.\r\n\t- The link and description are separated by a dash. <br>Example: `- [AVA](\u2026) - JavaScript test runner.`\r\n\t- The description starts with an uppercase character and ends with a period.\r\n\t- Consistent and correct naming. For example, `Node.js`, not `NodeJS` or `node.js`.\r\n- Doesn't use [hard-wrapping](https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap).\r\n- Doesn't include a Travis badge.<br>You can still use Travis for list linting, but the badge has no value in the readme.\r\n- Doesn't include an `Inspired by awesome-foo` or `Inspired by the Awesome project` kinda link at the top of the readme. The Awesome badge is enough.\r\n\r\n**Go to the top and read it again.**\r\n\r\n</details>",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-09-20T22:15:16Z",
        "closed_at": "2020-11-20T05:27:48Z",
        "merged_at": null,
        "body": "[https://github.com/guifelix/awesome-tasker](https://github.com/guifelix/awesome-tasker)\r\n\r\nThis list is about resources and apps related to Tasker. Tasker is an app that helps automate your android phone and this list curates resources to help people learn how to use Tasker\r\n\r\n\r\n- I reviewed the following PRs: [1865](https://github.com/sindresorhus/awesome/pull/1865) & [1866](https://github.com/sindresorhus/awesome/pull/1866).\r\n- My list has 55 awesome-lint errors. Awesome lint identifies google play links as double-link so I reported this issue: [122](https://github.com/sindresorhus/awesome-lint/issues/122).",
        "comments": 9
    }
]