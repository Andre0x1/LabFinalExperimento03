[
    {
        "merged": false,
        "additions": 12,
        "deletions": 12,
        "changed_files": 4,
        "created_at": "2023-10-17T21:10:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Bumps [urllib3](https://github.com/urllib3/urllib3) from 2.0.6 to 2.0.7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/releases\">urllib3's releases</a>.</em></p>\n<blockquote>\n<h2>2.0.7</h2>\n<ul>\n<li>Made body stripped from HTTP requests changing the request method to GET after HTTP 303 &quot;See Other&quot; redirect responses. (GHSA-g4mx-q9vg-27p4)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/blob/main/CHANGES.rst\">urllib3's changelog</a>.</em></p>\n<blockquote>\n<h1>2.0.7 (2023-10-17)</h1>\n<ul>\n<li>Made body stripped from HTTP requests changing the request method to GET after HTTP 303 &quot;See Other&quot; redirect responses.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/56f01e088dc006c03d4ee6ea9da4ab810f1ed700\"><code>56f01e0</code></a> Release 2.0.7</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/4e50fbc5db74e32cabd5ccc1ab81fc103adfe0b3\"><code>4e50fbc</code></a> Merge pull request from GHSA-g4mx-q9vg-27p4</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/80808b04bfa68fbd099828848c96ee25df185f1d\"><code>80808b0</code></a> Fix docs build on Python 3.12 (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3144\">#3144</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/f28deff1cf162c673b50d88d3552e91bda6d68a8\"><code>f28deff</code></a> Add 1.26.17 to the current changelog</li>\n<li>See full diff in <a href=\"https://github.com/urllib3/urllib3/compare/2.0.6...2.0.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=2.0.6&new-version=2.0.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/tensorflow/tensorflow/network/alerts).\n\n</details>",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 21,
        "changed_files": 1,
        "created_at": "2023-10-17T19:57:19Z",
        "closed_at": null,
        "merged_at": null,
        "body": "1. Used descriptive variable names. Rdename the q_fixed variable to quantized_multiplier.\r\n2.  To Check for errors. For example, check that the shift amount is not greater than 31 or less than -31. If it is, return an error instead of converting the multiplier to zero.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-17T17:28:39Z",
        "closed_at": "2023-10-17T17:36:06Z",
        "merged_at": "2023-10-17T17:36:06Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/dc805474308d1c5563844c6442ca195e251d17f6",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2023-10-17T14:25:32Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fix #62091\r\n\r\nStill convert cos to sin with $cos(x) = sin(\\frac{\\pi}{2} - x)$\r\nBut since input tensor is not available when `TransformCosIntoSupportedOps()` is called, we should do `sub` then `sin` instead of manipulating the input tensor as suggested by in #62091 \r\n\r\nTested on Pixel 8 Pro.\r\n\r\nWhen tested with `nnapi_delegate_test` built with \r\n```\r\n$ bazel build --config android_arm64  //tensorflow/lite/delegates/nnapi:nnapi_delegate_test\r\n```\r\n\r\nbefore this PR.\r\n```\r\nhusky:/data/local/tmp $ ./nnapi_delegate_test  --gtest_filter=Elementwise.Cos                                               \r\nRunning main() from gmock_main.cc\r\nNote: Google Test filter = Elementwise.Cos\r\n[==========] Running 1 test from 1 test suite.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from Elementwise\r\n[ RUN      ] Elementwise.Cos\r\nINFO: Initialized TensorFlow Lite runtime.\r\nINFO: Created TensorFlow Lite delegate for NNAPI.\r\nWARN: Having a manually-set TfLite delegate, and bypassing KernelTestDelegateProviders\r\nVERBOSE: Replacing 1 out of 1 node(s) with delegate (TfLiteNnapiDelegate) node, yielding 1 partitions for the whole graph.\r\nERROR: NN API returned error ANEURALNETWORKS_BAD_DATA at line 6290 while identifying model inputs and outputs.\r\n\r\nERROR: Node number 1 (TfLiteNnapiDelegate) failed to prepare.\r\nERROR: Restored original execution plan after delegate application failure.\r\n[       OK ] Elementwise.Cos (78 ms)\r\n[----------] 1 test from Elementwise (79 ms total)\r\n\r\n[----------] Global test environment tear-down\r\n[==========] 1 test from 1 test suite ran. (79 ms total)\r\n[  PASSED  ] 1 test.\r\nhusky:/data/local/tmp $ \r\n\r\n```\r\nafter\r\n```\r\nhusky:/data/local/tmp $ ./nnapi_delegate_test --gtest_filter=Elementwise.Cos                                                       \r\nRunning main() from gmock_main.cc\r\nNote: Google Test filter = Elementwise.Cos\r\n[==========] Running 1 test from 1 test suite.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from Elementwise\r\n[ RUN      ] Elementwise.Cos\r\nINFO: Initialized TensorFlow Lite runtime.\r\nINFO: Created TensorFlow Lite delegate for NNAPI.\r\nWARN: Having a manually-set TfLite delegate, and bypassing KernelTestDelegateProviders\r\nVERBOSE: Replacing 1 out of 1 node(s) with delegate (TfLiteNnapiDelegate) node, yielding 1 partitions for the whole graph.\r\n[       OK ] Elementwise.Cos (83 ms)\r\n[----------] 1 test from Elementwise (84 ms total)\r\n\r\n[----------] Global test environment tear-down\r\n[==========] 1 test from 1 test suite ran. (84 ms total)\r\n[  PASSED  ] 1 test.\r\n\r\n```",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-17T00:40:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 24,
        "changed_files": 5,
        "created_at": "2023-10-16T23:42:23Z",
        "closed_at": "2023-10-17T05:30:50Z",
        "merged_at": "2023-10-17T05:30:50Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/33df98a",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-16T19:44:43Z",
        "closed_at": "2023-10-16T21:14:10Z",
        "merged_at": "2023-10-16T21:14:10Z",
        "body": "Numpy 2 is scheduled for Jan 2024, limit numpy to avoid breakages until 2.0 can be adopted",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-16T19:39:29Z",
        "closed_at": "2023-10-16T21:14:18Z",
        "merged_at": "2023-10-16T21:14:18Z",
        "body": "Numpy 2 is scheduled for Jan 2024, limit numpy to avoid breakages until 2.0 can be adopted",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-10-16T16:44:58Z",
        "closed_at": "2023-10-16T18:32:56Z",
        "merged_at": "2023-10-16T18:32:56Z",
        "body": "Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 15 -> 15\nPatch: 0 -> 0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.15.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tools/pip_package/setup.py:50:2.15.0\ntensorflow/tools/pip_package/setup.py:119:2.15.0\ntensorflow/tools/pip_package/setup.py:121:2.15.0\ntensorflow/lite/core/c/c_api.h:150:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:76:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:111:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:134:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:141:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:270:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:376:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:380:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:433:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:434:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:435:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:436:2.15.0\ntensorflow/tensorflow.bzl:84:2.15.0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.15.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tools/pip_package/setup.py:50:2.15.0\ntensorflow/tools/pip_package/setup.py:119:2.15.0\ntensorflow/tools/pip_package/setup.py:121:2.15.0\ntensorflow/lite/core/c/c_api.h:150:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:76:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:111:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:134:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:141:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:270:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:376:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:380:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:433:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:434:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:435:2.15.0\ntensorflow/lite/tools/versioning/runtime_version.cc:436:2.15.0\ntensorflow/tensorflow.bzl:84:2.15.0\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-16T16:38:22Z",
        "closed_at": "2023-10-17T15:06:33Z",
        "merged_at": "2023-10-17T15:06:33Z",
        "body": "For CUDA 12 there is an extra field in the classifier so add that in to fix the upload failures.\r\n\r\nFixes: https://github.com/tensorflow/tensorflow/issues/62127",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-16T14:55:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Compiling with gcc compiler results in a build failure due the use of 'false' in the static_assert. Instead replace this with the condition that needs to be satisified.\r\n\r\nFixes: https://github.com/tensorflow/tensorflow/issues/62125",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-16T13:14:07Z",
        "closed_at": null,
        "merged_at": null,
        "body": "**Pull Request Summary:**\r\n\r\nThis pull request updates the forward compatibility date in the `forward_compatibility_horizon` function to fix a small typo in the function signature. The parameter name `date` has been corrected to `day` for consistency.\r\n\r\n**Changes Made:**\r\n- Updated the function signature in `forward_compatibility_horizon` from `forward_compatible(year=2018, month=08, date=01)` to `forward_compatible(year=2018, month=08, day=01)`.\r\n\r\nThis change is cosmetic and does not alter the functionality of the code. It enhances code readability by aligning the parameter name with its usage within the function.\r\n\r\n**Context:**\r\nThe adjustment aims to maintain a uniform and intuitive coding style. Consistent parameter naming conventions contribute to a more understandable codebase and facilitate collaboration among contributors. This modification has no impact on the behavior of the code but promotes better code comprehension.\r\n\r\n\r\n\r\n```diff\r\n- if compat.forward_compatible(year=2018, month=08, date=01):\r\n+ if compat.forward_compatible(year=2018, month=08, day=01):\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-16T08:48:01Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2023-10-14T08:10:35Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fix #62072",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 26,
        "changed_files": 2,
        "created_at": "2023-10-14T00:44:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "legalization of tfl.quantize used to do:\r\n  - multiply by scale in f32, add zeropoint in f32, cast to output type\r\nthis led to mismatches because tosa cast (fp to int) used rounding mode: \"round to nearest, tie to even\",\r\nso rounding can be wrong when adding the zeropoint before rounding.\r\n\r\nthis patch changes legalization to do:\r\n  - multiply by scale in f32, cast to i32, add zeropoint in i32, cast to output type\r\n  - also, if zeropoint is 0, then skip the \"cast to i32\" and \"add zeropoint\"\r\n\r\n\r\nChange-Id: Ibaacd24778d83dd2cf1b1d914b287e32f4d775d0",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 20,
        "deletions": 87,
        "changed_files": 1,
        "created_at": "2023-10-12T18:15:27Z",
        "closed_at": "2023-10-14T00:18:50Z",
        "merged_at": "2023-10-14T00:18:49Z",
        "body": "This PR is intentionally incomplete. One of the Release Owners for 2.15.0\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 102,
        "deletions": 155,
        "changed_files": 4,
        "created_at": "2023-10-12T10:26:46Z",
        "closed_at": "2023-10-13T08:25:46Z",
        "merged_at": null,
        "body": "\r\nThis PR contains adaptions on TF side required for integration of unified blas-lt API in XLA: https://github.com/openxla/xla/pull/5911",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-11T14:35:36Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The API `tf.math.is_non_decreasing` returns `True` with `unsigned` input dtypes even though the input have decreasing values. This is because of the overflow that happens at this line of code.\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/4dacf3f368eb7965e9b5c3bbdd5193986081c3b2/tensorflow/python/ops/check_ops.py#L1947\r\n\r\nHence proposing to cast the input to signed dtype in case if it is unsigned.This will potentially avoid overflow error.\r\n\r\nFixes #62072.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 102,
        "deletions": 45,
        "changed_files": 5,
        "created_at": "2023-10-11T06:27:49Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR adds code to identify new instruction sets",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 248,
        "deletions": 2,
        "changed_files": 4,
        "created_at": "2023-10-11T06:10:47Z",
        "closed_at": "2023-10-11T06:15:33Z",
        "merged_at": null,
        "body": "This PR adds code to identify new instruction sets",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-10T08:48:05Z",
        "closed_at": null,
        "merged_at": null,
        "body": "\r\nChanged the dimension from TFL_NumElementsEqualsDim<3, 1, 4>   to    TFL_NumElementsEqualsDim<3, 1, 3>\r\nProbably fixes #62076\r\nPlease have a look. Thank you!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-10-09T15:21:43Z",
        "closed_at": "2023-10-11T06:42:26Z",
        "merged_at": "2023-10-11T06:42:26Z",
        "body": "The contributing md is not up to date. tensorflow/tensorflow:devel and tensorflow/tensorflow:devel-gpu docker file tags are no longer supported. also this links does not point to the correct files or page. I have updated a small link and intend to update the instructions so that its more clear and concise.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-06T02:08:50Z",
        "closed_at": "2023-10-13T19:27:14Z",
        "merged_at": "2023-10-13T19:27:14Z",
        "body": "Remove unused labels from the run_tflite_model() method.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-05T22:07:58Z",
        "closed_at": "2023-10-06T08:17:29Z",
        "merged_at": null,
        "body": "Wrapt <1.15 doesn't have Py3.11 wheels on pypi",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-10-05T18:02:47Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Currently we see seg faults when trying to enable auto_sharding in OSS.  This is a minimally-failing example for reproducing the issue.  (This PR only adds the necessary dependency, we do not yet enable the auto_pass in gpu_compiler in OSS.)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-10-05T09:46:35Z",
        "closed_at": "2023-10-06T01:42:20Z",
        "merged_at": "2023-10-06T01:42:20Z",
        "body": "The use of portpicker is not thread safe by default so start portserver before testing so that each invocation of portpicker will defer to the single instance of portserver and thus avoid the non thread safe behaviour that leads to duplicate ports being attempted to be used by tests running in parallel.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2023-10-04T21:59:52Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Resubmitting changes in PR #61331. Not sure why they were reverted.\r\n\r\nCurrently BFloat16 Mean Op causes BFloat16 accumulation which may result in incorrect output. This prevents Mean to be used with the lower BFloat16 precision. This PR:\r\n\r\nJust like the existing implementation of the Sum op, ensures BFloat16 Mean accumulation happens in FP32 by adding a Casting Specialization registration.\r\nAdds Benchmark and Kernel tests to verify the implementation.\r\nAdds Mean back to the Infer List from Deny List and fixes a typo in the Infer List initialization.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-04T20:08:58Z",
        "closed_at": null,
        "merged_at": null,
        "body": "when CMAKE_SYSTEM_NAME MATCHES \"Windows\". Additionally, it may also be prudent to add this whenever TFLITE_ENABLE_MMAP=OFF. Additional note: add_compile_definitions(-DTFLITE_MMAP_DISABLED) (or add_compile_definitions(-DTFLITE_MMAP_DISABLED=1)) did not have the desired effect but add_compile_options(-DTFLITE_MMAP_DISABLED) does succeed. This is most likely due to my not understanding the difference.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-03T18:29:19Z",
        "closed_at": "2023-10-04T05:19:11Z",
        "merged_at": "2023-10-04T05:19:11Z",
        "body": "# Summary\r\nRagged support for tf.nn.safe_sparse_embedding_lookup was added in tf 2.13 [here](https://github.com/tensorflow/tensorflow/pull/59788) and partly duplicated some of code in sparse implementation. In tf 2.14 [bug](https://github.com/tensorflow/tensorflow/commit/8f6b9d3830a059209ec4f40d94fb46a043e0149e) was fixed in sparse embedding lookup implementation, but duplicated code was not updated same way. ShardedVariables in parameter server are resource variable like and satisfy is_resource_variable, but are not isinstance ResourceVariable. This leads to an extra memory copy/ReadVariableOp heavily hurting performance on large embedding tables.\r\n\r\nI did minimal fix to make code consistent. An alternative would be to move the duplicated code to a small helper shared between ragged/sparse embedding lookup.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-10-03T10:26:47Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Hi,\r\n\r\nThis PR reduces the scaling ratio and offset when possible during TFL -> TOSA legalization of the resize operators to avoid having too large scaling that may overflow the TOSA limits in some cases.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-03T06:19:17Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The link for Distributed Tensorflow was redirecting to a broken link so I updated it with the correct one. Please have a look. Probably fixes https://github.com/tensorflow/tensorflow/issues/62019\r\n\r\nThank you!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2023-10-03T03:54:07Z",
        "closed_at": "2023-10-08T21:17:09Z",
        "merged_at": null,
        "body": "Bumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.16 to 1.26.17.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/releases\">urllib3's releases</a>.</em></p>\n<blockquote>\n<h2>1.26.17</h2>\n<ul>\n<li>Added the <code>Cookie</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>. (GHSA-v845-jxx5-vc9f)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/blob/main/CHANGES.rst\">urllib3's changelog</a>.</em></p>\n<blockquote>\n<h1>1.26.17 (2023-10-02)</h1>\n<ul>\n<li>Added the <code>Cookie</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>. (<code>[#3139](https://github.com/urllib3/urllib3/issues/3139) &lt;https://github.com/urllib3/urllib3/pull/3139&gt;</code>_)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/c9016bf464751a02b7e46f8b86504f47d4238784\"><code>c9016bf</code></a> Release 1.26.17</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/01220354d389cd05474713f8c982d05c9b17aafb\"><code>0122035</code></a> Backport GHSA-v845-jxx5-vc9f (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3139\">#3139</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/e63989f97d206e839ab9170c8a76e3e097cc60e8\"><code>e63989f</code></a> Fix installing <code>brotli</code> extra on Python 2.7</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/2e7a24d08713a0131f0b3c7197889466d645cc49\"><code>2e7a24d</code></a> [1.26] Configure OS for RTD to fix building docs</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/57181d6ea910ac7cb2ff83345d9e5e0eb816a0d0\"><code>57181d6</code></a> [1.26] Improve error message when calling urllib3.request() (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3058\">#3058</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/3c0148048a523325819377b23fc67f8d46afc3aa\"><code>3c01480</code></a> [1.26] Run coverage even with failed jobs</li>\n<li>See full diff in <a href=\"https://github.com/urllib3/urllib3/compare/1.26.16...1.26.17\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.16&new-version=1.26.17)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/tensorflow/tensorflow/network/alerts).\n\n</details>",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-10-03T00:33:41Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Previous code caused error C2665 on windows: 'std::atomic_flag::atomic_flag': no overloaded function could convert all the argument types\r\n\r\nInstead of assigning with a bool use ATOMIC_FLAG_INIT for the same effect",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-02T22:37:14Z",
        "closed_at": "2023-10-04T06:26:02Z",
        "merged_at": "2023-10-04T06:26:02Z",
        "body": "The new ml-dtypes version deprecated some attributes that are used by Tensorflow. This is causing build errors. I ran into this trying to do a patch release for TensorBoard(see error here: https://github.com/tensorflow/tensorboard/actions/runs/6332666553/job/17199512649?pr=6604).\r\n\r\nGooglers see(b/301638377).",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 92,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-10-02T17:07:04Z",
        "closed_at": null,
        "merged_at": null,
        "body": "- Add padding to round an input dim up to the nearest multiple of the corresponding stride value\r\n\r\nChange-Id: I1b9677c80e7ba704897637a3c44545d24cdae892",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-02T16:33:30Z",
        "closed_at": "2023-10-03T11:37:14Z",
        "merged_at": null,
        "body": "This closes the issue #61204\r\nThe datatype has been moved, I assume the function `_is_distributed_dataset` has not been tested.\r\nThis simple code change resolves the import issue.\r\n\r\ncc: @MichaelHudgins, @BrianWieder, @fionalang, @nitins17",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2023-10-02T16:13:50Z",
        "closed_at": "2023-10-03T18:00:38Z",
        "merged_at": "2023-10-03T18:00:38Z",
        "body": "Begin to add required changes to bazelrc and envs to support ARM64 in the new script system.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 102,
        "deletions": 91,
        "changed_files": 3,
        "created_at": "2023-10-02T15:16:17Z",
        "closed_at": "2023-10-16T10:57:37Z",
        "merged_at": null,
        "body": "This is bugfix in conv_parameters.cc originally appeared in https://github.com/ROCmSoftwarePlatform/tensorflow-upstream/pull/2000 and then in the follow-up PR: https://github.com/tensorflow/tensorflow/pull/61941\r\n\r\nAs requested, I am submitting this bugfix as a separate PR. \r\nI also had to extend the tests for Eigen::half datatype and 'Tanh' and 'Sigmoid' activations\r\nsince in this case fused matmul uses the CuDNN fallback which, in its turn, \r\nuses MatmulParameters constructor (from tensorflow/core/util/autotune_maps/conv_parameters.cc).\r\n\r\nAdditionally, I also removed MatmulParameters class from tensorflow/core/kernels/matmul_op.h which is a deadcode (to remove any confusions).\r\n\r\n@akuegel: could you please review this as this is a follow up to https://github.com/tensorflow/tensorflow/pull/61941 PR ?",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-01T21:57:50Z",
        "closed_at": "2023-10-03T16:17:08Z",
        "merged_at": null,
        "body": "In the dtensor_device.h I made arg into argument as to match the following argument",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-10-01T08:11:37Z",
        "closed_at": "2023-10-01T08:16:03Z",
        "merged_at": null,
        "body": "Changes the  calcuation so it has a minor efficiency improvement",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 10,
        "changed_files": 3,
        "created_at": "2023-09-30T01:17:19Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Hi, thank you for mantenance of TensorFlow in Go @wamuir \r\n\r\nI read the docs at:\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/go/README.md\r\n\r\nI also noticed that TensorFlow in Go uses some deprecated functions.\r\nI understand that the documentation for installing the Go bindings for TensorFlow is no longer being maintained. However, I felt that using deprecated packages is also not ideal, so I've submitted a PR to fix this.\r\n\r\nThe ioutil package is already deprecated and internally calls the os package. I've rewritten the parts of the code that use ioutil to now use the os package. \r\n\r\nhttps://pkg.go.dev/io/ioutil@go1.21.1\r\n\r\nThe behavior of os.ReadDir is slightly different, but since sorting does not appear to be a requirement in this use case, I've only replaced ioutil.ReadDir with os.ReadDir.\r\n\r\nThanks.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-09-29T16:29:03Z",
        "closed_at": "2023-10-01T10:21:31Z",
        "merged_at": null,
        "body": "As both of the social media companies Facebook and Twitter has undergone branding changes, I have made updates to reflect those changes.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-09-29T00:27:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Bumps [scipy](https://github.com/scipy/scipy) from 1.9.2 to 1.10.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/scipy/scipy/releases\">scipy's releases</a>.</em></p>\n<blockquote>\n<h1>SciPy 1.10.0 Release Notes</h1>\n<p>SciPy <code>1.10.0</code> is the culmination of <code>6</code> months of hard work. It contains\nmany new features, numerous bug-fixes, improved test coverage and better\ndocumentation. There have been a number of deprecations and API changes\nin this release, which are documented below. All users are encouraged to\nupgrade to this release, as there are a large number of bug-fixes and\noptimizations. Before upgrading, we recommend that users check that\ntheir own code does not use deprecated SciPy functionality (to do so,\nrun your code with <code>python -Wd</code> and check for <code>DeprecationWarning</code> s).\nOur development attention will now shift to bug-fix releases on the\n1.10.x branch, and on adding new features on the main branch.</p>\n<p>This release requires Python <code>3.8+</code> and NumPy <code>1.19.5</code> or greater.</p>\n<p>For running on PyPy, PyPy3 <code>6.0+</code> is required.</p>\n<h1>Highlights of this release</h1>\n<ul>\n<li>A new dedicated datasets submodule (<code>scipy.datasets</code>) has been added, and is\nnow preferred over usage of <code>scipy.misc</code> for dataset retrieval.</li>\n<li>A new <code>scipy.interpolate.make_smoothing_spline</code> function was added. This\nfunction constructs a smoothing cubic spline from noisy data, using the\ngeneralized cross-validation (GCV) criterion to find the tradeoff between\nsmoothness and proximity to data points.</li>\n<li><code>scipy.stats</code> has three new distributions, two new hypothesis tests, three\nnew sample statistics, a class for greater control over calculations\ninvolving covariance matrices, and many other enhancements.</li>\n</ul>\n<h1>New features</h1>\n<h1><code>scipy.datasets</code> introduction</h1>\n<ul>\n<li>A new dedicated <code>datasets</code> submodule has been added. The submodules\nis meant for datasets that are relevant to other SciPy submodules ands\ncontent (tutorials, examples, tests), as well as contain a curated\nset of datasets that are of wider interest. As of this release, all\nthe datasets from <code>scipy.misc</code> have been added to <code>scipy.datasets</code>\n(and deprecated in <code>scipy.misc</code>).</li>\n<li>The submodule is based on <a href=\"https://www.fatiando.org/pooch/latest/\">Pooch</a>\n(a new optional dependency for SciPy), a Python package to simplify fetching\ndata files. This move will, in a subsequent release, facilitate SciPy\nto trim down the sdist/wheel sizes, by decoupling the data files and\nmoving them out of the SciPy repository, hosting them externally and</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/scipy/scipy/commit/dde50595862a4f9cede24b5d1c86935c30f1f88a\"><code>dde5059</code></a> REL: 1.10.0 final [wheel build]</li>\n<li><a href=\"https://github.com/scipy/scipy/commit/7856f281b016c585b82d03723c4494bcdbdcd4a5\"><code>7856f28</code></a> Merge pull request <a href=\"https://redirect.github.com/scipy/scipy/issues/17696\">#17696</a> from tylerjereddy/treddy_110_final_prep</li>\n<li><a href=\"https://github.com/scipy/scipy/commit/205b6243c6d075d05695e7ac6d007e0f03bfbf42\"><code>205b624</code></a> DOC: add missing author</li>\n<li><a href=\"https://github.com/scipy/scipy/commit/1ab9f1b10145f0a974d5531700e72d1fb4229b76\"><code>1ab9f1b</code></a> DOC: update 1.10.0 relnotes</li>\n<li><a href=\"https://github.com/scipy/scipy/commit/ac2f45fbe1e39a8f52c1ea2e68764009f02973c0\"><code>ac2f45f</code></a> MAINT: integrate._qmc_quad: mark as private with preceding underscore</li>\n<li><a href=\"https://github.com/scipy/scipy/commit/3e0ae1a21f51ebee3a77733c42700d87a0c35d7d\"><code>3e0ae1a</code></a> REV: integrate.qmc_quad: delay release to SciPy 1.11.0</li>\n<li><a href=\"https://github.com/scipy/scipy/commit/34cdf05c86548de1c4ca1b2798cdc23885af807b\"><code>34cdf05</code></a> MAINT: FFT pybind11 fixups</li>\n<li><a href=\"https://github.com/scipy/scipy/commit/843500aabde17aaf1eec65c589d50bd12ee35039\"><code>843500a</code></a> Merge pull request <a href=\"https://redirect.github.com/scipy/scipy/issues/17689\">#17689</a> from mdhaber/gh17686</li>\n<li><a href=\"https://github.com/scipy/scipy/commit/089924b61012a106ffa4f58939b0180124051a0b\"><code>089924b</code></a> REL: integrate.qmc_quad: remove from release notes</li>\n<li><a href=\"https://github.com/scipy/scipy/commit/3e47110f10e3267d228e9da84174f3cee325e7c3\"><code>3e47110</code></a> REL: 1.10.0rc3 unreleased</li>\n<li>Additional commits viewable in <a href=\"https://github.com/scipy/scipy/compare/v1.9.2...v1.10.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=scipy&package-manager=pip&previous-version=1.9.2&new-version=1.10.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/tensorflow/tensorflow/network/alerts).\n\n</details>",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 128,
        "deletions": 41,
        "changed_files": 7,
        "created_at": "2023-09-28T20:24:51Z",
        "closed_at": "2023-10-04T06:32:31Z",
        "merged_at": "2023-10-04T06:32:31Z",
        "body": "This PR adds checks for BF16 since BF16 with oneDNN is not supported on AVX2 or earlier CPUs. The changes in remapper make sure that the fusions do not happen if oneDNN  is enabled and BF16 is not supported. The tests for fused ops are skipped in this case as well. The changes in layout pass make sure that the translation to MKL op does not happen for the same reason and the op falls back to Eigen.\r\n\r\nNote: Changes in AMP pass are not needed as all oneDNN ops with the exception of fused ops are supported with Eigen and will fallback to Eigen on AVX2 machines",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-09-28T17:07:56Z",
        "closed_at": "2023-10-02T13:48:04Z",
        "merged_at": "2023-10-02T13:48:04Z",
        "body": "Update the release branch for the next release version",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 35,
        "changed_files": 3,
        "created_at": "2023-09-28T16:52:01Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Hi,\r\n\r\nThis PR modifies the LUT calculation for the EXP part of the `tfl.softmax` TOSA legalization to match the [TFL Softmax reference kernel](https://github.com/tensorflow/tensorflow/blob/5d4c1b0c67e2cfdcdea416e2314fa676aa072c07/tensorflow/lite/kernels/internal/reference/softmax.h#L65) for a bit-exact result.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-09-28T16:36:25Z",
        "closed_at": "2023-10-12T11:56:05Z",
        "merged_at": "2023-10-12T11:56:05Z",
        "body": "This PR upgrades oneDNN version from v3.2.1 to v3.3.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-28T16:05:12Z",
        "closed_at": "2023-09-29T05:09:59Z",
        "merged_at": null,
        "body": "This fixes formatting by closing an inline code block.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-09-28T15:21:03Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Hi,\r\n\r\nThe `max_val` of [tosa.clamp](https://www.mlplatform.org/tosa/tosa_spec.html#_clamp) is an int8/int16 value, it should thus be restricted to the int8/int16 max value during legalization which the legalization does.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-09-28T08:16:32Z",
        "closed_at": "2023-10-09T04:30:47Z",
        "merged_at": "2023-10-09T04:30:47Z",
        "body": "Fixed typos in `wrap_function.py` and `trt_convert.py`",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-09-28T07:06:53Z",
        "closed_at": "2023-10-03T08:35:10Z",
        "merged_at": "2023-10-03T08:35:10Z",
        "body": "Corrected several typos in documentation. Please have a look. Thank you!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-27T17:45:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Hi,\r\n\r\nThis PR improves the `tfl.batch_to_space_nd` TFL -> TOSA legalization when the input has dynamic shapes by propagating the inferred input size of the slicing.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2023-09-27T15:22:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Hi,\r\n\r\nThis PR moves the left shifting in the `tfl.squared_difference` TFL -> TOSA legalization in a separate `tosa.rescale` to avoid any precision loss which could create non bit-exact results.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 11,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-09-27T14:56:11Z",
        "closed_at": "2023-10-09T04:40:09Z",
        "merged_at": "2023-10-09T04:40:09Z",
        "body": "Hi,\r\n\r\nThis PR fixes a bug with the `tfl.reshape` TFL -> TOSA legalization when it has dynamic dimension. MLIR dynamic dimensions should be converted to -1 with `ConvertMlirShapeToTF`. ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 162,
        "deletions": 54,
        "changed_files": 6,
        "created_at": "2023-09-27T14:38:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Hi,\r\n\r\nThis PR adds int8 and int16 TFL -> TOSA legalization for the EXP operator. \r\n\r\nIt also contains a commit to align `getTosaConst8bitTable` and `getTosaConst16bitTable` to [LUTPopulate](https://github.com/tensorflow/tensorflow/blob/72aa8ab84e24f66762e502ba6f39f12587e2415b/tensorflow/lite/kernels/internal/common.h#L494) to ensure the generated LUT is bit-exact during legalization.\r\n\r\nThibaut",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 19,
        "changed_files": 8,
        "created_at": "2023-09-27T13:50:55Z",
        "closed_at": "2023-10-05T16:27:29Z",
        "merged_at": "2023-10-05T16:27:29Z",
        "body": "As the title says, I fixed some typos and grammatical errors in the .md files.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-27T06:52:00Z",
        "closed_at": "2023-09-28T05:50:39Z",
        "merged_at": null,
        "body": "\"def testGraphOpDigestWithNoOutpusReturnsNumOutputsZero(\" is updated as\r\n \"def testGraphOpDigestWithNoOutputsReturnsNumOutputsZero(\" in the Update debug_events_writer_test.py file. Please do the needful. Thank you!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-27T06:41:58Z",
        "closed_at": "2023-09-28T05:50:08Z",
        "merged_at": null,
        "body": "DEFAUL_TRT_CONVERT_PARAMS is updated as DEFAULT_TRT_CONVERT_PARAMS in the documentation. Please have a look at the changes. Thank you!",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-26T12:55:05Z",
        "closed_at": "2023-09-27T05:59:35Z",
        "merged_at": null,
        "body": "From TF2.13v the `DistributedDatasetInterface` shifted from `tensorflow.python.distribute.input_lib` to `tensorflow.python.types.distribute` . But still internally in `data_adapter.py `has a protected member function calling this class from `tensorflow.python.distribute.input_lib`.\r\n\r\nHence updated the import statement and the protected member function as well.\r\n\r\nA sample gist attached here to check the behaviour.\r\n\r\nShall fix #61974",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-25T17:10:15Z",
        "closed_at": "2023-09-26T07:42:03Z",
        "merged_at": null,
        "body": "practicing on workflow of the github by using open source project.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-25T14:29:30Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The `tf.linalg.cholesky` should support `half` data type  as per documentation. The Op registered for `half` data type also in `REGISTER_OP()`. But There is no CPU kernel for this Op to support half dtype. Hence adding the CPU kernel for same.\r\n\r\nFixes #61907",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-09-25T07:29:38Z",
        "closed_at": "2023-10-03T08:40:41Z",
        "merged_at": "2023-10-03T08:40:41Z",
        "body": "Documentation has been updated with correct words. Please have a look at this and do the needful. Thank you!",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-09-22T10:40:21Z",
        "closed_at": "2023-10-03T08:47:22Z",
        "merged_at": "2023-10-03T08:47:22Z",
        "body": "Multiple typos fixed in the TF documentation.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-21T17:14:41Z",
        "closed_at": "2023-09-21T17:17:24Z",
        "merged_at": "2023-09-21T17:17:24Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 197,
        "deletions": 81,
        "changed_files": 11,
        "created_at": "2023-09-21T15:27:34Z",
        "closed_at": "2023-10-09T04:20:50Z",
        "merged_at": "2023-10-09T04:20:50Z",
        "body": "This is a remaining part of hipblas-lt integration: diffs are taken from the original pull request: https://github.com/ROCmSoftwarePlatform/tensorflow-upstream/pull/2000\r\n\r\nThe XLA part was already integrated in: https://github.com/openxla/xla/pull/3953/files#\r\n\r\n@akuegel: can you please review the changes ?",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 188,
        "deletions": 77,
        "changed_files": 12,
        "created_at": "2023-09-21T14:44:54Z",
        "closed_at": "2023-09-21T15:02:53Z",
        "merged_at": null,
        "body": "This is a remaining part of hipblas-lt integration: diffs are taken from the original pull request: https://github.com/ROCmSoftwarePlatform/tensorflow-upstream/pull/2000/\r\n\r\nThe XLA part was already integrated in: https://github.com/openxla/xla/pull/3953/files#\r\n\r\nPlease ignore this PR: it erroneously tracks all the commit history from ROCm, \r\nanother one will be created",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-09-21T12:25:26Z",
        "closed_at": "2023-09-21T17:45:07Z",
        "merged_at": "2023-09-21T17:45:07Z",
        "body": "Remove the duplication of copies that can result in permission denied",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-09-20T23:15:13Z",
        "closed_at": "2023-09-21T06:30:35Z",
        "merged_at": "2023-09-21T06:30:34Z",
        "body": "PR strips external/local_tsl prefix from tsl protos when packaging //tensorflow/tools/lib_package:libtensorflow_proto.zip.  See also #61883. Here's a head of the tree for the current zip archive to demonstrate the issue:\r\n\r\n```.\r\n .\r\n\u251c\u2500\u2500 external\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 local_tsl\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 tsl\r\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 profiler\r\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 protobuf\r\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0     \u251c\u2500\u2500 profiler_options.proto\r\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0     \u2514\u2500\u2500 xplane.proto\r\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 protobuf\r\n\u2502\u00a0\u00a0             \u251c\u2500\u2500 bfc_memory_map.proto\r\n\u2502\u00a0\u00a0             \u251c\u2500\u2500 coordination_config.proto\r\n\u2502\u00a0\u00a0             \u251c\u2500\u2500 distributed_runtime_payloads.proto\r\n\u2502\u00a0\u00a0             \u251c\u2500\u2500 error_codes.proto\r\n\u2502\u00a0\u00a0             \u251c\u2500\u2500 histogram.proto\r\n\u2502\u00a0\u00a0             \u251c\u2500\u2500 rpc_options.proto\r\n\u2502\u00a0\u00a0             \u251c\u2500\u2500 status.proto\r\n\u2502\u00a0\u00a0             \u2514\u2500\u2500 test_log.proto\r\n\u2514\u2500\u2500 tensorflow\r\n    \u2514\u2500\u2500 core\r\n        \u251c\u2500\u2500 example\r\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 example.proto\r\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 example_parser_configuration.proto\r\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 feature.proto\r\n        \u251c\u2500\u2500 framework\r\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 allocation_description.proto\r\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 api_def.proto\r\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 attr_value.proto\r\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 cost_graph.proto\r\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 cpp_shape_inference.proto\r\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 dataset.proto\r\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 dataset_metadata.proto\r\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 dataset_options.proto\r\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 device_attributes.proto\r\n   .\r\n   .\r\n   .\r\n```\r\n\r\n\r\ncc: @jakeharmon8 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-09-20T20:52:30Z",
        "closed_at": "2023-09-20T20:56:25Z",
        "merged_at": "2023-09-20T20:56:25Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-09-20T20:21:25Z",
        "closed_at": "2023-09-20T21:48:45Z",
        "merged_at": "2023-09-20T21:48:45Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/0e3480236cec19ea558cd93dd017013e5cfee1b3",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9346,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-20T17:06:16Z",
        "closed_at": "2023-09-20T17:49:55Z",
        "merged_at": "2023-09-20T17:49:55Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/d03c477d727b93b71ac1710885c6c918d7754361",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2023-09-20T15:52:49Z",
        "closed_at": "2023-09-22T12:34:15Z",
        "merged_at": null,
        "body": "Testing what is being missed on import.\r\nDo not merge - i will close this once i am done. ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-20T14:50:29Z",
        "closed_at": "2023-09-21T04:06:35Z",
        "merged_at": "2023-09-21T04:06:35Z",
        "body": "due to recent migration XLA/TF, we have clean up some code from our repo to upstream.\r\n\r\nThanks in advance! @akuegel ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-09-19T14:34:39Z",
        "closed_at": "2023-09-19T18:59:57Z",
        "merged_at": "2023-09-19T18:59:57Z",
        "body": "Due to the large size of both CUDA and TF itself we are running into disk issues on the docker build scripts when a large change has been made.  This will delete the hostedtoolcache to free up space.  ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-19T14:11:34Z",
        "closed_at": "2023-09-20T15:24:06Z",
        "merged_at": "2023-09-20T15:24:06Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 86,
        "deletions": 27,
        "changed_files": 9,
        "created_at": "2023-09-19T13:20:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Add RunOptions as an argument for Tensorflow Session Run. Another option is adding a method for `Session` struct like `SetRunOptions()`. It will keep the current API the same, however, such method will be not thread-safe.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 97,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2023-09-19T12:01:21Z",
        "closed_at": "2023-10-05T18:28:26Z",
        "merged_at": "2023-10-05T18:28:26Z",
        "body": "Hi! We've been fuzzing tensorflow and found the error of null pointer\r\ndereference at `gif_io.cc:178`.\r\n\r\n### Environment\r\n\r\nOS: ubuntu20.04\r\nTF version: 4601e74cdcd86e6d229ec1d98ff08ba8e147c092\r\n\r\n### Detailed description\r\n\r\nThe error of null pointer occurs, because `RasterBits` buffer at 178 line in `gif_io.cc` occurs to be nullptr.\r\n\r\nIn gif library in `DGifSlurp` function, which is called from `Decode` function of tensorflow core at `gif_io.cc:78`, at `gif/dgif_lib.c:1144` `DGifGetRecordType` function is called, where new element for `SavedImages` buffer is allocated, `RasterBits` field of the corresponding element in buffer is set to `NULL`, and `ImageCount` is increased.\r\n\r\nAfter that, before the memory for `RasterBits` is allocated, there is a check in `DGifSlurp` function at `dgif_lib.c:1149` for image sizes to prevent potential overflow. If they are incorrect, `GIF_ERROR` is returned before the allocation of `RasterBits`.\r\n\r\nIn TensorFlow at `gif_io.cc:78` there is a check for the result, which leads to returning `nullptr` only in case `ImageCount <= 0`. But `ImageCount` is incremented in gif library before the allocation of inner buffers, so returning `nullptr` only in case of `ImageCount <= 0` can lead to the following errors of null pointer dereference.\r\n\r\nTo prevent this error, we suggest just to remove this check `ImageCount <= 0` and return `nullptr` in any case when `DGifSlurp` returns `GIF_ERROR`.\r\n\r\n### How to reproduce\r\n\r\nBuild Docker container from [here](https://github.com/ispras/oss-sydr-fuzz/tree/master/projects/tensorflow):\r\n\r\n```bash\r\n$ sudo docker build -t oss-sydr-fuzz-tensorflow .\r\n```\r\n\r\nRun container:\r\n\r\n```bash\r\nsudo docker run --rm -v `pwd`:/fuzz -it oss-sydr-fuzz-tensorflow /bin/bash\r\n```\r\n\r\nRun target on the crash input [crash](https://github.com/tensorflow/tensorflow/assets/75036757/34f2f803-b4cc-47d1-a989-1d143838e220):\r\n\r\n\r\n```bash\r\n/fuzzer/decode_png -rss_limit_mb=0 /fuzz/crash\r\n```\r\n\r\nYou will see the following output:\r\n\r\n```\r\n==1749952==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x0000259030dd bp 0x7fff67a64090 sp 0x7fff67a63640 T254)\r\n==1749952==The signal is caused by a READ memory access.\r\n==1749952==Hint: address points to the zero page.\r\n    #0 0x259030dd in tensorflow::gif::Decode(void const*, int, std::function<unsigned char* (int, int, int, int)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool) /proc/self/cwd/tensorflow/core/lib/gif/gif_io.cc:178:13\r\n    #1 0x247743ca in tensorflow::(anonymous namespace)::DecodeImageV2Op::DecodeGifV2(tensorflow::OpKernelContext*, std::basic_string_view<char, std::char_traits<char> >) /proc/self/cwd/tensorflow/core/kernels/image/decode_image_op.cc:462:21\r\n    #2 0x247743ca in tensorflow::(anonymous namespace)::DecodeImageV2Op::Compute(tensorflow::OpKernelContext*) /proc/self/cwd/tensorflow/core/kernels/image/decode_image_op.cc:216:9\r\n    #3 0x48e86ff7 in tensorflow::ThreadPoolDevice::Compute(tensorflow::OpKernel*, tensorflow::OpKernelContext*) /proc/self/cwd/tensorflow/core/common_runtime/threadpool_device.cc:184:14\r\n    #4 0x492f72ea in tensorflow::(anonymous namespace)::ExecutorState<tensorflow::SimplePropagatorState>::ProcessSync(tensorflow::NodeItem const&, tensorflow::OpKernelContext::Params*, absl::lts_20230125::InlinedVector<tensorflow::Entry, 4ul, std::allocator<tensorflow::Entry> >*, tensorflow::NodeExecStatsInterface*) /proc/self/cwd/tensorflow/core/common_runtime/executor.cc:604:13\r\n    #5 0x492f72ea in tensorflow::(anonymous namespace)::ExecutorState<tensorflow::SimplePropagatorState>::ProcessInline(tensorflow::SimplePropagatorState::TaggedNodeReadyQueue*, long) /proc/self/cwd/tensorflow/core/common_runtime/executor.cc:896:13\r\n    #6 0x492eaeaa in tensorflow::(anonymous namespace)::ExecutorState<tensorflow::SimplePropagatorState>::Process(tensorflow::SimplePropagatorState::TaggedNode const&, long) /proc/self/cwd/tensorflow/core/common_runtime/executor.cc:704:10\r\n    #7 0x4b57a771 in tsl::thread::EigenEnvironment::ExecuteTask(tsl::thread::EigenEnvironment::Task const&) /proc/self/cwd/tensorflow/tsl/platform/threadpool.cc:94:5\r\n    #8 0x4b578c61 in Eigen::ThreadPoolTempl<tsl::thread::EigenEnvironment>::WorkerLoop(int) /proc/self/cwd/external/eigen_archive/Eigen/src/ThreadPool/NonBlockingThreadPool.h:330:16\r\n    #9 0x4b576cf6 in tsl::thread::EigenEnvironment::CreateThread(std::function<void ()>)::'lambda'()::operator()() const /proc/self/cwd/tensorflow/tsl/platform/threadpool.cc:71:7\r\n    #10 0x4b529b9e in tsl::(anonymous namespace)::PThread::ThreadFn(void*) /proc/self/cwd/tensorflow/tsl/platform/default/env.cc:93:5\r\n    #11 0x7ffff7e47608 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x8608) (BuildId: 7b4536f41cdaa5888408e82d0836e33dcf436466)\r\n    #12 0x7ffff7b63132 in __clone (/lib/x86_64-linux-gnu/libc.so.6+0x11f132) (BuildId: 1878e6b475720c7c51969e69ab2d276fae6d1dee)\r\n\r\nAddressSanitizer can not provide additional info.\r\nSUMMARY: AddressSanitizer: SEGV /proc/self/cwd/tensorflow/core/lib/gif/gif_io.cc:178:13 in tensorflow::gif::Decode(void const*, int, std::function<unsigned char* (int, int, int, int)> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)\r\nThread T254 created by T0 here:\r\n    #0 0x18e4d5ac in pthread_create /llvm-project-llvmorg-14.0.6/compiler-rt/lib/asan/asan_interceptors.cpp:208:3\r\n    #1 0x4b527904 in tsl::(anonymous namespace)::PThread::PThread(tsl::ThreadOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, absl::lts_20230125::AnyInvocable<void ()>) /proc/self/cwd/tensorflow/tsl/platform/default/env.cc:72:15\r\n    #2 0x4b527904 in tsl::(anonymous namespace)::PosixEnv::StartThread(tsl::ThreadOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, absl::lts_20230125::AnyInvocable<void ()>) /proc/self/cwd/tensorflow/tsl/platform/default/env.cc:137:16\r\n    #3 0x4b57299f in tsl::thread::EigenEnvironment::CreateThread(std::function<void ()>) /proc/self/cwd/tensorflow/tsl/platform/threadpool.cc:63:18\r\n    #4 0x4b56d255 in Eigen::ThreadPoolTempl<tsl::thread::EigenEnvironment>::ThreadPoolTempl(int, bool, tsl::thread::EigenEnvironment) /proc/self/cwd/external/eigen_archive/Eigen/src/ThreadPool/NonBlockingThreadPool.h:60:16\r\n    #5 0x4b56be71 in tsl::thread::ThreadPool::ThreadPool(tsl::Env*, tsl::ThreadOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, bool, Eigen::Allocator*) /proc/self/cwd/tensorflow/tsl/platform/threadpool.cc:116:31\r\n    #6 0x491fb8d8 in tensorflow::NewThreadPoolFromSessionOptions(tensorflow::SessionOptions const&, int) /proc/self/cwd/tensorflow/core/common_runtime/process_util.cc:162:14\r\n    #7 0x45643d53 in tensorflow::(anonymous namespace)::GlobalThreadPool(tensorflow::SessionOptions const&, int) /proc/self/cwd/tensorflow/core/common_runtime/direct_session.cc:147:7\r\n    #8 0x45643d53 in tensorflow::DirectSession::DirectSession(tensorflow::SessionOptions const&, tensorflow::DeviceMgr const*, tensorflow::DirectSessionFactory*) /proc/self/cwd/tensorflow/core/common_runtime/direct_session.cc:358:9\r\n    #9 0x45681552 in tensorflow::DirectSessionFactory::NewSession(tensorflow::SessionOptions const&, tensorflow::Session**) /proc/self/cwd/tensorflow/core/common_runtime/direct_session.cc:202:34\r\n    #10 0x48e7518c in tensorflow::NewSession(tensorflow::SessionOptions const&, tensorflow::Session**) /proc/self/cwd/tensorflow/core/common_runtime/session.cc:90:16\r\n    #11 0x48e74b46 in tensorflow::NewSession(tensorflow::SessionOptions const&) /proc/self/cwd/tensorflow/core/common_runtime/session.cc:70:14\r\n    #12 0x18e9c7bc in tensorflow::fuzzing::FuzzSession::InitIfNeeded() /proc/self/cwd/./tensorflow/core/kernels/fuzzing/fuzz_session.h:92:41\r\n    #13 0x18e953d4 in tensorflow::fuzzing::FuzzSession::Fuzz(unsigned char const*, unsigned long) /proc/self/cwd/./tensorflow/core/kernels/fuzzing/fuzz_session.h:127:21\r\n    #14 0x4c0df4ed in ExecuteFilesOnyByOne /AFLplusplus/utils/aflpp_driver/aflpp_driver.c:255:7\r\n\r\n==1749952==ABORTING\r\n```",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 240,
        "deletions": 7022,
        "changed_files": 17,
        "created_at": "2023-09-19T09:45:15Z",
        "closed_at": "2023-09-22T10:50:32Z",
        "merged_at": "2023-09-22T10:50:32Z",
        "body": "29abb6ac7121bed646f3cd832511372626e7916c updates oneDNN to v3.2.1 for aarch64 and adds a patch to oneDNN to support FP32-BF16 Jit reorders.\r\n\r\n 35b2669fbe540c812764d1ed7185c0c428ceca03 adds a patch to oneDNN for BF16 capability detection for Ubuntu 20.04 on aarch64. The contents in the patch are fully authored by @kawakami-k. The source used for this patch is available here: oneapi-src/oneDNN#1670",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-18T16:37:33Z",
        "closed_at": null,
        "merged_at": null,
        "body": "It's handy to have an option to enable the benchmark_model tool so that it can be built and installed using the all target which is preferable in some cases when packaging tensorflow-lite.\r\n\r\nThis is the `benchmark_model` equivalent of #60021.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3011,
        "deletions": 0,
        "changed_files": 29,
        "created_at": "2023-09-18T14:56:55Z",
        "closed_at": "2023-09-18T19:00:52Z",
        "merged_at": "2023-09-18T19:00:52Z",
        "body": "Pull in the ARM64 docker files to being the process of creating a TF published set of ARM64 docker images.  \r\nThese files will likely be modified somewhat and may not yet ready for use. ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-09-18T12:25:52Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Matches the new definition in the specification\r\n\r\nChange-Id: I4f8dfa3d380039a88b96fd74f09e8f8ebabee3f5",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-18T07:34:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "\u2026 to log ERROR message when call SetPriority on host stream",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-17T03:55:47Z",
        "closed_at": "2023-09-25T09:54:38Z",
        "merged_at": "2023-09-25T09:54:38Z",
        "body": "PR strips `external/local_tsl` prefix from tsl c headers when packaging //tensorflow/tools/lib_package:cheaders (and, thus libtensorflow.tar.gz).  This prefix is not consistent with #include directives used in tensorflow and  tsl c headers.\r\n\r\nThe current tree of libtensorflow.tar.gz is shown below to demonstrate the issue.\r\n\r\n```\r\n.\r\n\u251c\u2500\u2500 LICENSE\r\n\u251c\u2500\u2500 THIRD_PARTY_TF_C_LICENSES\r\n\u251c\u2500\u2500 include\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 external\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 local_tsl\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 tsl\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 c\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 tsl_status.h\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2514\u2500\u2500 platform\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0             \u251c\u2500\u2500 ctstring.h\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0             \u2514\u2500\u2500 ctstring_internal.h\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tensorflow\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 c\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 c_api.h\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 c_api_experimental.h\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 c_api_macros.h\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 eager\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 c_api.h\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 c_api_experimental.h\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 dlpack.h\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 tensor_interface.h\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 tf_attrtype.h\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 tf_buffer.h\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 tf_datatype.h\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 tf_file_statistics.h\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 tf_status.h\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 tf_tensor.h\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 tf_tensor_helper.h\r\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 tf_tstring.h\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 core\r\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 platform\r\n\u2502\u00a0\u00a0             \u251c\u2500\u2500 ctstring.h\r\n\u2502\u00a0\u00a0             \u2514\u2500\u2500 ctstring_internal.h\r\n\u2514\u2500\u2500 lib\r\n    \u251c\u2500\u2500 libtensorflow.so -> libtensorflow.so.2\r\n    \u251c\u2500\u2500 libtensorflow.so.2 -> libtensorflow.so.2.15.0\r\n    \u251c\u2500\u2500 libtensorflow.so.2.15.0\r\n    \u251c\u2500\u2500 libtensorflow_framework.so -> libtensorflow_framework.so.2\r\n    \u251c\u2500\u2500 libtensorflow_framework.so.2 -> libtensorflow_framework.so.2.15.0\r\n    \u2514\u2500\u2500 libtensorflow_framework.so.2.15.0\r\n```",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-15T19:17:39Z",
        "closed_at": "2023-10-05T17:40:28Z",
        "merged_at": "2023-10-05T17:40:28Z",
        "body": "This PR will make oneDNN optimization default on the Windows platform.",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 21,
        "changed_files": 4,
        "created_at": "2023-09-15T18:56:22Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Android requires all libraries to have a unique namespace defined in their manifest. Changes made:\r\n\r\n- Added manifests for the api and gpu libraries\r\n- Renamed AndroidManifestGpu.xml to AndroidManifestGpuApi.xml for consistent naming\r\n\r\nNote: I couldn't figure out which manifest is used for tensorflow-lite-select-tf-ops. Since it was still compiling after half an hour I skipped that one.\r\n\r\nFixes #61853",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-15T11:07:29Z",
        "closed_at": "2023-09-17T16:46:50Z",
        "merged_at": null,
        "body": "To prevent undefined reference to uint32_t\r\n\r\nFixes: https://github.com/tensorflow/tensorflow/issues/61872",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 213,
        "deletions": 8,
        "changed_files": 13,
        "created_at": "2023-09-15T09:08:00Z",
        "closed_at": "2023-10-10T01:46:21Z",
        "merged_at": "2023-10-10T01:46:21Z",
        "body": "This PR migrates TensorFlow builds on Windows from the MSVC to the clang-cl compiler.\r\n\r\nReason for migration:\r\nBring TensorFlow Build on Windows and Linux on the same compiler platform to facilitate convenient debugging for the issues related to compiler\r\n\r\nComments:\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/def_file_filter/def_file_filter.py.tpl#L309\r\nDeleted #def_fp.write(\"\\t ??0CoordinatedTask@tensorflow@@qeaa@XZ\\n\") # for _pywrap_tfe\r\n#Fix the issue of being unable to export the symbol tensorflow::CoordinatedTask::CoordinatedTask(void)\r\nas the symbol was not found and the above command was responsible for exporting the symbol\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/master/.bazelrc#L410\r\n#clang-cl supports /arch:AVX instead of /arch=AVX\r\n\r\nhttps://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/utils/shape_inference_utils.h#L30\r\nThis specific issue is caused by the OpRegistrationData type being defined as [struct OpRegistrationData](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/framework/op_def_builder.h#L67) but declared in failing translation unit as [class OpRegistrationData](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/utils/shape_inference_utils.h#L30). Clang apparently makes the difference here (unlike msvc) and it can't find the symbol with class attribute while it is defined only as a struct. Changing [class OpRegistrationData](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/ir/utils/shape_inference_utils.h#L30) to struct OpRegistrationData fixes this specific issue.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-09-14T20:55:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This patch fixes legalization of 2d tfl.batch_matmul to Tosa, which needs to be reshaped to 3d inputs because tosa matmul requires 3d inputs. And the 3d result needs to be reshaped back to original 2d.\r\n\r\nadded lit test for this as well.\r\n\r\n\r\nChange-Id: I7f01cdebbdb6456d02a74f7f3b796ae0eccd1c8e",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-09-13T14:25:27Z",
        "closed_at": "2023-09-15T03:51:40Z",
        "merged_at": "2023-09-15T03:51:40Z",
        "body": "Currently the release builds and tests run on the same agents as nightly/ci. This will allow them to run on different agents with different VM timeout parameters for better release feedback. ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-09-13T09:51:32Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The nightly package versions should not have been updated from the 2.13 versions so revert that change.\r\nAlso revert the change that skipped the tests that were broken by the nightly version change.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 53,
        "deletions": 0,
        "changed_files": 15,
        "created_at": "2023-09-12T16:52:02Z",
        "closed_at": "2023-09-25T18:49:59Z",
        "merged_at": "2023-09-25T18:49:59Z",
        "body": "Hi, as discussed through email, this one of the [OSSF Scorecard](https://github.com/ossf/scorecard) recommendations. \r\n\r\nThe default permissions given to GITHUB_TOKEN is write all, which can be exploited by an attacker in case of a compromised action.\r\n\r\nTo mitigate this risk it is important to [Use credentials that are minimally scoped](https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-secrets).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-12T16:27:25Z",
        "closed_at": "2023-09-12T16:46:29Z",
        "merged_at": "2023-09-12T16:46:29Z",
        "body": "These tests passed on a previous release with no obvious reason why they have begun failing now but they need to be excluded in order to build the release.\r\nAlso revert the change to a more specific version of TensorFlow IO as it did not resolve this issue.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-12T06:07:12Z",
        "closed_at": "2023-09-12T07:33:33Z",
        "merged_at": null,
        "body": "fix issue #61823 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-12T05:54:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Don't think need to assign variable `int out_id = out->id();`, if only for consistency with rest of `tensorflow/core/graph/control_flow.cc`",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-09-12T04:13:24Z",
        "closed_at": "2023-09-13T03:55:31Z",
        "merged_at": "2023-09-13T03:55:31Z",
        "body": "Changing a handful of python test names syntax to lowercase with underscores for consistency within  `tensorflow/examples/adding_an_op` python unit tests.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-12T04:03:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Add a couple more test cases of the empty file (`empty.txt`) to `utils_test.cc`:\r\n- reading empty file does not return nullptr\r\n- reading empty file results in 0 lines written to vector",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-11T23:36:57Z",
        "closed_at": "2023-09-11T23:46:03Z",
        "merged_at": "2023-09-11T23:46:03Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 19,
        "changed_files": 5,
        "created_at": "2023-09-11T20:39:43Z",
        "closed_at": "2023-09-11T21:09:45Z",
        "merged_at": "2023-09-11T21:09:45Z",
        "body": "Update setup.py, requirements.in with final Keras, Tensorboard and Estimator versions",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-11T17:36:39Z",
        "closed_at": "2023-09-11T18:01:16Z",
        "merged_at": "2023-09-11T18:01:16Z",
        "body": "Follow up to https://github.com/tensorflow/tensorflow/pull/61834",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-09-11T17:13:34Z",
        "closed_at": "2023-09-11T17:59:17Z",
        "merged_at": "2023-09-11T17:59:17Z",
        "body": "Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 13 -> 13\nPatch: 0 -> 1\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.13.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:32:2.13.0\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:33:2.13.0\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:34:2.13.0\ntensorflow/tools/ci_build/release/requirements_common.txt:28:2.13.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.13.0\ntensorflow/tools/ci_build/release/requirements_common.txt:30:2.13.0\ntensorflow/tools/pip_package/setup.py:116:2.13.0\ntensorflow/tools/pip_package/setup.py:117:2.13.0\ntensorflow/lite/core/c/c_api.h:116:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:87:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:136:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:140:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:167:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:252:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:262:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:311:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:319:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:322:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:334:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:359:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:415:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:416:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:417:2.13.0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.13.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:32:2.13.0\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:33:2.13.0\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:34:2.13.0\ntensorflow/tools/ci_build/release/requirements_common.txt:28:2.13.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.13.0\ntensorflow/tools/ci_build/release/requirements_common.txt:30:2.13.0\ntensorflow/tools/pip_package/setup.py:116:2.13.0\ntensorflow/tools/pip_package/setup.py:117:2.13.0\ntensorflow/lite/core/c/c_api.h:116:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:87:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:136:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:140:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:167:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:252:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:262:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:311:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:319:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:322:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:334:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:359:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:415:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:416:2.13.0\ntensorflow/lite/tools/versioning/runtime_version.cc:417:2.13.0\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-09-11T17:06:28Z",
        "closed_at": "2023-09-11T18:00:39Z",
        "merged_at": "2023-09-11T18:00:39Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/1a6c8304e874c3188940da477427e410894c4c71",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-09-11T15:52:42Z",
        "closed_at": "2023-09-15T03:59:06Z",
        "merged_at": "2023-09-15T03:59:05Z",
        "body": "Update compiler in use to be clang-17 to\r\nmaintain sync with other builds.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-11T10:01:36Z",
        "closed_at": "2023-09-11T16:47:17Z",
        "merged_at": "2023-09-11T16:47:17Z",
        "body": "The API has changed so need to use the matching version of TensorFlow IO, not the latest.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-09T19:46:42Z",
        "closed_at": "2023-09-21T06:56:17Z",
        "merged_at": "2023-09-21T06:56:17Z",
        "body": "original author @lubosz\r\n\r\ncloses #61823 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-09-09T07:27:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "fix: do not convert tf.Select to mhlo.select when element type is !tf_type.string",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 73,
        "deletions": 40,
        "changed_files": 5,
        "created_at": "2023-09-08T19:13:45Z",
        "closed_at": "2023-09-08T20:39:03Z",
        "merged_at": "2023-09-08T20:39:03Z",
        "body": "Otherwise we'd crash on cases like non-existing CustomCall target.\r\n\r\nPiperOrigin-RevId: 562563302",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 69,
        "deletions": 42,
        "changed_files": 3,
        "created_at": "2023-09-08T16:33:25Z",
        "closed_at": "2023-09-14T22:53:51Z",
        "merged_at": "2023-09-14T22:53:51Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 73,
        "deletions": 40,
        "changed_files": 5,
        "created_at": "2023-09-07T19:43:47Z",
        "closed_at": "2023-09-08T18:30:11Z",
        "merged_at": "2023-09-08T18:30:11Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/70ee782d2131754b45cf29c08cb717c8714046b8",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 20,
        "changed_files": 4,
        "created_at": "2023-09-07T18:09:32Z",
        "closed_at": "2023-09-07T18:16:53Z",
        "merged_at": null,
        "body": "Bazel NDK r25 supports needs to use the new Starlark rules of [https://github.com/bazelbuild/rules_android_ndk](https://www.google.com/url?sa=D&q=https%3A%2F%2Fgithub.com%2Fbazelbuild%2Frules_android_ndk).\r\n\r\nThis PR checks NDK toolchain version and generates proper rules.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-07T07:44:52Z",
        "closed_at": "2023-09-07T16:34:59Z",
        "merged_at": "2023-09-07T16:34:59Z",
        "body": "The XLA code is no longer present in the TensorFlow tree so need to remove mention of the XLA unit tests from the skip list",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 62,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-09-07T03:41:08Z",
        "closed_at": "2023-09-07T03:41:35Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 14,
        "changed_files": 6,
        "created_at": "2023-09-07T03:01:50Z",
        "closed_at": "2023-09-07T04:02:40Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-09-06T21:10:07Z",
        "closed_at": "2023-09-06T21:19:59Z",
        "merged_at": "2023-09-06T21:19:59Z",
        "body": "Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 14 -> 14\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.14.0-rc1\" found in source directory \n\"tensorflow/\". Good.\nNo lingering old version strings \"2.14.0rc1\" found in source directory \n\"tensorflow/\". Good.\n```",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-06T15:40:42Z",
        "closed_at": "2023-09-28T17:07:10Z",
        "merged_at": null,
        "body": "Add clang-tidy to the sig build image and upgrade clang format to match the version of the other clang tools",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-06T03:31:16Z",
        "closed_at": "2023-09-15T02:46:24Z",
        "merged_at": "2023-09-15T02:46:24Z",
        "body": "sqlite upgrade to 3.43.0 which has CVE fixes.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-06T02:43:27Z",
        "closed_at": "2023-09-11T23:21:51Z",
        "merged_at": "2023-09-11T23:21:50Z",
        "body": "- Problem:\r\nUsing CMake to build the TFLite kernel test will fail in linking stage when `-DTFLITE_ENABLE_GPU=OFF`\r\n\r\n- Log:\r\n```\r\nld: libtensorflow-lite-test-base.a(op_version.cc.o): in function `.LBB1_18':\r\nop_version.cc:(.text._ZN6tflite15UpdateOpVersionEPh+0x14c): undefined reference to `tflite::GetOpSignature(tflite::OperatorCode const*, tflite::Operator const*, tflite::SubGraph const*, tflite::Model const*)'\r\nclang++: rror: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n\r\n- Solution:\r\nAdd `versioning/op_signature.cc` to TEST_FRAMEWORK_SRC if `-DTFLITE_ENABLE_GPU=OFF`. `versioning/op_version.cc` depends on `versioning/op_signature.cc` because of using GetOpSignature().\r\nWe don't need to add `versioning/op_signature.cc` to TEST_FRAMEWORK_SRC if `-DTFLITE_ENABLE_GPU=ON`. Because `versioning/op_signature.cc` is appended in `TFLITE_DELEGATES_GPU_SRCS`, it makes `tensorflow-lite.a` define `GetOpSignature`.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-05T22:10:29Z",
        "closed_at": "2023-09-11T16:47:58Z",
        "merged_at": "2023-09-11T16:47:58Z",
        "body": "This PR is intentionally incomplete. One of the Release Owners for 2.13.1\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-05T18:29:05Z",
        "closed_at": "2023-09-06T14:31:11Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 242,
        "deletions": 130,
        "changed_files": 7,
        "created_at": "2023-09-05T17:39:05Z",
        "closed_at": "2023-09-05T17:40:32Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-09-04T15:25:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Those are no longer. Technically only `PROTOBUF_INCLUDE_PATH` is required but as it uses `PREFIX` by default other projects could use the latter so I kept `PREFIX`",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-09-04T04:39:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The API `tf.image.adjust_contrast` supports `float16` and `float32` for the argument images . But with `CPU` runtime and `float16` dtype the API raising exception stating there is no kernel available. Refer attached [gist](https://colab.sandbox.google.com/gist/SuryanarayanaY/6990939226d9d79dfe9225b13919c288/61246_cpu.ipynb) for the exception.\r\n\r\nHence adding a kernel for CPU with float16.\r\n\r\nShall also fixes #61246",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-01T18:25:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Following pattern is seen in 3 models. It looks similar to InstanceNorm pattern but it is actually LayerNorm based on the reduction axis. Under right conditions, this pattern will be fused as LayerNorm to improve performance.\r\n\r\n![image](https://github.com/intel-innersource/frameworks.ai.tensorflow.private-tensorflow/assets/42224278/e2192afc-0d97-4aff-8529-37e10ae72c1b)\r\n\r\nStopGradient is removed as part of optimize_for_inference since it is not required and is a training op.\r\n\"When used in a graph, it outputs the input as is\" https://www.tensorflow.org/api_docs/python/tf/stop_gradient",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-01T10:37:37Z",
        "closed_at": "2023-09-12T00:50:23Z",
        "merged_at": "2023-09-12T00:50:23Z",
        "body": "Some of these files are included by some of the main header files such as interpreter.h but aren't included in the install. This causes build failures when using TFLite built in some configurations.\r\n\r\nThis was also causing build failures when building LLVM with a near tip of tree TFLite.\r\n\r\nCC: @mtrofin @petrhosek \r\n\r\nAlso related to https://github.com/google/ml-compiler-opt/pull/293.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-01T08:02:12Z",
        "closed_at": "2023-09-08T05:32:57Z",
        "merged_at": "2023-09-08T05:32:57Z",
        "body": "Currently gemmlowp is not included in the dependencies for the CMake file that is created by the install target which causes link time failures when linked against TFLite in certain contexts.\r\n\r\nThis is causing build failures when trying to build LLVM with a near tip of tree TFLite:\r\n\r\n```\r\nCMake Error at /tflite/tensorflow/lib/cmake/tensorflow-lite/tensorflow-liteTargets.cmake:89 (set_target_properties):\r\n  The link interface of target \"tensorflow-lite::tensorflow-lite\" contains:\r\n\r\n    gemmlowp::gemmlowp\r\n```\r\n\r\nRelated to https://github.com/google/ml-compiler-opt/pull/293\r\n\r\nCC: @mtrofin @petrhosek ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2023-08-31T16:22:55Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes #60089 ",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-31T14:04:30Z",
        "closed_at": "2023-09-06T05:21:00Z",
        "merged_at": "2023-09-06T05:21:00Z",
        "body": "Snapshot files may take a little time to all be written out to the filesystem on a heavily loaded system so need to allow for this before asserting that they are all there.\r\n\r\nFixes: https://github.com/tensorflow/tensorflow/issues/61116",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 224,
        "deletions": 84,
        "changed_files": 2,
        "created_at": "2023-08-30T22:46:44Z",
        "closed_at": "2023-08-31T20:00:31Z",
        "merged_at": "2023-08-31T20:00:31Z",
        "body": "Adds Select to the set of ops supported by the generic pattern matching for FP8 GEMMs.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-30T17:19:38Z",
        "closed_at": "2023-09-11T18:00:57Z",
        "merged_at": "2023-09-11T18:00:57Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-30T11:57:25Z",
        "closed_at": "2023-09-07T03:48:17Z",
        "merged_at": "2023-09-07T03:48:16Z",
        "body": "The line \r\n```\r\nsegmentation_options = processor.SegmentationOptions(\r\n    output_type=processor.SegmentationOptions.OutputType.CATEGORY_MASK) \r\n ```\r\nis changed to \r\n```\r\nsegmentation_options = processor.SegmentationOptions(\r\n    output_type=processor.SegmentationOptions.output_type.CATEGORY_MASK) \r\n```\r\nPlease check this working [gist](https://colab.research.google.com/gist/pjpratik/2e15c0e8eeb262e7ce396ac4cbddb4bd/60836.ipynb).\r\n\r\nFixes #60836 ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-08-30T08:55:55Z",
        "closed_at": "2023-08-30T13:46:28Z",
        "merged_at": "2023-08-30T13:46:28Z",
        "body": "Need to switch to release versions of pypi pacakges not their nightly ones.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-08-30T05:40:50Z",
        "closed_at": "2023-08-31T07:08:47Z",
        "merged_at": "2023-08-31T07:08:47Z",
        "body": "Updating rules_python to latest version which supports s390x platform.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-30T02:16:29Z",
        "closed_at": "2023-08-30T05:10:13Z",
        "merged_at": "2023-08-30T05:10:13Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/e3d3e94de1879db79de65df2868bb581fbc198b8",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-08-30T02:11:04Z",
        "closed_at": "2023-08-30T05:09:30Z",
        "merged_at": "2023-08-30T05:09:30Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/418478c23b0b9510340da328a780f356214a1911",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 123,
        "deletions": 9,
        "changed_files": 34,
        "created_at": "2023-08-29T21:49:39Z",
        "closed_at": "2023-09-01T23:43:55Z",
        "merged_at": "2023-09-01T23:43:55Z",
        "body": "Addresses #https://github.com/tensorflow/tensorflow/issues/60942",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-29T21:11:45Z",
        "closed_at": "2023-09-12T04:27:43Z",
        "merged_at": "2023-09-12T04:27:43Z",
        "body": "Update `experimental_convert_saved_model_v1` typo to `experimental_convert_saved_model_v1_to_mlir`.\r\nCloses: https://github.com/tensorflow/tensorflow/issues/61598",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-08-29T19:33:20Z",
        "closed_at": "2023-09-12T15:51:37Z",
        "merged_at": null,
        "body": "Updated the parameter name from 'v' to 'var'. Making it more clear for passing the parameter.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-08-29T10:41:40Z",
        "closed_at": "2023-10-13T09:53:55Z",
        "merged_at": "2023-10-13T09:53:55Z",
        "body": "In particular, this typo triggers scancode-toolkit to report this text block as [commons-clause](https://github.com/nexB/scancode-toolkit/tree/develop/src/licensedcode/data/licenses/commons-clause.LICENSE) with 93.33 accuracy.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-08-29T09:28:46Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-08-29T00:25:01Z",
        "closed_at": "2023-09-05T06:14:24Z",
        "merged_at": "2023-09-05T06:14:24Z",
        "body": "move xla `atan2()` operation to  Element-wise binary arithmetic operations section.\r\n\r\nRelated PR - https://github.com/tensorflow/tensorflow/pull/61690",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 258,
        "deletions": 1120,
        "changed_files": 6,
        "created_at": "2023-08-28T23:43:16Z",
        "closed_at": "2023-08-28T23:54:38Z",
        "merged_at": "2023-08-28T23:54:38Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 24,
        "changed_files": 3,
        "created_at": "2023-08-28T23:25:12Z",
        "closed_at": "2023-10-09T04:09:35Z",
        "merged_at": "2023-10-09T04:09:35Z",
        "body": "fix legalization of BroadcastTo by:\r\n  - for floats: add with -0.0 (instead of 0.0)\r\n  - for integer types other than I32, insert cast to I32, before adding zero, then cast back to output type \r\n    (because tosa add only supports I32 for integer types)\r\n  - fixed lit tests for above changes as well\r\n\r\n\r\nChange-Id: I93351250b18e4a318aa67c7029948bf3ab022533",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-28T22:58:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Add tf to tosa erf legalization, and a test case.\r\n\r\n\r\nChange-Id: I75e419757942bb40469a5990fc6d86dfbe65812e",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-28T22:09:26Z",
        "closed_at": "2023-08-28T22:16:24Z",
        "merged_at": "2023-08-28T22:16:24Z",
        "body": "I've copied in the `tensorflow[and-cuda]` announcement that was recently submitted to `master`, and fixed the 3.8 removal warning, which was grammatically poor and in the wrong section.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-28T20:40:58Z",
        "closed_at": "2023-08-28T21:09:18Z",
        "merged_at": "2023-08-28T21:09:18Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/6ebfa9f0b9f6bbfca209fce28d7bce56a505ce1b",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-28T20:36:19Z",
        "closed_at": "2023-08-28T21:17:34Z",
        "merged_at": "2023-08-28T21:17:34Z",
        "body": "Cherry-pick of https://github.com/tensorflow/tensorflow/pull/61663",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-08-28T20:07:55Z",
        "closed_at": null,
        "merged_at": null,
        "body": "PR clears the inputs of the original EagerOperation after the op is rewritten by EagerRewrite passes. This ensures that subsequent users of the op see consistent cleared inputs which otherwise would see stale inputs and crash. ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-08-28T19:55:41Z",
        "closed_at": "2023-08-28T21:08:37Z",
        "merged_at": "2023-08-28T21:08:37Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/75d692bb9def905f2d84970d50e9edb137fbf1a5",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-08-28T19:55:11Z",
        "closed_at": "2023-08-28T21:00:03Z",
        "merged_at": "2023-08-28T21:00:03Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/d14bacc55032ecc49054f39d60a2e8ac20175e23",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-08-28T19:54:42Z",
        "closed_at": "2023-08-28T21:00:16Z",
        "merged_at": "2023-08-28T21:00:16Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/d14bacc55032ecc49054f39d60a2e8ac20175e23",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 3,
        "created_at": "2023-08-28T18:47:49Z",
        "closed_at": "2023-08-28T19:54:05Z",
        "merged_at": "2023-08-28T19:54:05Z",
        "body": "Update TF-TPU build flags ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 256,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-28T18:37:09Z",
        "closed_at": "2023-08-28T21:08:18Z",
        "merged_at": "2023-08-28T21:08:18Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/678544dcbe499942d6b306c4227b95edb9b5db4a",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 55,
        "changed_files": 3,
        "created_at": "2023-08-28T18:33:37Z",
        "closed_at": "2023-08-28T21:07:28Z",
        "merged_at": "2023-08-28T21:07:28Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/93596226a7df33dd085712d4bed9f66ee1b55e27",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-08-28T18:27:38Z",
        "closed_at": "2023-08-28T21:06:56Z",
        "merged_at": "2023-08-28T21:06:56Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/bf28a87b26316d6a37f5f091629b9fbed6bf703f",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 22,
        "changed_files": 8,
        "created_at": "2023-08-28T18:23:01Z",
        "closed_at": "2023-08-28T21:06:37Z",
        "merged_at": "2023-08-28T21:06:37Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/cd1ba129fbb4ecbb7e23f2a6774c2cad5950e4e3",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-28T16:47:51Z",
        "closed_at": "2023-08-28T19:55:03Z",
        "merged_at": "2023-08-28T19:55:03Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/bf4a9d00b2a48f7ecb38d0092d20b9daba7ea7dd",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-28T16:42:30Z",
        "closed_at": "2023-08-28T19:55:20Z",
        "merged_at": "2023-08-28T19:55:20Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/722817e2a2860d9747b169715b645fa235edfb93",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 928,
        "deletions": 67,
        "changed_files": 17,
        "created_at": "2023-08-28T13:24:07Z",
        "closed_at": null,
        "merged_at": null,
        "body": "As the commit message mentions, when trying to build tensorflow lite with `-DTFLITE_ENABLE_GPU=ON` on windows to get the dll/lib files the `cmake --build . -j ` causes the following error: 'any_cast is not a member of std' on r2.14 branch. After making sure my c++ version is indeed above 17, I figured that `operation_selector.cc` and `conv_pointwise.cc` does not include `#include <any>` to use those functions. So I just added them next to other includes.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-27T13:15:58Z",
        "closed_at": "2023-08-27T13:27:49Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 84,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2023-08-25T22:46:59Z",
        "closed_at": "2023-08-28T07:48:20Z",
        "merged_at": "2023-08-28T07:48:20Z",
        "body": "Adds Dynamic Slice to the set of ops supported by the generic pattern matching for FP8 GEMMs.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-08-25T22:22:09Z",
        "closed_at": "2023-08-30T01:22:22Z",
        "merged_at": "2023-08-30T01:22:22Z",
        "body": "upgrade curl from 8.1.2 to 8.2.1 which has a few vulnerability fixes",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 862,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-25T20:44:36Z",
        "closed_at": "2023-08-25T21:14:26Z",
        "merged_at": "2023-08-25T21:14:25Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-08-25T20:28:37Z",
        "closed_at": "2023-08-25T20:37:08Z",
        "merged_at": "2023-08-25T20:37:08Z",
        "body": "Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 14 -> 14\nPatch: 0 -> 0\n\nNo lingering old version strings \"2.14.0-rc0\" found in source directory \n\"tensorflow/\". Good.\nWARNING: Below are potentially instances of lingering old version string \n\"2.14.0rc0\" in source directory \"tensorflow/\" that are not updated by this \nscript. Please check them manually!\ntensorflow/tools/pip_package/setup.py:125:2.14.0rc0\ntensorflow/tools/pip_package/setup.py:129:2.14.0rc0\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 243,
        "deletions": 213,
        "changed_files": 4,
        "created_at": "2023-08-25T17:41:41Z",
        "closed_at": "2023-09-08T05:14:01Z",
        "merged_at": "2023-09-08T05:14:01Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 158,
        "deletions": 58,
        "changed_files": 9,
        "created_at": "2023-08-25T16:34:05Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR fixes #60815\r\n\r\nNotes:\r\n1) the problem and the fix are similar to https://github.com/tensorflow/tensorflow/blob/master/tensorflow/security/advisory/tfsa-2022-081.md where lite/kernels/comparisons.cc is fixed.\r\n2) It's not clear what to do when a multiplier is equal to one. I think that this case should be covered by QuantizeMultiplierGreaterThanOne, because in this case it works as a multiplication by 0.5 followed by a left shift by 1. But to enable it I had to change TFLITE_CHECK_GT to TFLITE_CHECK_GE in tensorflow/lite/kernels/internal/quantization_util.cc, and now this check doesn't match the name of the function (QuantizeMultiplierGreaterThanOne). Ideally there should be no multiplication at all of course, but I don't know how to implement it correctly. Maybe it's just not worth the effort considering that the probability of a multiplier == 1 seems to be very low.\r\n3) I think that the same problem might exist in two other kernels:\r\nlite/kernels/squared_difference.cc\r\nlite/kernels/sub.cc\r\n4) I changed x * (1 << left_shift) to SaturatingRoundingMultiplyByPOTParam(x, left_shift) because I ran into overflow issues when testing real_output_multiplier > 1 with int16 numbers.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-25T07:47:11Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The TFLite `SignatureRunner` is supported in C API with commit https://github.com/tensorflow/tensorflow/commit/3a6a6465c45797bd573c118a535405da43ab03fa. ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-25T03:25:55Z",
        "closed_at": "2023-08-25T08:56:07Z",
        "merged_at": "2023-08-25T08:56:07Z",
        "body": "Add missing elem-wize functions to xla operation semantics doc:\r\n- Atan2\r\n- Clz\r\n- Log1n\r\n- Xor\r\n\r\nRelated issue: https://github.com/openxla/xla/issues/5203",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 835,
        "deletions": 6,
        "changed_files": 18,
        "created_at": "2023-08-24T13:44:33Z",
        "closed_at": "2023-08-28T13:38:19Z",
        "merged_at": null,
        "body": "This PR includes a fix to BF16 failure in the earlier PR #61237. Changes here is to disable oneDNN matmul if the CPU does not have either AVX512_BF16 or AMX_BF16 feature.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-24T06:15:27Z",
        "closed_at": "2023-08-24T06:17:12Z",
        "merged_at": null,
        "body": "changes",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-23T21:06:55Z",
        "closed_at": "2023-08-23T22:08:25Z",
        "merged_at": "2023-08-23T22:08:25Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-23T18:52:16Z",
        "closed_at": "2023-08-27T15:17:53Z",
        "merged_at": null,
        "body": "Passing `[4, 2]` as `shape` to `array_ops.reshape` always produces an error (in my case with a silent exit and no clue about what happened). Seems to happen because `[4,2]` is of type `List` and when `array_ops.reshape` calls `pywrap_tfe.TFE_Py_FastPathExecute` it expects Eager tensors.\r\n\r\nI have tested this in two different scenarios:\r\n * The first, was working without issues before, in this case because when invoking `pywrap_tfe.TFE_Py_FastPathExecute` it produced a `_core._FallbacException`.\r\n* On the second one, which had more complexity, I am not fully sure why (I guess because the context is different), `pywrap_tfe.TFE_Py_FastPathExecute` simply fails, and doesn't return or throw any error.\r\n\r\nAfter this change, both scenarios work fine.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2023-08-23T18:04:27Z",
        "closed_at": "2023-08-23T21:19:52Z",
        "merged_at": "2023-08-23T21:19:52Z",
        "body": "This reverts commit 93f02152af6a6fab0e59bce93bb234fff53d4ea7.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-08-23T16:06:09Z",
        "closed_at": "2023-09-06T14:40:46Z",
        "merged_at": "2023-09-06T14:40:45Z",
        "body": "Ensure that the vector just created has valid data as this is passed to memcpy as the destination. Passing a null pointer here will result in a segfault.\r\n\r\nFixes: https://github.com/tensorflow/tensorflow/issues/61677",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-08-22T16:48:11Z",
        "closed_at": "2023-08-23T17:18:58Z",
        "merged_at": "2023-08-23T17:18:58Z",
        "body": "Currently the documentation of the API `tf.image.crop_to_bounding_box` doesn't mentioning the acceptable dtypes of the arguments `offset_height, offset_width, target_height, target_width`. This API accepts only` tf.int32 Tensor` or a `integer`. For other dtypes its raising exception. Hence adding details of acceptable dtypes for these arguments for better clarity to the users.\r\n\r\nRefer attached gist for [crop_to_bounding_box](https://colab.sandbox.google.com/gist/SuryanarayanaY/57ceb39be4649987d0cf3c9a3eb584f4/tf-image-crop_to_bounding_box.ipynb#scrollTo=xvm-YCU4X2Z0).\r\n\r\nAlso Fixes #61644 .\r\n\r\nSimilarly `tf.image.pad_to_bounding_box` documentation also have the same arguments `offset_height, offset_width, target_height, target_width`. But these arguments accept `int32` and `int64`Tensors but not others.Hence added details of acceptable dtypes for these arguments for better clarity to the users.\r\n\r\nRefer attached gist for [pad_to_bounding_box](https://colab.sandbox.google.com/gist/SuryanarayanaY/c4bbec3161c740a73472c0361ba0959b/tf-image-pad_to_bounding_box.ipynb).\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-22T10:22:27Z",
        "closed_at": "2023-08-23T07:20:06Z",
        "merged_at": "2023-08-23T07:20:06Z",
        "body": "The new shared object pywrap_quantize_model.so needs to have its RPATH updated to find all dependent other shared objects.\r\n\r\nFixes: https://github.com/tensorflow/tensorflow/issues/61668",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-22T02:22:21Z",
        "closed_at": "2023-08-22T19:34:07Z",
        "merged_at": "2023-08-22T19:34:07Z",
        "body": "Running the 'rsync' command to transfer files to the destination failed on the Windows platform due to incompatibility with the Windows path as an input to the rsync command\r\n\r\nThe error observed:\r\nssh: Could not resolve hostname c: No such host is known.\r\nrsync: [sender] safe_read failed to read 4 bytes: Connection reset by peer (104)\r\nrsync error: error in rsync protocol data stream (code 12) at io.c(276) [sender=3.2.3]\r\n1 [sig] rsync 2009! sigpacket::process: Suppressing signal 30 to win32 process (pid 20560)\r\n\r\nResolution:\r\nChange the format of the file path which is input to the rsync, from Windows-compatible to Linux-compatible to resolve the issue",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 743,
        "deletions": 0,
        "changed_files": 10,
        "created_at": "2023-08-21T17:13:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This pull request introduces a new pass called `tensor-legalize-tfl` aimed at lowering the TFL dialect into *standard* MLIR dialects (`arith`, `builtin`, `func`, `index`, `linalg`, `math`, `memref`, or `tensor`). The pass includes a first conversion pattern aimed at lowering the `tfl.reshape` operation.\r\n\r\n\r\n## 1. Organization\r\n\r\nThe current support to convert the TFL dialect into lower-level MLIR dialects is concentrated in pass `tosa-legalize-tfl`, which uses TOSA as the target dialect. A limitation of this pass is posed by the fact that some TFL ops are representable in TOSA only for some combinations of their input operands, while other TFL ops are not representable in TOSA at all. To successfully lower such ops, one must rely on a richer variety of lower-level ops from MLIR standard dialects. After several discussions on the topic, it has been concluded that introducing a separate pass independent from TOSA is the most appropriate course of action.\r\n\r\nThis pull request introduces pass `tensor-legalize-tfl`. While the name of this pass suggests that the `tensor` dialect is the conversion target, the pass may generate operation in any MLIR standard dialect other than `tosa`. These are some reasons that justify the choice of the `tensor` prefix in the pass name:\r\n\r\n- It is likely that the emitted code for a given conversion pattern uses an operation in the `tensor` dialect as its centerpiece. This is the case of the first lowering pattern introduced in this pull request, where op `tfl.reshape` is lowered directly into `tensor.reshape` in some straightforward corner cases, although the general case involves the introduction of significantly more complex logic in other dialects.\r\n\r\n- The proposed implementation aims at a parallel structure between the existing TFL-to-TOSA and the new TFL-to-tensor pass, regarding pass names (`tosa-legalize-tfl` vs `tensor-legalize-tfl`), directory hierarchy (directories `tosa` vs `tensor` under `tensorflow/compiler/mlir`), and file structure (files `legalize_tfl.cc`, `legalize_utils.cc`, `passes.td`, `passes.h`, unit tests, etc.).\r\n\r\n\r\n## 2. Design principles\r\n\r\nThe following principles have governed implementation decisions in the present pull request, and are also intended to determine future decisions in new conversion patterns added to the new `tensor-legalize-tfl` pass:\r\n\r\n- Pass `tensor-legalize-tfl` is intended as a complete pass to fully lower the TFL dialect in such a way that the resulting IR can be picked up by the MLIR repository for further lowering.\r\n\r\n- Every new conversion pattern introduced in `tensor-legalize-tfl` is intended to support every possible combination of input arguments for a given TFL operation, as described in the corresponding section of the TFL dialect specification. In some cases, this will introduce redundant lowering routes for the same TFL op (TFL -> TOSA -> standard dialects vs. TFL -> standard dialects). However, an independent design of the TFL-to-tensor pass provides valuable flexibility that frees us from having to reason about the semantic limitations of TOSA.\r\n\r\n- In spite of the independent design of `tosa-legalize-tfl` and `tensor-legalize-tfl`, development of new conversion patterns in `tensor-legalize-tfl` should focus on operations that are currently not supported (or that are only partially supported) in `tosa-legalize-tfl`. Such roadmap will speed up the ability for a user to connect Tensorflow with standard MLIR dialects for arbitrary sets of TFL ops by running passes TFL-to-TOSA and TFL-to-tensor sequentially.\r\n\r\n\r\n## 3. Lowering `tfl.reshape`\r\n\r\nThis lowering is intended to support any combination of valid operands for `tfl.reshape`, according to its somewhat ambiguous specification available [here](https://www.tensorflow.org/mlir/tfl_ops#tflreshape_tflreshapeop) and the less ambiguous and (presumably) intended counterpart in the TF dialect (`tf.Reshape`) available [here](https://www.tensorflow.org/mlir/tf_ops#tfreshape_tfreshapeop).\r\n\r\nThe examples below illustrate the conversion strategy for various combinations of input arguments. The converted code has been formatted with descriptive SSA value names and detailed comments to break down intermediate steps.\r\n\r\n### Constant shape\r\n\r\nWhen the shape tensor is constant, operation `tfl.reshape` has a direct conversion to `tensor.reshape`.\r\n\r\nTFL code\r\n\r\n```\r\nfunc.func @test_reshape(%arg0: tensor<13x21x3xf32>) -> tensor<*xf32> {\r\n  %cst = arith.constant dense<[1, 819]> : tensor<2xi32>\r\n  %0 = \"tfl.reshape\"(%arg0, %cst) : (tensor<13x21x3xf32>, tensor<2xi32>) -> tensor<*xf32>\r\n  func.return %0 : tensor<*xf32>\r\n}\r\n```\r\n\r\nconverts to\r\n\r\n```\r\nfunc.func @test_reshape(%arg0: tensor<13x21x3xf32>) -> tensor<*xf32> {\r\n  %cst = arith.constant dense<[1, 819]> : tensor<2xi32>\r\n  %reshape = tensor.reshape %arg0(%cst) : (tensor<13x21x3xf32>, tensor<2xi32>) -> tensor<*xf32>\r\n  return %reshape : tensor<*xf32>\r\n}\r\n```\r\n\r\n### Constant shape with wildcard\r\n\r\nThe `tfl.reshape` operation allows for the shape tensor to include at most one wildcard value set to -1. If such value is present, it must be substituted with the intended dimension size of the shape tensor. If the input tensor has a static shape and the shape tensor is a constant, the wildcard substitution may happen at compile time. In the example below, size 819 is deduced for the second dimension of the shape tensor after conversion.\r\n\r\nTFL code\r\n\r\n```\r\nfunc.func @test_reshape(%arg0: tensor<13x21x3xf32>) -> tensor<*xf32> {\r\n  %cst = arith.constant dense<[1, -1]> : tensor<2xi32>\r\n  %0 = \"tfl.reshape\"(%arg0, %cst) : (tensor<13x21x3xf32>, tensor<2xi32>) -> tensor<*xf32>\r\n  func.return %0 : tensor<*xf32>\r\n}\r\n```\r\n\r\nconverts to\r\n\r\n```\r\nfunc.func @test_reshape(%arg0: tensor<13x21x3xf32>) -> tensor<*xf32> {\r\n  %cst = arith.constant dense<[1, 819]> : tensor<2xi32>\r\n  %reshape = tensor.reshape %arg0(%cst) : (tensor<13x21x3xf32>, tensor<2xi32>) -> tensor<*xf32>\r\n  return %reshape : tensor<*xf32>\r\n}\r\n```\r\n\r\n### Variable shape\r\n\r\nWhen the target shape is not a constant, new logic must be generated to determine whether the shape tensor has a wildcard value of -1 present in one of its components. When present, this wildcard must be substituted with the appropriate value at runtime. The substituting value is computed as the total size of the input tensor divided by each value\r\n\r\nTFL code\r\n\r\n```\r\nfunc.func @test_reshape_variable(%arg0: tensor<?xf32>, %arg1: tensor<2xi32>) -> tensor<?x?xf32> {\r\n  %0 = \"tfl.reshape\"(%arg0, %arg1) : (tensor<?xf32>, tensor<2xi32>) -> tensor<?x?xf32>\r\n  return %0 : tensor<?x?xf32>\r\n}\r\n```\r\n\r\nconverts to\r\n\r\n```\r\nfunc.func @test_reshape_variable(%arg0: tensor<?xf32>, %arg1: tensor<2xi32>) -> tensor<?x?xf32> {\r\n\r\n  // Constants\r\n  %const_0 = arith.constant 0 : index\r\n  %const_0_i32 = arith.constant 0 : i32\r\n  %const_1 = arith.constant 1 : index\r\n  %const_1_tensor = arith.constant dense<1> : tensor<i32>}\r\n  %const_minus_1_splat = arith.constant dense<-1> tensor<2xi32>\r\n\r\n  // Calculate product of all element in the shape\r\n  %shape_product_tensor = linalg.reduce\r\n    ins(%arg1 : tensor<2xi32>)\r\n    outs(%const_1_tensor : tensor<i32>)\r\n    dimensions = [0]\r\n    (%in: i32, %init: i32) {\r\n      %temp_product = arith.muli %in, %init : i32\r\n      linalg.yield %temp_product : i32\r\n    }\r\n  %shape_product = tensor.extract %shape_product_tensor[] : tensor<i32>\r\n\r\n  // Check if the shape product is negative. Since there can be at most one\r\n  // shape component set to -1, a negative product indicates that such shape\r\n  // wildcard was present.\r\n  shape_is_negative = arith.cmpi slt, %shape_product, %const_0_i32 : i32\r\n  shape_no_wildcard = scf.if shape_is_negative -> (tensor<2xi32>) {\r\n\r\n    // Calculate size of input tensor\r\n    input_size = scf.for %i = %const_0 to %const_1 step %const_1 iter_args(%acc_size = %const_1) -> (index) {\r\n      %dim = tensor.dim %arg0, %i : tensor<?xf32>\r\n      %temp_size = arith.muli %acc_size, %dim : index\r\n      scf.yield %temp_size : index\r\n    }\r\n    input_size_i32 = arith.index_cast input_size : index to i32\r\n\r\n    // Calculate the missing shape item by diving input tensor size by all other\r\n    // shape components. Then broadcast it into a tensor with as many elements as\r\n    // the shape tensor.\r\n    shape_product_abs = math.absi %shape_product : i32\r\n    shape_wildcard_value = arith.divsi input_size_i32, shape_product_abs : i32\r\n    shape_wildcard_splat = tensor.splat shape_wildcard_value : tensor<2xi32>\r\n\r\n    // Create a mask for the shape tensor. This mask contains a 1 only at that\r\n    // position where wildcard -1 is located in the shape tensor.\r\n    shape_wildcard_mask = arith.cmpi eq, %arg1, %const_minus_1_splat : tensor<2xi32>\r\n\r\n    // Use the mask to replace the wildcard with the computed size in the shape\r\n    // tensor.\r\n    %resolved_shape = arith.select shape_wildcard_mask, shape_wildcard_splat, %arg1 : tensor<2xi1>, tensor<2xi32>\r\n    scf.yield %resolved_shape : tensor<2xi32>\r\n\r\n  } else {\r\n\r\n    // Shape has no wildcard and need not be modified.\r\n    scf.yield %arg1 : tensor<2xi32>\r\n  }\r\n\r\n  // Now that we have a shape with no wildcard, it is safe to use\r\n  // 'tensor.reshape'.\r\n  %result = tensor.reshape %arg0(shape_no_wildcard) : (tensor<?xf32>, tensor<2xi32>) -> tensor<?x?xf32>\r\n  return %result : tensor<?x?xf32>\r\n}\r\n```\r\n\r\n### Unranked tensors\r\n\r\nAdditional considerations are involved in lowering `tfl.reshape` when either the input or the shape tensor is unranked, as illustrated in the following example. The converted code includes comments prefixed with `NEW` to highlight the differences over the ranked case.\r\n\r\nTFL code\r\n\r\n```\r\nfunc.func @test_reshape_unranked(%arg0: tensor<*xf32>, %arg1: tensor<*xi32>) -> tensor<*xf32> {\r\n  %0 = \"tfl.reshape\"(%arg0, %arg1) : (tensor<*xf32>, tensor<*xi32>) -> tensor<*xf32>\r\n  return %0 : tensor<*xf32>\r\n}\r\n```\r\n\r\nconverts to\r\n\r\n```\r\nfunc.func @test_reshape_unranked(%arg0: tensor<*xf32>, %arg1: tensor<*xi32>) -> tensor<*xf32> {\r\n  %0 = arith.constant dense<-1> : tensor<i32>\r\n  %c1 = arith.constant 1 : index\r\n  %c0 = arith.constant 0 : index\r\n  %1 = arith.constant dense<1> : tensor<i32>}>\r\n  %c0_i32 = arith.constant 0 : i32\r\n\r\n  // NEW: Cast shape tensor into a 1D ranked tensor.\r\n  %cast = tensor.cast %arg1 : tensor<*xi32> to tensor<?xi32>\r\n\r\n  %reduced = linalg.reduce ins(%cast : tensor<?xi32>) outs(%1 : tensor<i32>) dimensions = [0]\r\n    (%in: i32, %init: i32) {\r\n      %4 = arith.muli %in, %init : i32\r\n      linalg.yield %4 : i32\r\n    }\r\n  %extracted = tensor.extract %reduced[] : tensor<i32>\r\n  %2 = arith.cmpi slt, %extracted, %c0_i32 : i32\r\n  %3 = scf.if %2 -> (tensor<?xi32>) {\r\n\r\n    // NEW: Query the input tensor rank in order to calculate its total size.\r\n    %rank = tensor.rank %arg0 : tensor<*xf32>\r\n    %4 = scf.for %arg2 = %c0 to %rank step %c1 iter_args(%arg3 = %c1) -> (index) {\r\n      %dim_1 = tensor.dim %arg0, %arg2 : tensor<*xf32>\r\n      %12 = arith.muli %arg3, %dim_1 : index\r\n      scf.yield %12 : index\r\n    }\r\n    %5 = arith.index_cast %4 : index to i32\r\n    %6 = math.absi %extracted : i32\r\n    %dim = tensor.dim %cast, %c0 : tensor<?xi32>\r\n    %7 = arith.divsi %5, %6 : i32\r\n    %from_elements = tensor.from_elements %7 : tensor<i32>\r\n\r\n    // NEW: When the size of the shape tensor is not known at compile time,\r\n    // tensor splats are computed dynamically with a 'linalg.broadcast' op,\r\n    // instead of 'tensor.splat'.\r\n    %8 = tensor.empty(%dim) : tensor<?xi32>\r\n    %broadcasted = linalg.broadcast ins(%from_elements : tensor<i32>) outs(%8 : tensor<?xi32>) dimensions = [0]\r\n    %9 = tensor.empty(%dim) : tensor<?xi32>\r\n    %broadcasted_0 = linalg.broadcast ins(%0 : tensor<i32>) outs(%9 : tensor<?xi32>) dimensions = [0]\r\n\r\n    %10 = arith.cmpi eq, %cast, %broadcasted_0 : tensor<?xi32>\r\n    %11 = arith.select %10, %broadcasted, %cast : tensor<?xi1>, tensor<?xi32>\r\n    scf.yield %11 : tensor<?xi32>\r\n  } else {\r\n    scf.yield %cast : tensor<?xi32>\r\n  }\r\n  %reshape = tensor.reshape %arg0(%3) : (tensor<*xf32>, tensor<?xi32>) -> tensor<*xf32>\r\n  return %reshape : tensor<*xf32>\r\n}\r\n```\r\n\r\n\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-21T13:41:31Z",
        "closed_at": "2023-08-21T14:14:10Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-19T01:01:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "I found the existing wording somewhat confusing (\"XXX will prefetch two elements, while XXX will prefetch two elements\"). The new wording makes the difference clearer.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 34,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-18T15:10:16Z",
        "closed_at": "2023-10-04T07:23:16Z",
        "merged_at": "2023-10-04T07:23:16Z",
        "body": "\r\n\r\nTitle:\r\nAdd CPU and GPU Behavior Notice and Example to tf.nn.embedding_lookup Function\r\n\r\nDescription:\r\nThis pull request addresses issue #17417.\r\n\r\nChanges Made:\r\n\r\nAdded a notice and example directly to the source code of the tf.nn.embedding_lookup function to highlight the behavior difference between CPU and GPU usage.\r\nThe added notice explains that on a GPU, out-of-bound indices result in storing a value of 0, while on a CPU, it raises an error.\r\nIncluded example code that demonstrates how to use the tf.nn.embedding_lookup function for both CPU and GPU contexts.\r\n\r\nContext:\r\nThe purpose of this contribution is to improve the documentation and provide clear guidance for users of the tf.nn.embedding_lookup function when working with CPU and GPU.\r\n\r\nAdditional Notes:\r\nI've followed the guidelines for contributing to TensorFlow and made sure that the changes align with the project's standards.\r\n\r\nPlease review and consider merging these changes. Thank you!",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-18T12:39:36Z",
        "closed_at": "2023-08-21T07:24:33Z",
        "merged_at": "2023-08-21T07:24:33Z",
        "body": "many build errors due to this ambiguous min() call.\r\n\r\n@akuegel \r\n\r\nThanks in advance",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-18T11:58:21Z",
        "closed_at": "2023-08-28T16:27:27Z",
        "merged_at": "2023-08-28T16:27:26Z",
        "body": "Ran into this when trying to run this example (https://www.tensorflow.org/agents/tutorials/6_reinforce_tutorial) with the example Pluggable Device.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-08-18T11:56:29Z",
        "closed_at": "2023-08-31T07:01:53Z",
        "merged_at": "2023-08-31T07:01:53Z",
        "body": "The [documentation](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/delegates/xnnpack/README.md#sparse-inference) explicitly states that 5x5 kernels are supported and the test heads suggest, that kernel sizes of 5 should be tested, but actually, kernel sizes of 3 are tested. This PR changes the kernel sizes tested to match the test heads. \r\n\r\nDisclaimer: I haven't run the tests yet, I only saw this on github and created this PR.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2023-08-18T08:30:32Z",
        "closed_at": "2023-09-13T17:47:41Z",
        "merged_at": "2023-09-13T17:47:41Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 119,
        "deletions": 33,
        "changed_files": 5,
        "created_at": "2023-08-18T05:47:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR works as a part of the whole Multi-Stream feature in TF, which is proposed in #61185.\r\n\r\nAllow merging the DtoH/HtoD/DtoD copy streams into the compute stream in one stream group. This is useful to reduce the overhead caused by stream synchronization, especially when data transfers are frequent.\r\n\r\n@changhuilin ",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 277,
        "deletions": 55,
        "changed_files": 4,
        "created_at": "2023-08-17T23:40:23Z",
        "closed_at": "2023-08-21T06:49:50Z",
        "merged_at": "2023-08-21T06:49:50Z",
        "body": "This is one way of getting around the problem where TF is too big to build on Windows. If bazel is told to create the runfiles symlink tree explicitly, Windows can use the same method as Linux to build the pip package without needing to zip everything up, and simple_console_for_windows is no longer needed.\r\n\r\nThe caveats are:\r\n\r\n- The MSYS2 environment may need to be configured specifically to support symlinks; I am not sure. I set my test environment to use `MSYS=winsymlinks:nativestrict` but didn't test this solution without that. \r\n- The build environment needs `rsync`, which replaces `cp` in one case where `cp` was giving me symlink-related errors.\r\n\r\nI extracted this out of a work-in-progress environment I've been exploring, so I'm not 100% sure it will work right... but it seems very promising.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 22,
        "changed_files": 1,
        "created_at": "2023-08-17T04:04:08Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-08-16T21:27:04Z",
        "closed_at": "2023-08-17T20:49:27Z",
        "merged_at": "2023-08-17T20:49:27Z",
        "body": "This PR upgrades oneDNN version to 3.2.1",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 591,
        "deletions": 193,
        "changed_files": 10,
        "created_at": "2023-08-16T13:30:12Z",
        "closed_at": "2023-08-21T17:15:46Z",
        "merged_at": null,
        "body": "This pull request includes the following features:\r\n\r\n1. Introduction of alternative TFL-to-TOSA and TFL-to-standard conversion patterns, each activated based on the ability of a given TFL op to be represented in the TOSA dialect.\r\n2. TFL-to-TOSA lowering for operation `tfl.reshape`.\r\n3. TFL-to-standard lowering for operation `tfl.reshape`.\r\n4. Handling `complex` data type in `tfl.reshape`.\r\n\r\nHere, the term *standard dialect* is used to refer to MLIR dialect `arith`, `builtin`, `func`, `index`, `linalg`, `math`, `memref`, or `tensor`.\r\n\r\n## 1. Extending the current lowering scheme\r\n\r\nThe conversion patterns lowering TFL ops are implemented in file `tensorflow/compiler/mlir/tosa/transforms/legalize_tfl.cc`. In their current state, these patterns convert TFL ops into groups of TOSA ops on a best-effort basis. However, some TFL ops are representable in TOSA only for some combinations of their input operands. And some TFL ops are not representable in TOSA at all. To successfully lower such ops, one must rely on a richer variety of lower-level ops from MLIR standard dialects.\r\n\r\nThis merge request intends to set a precedent in the way such TFL ops will be handled, based on the following mechanism:\r\n\r\n- Two independent conversion patterns are in charge of the TFL-to-TOSA and TFL-to-standard conversions (e.g., `ConvertTFLReshapeOpToTosa` and `ConvertTFLReshapeOpToStandard`). Both are implemented in `legalize_tfl.cc`, though given the current size of this file, it might be wise to split these in the near future.\r\n\r\n- The TFL-to-TOSA pattern is assigned high priority with a *pattern benefit* value of 2. This pattern attempts to convert the TFL op by targeting the TOSA dialect exclusively. If the current combination of arguments makes the TFL op not representable in TOSA, conversion fails, and the transform driver follows its course by attempting to apply other compatible patterns.\r\n\r\n- The TFL-to-standard pattern is assigned a low priority with a *pattern benefit* value of 1. It is activated when the TFL-to-TOSA counterpart fails. This pattern is primarily intended to cover TFL ops or argument combinations that are not representable in TOSA. However, an implementation may choose to disregard whatever TOSA can or cannot do, and simply focus on translating any possible TFL op configuration into standard dialects. This has the benefit of not duplicating the control logic used in the TFL-to-TOSA pattern, at the expense of possibly covering cases already handled by it. Additionally, new features incorporated into the TOSA dialect over time only affect the TFL-to-TOSA pattern, which will capture new TFL corner cases. When the TFL-to-standard pattern is designed with this principle in mind, its implementation will conveniently remain unaffected by TFL dialect extensions.\r\n\r\n- Two different macros may now be used to declare TFL lowering patterns: `DECL_CONVERT_OP` and `DECL_CONVERT_OP_TOSA_STANDARD`. The former declares a stand-alone conversion pattern for those TFL ops that are fully representable in TOSA, named `ConvertTFL<OPNAME>Op`. The latter declares a pair of conversion patterns targeting TOSA and standard dialects, named `ConvertTFL<OPNAME>OpToTosa` and `ConvertTFL<OPNAME>OpToStandard`, respectively.\r\n\r\n\r\n\r\n## 2. TFL-to-TOSA lowering of `tfl.reshape`\r\n\r\nThe `tfl.reshape` op takes a shape argument in the form of an SSA value. The closest match in the TOSA dialect is the `tosa.reshape` op. However, this op takes the target tensor shape as an attribute, and therefore, a direct conversion is only possible when the shape is constant.\r\n\r\nTFL code\r\n\r\n```\r\nfunc.func @test_reshape(%arg0: tensor<13x21x3xf32>) -> tensor<*xf32> {\r\n  %cst = arith.constant dense<[1, 819]> : tensor<2xi32>\r\n  %0 = \"tfl.reshape\"(%arg0, %cst) : (tensor<13x21x3xf32>, tensor<2xi32>) -> tensor<*xf32>\r\n  func.return %0 : tensor<*xf32>\r\n}\r\n```\r\n\r\nconverts to\r\n\r\n```\r\nfunc.func @test_reshape(%arg0: tensor<13x21x3xf32>) -> tensor<1x819xf32> {\r\n  %0 = \"tosa.reshape\"(%arg0) <{new_shape = array<i64: 1, 819>}> : (tensor<13x21x3xf32>) -> tensor<1x819xf32>\r\n  return %0 : tensor<1x819xf32>\r\n}\r\n```\r\n\r\n## 3. TFL-to-standard lowering of `tfl.reshape`\r\n\r\nThis lowering is intended to support any combination of valid operands for `tfl.reshape`, according to its somewhat ambiguous specification available [here](https://www.tensorflow.org/mlir/tfl_ops#tflreshape_tflreshapeop) and the less ambiguous and (presumably) intended counterpart in the TF dialect (`tf.Reshape`) available [here](https://www.tensorflow.org/mlir/tf_ops#tfreshape_tfreshapeop).\r\n\r\n\r\n### Ranked tensors\r\n\r\nThe example below illustrates the conversion strategy for the case in which both input and shape tensors are ranked. The converted code has been formatted with descriptive SSA value names and detailed comments to lay out the intermediate steps in the generated algorithm based on MLIR standard dialects.\r\n\r\nTFL code\r\n\r\n```\r\nfunc.func @test_reshape_variable(%arg0: tensor<?xf32>, %arg1: tensor<2xi32>) -> tensor<?x?xf32> {\r\n  %0 = \"tfl.reshape\"(%arg0, %arg1) : (tensor<?xf32>, tensor<2xi32>) -> tensor<?x?xf32>\r\n  return %0 : tensor<?x?xf32>\r\n}\r\n```\r\n\r\nconverts to\r\n\r\n```\r\nfunc.func @test_reshape_variable(%arg0: tensor<?xf32>, %arg1: tensor<2xi32>) -> tensor<?x?xf32> {\r\nfunc.func @test_reshape_variable(%arg0: tensor<?xf32>, %arg1: tensor<2xi32>) -> tensor<?x?xf32> {\r\n\r\n  // Constants\r\n  %const_0 = arith.constant 0 : index\r\n  %const_0_i32 = arith.constant 0 : i32\r\n  %const_1 = arith.constant 1 : index\r\n  %const_1_tensor = arith.constant dense<1> : tensor<i32>}\r\n  %const_minus_1_splat = arith.constant dense<-1> tensor<2xi32>\r\n\r\n  // Calculate product of all element in the shape\r\n  %shape_product_tensor = linalg.reduce\r\n    ins(%arg1 : tensor<2xi32>)\r\n    outs(%const_1_tensor : tensor<i32>)\r\n    dimensions = [0]\r\n    (%in: i32, %init: i32) {\r\n      %temp_product = arith.muli %in, %init : i32\r\n      linalg.yield %temp_product : i32\r\n    }\r\n  %shape_product = tensor.extract %shape_product_tensor[] : tensor<i32>\r\n\r\n  // Check if the shape product is negative. Since there can be at most one\r\n  // shape component set to -1, a negative product indicates that such shape\r\n  // wildcard was present.\r\n  shape_is_negative = arith.cmpi slt, %shape_product, %const_0_i32 : i32\r\n  shape_no_wildcard = scf.if shape_is_negative -> (tensor<2xi32>) {\r\n\r\n    // Calculate size of input tensor\r\n    input_size = scf.for %i = %const_0 to %const_1 step %const_1 iter_args(%acc_size = %const_1) -> (index) {\r\n      %dim = tensor.dim %arg0, %i : tensor<?xf32>\r\n      %temp_size = arith.muli %acc_size, %dim : index\r\n      scf.yield %temp_size : index\r\n    }\r\n    input_size_i32 = arith.index_cast input_size : index to i32\r\n\r\n    // Calculate the missing shape item by diving input tensor size by all other\r\n    // shape components. Then broadcast it into a tensor with as many elements as\r\n    // the shape tensor.\r\n    shape_product_abs = math.absi %shape_product : i32\r\n    shape_wildcard_value = arith.divsi input_size_i32, shape_product_abs : i32\r\n    shape_wildcard_splat = tensor.splat shape_wildcard_value : tensor<2xi32>\r\n\r\n    // Create a mask for the shape tensor. This mask contains a 1 only at that\r\n    // position where wildcard -1 is located in the shape tensor.\r\n    shape_wildcard_mask = arith.cmpi eq, %arg1, %const_minus_1_splat : tensor<2xi32>\r\n\r\n    // Use the mask to replace the wildcard with the computed size in the shape\r\n    // tensor.\r\n    %resolved_shape = arith.select shape_wildcard_mask, shape_wildcard_splat, %arg1 : tensor<2xi1>, tensor<2xi32>\r\n    scf.yield %resolved_shape : tensor<2xi32>\r\n\r\n  } else {\r\n\r\n    // Shape has no wildcard and need not be modified.\r\n    scf.yield %arg1 : tensor<2xi32>\r\n  }\r\n\r\n  // Now that we have a shape with no wildcard, it is safe to use\r\n  // 'tensor.reshape'.\r\n  %result = tensor.reshape %arg0(shape_no_wildcard) : (tensor<?xf32>, tensor<2xi32>) -> tensor<?x?xf32>\r\n  return %result : tensor<?x?xf32>\r\n}\r\n```\r\n\r\n### Unranked tensors\r\n\r\nAdditional considerations are involved in lowering `tfl.reshape` when either the input or the shape tensor is unranked, as illustrated in the following example. The converted code includes comments prefixed with `NEW` to highlight the differences over the ranked case.\r\n\r\nTFL code\r\n\r\n```\r\nfunc.func @test_reshape_unranked(%arg0: tensor<*xf32>, %arg1: tensor<*xi32>) -> tensor<*xf32> {\r\n  %0 = \"tfl.reshape\"(%arg0, %arg1) : (tensor<*xf32>, tensor<*xi32>) -> tensor<*xf32>\r\n  return %0 : tensor<*xf32>\r\n}\r\n```\r\n\r\nconverts to\r\n\r\n```\r\nfunc.func @test_reshape_unranked(%arg0: tensor<*xf32>, %arg1: tensor<*xi32>) -> tensor<*xf32> {\r\n  %0 = \"tosa.const\"() <{value = dense<-1> : tensor<i32>}> : () -> tensor<i32>\r\n  %c1 = arith.constant 1 : index\r\n  %c0 = arith.constant 0 : index\r\n  %1 = \"tosa.const\"() <{value = dense<1> : tensor<i32>}> : () -> tensor<i32>\r\n  %c0_i32 = arith.constant 0 : i32\r\n\r\n  // NEW: Cast shape tensor into a 1D ranked tensor.\r\n  %cast = tensor.cast %arg1 : tensor<*xi32> to tensor<?xi32>\r\n\r\n  %reduced = linalg.reduce ins(%cast : tensor<?xi32>) outs(%1 : tensor<i32>) dimensions = [0]\r\n    (%in: i32, %init: i32) {\r\n      %4 = arith.muli %in, %init : i32\r\n      linalg.yield %4 : i32\r\n    }\r\n  %extracted = tensor.extract %reduced[] : tensor<i32>\r\n  %2 = arith.cmpi slt, %extracted, %c0_i32 : i32\r\n  %3 = scf.if %2 -> (tensor<?xi32>) {\r\n\r\n    // NEW: Query the input tensor rank in order to calculate its total size.\r\n    %rank = tensor.rank %arg0 : tensor<*xf32>\r\n    %4 = scf.for %arg2 = %c0 to %rank step %c1 iter_args(%arg3 = %c1) -> (index) {\r\n      %dim_1 = tensor.dim %arg0, %arg2 : tensor<*xf32>\r\n      %12 = arith.muli %arg3, %dim_1 : index\r\n      scf.yield %12 : index\r\n    }\r\n    %5 = arith.index_cast %4 : index to i32\r\n    %6 = math.absi %extracted : i32\r\n    %dim = tensor.dim %cast, %c0 : tensor<?xi32>\r\n    %7 = arith.divsi %5, %6 : i32\r\n    %from_elements = tensor.from_elements %7 : tensor<i32>\r\n\r\n    // NEW: When the size of the shape tensor is not known at compile time,\r\n    // tensor splats are computed dynamically with a 'linalg.broadcast' op,\r\n    // instead of 'tensor.splat'.\r\n    %8 = tensor.empty(%dim) : tensor<?xi32>\r\n    %broadcasted = linalg.broadcast ins(%from_elements : tensor<i32>) outs(%8 : tensor<?xi32>) dimensions = [0]\r\n    %9 = tensor.empty(%dim) : tensor<?xi32>\r\n    %broadcasted_0 = linalg.broadcast ins(%0 : tensor<i32>) outs(%9 : tensor<?xi32>) dimensions = [0]\r\n\r\n    %10 = arith.cmpi eq, %cast, %broadcasted_0 : tensor<?xi32>\r\n    %11 = arith.select %10, %broadcasted, %cast : tensor<?xi1>, tensor<?xi32>\r\n    scf.yield %11 : tensor<?xi32>\r\n  } else {\r\n    scf.yield %cast : tensor<?xi32>\r\n  }\r\n  %reshape = tensor.reshape %arg0(%3) : (tensor<*xf32>, tensor<?xi32>) -> tensor<*xf32>\r\n  return %reshape : tensor<*xf32>\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n## 4. Handling `complex` type in `tfl.reshape`\r\n\r\n### Problem\r\n\r\nA pass named `tosa-lower-complex-types` is currently in charge of lowering any occurrence of the `complex<float>` data type into a pair of `float` values (e.g., `tensor<3xcomplex<float>>` becomes `tensor<3x2xfloat>`). This pass runs after the TFL-to-TOSA dialect conversion within a pass pipeline named `tfl-to-tosa-pipeline`.\r\n\r\nThe `tosa-lower-complex-types` processes occurrences of type `complex` indiscriminately, with no regard to the operation in which such type occurs. This is fine in most cases, but poses a problem specifically for the `tfl.reshape` op. If its input and output tensors are of type `complex`, flattening them into tensors of `float` affects their rank, but should also affect the target shape for the operation to remain consistent. For example, operation\r\n\r\n```\r\n%shape = arith.constant dense<2, 3> : tensor<2xi32>\r\n%result = \"tfl.reshape\"(%input, %shape) : (tensor<6xcomplex<f32>>, tensor<2xi32>) -> tensor<2x3xcomplex<f32>>\r\n```\r\n\r\ncannot simply be translated to\r\n\r\n\r\n```\r\n%shape = arith.constant dense<2, 3> : tensor<2xi32>\r\n%result = \"tfl.reshape\"(%input, %shape) : (tensor<6x2xf32>, tensor<2xi32>) -> tensor<2x3x2xf32>\r\n```\r\n\r\nIn the resulting code above, the size of the target shape (2) does not match the rank of the output tensor (3). The target shape must be extended with an additional component set to 2 in order to reflect the additional dimension added by the `complex`-to-`float` flattening process. The resulting code should then be\r\n\r\n```\r\n%shape = arith.constant dense<2, 3, 2> : tensor<3xi32>\r\n%result = \"tfl.reshape\"(%input, %shape) : (tensor<6x2xf32>, tensor<3xi32>) -> tensor<2x3x2xf32>\r\n```\r\n\r\n### Solution\r\n\r\nWhen an input tensor of type `complex` is detected, the generated code is extended as follows:\r\n\r\n- The input tensor of type `complex<float>` is converted into a tensor of type `float` with an additional dimension of size 2 by means of a `builtin.unrealized_conversion_cast` op. The remaining lowering process deals with the modified input tensor.\r\n\r\n- The shape tensor is extended with an additional element set to 2. The remaining lowering process deals with the new extended shape tensor.\r\n\r\n- The final tensor resulting from the emitted `tensor.reshape` op is converted back to type `complex<float>` through another `builtin.unrealized_conversion_cast` op. Both occurrences of `builtin.unrealized_conversion_cast` will be automatically folded away further down in the conversion pipeline once the `tosa-lower-complex-types` pass runs.\r\n\r\nThe converted code in the example below has been annotated with `NEW` to highlight the key locations affected by the presence of complex tensors.\r\n\r\nTFL code\r\n\r\n```\r\nfunc.func @test_reshape_complex(%arg0: tensor<?x1x257xcomplex<f32>>) -> tensor<?x257xcomplex<f32>> {\r\n  %cst = \"tfl.pseudo_const\"() {value = dense<[-1, 257]> : tensor<2xi32>} : () -> tensor<2xi32>\r\n  %1 = \"tfl.reshape\"(%arg0, %cst) : (tensor<?x1x257xcomplex<f32>>, tensor<2xi32>) -> tensor<?x257xcomplex<f32>>\r\n  func.return %1 : tensor<?x257xcomplex<f32>>\r\n}\r\n```\r\n\r\nconverts to\r\n\r\n```\r\nfunc.func @test_reshape_complex(%arg0: tensor<?x1x257xcomplex<f32>>) -> tensor<?x257xcomplex<f32>> {\r\n  %0 = \"tosa.const\"() <{value = dense<-1> : tensor<3xi32>}> : () -> tensor<3xi32>\r\n  %c4 = arith.constant 4 : index\r\n  %c1 = arith.constant 1 : index\r\n  %c0 = arith.constant 0 : index\r\n  %2 = \"tosa.const\"() <{value = dense<1> : tensor<i32>}> : () -> tensor<i32>\r\n  %c0_i32 = arith.constant 0 : i32\r\n  %3 = \"tosa.const\"() <{value = dense<[-1, 257]> : tensor<2xi32>}> : () -> tensor<2xi32>\r\n\r\n  // NEW: Flatten complex input tensor\r\n  %4 = builtin.unrealized_conversion_cast %arg0 : tensor<?x1x257xcomplex<f32>> to tensor<?x1x257x2xf32>\r\n\r\n  // NEW: Extend shape tensor with additional component set to 2\r\n  %const_2 = \"tosa.const\"() <{value = dense<2> : tensor<1xi32>}> : () -> tensor<1xi32>\r\n  %5 = \"tosa.concat\"(%3, %const_2) <{axis = 0 : i64}> : (tensor<2xi32>, tensor<1xi32>) -> tensor<3xi32>\r\n\r\n  %reduced = linalg.reduce ins(%5 : tensor<3xi32>) outs(%2 : tensor<i32>) dimensions = [0]\r\n    (%in: i32, %init: i32) {\r\n      %9 = arith.muli %in, %init : i32\r\n      linalg.yield %9 : i32\r\n    }\r\n  %extracted = tensor.extract %reduced[] : tensor<i32>\r\n  %6 = arith.cmpi slt, %extracted, %c0_i32 : i32\r\n  %7 = scf.if %6 -> (tensor<3xi32>) {\r\n    %9 = scf.for %arg1 = %c0 to %c4 step %c1 iter_args(%arg2 = %c1) -> (index) {\r\n      %dim = tensor.dim %4, %arg1 : tensor<?x1x257x2xf32>\r\n      %15 = arith.muli %arg2, %dim : index\r\n      scf.yield %15 : index\r\n    }\r\n    %10 = arith.index_cast %9 : index to i32\r\n    %11 = math.absi %extracted : i32\r\n    %12 = arith.divsi %10, %11 : i32\r\n    %splat = tensor.splat %12 : tensor<3xi32>\r\n    %13 = arith.cmpi eq, %5, %0 : tensor<3xi32>\r\n    %14 = arith.select %13, %splat, %5 : tensor<3xi1>, tensor<3xi32>\r\n    scf.yield %14 : tensor<3xi32>\r\n  } else {\r\n    scf.yield %5 : tensor<3xi32>\r\n  }\r\n  %reshape = tensor.reshape %4(%7) : (tensor<?x1x257x2xf32>, tensor<3xi32>) -> tensor<?x257x2xf32>\r\n\r\n  // NEW: Convert resulting tensor back to complex type\r\n  %8 = builtin.unrealized_conversion_cast %reshape : tensor<?x257x2xf32> to tensor<?x257xcomplex<f32>>\r\n\r\n  return %8 : tensor<?x257xcomplex<f32>>\r\n}\r\n```\r\n\r\n\r\n### Limitation\r\n\r\nThe presented strategy relies on compile-time knowledge of the input tensor rank for the introduction of an additional dimension in its data type. This restriction limits its application to ranked input tensors. The current TFL-to-core conversion pattern does not support unranked input tensors of type `complex`.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-08-16T10:35:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This is required e.g. for `_generate_op_reg_offsets_impl` which otherwise will ommit e.g. `LD_LIBRARY_PATH` which then fails to find a (system-)libprotobuf.so when generating\r\n`//tensorflow/python:math_ops_reg_offsets`\r\n\r\nThis is in line with other usages of this function to generate files using external tools and previous PRs like https://github.com/tensorflow/tensorflow/pull/44549",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 609,
        "deletions": 17,
        "changed_files": 15,
        "created_at": "2023-08-15T22:15:33Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR rewrites the below mentioned HLO pattern, into softmax pattern and executes it through custom call to oneDNN softmax library function.\r\nThis pattern is mainly seen in flax/jax [softmax ](https://github.com/google/jax/blob/a259df0d76e50e0e54fa5a69a7c6b78975cde10a/jax/_src/random.py#L1025)operation, with Float32 datatype. The rewrite uses 'divide' operation as root node to match the pattern and is currently called before any layout assignment / float normalization passes to avoid more convert ops or layout normalization ops during pattern matching.\r\n\r\n**HLO Pattern :**\r\n![image](https://github.com/tensorflow/tensorflow/assets/43043975/7875cf46-49c1-45d6-9055-8fa32ec0cae7)\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 9,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-08-15T21:58:47Z",
        "closed_at": "2023-08-15T22:03:02Z",
        "merged_at": "2023-08-15T22:03:02Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2023-08-15T18:15:02Z",
        "closed_at": "2023-08-21T11:40:14Z",
        "merged_at": null,
        "body": "The TensorFlow CPU release build was failing on the Windows platform. The reason for the failure was the creation of a large zip file named simple_console_for_windows.zip, whose size was 4GB exceeding the limit zipper.exe could handle.\r\n\r\nSolution:\r\nOverriding the EIGEN_STRONG_INLINE macro resolved the issue by keeping the size of simple_console_for_windows.zip under the limit of zipper.exe.\r\nChanged the flag \"TF_OVERRIDE_EIGEN_STRONG_INLINE\" to 1 in\r\n/tensorflow/tools/ci_build/windows/cpu/pip/build_tf_windows.sh file while running the release build",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-15T12:00:21Z",
        "closed_at": "2023-08-16T07:16:21Z",
        "merged_at": null,
        "body": "Add include of cstring to resolve symbol\r\n\r\nFixes: https://github.com/tensorflow/tensorflow/issues/61584",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 668,
        "deletions": 820,
        "changed_files": 65,
        "created_at": "2023-08-15T06:15:51Z",
        "closed_at": "2023-09-22T01:47:28Z",
        "merged_at": null,
        "body": "Migrate TF Python deps from being defined as tf_http_archives in workspace2.bzl to being in requirements.in. This consolidates where Python dependencies are defined, allows them to be more easily updated and also allows any version updates to be easily transferred to requirement.txt locked versions using the Hermetic Python requirements updater. Remove any downstream references to the deleted tf_http_archive repositories and if relevant replace them with @pypi_name//:pkg.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-15T05:55:54Z",
        "closed_at": "2023-09-14T07:33:03Z",
        "merged_at": null,
        "body": "Currently, MSVC address sanitizer may not be enabled during compilation and cause compilation error. This PR updates Abseil to include the fix of https://github.com/tensorflow/tensorflow/issues/61435.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-15T02:52:05Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR is based on @JerryShih's PR and @terryheo's last comment on https://github.com/tensorflow/tensorflow/pull/48099#issuecomment-809005824.\r\n\r\nWe add the document `tensorflow/lite/g3doc/guide/build_cmake_riscv.md` to demonstrate:\r\n- how to download prebuilt toolchain\r\n- how to build for risc-v target\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-15T00:09:50Z",
        "closed_at": "2023-08-15T04:41:52Z",
        "merged_at": null,
        "body": "Migrate TF Python deps from being defined as tf_http_archives in workspace2.bzl to being in requirements.in. This consolidates where Python dependencies are defined, allows them to be more easily updated and also allows any version updates to be easily transferred to requirement.txt locked versions using the Hermetic Python requirements updater. Remove any downstream references to the deleted tf_http_archive repositories and if relevant replace them with @pypi_*name*//:pkg.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 885,
        "deletions": 50,
        "changed_files": 16,
        "created_at": "2023-08-14T23:28:35Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR enables OneDNN library call for the matched XLA HLO Layer Norm pattern through custom_call instruction. In particular, this PR adds:\r\n\r\n1. oneDNN ops rewriter pass that will rewrite custom oneDNN ops like Layer Norm and Softmax. Currently, this pass is located before the BF16 all-reduce to F32 promotion.\r\n2. Layer Norm pattern matcher as seen in some Flax models\r\n3. oneDNN Layer Norm custom call rewrite\r\n4. Variable number of arguments for oneDNN custom call targets (by @mdfaijul )\r\n5. A test for XLA HLO Layer Norm pattern match and rewrite verification",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 772,
        "deletions": 45,
        "changed_files": 16,
        "created_at": "2023-08-14T21:14:23Z",
        "closed_at": "2023-08-14T22:28:16Z",
        "merged_at": null,
        "body": "This PR enables OneDNN library call for the matched XLA HLO Layer Norm pattern through custom_call instruction. In particular, this PR adds:\r\n\r\n1. oneDNN ops rewriter pass that will rewrite custom oneDNN ops like Layer Norm and Softmax. Currently, this pass is located before the BF16 all-reduce to F32 promotion.\r\n2. Layer Norm pattern matcher as seen in some Flax models\r\n3. oneDNN Layer Norm custom call rewrite\r\n4. Variable number of arguments for oneDNN custom call targets (by @mdfaijul )\r\n5. A test for XLA HLO Layer Norm pattern match and rewrite verification",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 97,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-11T19:34:30Z",
        "closed_at": "2023-08-16T18:02:33Z",
        "merged_at": null,
        "body": "This pull request addresses the issue #61504 and adds the following functions:\r\n\r\nAsynchronous processing: The code uses multiprocessing to asynchronously process the input tensors. This allows the code to process multiple tensors in parallel, which can improve the performance of the code.\r\n\r\nError handling: The code handles errors that may occur during the processing of the input tensors. This includes errors such as invalid input tensors, network failures, and out of memory errors.\r\n\r\nIntegration with other components: The code can be integrated with other components, such as data loading libraries and model inference libraries. This allows the code to be used in a wider variety of applications.\r\n\r\nVariable number of networks and CPUs: The code can be used to process a variable number of networks and CPUs. This allows the code to be scaled up or down to meet the needs of the application.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-11T19:28:17Z",
        "closed_at": "2023-09-27T10:19:47Z",
        "merged_at": "2023-09-27T10:19:47Z",
        "body": "The rocm config is needed for ROCm.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2023-08-11T10:36:53Z",
        "closed_at": "2023-08-14T19:56:38Z",
        "merged_at": "2023-08-14T19:56:38Z",
        "body": "Enable some tests that had been skipped previously as they are now passing",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-10T17:53:59Z",
        "closed_at": "2023-08-14T20:57:18Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-08-10T17:02:53Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The link to the colab notebook about training is broken and it is now updated with `train.py` in the hello world example.\r\n\r\nThanks.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-10T14:11:37Z",
        "closed_at": "2023-08-24T15:51:57Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 7,
        "changed_files": 4,
        "created_at": "2023-08-09T19:29:25Z",
        "closed_at": "2023-08-09T19:30:07Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-08T23:49:22Z",
        "closed_at": "2023-08-09T00:25:38Z",
        "merged_at": "2023-08-09T00:25:38Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/063230fe9f93a98600ade9a92dc241d7721df5c6",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-08T23:26:06Z",
        "closed_at": "2023-08-09T20:44:49Z",
        "merged_at": null,
        "body": "The pre_process_network function takes an input tensor and performs 3 matmuls on it. The output of the function is a tensor of the same shape as the input tensor.\r\n\r\nThe mid_process_network_async function takes an input tensor and performs 3 matmuls on it. The output of the function is a tensor of the same shape as the input tensor. This function also adds 100 to the input tensor before it is passed to the post-processing network.\r\n\r\nThe post_process_network function takes an input tensor and performs 3 matmuls on it. The output of the function is a tensor of the same shape as the input tensor.\r\n\r\nThe main function creates an input tensor, calls the pre-processing network, the mid-process network, and the post-processing network 10 times, and prints the final result.\r\n\r\nThe tf.function API is used to create asynchronous functions. This can make it easier to write and debug asynchronous code, and it can also improve the performance of the code.\r\n\r\nThe tf.data API is used to create pipelines of asynchronous operations. This can help to improve the performance of asynchronous computations.\r\n\r\nThe tf.distribute API is used to distribute asynchronous computations across multiple devices. This can also help to improve the performance of asynchronous computations.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-08T22:18:09Z",
        "closed_at": "2023-08-10T05:58:53Z",
        "merged_at": "2023-08-10T05:58:53Z",
        "body": "This is a PR which fixes the TensorFlow build when using Clang 16; this file previously used `uint64_t` without including the proper header.\r\n\r\n#61289 ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 30,
        "deletions": 22,
        "changed_files": 8,
        "created_at": "2023-08-08T21:54:47Z",
        "closed_at": "2023-08-11T17:40:03Z",
        "merged_at": "2023-08-11T17:40:02Z",
        "body": "This is a small code-cleanup PR which is specific only to oneDNN kernels. There are no changes to Eigen ops. \r\n\r\nChanges include fixing potential nullptr dereference checks, out-of-bounds memory accesses, removing unused variables etc.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 36,
        "changed_files": 3,
        "created_at": "2023-08-08T20:53:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fixes required by Rescale shift attr data type changing to DenseI8ArrayAttr (from DenseI32ArrayAttr)\r\n\r\nthis needs to be coordinated with https://reviews.llvm.org/D157439 which changes tosa dialect's shift attribute types\r\n\r\nChange-Id: I6f27d32b60847a296994687d8b6807065958f218",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-08-08T20:41:38Z",
        "closed_at": "2023-08-18T16:07:25Z",
        "merged_at": null,
        "body": "Fix issues due to TOSA axis attribute type changing from I64Attr to I32Attr to match the TOSA spec.\r\n\r\nthis needs to be coordinated with https://reviews.llvm.org/D157424 which changes tosa dialect axis attribute to I32Attr\r\n\r\nChange-Id: If8bfc4c4af30712226b36f79dcd600e47d0f168d",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 21,
        "changed_files": 3,
        "created_at": "2023-08-08T19:47:38Z",
        "closed_at": "2023-08-08T20:10:00Z",
        "merged_at": "2023-08-08T20:10:00Z",
        "body": "The requirements.in file was updated in https://github.com/tensorflow/tensorflow/commit/4a43c56418ce2edf6c7f7b61e1f1061a02005e05 but the updater wasn't run.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 14,
        "changed_files": 1,
        "created_at": "2023-08-08T16:42:54Z",
        "closed_at": "2023-08-09T07:12:54Z",
        "merged_at": "2023-08-09T07:12:54Z",
        "body": "The build tests and similar have an empty language tag and so will not run when test_lang_filters has a positive language choice, so change it to use a negative choice to exclude the python based tests that are tested in a different script.\r\nAlso remove use of python venv that is no longer useful.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 117,
        "deletions": 305,
        "changed_files": 2,
        "created_at": "2023-08-08T15:25:53Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This changes the unrolling of `tf.BatchMatMul` in the TFLite converter to use a `tf.Unpack` operation instead of a `tf.Split` operation followed by multiple `tf.Reshape` operations which simplifies the resulting graph.\r\n\r\nThe difference can be observed with the following code:\r\n```python\r\nimport tensorflow as tf\r\n\r\nquery = tf.keras.Input(shape=(15, 64), name=\"query\", batch_size=1)\r\nkey = tf.keras.Input(shape=(15, 64), name=\"key\", batch_size=1)\r\nvalue = tf.keras.Input(shape=(15, 64), name=\"value\", batch_size=1)\r\n\r\nattention_layer = tf.keras.layers.MultiHeadAttention(num_heads=8, key_dim=8)\r\n\r\nmodel = tf.keras.Model(\r\n    [query, key, value], attention_layer(query=query, key=key, value=value)\r\n)\r\n\r\nmodel.save(\"saved_model\")\r\n\r\nconverter = tf.lite.TFLiteConverter.from_saved_model(\"saved_model\")\r\nconverter.unfold_batchmatmul = True\r\nconverter.optimizations = [tf.lite.Optimize.DEFAULT]\r\nflatbuffer = converter.convert()\r\n\r\nopen(\"saved_model_unfolded.tflite\", \"wb\").write(flatbuffer)\r\n```\r\nPreviously this would produce the following graph which includes quite a lot of unnecessary reshape ops:\r\n<img width=\"850\" alt=\"Screenshot 2023-08-08 at 16 13 12\" src=\"https://github.com/tensorflow/tensorflow/assets/13285808/e10cd9b1-5d1b-47e7-a2fe-ea4df784eb33\">\r\n\r\nWith this change the resulting graph doesn't include these reshape ops:\r\n<img width=\"746\" alt=\"Screenshot 2023-08-08 at 17 21 16\" src=\"https://github.com/tensorflow/tensorflow/assets/13285808/f89614e2-0e5d-4e92-b72b-a7a1fed5a87d\">\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 9,
        "changed_files": 5,
        "created_at": "2023-08-07T21:23:14Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Change all references to Tosa Div Op to Tosa IntDiv Op.\r\nThis is due to Tosa renaming Div Op to IntDiv in order to align with TOSA spec\r\n\r\nThis needs to be coordinated with llvm patch: https://reviews.llvm.org/D157328 which changes Tosa Div Op to IntDiv\r\n\r\n\r\nChange-Id: Iee5aace5c66b1cc2e2008005766ace446ad3e215",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 66,
        "deletions": 24,
        "changed_files": 2,
        "created_at": "2023-08-07T15:38:04Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR fixes the legalization of tfl.transpose_conv in the case where the layer has a non-zero bias.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 329,
        "deletions": 41,
        "changed_files": 17,
        "created_at": "2023-08-07T12:31:45Z",
        "closed_at": "2023-09-11T23:28:07Z",
        "merged_at": "2023-09-11T23:28:07Z",
        "body": "Sequel to https://github.com/tensorflow/tensorflow/pull/61294\r\n\r\n(This is a rebased version of the approved https://github.com/benbarsdell/tensorflow/pull/2)\r\n\r\ncc @bfontain @nluehr @pjannaty",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-07T11:24:48Z",
        "closed_at": "2023-09-08T13:43:26Z",
        "merged_at": null,
        "body": "Some build tests were failing due to unresolved symbols so add in their dependencies",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-07T09:00:08Z",
        "closed_at": "2023-08-09T17:07:28Z",
        "merged_at": null,
        "body": "Fixed the broken link for **Google_play_services** on `ops_compatibility.md`",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-05T01:01:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Resolves tensorflow/tensorflow#61482",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-04T21:57:57Z",
        "closed_at": "2023-08-04T22:46:13Z",
        "merged_at": "2023-08-04T22:46:13Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/de4a9a85b464f661bb791c18448fe805459ff101",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-08-04T20:38:10Z",
        "closed_at": "2023-08-07T18:35:26Z",
        "merged_at": "2023-08-07T18:35:25Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-08-04T17:16:08Z",
        "closed_at": "2023-08-04T19:05:07Z",
        "merged_at": "2023-08-04T19:05:07Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 7,
        "created_at": "2023-08-04T09:50:20Z",
        "closed_at": "2023-08-04T17:45:55Z",
        "merged_at": "2023-08-04T17:45:55Z",
        "body": "Rename the scripts used in AARCH64 CI jobs to be clearer about their function and move away from deprecated terms.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-04T08:45:06Z",
        "closed_at": "2023-09-06T17:05:37Z",
        "merged_at": null,
        "body": "- Problem:\r\n\r\nUsing CMake to build the TFLite kernel test will fail in linking stage.\r\n\r\n- Error log\r\n\r\n```\r\n[ 87%] Linking CXX executable unpack_test\r\nld: libtensorflow-lite-test-base.a(op_version.cc.o): in function `.LBB1_18':\r\nop_version.cc:(.text._ZN6tflite15UpdateOpVersionEPh+0x14c): undefined reference to `tflite::GetOpSignature(tflite::OperatorCode const*, tflite::Operator const*, tflite::SubGraph const*, tflite::Model const*)'\r\nclang++: rror: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n\r\n- Solution:\r\n\r\nAdd `versioning/op_signature.cc` to `TEST_FRAMEWORK_SRC`. `versioning/op_version.cc` depends on `versioning/op_signature.cc` because of using GetOpSignature().",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 323,
        "changed_files": 9,
        "created_at": "2023-08-04T00:26:15Z",
        "closed_at": "2023-09-01T19:53:12Z",
        "merged_at": "2023-09-01T19:53:12Z",
        "body": "The PR removes obsolete MKL ML API calls, including all related functional calls and unit tests.\r\n\r\nThis PR will replace\r\n this old public PR ( I will close)\r\n\r\nhttps://github.com/tensorflow/tensorflow/pull/60292\r\n\r\nRemoved functionality in runtime_matmul_mkl.cc/h will be included in a follow-up PR\r\n     https://github.com/tensorflow/tensorflow/pull/61237\r\nwhich depends on the merge of this one. ",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 15,
        "changed_files": 5,
        "created_at": "2023-08-03T23:52:10Z",
        "closed_at": "2023-08-04T00:33:42Z",
        "merged_at": "2023-08-04T00:33:42Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/63d159607a86cba983cd1b1b5a7948bae7eb1156",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-08-03T22:08:45Z",
        "closed_at": "2023-08-03T22:23:30Z",
        "merged_at": "2023-08-03T22:23:30Z",
        "body": "Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 14 -> 14\nPatch: 0 -> 0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.14.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tensorflow.bzl:85:2.14.0\ntensorflow/cc/saved_model/testdata/chunked_saved_model/chunked_model/saved_model\n.pbtxt:342:2.14.0\nBinary file \ntensorflow/cc/saved_model/testdata/chunked_saved_model/non_chunked_model/saved_m\nodel.pb matches\ntensorflow/lite/tools/versioning/runtime_version.cc:113:2.14.0\ntensorflow/lite/tools/versioning/runtime_version.cc:251:2.14.0\ntensorflow/lite/tools/versioning/runtime_version.cc:252:2.14.0\ntensorflow/lite/tools/versioning/runtime_version.cc:280:2.14.0\ntensorflow/lite/tools/versioning/runtime_version.cc:368:2.14.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.14.0\ntensorflow/tools/ci_build/release/requirements_common.txt:30:2.14.0\ntensorflow/tools/ci_build/release/requirements_common.txt:31:2.14.0\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:33:2.14.0\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:35:2.14.0\ntensorflow/tools/pip_package/setup.py:50:2.14.0\ntensorflow/tools/pip_package/setup.py:122:2.14.0\ntensorflow/tools/pip_package/setup.py:126:2.14.0\ntensorflow/tools/pip_package/setup.py:129:2.14.0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.14.0\" in source directory \"tensorflow/\" that are not updated by this script. \nPlease check them manually!\ntensorflow/tensorflow.bzl:85:2.14.0\ntensorflow/cc/saved_model/testdata/chunked_saved_model/chunked_model/saved_model\n.pbtxt:342:2.14.0\nBinary file \ntensorflow/cc/saved_model/testdata/chunked_saved_model/non_chunked_model/saved_m\nodel.pb matches\ntensorflow/lite/tools/versioning/runtime_version.cc:113:2.14.0\ntensorflow/lite/tools/versioning/runtime_version.cc:251:2.14.0\ntensorflow/lite/tools/versioning/runtime_version.cc:252:2.14.0\ntensorflow/lite/tools/versioning/runtime_version.cc:280:2.14.0\ntensorflow/lite/tools/versioning/runtime_version.cc:368:2.14.0\ntensorflow/tools/ci_build/release/requirements_common.txt:29:2.14.0\ntensorflow/tools/ci_build/release/requirements_common.txt:30:2.14.0\ntensorflow/tools/ci_build/release/requirements_common.txt:31:2.14.0\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:33:2.14.0\ntensorflow/tools/tf_sig_build_dockerfiles/devel.requirements.txt:35:2.14.0\ntensorflow/tools/pip_package/setup.py:50:2.14.0\ntensorflow/tools/pip_package/setup.py:122:2.14.0\ntensorflow/tools/pip_package/setup.py:126:2.14.0\ntensorflow/tools/pip_package/setup.py:129:2.14.0\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 15,
        "changed_files": 5,
        "created_at": "2023-08-03T16:25:10Z",
        "closed_at": "2023-08-03T20:24:28Z",
        "merged_at": "2023-08-03T20:24:28Z",
        "body": "updated the release version to r2.14 and fixed formatting for `TF_PYTHON_VERSION`",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-03T15:26:33Z",
        "closed_at": null,
        "merged_at": null,
        "body": "File `compile_commands.json` for `tf-opt` can now be generated with the following command:\r\n\r\n```\r\nbazelisk run tensorflow/compiler/mlir:tf_opt_compile_commands -- --config=dbg\r\n```",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-03T12:03:42Z",
        "closed_at": "2023-09-06T17:59:56Z",
        "merged_at": null,
        "body": "Building the label_image example currently fails with:\r\n\r\n```\r\n/usr/bin/ld: CMakeFiles/label_image.dir/__/__/tools/evaluation/utils.cc.o: in function `tflite::evaluation::CreateXNNPACKDelegate(TfLiteXNNPackDelegateOptions const*)':\r\nutils.cc:(.text+0xfa1): undefined reference to `TfLiteXnnpackDelegatePluginCApi'\r\ncollect2: error: ld returned 1 exit status\r\nmake[3]: *** [examples/label_image/CMakeFiles/label_image.dir/build.make:349: examples/label_image/label_image] Error 1\r\nmake[2]: *** [CMakeFiles/Makefile2:25924: examples/label_image/CMakeFiles/label_image.dir/all] Error 2\r\nmake[1]: *** [CMakeFiles/Makefile2:25931: examples/label_image/CMakeFiles/label_image.dir/rule] Error 2\r\nmake: *** [Makefile:4946: label_image] Error 2\r\n```\r\nIt seems like there is no CI build set up that builds the label_image example using CMake.\r\nUnfortunately I wasn't able to figure out how one would add a build.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 23,
        "changed_files": 1,
        "created_at": "2023-08-02T23:52:25Z",
        "closed_at": "2023-08-03T21:45:11Z",
        "merged_at": "2023-08-03T21:45:11Z",
        "body": "This PR is intentionally incomplete. One of the Release Owners for 2.14.0\nneeds to fill in the internal release notes for this version before the PR gets\nsubmitted. Click on the :pencil2: icon in the header for `RELEASE.md` under\n\"Files Changed\" above.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1018,
        "deletions": 441,
        "changed_files": 16,
        "created_at": "2023-08-02T23:43:44Z",
        "closed_at": "2023-08-12T01:26:06Z",
        "merged_at": "2023-08-12T01:26:06Z",
        "body": "Extends the functionality of scaled convolutions operating on `F8E4M3FN` and `F8E5M2` data types to optionally return the scalar maximum of the absolute (Amax) of the result before quantization,\r\n\r\n(X, W, x_scale, w_scale, y_scale) -> (Y, y_amax).\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-02T23:04:57Z",
        "closed_at": "2023-08-03T15:36:39Z",
        "merged_at": null,
        "body": "Usage Examples\r\n```python\r\nimport tensorflow as tf\r\nfrom custom_zeta import custom_zeta\r\n\r\n# Complex value of s (for example)\r\nx = tf.constant(2.0)\r\ny = tf.constant(3.0)\r\n\r\n# Calculate the zeta function using the custom function\r\nresult = custom_zeta(x, y)\r\nprint(result)\r\n\r\n# Calculate the gradient of the zeta function with respect to x and y\r\nwith tf.GradientTape() as tape:\r\n    tape.watch(x)\r\n    tape.watch(y)\r\n    result = custom_zeta(x, y)\r\n\r\ngradient = tape.jacobian(result, [x, y])\r\nprint(gradient)\r\n\r\n``` \r\n\r\nImportant Notes\r\nThe custom_zeta function uses mpmath for higher precision.\r\nEnsure that the mpmath library is installed in your Python environment before using this function.\r\nThe precision of the computation can be adjusted by setting mpmath.mp.dps before calling the function.\r\n\r\nCompatibility and Requirements\r\nThe mpmath library is needed for high-precision computations. Install it using pip install mpmath.\r\n\r\nThis pull request addresses the issue https://github.com/tensorflow/tensorflow/issues/60041 .",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-02T17:34:55Z",
        "closed_at": "2023-08-04T04:05:43Z",
        "merged_at": "2023-08-04T04:05:43Z",
        "body": "Fixed the broken link for **op_select_allowlist** on `faq.md`",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-08-02T14:23:27Z",
        "closed_at": "2023-08-09T17:10:35Z",
        "merged_at": null,
        "body": "The lite models link for Tensorflow Hub is broken because of alignment issue. Updated the link w.r.t alignment.\r\n\r\nThanks.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-08-02T12:06:16Z",
        "closed_at": "2023-09-12T08:32:09Z",
        "merged_at": null,
        "body": "Do not use container writable layer for bazel output but instead use storage mounted from the host.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-02T11:38:05Z",
        "closed_at": "2023-08-02T17:39:26Z",
        "merged_at": "2023-08-02T17:39:26Z",
        "body": "XLA unit tests were unable to link due to undefined reference to stream_executor::Stream::BlockHostUntilDone()",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 13,
        "changed_files": 1,
        "created_at": "2023-08-02T07:29:23Z",
        "closed_at": "2023-08-03T05:57:12Z",
        "merged_at": "2023-08-03T05:57:12Z",
        "body": "There were several typos present here in this document which have been fixed in this PR. Thank you!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-02T07:00:26Z",
        "closed_at": "2023-08-24T17:42:20Z",
        "merged_at": null,
        "body": "- Added a new course from coursera taught by IBM [Building Deep Learning Models with TensorFlow from Coursera](https://www.coursera.org/learn/building-deep-learning-models-with-tensorflow)",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-08-01T16:15:37Z",
        "closed_at": "2023-08-27T13:08:05Z",
        "merged_at": null,
        "body": "These minimal changes will ensure that both `FAKE_REQUIRED_PACKAGES` and `collaborator_build REQUIRED_PACKAGES` versions are valid regardless of the actual package version considering at most the patch version.\r\n\r\nThis will fix the dependency check while installing the tensorflow-like  packages like `tensorflow-rocm` using some package managers like `poetry` solving the issue I opened: https://github.com/tensorflow/tensorflow/issues/61434.\r\n\r\nIf this PR will be accepted I think that the same changes can be done also in previous versions.\r\n\r\n\r\nHowever I don't know if your policies allow the PR directly in master, if some changes are needed feel free to notice that to me. I'll be glad to help.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-01T15:51:50Z",
        "closed_at": "2023-08-02T11:46:15Z",
        "merged_at": null,
        "body": "Remove files generated during test instead of leaving them to be cleaned up with the container",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-31T10:53:22Z",
        "closed_at": null,
        "merged_at": null,
        "body": "In [cublas_lt_matmul.cc](https://github.com/tensorflow/tensorflow/blob/305c2c09dd998397f52da79650b36c35ff211225/tensorflow/compiler/xla/service/gpu/runtime/cublas_lt_matmul.cc#L140)\uff0cwe will get all valid algorithms from cublasLtMatmulAlgoGetHeuristic()\uff0cand then select the i-th from  parameter \"algorithm\". However, it seems this \"algorithm\" parameter is not correctly set in gemm_algorithm_picker. \r\n\r\nThis pr fix the bug, and I run several tests on A800, it can help to improve the gemm performance. \r\n\r\n(A800 with cuda12.2)\r\n(XLA_FLAGS='--xla_gpu_enable_cublaslt', TF_CPP_VMODULE=gemm_algorithm_picker=10)\r\n(m=1024, k=4096,n=2048)\r\n\r\nBefore\r\n\r\n- logs\r\n<img width=\"917\" alt=\"image\" src=\"https://github.com/tensorflow/tensorflow/assets/5410381/f8808d34-efb5-4c62-9699-3b75b44f1a37\">\r\n\r\n- result\r\n<img width=\"1537\" alt=\"image\" src=\"https://github.com/tensorflow/tensorflow/assets/5410381/adc09542-9a27-445b-8e09-e40a0c2d25d4\">\r\n\r\n\r\n\r\n\r\nAfter \r\n\r\n- logs\r\n<img width=\"914\" alt=\"image\" src=\"https://github.com/tensorflow/tensorflow/assets/5410381/433d1fbc-c816-44e3-b9fb-c84a0bcb7aa7\">\r\n\r\n- result\r\n<img width=\"1526\" alt=\"image\" src=\"https://github.com/tensorflow/tensorflow/assets/5410381/c48acb15-f06d-44ab-8dfc-9d4866f92819\">\r\n",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-31T10:34:32Z",
        "closed_at": "2023-07-31T10:45:21Z",
        "merged_at": null,
        "body": "In [cublas_lt_matmul.cc](https://github.com/tensorflow/tensorflow/blob/305c2c09dd998397f52da79650b36c35ff211225/tensorflow/compiler/xla/service/gpu/runtime/cublas_lt_matmul.cc#L140)\uff0cwe will get all valid algorithms from cublasLtMatmulAlgoGetHeuristic()\uff0cand then select the i-th from  parameter \"algorithm\". However, it seems this \"algorithm\" parameter is not correctly set in gemm_algorithm_picker. \r\n\r\nThis pr fix the bug, and I run several tests on A800, it can help to improve the gemm performance. \r\n\r\n(A800 with cuda12.2)\r\n(XLA_FLAGS='--xla_gpu_enable_cublaslt', TF_CPP_VMODULE=gemm_algorithm_picker=10)\r\n(m=1024, k=4096,n=2048)\r\n\r\nBefore\r\n\r\n- logs\r\n<img width=\"917\" alt=\"image\" src=\"https://github.com/tensorflow/tensorflow/assets/5410381/f8808d34-efb5-4c62-9699-3b75b44f1a37\">\r\n\r\n- result\r\n<img width=\"1537\" alt=\"image\" src=\"https://github.com/tensorflow/tensorflow/assets/5410381/adc09542-9a27-445b-8e09-e40a0c2d25d4\">\r\n\r\n\r\n\r\n\r\nAfter \r\n\r\n- logs\r\n<img width=\"914\" alt=\"image\" src=\"https://github.com/tensorflow/tensorflow/assets/5410381/433d1fbc-c816-44e3-b9fb-c84a0bcb7aa7\">\r\n\r\n- result\r\n<img width=\"1526\" alt=\"image\" src=\"https://github.com/tensorflow/tensorflow/assets/5410381/c48acb15-f06d-44ab-8dfc-9d4866f92819\">\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-31T09:40:55Z",
        "closed_at": "2023-08-01T04:53:11Z",
        "merged_at": "2023-08-01T04:53:11Z",
        "body": "The unit test //tensorflow/python/kernel_tests/nn_ops:rnn_cell_test_cpu frequently fails due to slight differences in results when tested on AARCH64 so allow close match rather than needing absolute equality.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-31T08:55:42Z",
        "closed_at": "2023-07-31T23:46:37Z",
        "merged_at": "2023-07-31T23:46:37Z",
        "body": "Need to get the lit module from PyPi for Python 3.11 to prevent ModuleNotFoundError",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 79,
        "deletions": 17,
        "changed_files": 2,
        "created_at": "2023-07-28T18:58:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The existing lowering strategy for `tfl.stided_slice` does not account for the possibility that the input tensor size may not be an exact multiple of the stride in a particular dimension. This patch addresses this situation by inserting padding to the original tensor with an additional `tosa.pad` op in order to make all sizes exact multiples of the strides.\r\n\r\nFor example:\r\n\r\n```\r\n%0 = \"tfl.pseudo_const\"() {value = dense<[0, 0, 1]> : tensor<3xi32>} : () -> tensor<3xi32>\r\n%1 = \"tfl.pseudo_const\"() {value = dense<[1, 1000, 4]> : tensor<3xi32>} : () -> tensor<3xi32>\r\n%2 = \"tfl.pseudo_const\"() {value = dense<[1, 1, 4]> : tensor<3xi32>} : () -> tensor<3xi32>\r\n%result = \"tfl.strided_slice\"(%arg0, %0, %1, %2) {begin_mask = 0 : i32, ellipsis_mask = 0 : i32, end_mask = 0 : i32, new_axis_mask = 0 : i32, shrink_axis_mask = 0 : i32, offset = false} : (tensor<1x1000x4xf32>, tensor<3xi32>, tensor<3xi32>, tensor<3xi32>) -> tensor<1x1000x1xf32>\r\n```\r\n\r\nThis code was previously producing an error in the `tosa-legalize-tfl` pass. Now it is successfully converted to the following TOSA code:\r\n\r\n```\r\n%0 = \"tosa.const\"() <{value = dense<[[0, 0], [0, 0], [0, 1]]> : tensor<3x2xi64>}> : () -> tensor<3x2xi64>\r\n%1 = \"tosa.const\"() <{value = dense<0.000000e+00> : tensor<f32>}> : () -> tensor<f32>\r\n%2 = \"tosa.slice\"(%arg0) <{size = array<i64: 1, 1000, 3>, start = array<i64: 0, 0, 1>}> : (tensor<1x1000x4xf32>) -> tensor<1x1000x3xf32>\r\n%3 = \"tosa.pad\"(%2, %0, %1) : (tensor<1x1000x3xf32>, tensor<3x2xi64>, tensor<f32>) -> tensor<1x1000x4xf32>\r\n%4 = \"tosa.reshape\"(%3) <{new_shape = array<i64: 1, 1000, 1, 4>}> : (tensor<1x1000x4xf32>) -> tensor<1x1000x1x4xf32>\r\n%5 = \"tosa.slice\"(%4) <{size = array<i64: 1, 1000, 1, 1>, start = array<i64: 0, 0, 0, 0>}> : (tensor<1x1000x1x4xf32>) -> tensor<1x1000x1x1xf32>\r\n%result = \"tosa.reshape\"(%5) <{new_shape = array<i64: 1, 1000, 1>}> : (tensor<1x1000x1x1xf32>) -> tensor<1x1000x1xf32>\r\n```\r\n\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 38,
        "changed_files": 1,
        "created_at": "2023-07-28T01:40:39Z",
        "closed_at": "2023-07-28T19:11:29Z",
        "merged_at": "2023-07-28T19:11:29Z",
        "body": "The tf-nightly-macos wheels are currently being tagged with \"11_0\" so this PR changes the CI to target Monterey (12.0) to be the minimum compatible OS to be consistent with how we released the Apple Silicon wheels for TF 2.13. \r\n\r\nAlso, removed redundant configs. \r\n\r\ncc: @kulinseth @cjflan ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-27T20:06:55Z",
        "closed_at": "2023-07-27T22:09:35Z",
        "merged_at": "2023-07-27T22:09:35Z",
        "body": "Change // to #",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 13,
        "changed_files": 6,
        "created_at": "2023-07-27T17:03:28Z",
        "closed_at": "2023-07-31T05:49:43Z",
        "merged_at": "2023-07-31T05:49:43Z",
        "body": "The task library versions used in the examples are outdated. Updated them to the latest versions to be compatible.\r\n\r\nThanks.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-07-27T16:16:41Z",
        "closed_at": "2023-07-28T07:11:13Z",
        "merged_at": "2023-07-28T07:11:13Z",
        "body": "Bump up the relative tolerance for the following 4 tests to get pass on Hopper.\r\nBatchRowTransposeFoldCheck, \r\nBatchFromMinorDimTransposeIsNotFolded,  \r\nBatchedInstrLayoutTransposed, \r\nBatchedInstrLayoutBatchNotInMinorDim\r\n\r\nFixes #60319 .",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-07-27T15:58:19Z",
        "closed_at": "2023-07-28T04:10:51Z",
        "merged_at": "2023-07-28T04:10:51Z",
        "body": "Until these flaky tests are resolved in x86 builds have them retry in AARCH64 builds.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2023-07-27T15:47:46Z",
        "closed_at": "2023-07-28T07:00:38Z",
        "merged_at": "2023-07-28T07:00:38Z",
        "body": "The use of hermetic python should make this venv unnecessary.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-07-27T11:40:21Z",
        "closed_at": "2023-07-28T04:21:27Z",
        "merged_at": "2023-07-28T04:21:27Z",
        "body": "With the changes introduced in 9c3e858 it is no longer possible to use a prebuilt version of pthreadpool. The only options are download it or specify a folder where it was downloaded.\r\n\r\nAdd SYSTEM_PTHREADPOOL as a new option that triggers find_library() and fails if the library can't be found.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-27T11:23:48Z",
        "closed_at": "2023-08-17T09:59:46Z",
        "merged_at": null,
        "body": "As requested in the issue #https://github.com/tensorflow/tensorflow/issues/61407, modifying \r\n\r\n```\r\n var.assign_sub(\r\n(m * alpha) / (math_ops.sqrt(v) - coefficients['epsilon']))\r\n\r\n```\r\nto \r\n\r\n```\r\nvar.assign_sub(\r\n(m * alpha) / (math_ops.sqrt(v) + coefficients['epsilon']))\r\n```",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 128,
        "changed_files": 5,
        "created_at": "2023-07-27T09:54:05Z",
        "closed_at": "2023-07-31T17:02:27Z",
        "merged_at": "2023-07-31T17:02:27Z",
        "body": "GIT_TAG in gemmlowp.cmake wasn't is sync with\r\ntensorflow/third_party/gemmlowp/workspace.bzl, an older version was used.\r\n\r\nThe new version of gemmlowp has a CMake file in contrib, so use that instead.\r\n\r\ngemmlowp's CMake file defines gemmlowp::gemmlowp for the header only library.\r\n\r\nAll of this makes it possible to switch between gemmlowp being supplied by the system or by tensorflow.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-07-27T05:31:02Z",
        "closed_at": "2023-08-24T14:59:41Z",
        "merged_at": null,
        "body": "In this version, we use tf.compat.v1.enable_v2_behavior() and tf.compat.v1.disable_v2_behavior() instead of directly using _pywrap_tf2. Additionally, the function is_tf2_behavior_enabled() now uses tf.executing_eagerly() instead of _pywrap_tf2.is_enabled(), which is the recommended way to check if TensorFlow 2.0 behavior is enabled.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-27T02:45:10Z",
        "closed_at": "2023-07-27T14:19:12Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-27T00:31:59Z",
        "closed_at": "2023-08-28T06:11:07Z",
        "merged_at": "2023-08-28T06:11:07Z",
        "body": "Just testing for now",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-07-26T18:48:45Z",
        "closed_at": "2023-07-27T13:41:22Z",
        "merged_at": null,
        "body": "Corrected typos in README\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-26T15:38:45Z",
        "closed_at": "2023-07-28T18:27:21Z",
        "merged_at": "2023-07-28T18:27:21Z",
        "body": "As of CUDA 12.2 additional input validation allows NULL for the row offsets pointer only when rows=0.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-26T13:24:26Z",
        "closed_at": "2023-07-31T17:35:31Z",
        "merged_at": "2023-07-31T17:35:31Z",
        "body": "Similiar to #58677, the capitalization of FlatBuffers needs to match. Otherwise using TFLite via find_package() will fail to find FlatBuffers.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-07-26T10:04:10Z",
        "closed_at": "2023-08-06T20:57:27Z",
        "merged_at": "2023-08-06T20:57:27Z",
        "body": "This is a draft PR to fix https://github.com/tensorflow/tensorflow/issues/61357. Fixing a casting error and flatc MSVC link error.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 922,
        "deletions": 922,
        "changed_files": 5,
        "created_at": "2023-07-26T00:25:10Z",
        "closed_at": "2023-08-24T00:03:17Z",
        "merged_at": null,
        "body": "Synchronize to the change in mlir.\r\n\r\nlink to the PR https://reviews.llvm.org/D155231.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-25T23:59:26Z",
        "closed_at": "2023-07-27T13:53:01Z",
        "merged_at": "2023-07-27T13:53:01Z",
        "body": "This change allocates hash map for kernel registry as a unique pointer.  It avoids a possible memory leak. Fixes [60506](https://github.com/tensorflow/tensorflow/issues/60506)",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 18,
        "deletions": 25,
        "changed_files": 5,
        "created_at": "2023-07-25T19:27:30Z",
        "closed_at": "2023-07-25T23:14:55Z",
        "merged_at": "2023-07-25T23:14:55Z",
        "body": "Now that [hermetic Python is enabled for TensorFlow](https://github.com/tensorflow/tensorflow/commit/e85860e8382a460a0dd8547a536e5eaaf9096a9f), we need to add the `TF_PYTHON_VERSION` to be able to set the Python version. This will also fix the currently [failing Python 3.9 and 3.11 macOS arm64 CI builds](https://tensorflow-ci.macstadium.com/job/tensorflow-as-build-nightly/).  \r\n\r\ncc: @cjflan @kulinseth ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-07-25T18:22:53Z",
        "closed_at": "2023-07-25T19:45:54Z",
        "merged_at": null,
        "body": "Bumps [certifi](https://github.com/certifi/python-certifi) from 2023.5.7 to 2023.7.22.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/8fb96ed81f71e7097ed11bc4d9b19afd7ea5c909\"><code>8fb96ed</code></a> 2023.07.22</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/afe77220e0eaa722593fc5d294213ff5275d1b40\"><code>afe7722</code></a> Bump actions/setup-python from 4.6.1 to 4.7.0 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/230\">#230</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/2038739ad56abec7aaddfa90ad2ce6b3ed7f5c7b\"><code>2038739</code></a> Bump dessant/lock-threads from 3.0.0 to 4.0.1 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/229\">#229</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/44df761f4c09d19f32b3cc09208a739043a5e25b\"><code>44df761</code></a> Hash pin Actions and enable dependabot (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/228\">#228</a>)</li>\n<li>See full diff in <a href=\"https://github.com/certifi/python-certifi/compare/2023.05.07...2023.07.22\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2023.5.7&new-version=2023.7.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/tensorflow/tensorflow/network/alerts).\n\n</details>",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-25T16:24:46Z",
        "closed_at": "2023-07-25T18:58:05Z",
        "merged_at": "2023-07-25T18:58:05Z",
        "body": "A change in the behaviour of wrapt ends up in a unit test failure for TensorFlow.\r\nThis can be removed once mitigation in TensorFlow is in place. https://github.com/tensorflow/tensorflow/issues/60687 and\r\nhttps://github.com/GrahamDumpleton/wrapt/issues/231 This is an alternative and less intrusive fix to\r\nhttps://github.com/tensorflow/tensorflow/pull/60688 which was inadvertently reverted by a mis-merge in another commit.\r\nAlso add pylint disable line for pre-existing pylint issue.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-07-25T15:43:13Z",
        "closed_at": "2023-07-27T16:44:18Z",
        "merged_at": "2023-07-27T16:44:18Z",
        "body": "upgrade curl from 8.0.1 to 8.1.2 which has a few vulnerability fixes",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-07-25T14:39:25Z",
        "closed_at": "2023-07-27T05:24:14Z",
        "merged_at": "2023-07-27T05:24:14Z",
        "body": "Reduce the number of jobs run in parallel to limit the tendency to swap which results in long execution times.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 3,
        "changed_files": 4,
        "created_at": "2023-07-25T14:16:47Z",
        "closed_at": "2023-08-08T19:49:00Z",
        "merged_at": "2023-08-08T19:49:00Z",
        "body": "Switch the default compiler used in AARCH64 CI runs to be clang and add some exclusions for tests that fail when built with clang.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-25T13:16:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR addresses the following [issue](https://github.com/tensorflow/tensorflow/issues/61312).\r\n\r\nChanges summary\r\n* Sources in `core/async/interop/c`, `delegates/utils`, `async` are added to build\r\n* libandroid is added to dependencies",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-07-25T11:27:14Z",
        "closed_at": "2023-08-16T18:38:20Z",
        "merged_at": "2023-08-16T18:38:20Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-24T17:26:52Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The existing lowering of tfl.gather targets a sequence of tosa.reshape and tosa.gather operations. Currently, tosa.reshape supports, at most, a single dynamic dimension. This change adds support for multiple dynamic dimensions by targeting the tensor.reshape operator in the presence of multiple dynamic dimensions.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 120,
        "changed_files": 23,
        "created_at": "2023-07-24T16:07:56Z",
        "closed_at": "2023-07-26T13:29:08Z",
        "merged_at": "2023-07-26T13:29:08Z",
        "body": "- This PR turns ON oneDNN v3.x by default on both Linux and Windows x86 builds.\r\n- No change is needed from end-users who build TF from source since oneDNN v3.x will be automatically fetched.\r\n- ARM builds will not be affected since they will continue to use oneDNN v2.7.\r\n- This PR also removes conflg settings which was recently added to simultaneously support both oneDNN v2.x and v3.x.\r\n- Support for oneDNN v2.x in TF will be dropped in a future PR.\r\n\r\nNOTE: We also need to add `onednn` repo in TSL's workspace [file](https://github.com/google/tsl/blob/main/workspace2.bzl#L157).",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 288,
        "deletions": 22,
        "changed_files": 20,
        "created_at": "2023-07-24T02:30:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "For #61290 . This PR adds the complex op as a builtin to TFLite. I tried to follow instructions given to me in #61290 . Unfortunately, I'm developing this PR on a Mac M1 and have linker errors when trying to build the TFLite testing suite.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 120,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-07-24T02:15:21Z",
        "closed_at": "2023-08-11T22:41:15Z",
        "merged_at": "2023-08-11T22:41:15Z",
        "body": "Currently, TemporaryVariableOp will use context->allocate_temp() to allocate a tensor and do the DToH copy through pjrt_device_context->CopyDeviceTensorToCPU(), however, when the buffer is allocated through AsyncValueAllocator, pjrt_buffer is a nullptr in TemporaryVariableOp, thus crashed. \r\nTF_TemporaryVariable allows plugin implements the op with its own tensor allocator.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1921,
        "deletions": 840,
        "changed_files": 10,
        "created_at": "2023-07-21T16:46:10Z",
        "closed_at": "2023-07-24T22:46:43Z",
        "merged_at": "2023-07-24T22:46:42Z",
        "body": "Raising PR on behalf of @davsva01 for reverted PR https://github.com/tensorflow/tensorflow/pull/61123",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-21T14:36:25Z",
        "closed_at": "2023-09-14T10:29:51Z",
        "merged_at": null,
        "body": "Hi,\r\n\r\nCommit https://github.com/tensorflow/tensorflow/commit/1eb92f086261f37605986c521e5a14fd610568c6 added support for fused activation in the `TRANSPOSE_CONV` and updated both the optimized and reference kernels. It forgot though to update the `register_ref` for the operator. \r\nThis PR fixes that so that we can use the reference kernels `OpResolverType.BUILTIN_REF` on models with `TRANSPOSE_CONV` having a fused activation.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 25,
        "changed_files": 6,
        "created_at": "2023-07-20T21:51:39Z",
        "closed_at": "2023-07-25T08:49:48Z",
        "merged_at": "2023-07-25T08:49:48Z",
        "body": "This is a follow-up PR of https://github.com/tensorflow/tensorflow/pull/60568\r\n\r\nThis PR makes sure that all occurrences of dim size usage is tied with int64_t data type (versus int)\r\nwithin all oneDNN kernel op implementation.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-07-20T11:00:36Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The nightly versions says `experimental_from_jax` is deprecated and `Jax2TF` is recommended way of converting the Jax models to TFLite. \r\n\r\nAdded an option in the example to use `Jax2TF` for TFLite conversion using concrete functions.\r\n\r\nThanks.",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 23,
        "deletions": 8,
        "changed_files": 3,
        "created_at": "2023-07-20T06:03:09Z",
        "closed_at": "2023-07-25T18:53:56Z",
        "merged_at": "2023-07-25T18:53:56Z",
        "body": "This is a finalized PR of https://github.com/tensorflow/tensorflow/pull/61309. Add `int tf_min/max()` overloading, fix operator errors and casting errors.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-07-20T00:49:26Z",
        "closed_at": "2023-07-20T19:14:49Z",
        "merged_at": "2023-07-20T19:14:49Z",
        "body": "This PR fixes the following 2 benchmark tests with v2\r\n//tensorflow/python/eager/benchmarks/resnet50:resnet50_test_cpu\r\n//tensorflow/python/eager/benchmarks/resnet50:hvp_test_cpu\r\n\r\nThe failure started after this commit: https://github.com/tensorflow/tensorflow/commit/b44d7918070a2a192645af7b0c96b0c4e399161e ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-20T00:42:11Z",
        "closed_at": "2023-07-24T19:45:43Z",
        "merged_at": "2023-07-24T19:45:43Z",
        "body": "With the current pattern matching we have for Swish fusion in [remapper.cc ](https://github.com/tensorflow/tensorflow/blob/1cd941acb2ccd4582a52a223a11ebc8288c27fae/tensorflow/core/grappler/optimizers/remapper.cc#L1834), it will fuse ops into 'Swish' op if one of the inputs to 'Mul' is from same op as the input to Sigmoid. However in the case reported in https://github.com/tensorflow/tensorflow/issues/60941\r\n\r\n![image](https://github.com/tensorflow/tensorflow/assets/43043975/df9d8b88-bc5b-4c1f-97d2-501e4974b8f4)\r\n\r\nthe ops should not be fused, as in this case 'Split' op has two outputs. The fix for this corner case is to make sure not only the input ops match, but the tensors also should match. The same issue will be there in 'Mish' fusion also. This PR also includes a fix for 'Mish' fusion.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 414,
        "deletions": 142,
        "changed_files": 2,
        "created_at": "2023-07-19T22:29:34Z",
        "closed_at": "2023-08-24T18:44:51Z",
        "merged_at": "2023-08-24T18:44:51Z",
        "body": "co-author: @ustcuna \r\n\r\nFollowing pattern is seen in 3 models. It looks similar to InstanceNorm pattern but it is actually LayerNorm based on the reduction axis. Under right conditions, this pattern will be fused as LayerNorm to improve performance.\r\n\r\n![image](https://github.com/intel-innersource/frameworks.ai.tensorflow.private-tensorflow/assets/42224278/e2192afc-0d97-4aff-8529-37e10ae72c1b)\r\n\r\nWith this change we saw ~20% improvement in performance for the 3 models\r\nThese are the repo links for 2 of the 3 models\r\nBERT_LARGE : https://github.com/mlperf/training/tree/master/language_model/tensorflow/bert\r\nBERT_BASE : https://github.com/google-research/bert\r\n\r\nThe other pattern is seen in another customer model and brings in 10-20% improvement\r\n![model-level pattern example](https://github.com/intel-innersource/frameworks.ai.tensorflow.private-tensorflow/assets/89436425/99086725-2e98-4e70-8ea5-873d92848c6b)",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 37,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2023-07-19T20:54:36Z",
        "closed_at": "2023-08-28T22:06:01Z",
        "merged_at": "2023-08-28T22:06:01Z",
        "body": "Currently BFloat16 Mean Op causes BFloat16 accumulation which may result in incorrect output. This prevents Mean to be used with the lower BFloat16 precision. This PR:\r\n\r\n1. Just like the existing implementation of the Sum op, ensures BFloat16 Mean accumulation happens in FP32 by adding a Casting Specialization registration.\r\n2. Adds Benchmark and Kernel tests to verify the implementation.\r\n3. Adds Mean back to the Infer List from Deny List and fixes a typo in the Infer List initialization.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-19T05:48:28Z",
        "closed_at": "2023-09-12T07:15:44Z",
        "merged_at": null,
        "body": "In this refactored version, I have changed the code to consolidate two loops into one loop for the same method, improving efficiency and readability.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-07-18T06:21:51Z",
        "closed_at": "2023-07-20T05:46:06Z",
        "merged_at": null,
        "body": "This is a draft PR to fix https://github.com/tensorflow/tensorflow/issues/60397. More Windows specific macros may be necessary to be added.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 964,
        "deletions": 37,
        "changed_files": 15,
        "created_at": "2023-07-17T20:51:12Z",
        "closed_at": "2023-07-17T21:31:14Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3313,
        "deletions": 1225,
        "changed_files": 98,
        "created_at": "2023-07-17T20:24:47Z",
        "closed_at": "2023-07-17T20:51:40Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 235,
        "deletions": 27,
        "changed_files": 6,
        "created_at": "2023-07-17T19:24:32Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 63,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2023-07-17T15:55:03Z",
        "closed_at": "2023-09-15T21:11:25Z",
        "merged_at": "2023-09-15T21:11:25Z",
        "body": "More closely match tflite kernel's behaviour\r\n\r\nChange-Id: Ibe1a6e24c069beddfb46cf40c665d346b88cf097",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 4194,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-07-17T09:31:55Z",
        "closed_at": "2023-07-21T17:24:33Z",
        "merged_at": "2023-07-21T17:24:33Z",
        "body": "Re-opening a new PR for commit https://github.com/tensorflow/tensorflow/pull/61123/commits/a071af0ca8a3ea1fe242094514507f649f3ab64e ",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 859,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-07-17T09:20:53Z",
        "closed_at": "2023-07-18T13:01:50Z",
        "merged_at": "2023-07-18T13:01:50Z",
        "body": "Opening this PR again, since https://github.com/tensorflow/tensorflow/pull/61123 was reverted and  the dependent PR https://github.com/tensorflow/tensorflow/pull/61093 was closed.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 578,
        "deletions": 124,
        "changed_files": 5,
        "created_at": "2023-07-17T08:48:15Z",
        "closed_at": "2023-08-02T21:48:04Z",
        "merged_at": "2023-08-02T21:48:04Z",
        "body": "Sequel to https://github.com/tensorflow/tensorflow/pull/60383\r\n\r\n(This is a rebased version of https://github.com/benbarsdell/tensorflow/pull/1)\r\n\r\ncc @cantonios @nluehr @pjannaty",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-07-16T22:58:06Z",
        "closed_at": "2023-07-17T17:38:30Z",
        "merged_at": "2023-07-17T17:38:30Z",
        "body": "I noticed extra copies of the callbacks.\r\n\r\nBy default, lambdas capture by const semantics. They need to marked mutable to move capture.\r\nSee https://godbolt.org/z/3Ec6zcK8r\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 313,
        "deletions": 41,
        "changed_files": 21,
        "created_at": "2023-07-14T11:44:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "IRFFT2D has been implemented in TFLite for a couple of years now. In a lot of my use cases, the models I work with have both an RFFT2D (already builtin) and an IRFFT2D (not builtin) step and having IRFFT2D promoted to a built-in op would be massively useful for me. In this PR, I removed IRFFT2D from the custom ops list and changed it to a builtin op. \r\n\r\nThanks!",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 83,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-07-14T04:32:34Z",
        "closed_at": "2023-08-18T10:30:02Z",
        "merged_at": "2023-08-18T10:30:01Z",
        "body": "This PR will add Variant datatype support in MakeTensorFromProto. With out this, it will failed when converting Tensor to XLA tensor(DataTypeToPrimitiveType) since xla has no primitive type for variant.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 226,
        "deletions": 87,
        "changed_files": 8,
        "created_at": "2023-07-13T23:08:16Z",
        "closed_at": "2023-07-21T20:53:30Z",
        "merged_at": "2023-07-21T20:53:30Z",
        "body": "- oneDNN v3.x requires Bias to be passed as float in QuantizedMatMul. There are some models that have Bias as QINT32. So we convert that Bias to float with proper scaling. This PR caches the scaled bias in the first iteration to avoid doing that conversion in subsequent iterations.\r\n\r\n- This PR also enables weight caching for MatMul op with oneDNN v3.x.\r\n\r\n- This PR does not change common (non-oneDNN) TF code.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-13T22:30:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "return assert_shapes for debugging.assert_shapes.\r\nFixes: https://github.com/tensorflow/tensorflow/issues/61163",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-13T16:34:20Z",
        "closed_at": "2023-07-25T14:13:34Z",
        "merged_at": "2023-07-25T14:13:34Z",
        "body": "Cast ambiguous parameter so that it is not ambiguous and so gcc will compile it.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 113,
        "deletions": 0,
        "changed_files": 5,
        "created_at": "2023-07-13T07:47:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The PR submitted  is applicable to support RISCV64",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2023-07-13T07:19:19Z",
        "closed_at": "2023-07-25T17:42:51Z",
        "merged_at": null,
        "body": "Currently tf-nightly is not compatible with numpy <=1.22.* versions. Its working only with numpy versions >=1.23 . But `Required_packages` in `setup.py` file mentioned numpy>=1.22. Hence I am updating numpy to `numpy>=1.23`.\r\n\r\nAttaching the [gist](https://colab.research.google.com/gist/SuryanarayanaY/64c4ee7346aaa0a0492f01662147e159/tf-nightly_with_numpy_compatibility.ipynb) also for reference to check the behaviour.",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 137,
        "deletions": 269,
        "changed_files": 6,
        "created_at": "2023-07-12T17:02:17Z",
        "closed_at": "2023-08-13T01:47:02Z",
        "merged_at": null,
        "body": "just for the impression, ongoing",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-12T16:23:25Z",
        "closed_at": "2023-07-13T04:40:07Z",
        "merged_at": "2023-07-13T04:40:07Z",
        "body": "//tensorflow/compiler/xla/service/gpu:fusion_merger_test is broken and only works on x86 as a divide by zero is evaluated as -inf",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-12T14:53:04Z",
        "closed_at": "2023-07-13T18:36:24Z",
        "merged_at": "2023-07-13T18:36:24Z",
        "body": "To ensure that AARCH64 builds are stable prior to a release tag, enable running the build and test pipeline for pushes to the release branch even if they are not tagged.  We prevent the uploading of the built wheel if it is not tagged with a v2 release tag. ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-12T12:17:58Z",
        "closed_at": "2023-07-13T03:49:20Z",
        "merged_at": null,
        "body": "\u2026an 0",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-12T11:54:53Z",
        "closed_at": "2023-09-12T12:18:06Z",
        "merged_at": "2023-09-12T12:18:06Z",
        "body": "The symbolic link is referring to not existing path when running with `ln -sf $$(realpath --relative-to=$(RULEDIR) $<) $@` and fails. \r\n\r\nFixes #60915",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 96,
        "deletions": 8,
        "changed_files": 4,
        "created_at": "2023-07-12T09:40:03Z",
        "closed_at": null,
        "merged_at": null,
        "body": "More closely match tflite kernel behaviour for integers when calculating HardSwish table\r\n\r\n\r\nChange-Id: I32a1338fb15d3505d4bea432a8523c79d8f5da7a",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 136,
        "deletions": 268,
        "changed_files": 5,
        "created_at": "2023-07-11T20:47:39Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This pull request adds support for complex type reshaping in the 'tfl.reshape' operation. It includes modifications to the codebase to handle complex tensors correctly during reshaping operations. The changes ensure that the 'tfl.reshape' operation can now handle tensors with complex elements, preserving their shape and semantics.\r\n\r\nGreat work on enabling complex type support in the reshape operation! This enhancement will be valuable for handling complex data in TensorFlow. The code changes look good overall, and the implementation appears to be robust and efficient.\r\n\r\nI've reviewed the code, and everything seems to be in order. The modifications align well with the existing codebase and maintain good coding practices. The added comments and documentation are clear and helpful in understanding the changes made.\r\n\r\nOnce the pull request is merged, users will be able to perform reshaping operations on complex tensors seamlessly. This will greatly enhance the flexibility and usability of the 'tfl.reshape' operation in TensorFlow.\r\n\r\nNice job! I suggest merging this pull request and proceeding with further testing to ensure the changes integrate smoothly with the existing functionality. If you have any questions or need further assistance, feel free to ask.\r\n\r\nKeep up the great work!\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 75,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-07-11T14:58:31Z",
        "closed_at": "2023-07-19T19:28:05Z",
        "merged_at": "2023-07-19T19:28:04Z",
        "body": "This PR is to enable DtoD copy ViaDMA support for NextPluggableDevice. This is needed when there are multiple PjRtDevice and send/recv op will use this registered copyfunc.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 101,
        "deletions": 8,
        "changed_files": 6,
        "created_at": "2023-07-11T12:32:20Z",
        "closed_at": "2023-08-03T19:20:17Z",
        "merged_at": null,
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-11T09:45:10Z",
        "closed_at": "2023-10-11T18:39:03Z",
        "merged_at": "2023-10-11T18:39:03Z",
        "body": "The API `clip_by_norm` have argument `clip_norm` which accepts  `0-D (scalar) `Tensor` > 0` . But if we pass `-ve` value for this argument then its not raising intended error and converting the input tensor into Negative which IMO is wrong. Hence I am adding validation code for -ve values to `raise value error`.\r\n\r\nAttaching [gist](https://colab.research.google.com/gist/SuryanarayanaY/650edf2e880caa947674f813a41ef5a8/61158_-code-fix-ve-values.ipynb) for the same with solution for reference.\r\n\r\nFixex #61158  ",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 72,
        "deletions": 0,
        "changed_files": 4,
        "created_at": "2023-07-11T08:52:14Z",
        "closed_at": "2023-07-11T13:06:52Z",
        "merged_at": null,
        "body": "This PR is to enable DtoD copy ViaDMA  support for NextPluggableDevice. This is needed when there are multiple PjRtDevice and send/recv op will use this registered copyfunc.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 838,
        "deletions": 6,
        "changed_files": 19,
        "created_at": "2023-07-11T00:07:22Z",
        "closed_at": "2023-08-11T21:37:47Z",
        "merged_at": "2023-08-11T21:37:47Z",
        "body": "This PR enables OneDNN library call for XLA HLO dot operation through custom_call instruction. In particular,\r\n\r\n- We insert an HLO pass for pattern matching. This pass is after DotDecomposer in the pass pipeline for CPU. The pass rewrites dot operation to custom_call operation.\r\n- IR emitter generates LLVM IR for the custom_call for the given target function\r\n- The symbol for the target function is registered with CustomCallTargetRegistry\r\n- OneDNN matmul primitive is used for the computation",
        "comments": 17
    },
    {
        "merged": true,
        "additions": 241,
        "deletions": 90,
        "changed_files": 26,
        "created_at": "2023-07-10T23:51:07Z",
        "closed_at": "2023-07-17T11:51:09Z",
        "merged_at": "2023-07-17T11:51:09Z",
        "body": "This PR moves the oneDNN threadpool wrapper code under tsl, and uses tsl namesapce so it can also be called from XLA code.  \r\nChanges include\r\n1)\tRemoved dependency on reading an TF environment flag for using calling thread. The call  for reading the flag  (ThreadPoolUseCallerThread()) is removed and the env value is now passed into the constructor from TensorFlow.\r\n2)\tPointer to the Eigen threadpool is directly passed to the constructor instead of getting it from OptKernelContext.\r\n3)\tSome additional changes for clarity and using oneDNN instead of mkl in variables and filenames.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 254,
        "deletions": 52,
        "changed_files": 17,
        "created_at": "2023-07-10T19:21:52Z",
        "closed_at": "2023-07-25T16:37:01Z",
        "merged_at": null,
        "body": "This PR adds support for inter op scheduler in the oneDNN + ACL build. It enables the creation of more than 1 scheduler inside ACL to increase performance of models with parallel ops.\r\nFor benchmarked NLP models the average performance increase is 9%, for CV classification models its around 2%.\r\nThe below benchmarks were done with the following PR\u2019s applied as patches:\r\n#60026, #60723, #61110, #61114, #61093, #61123 \r\n\r\n![nlp_models_benchmarked](https://github.com/tensorflow/tensorflow/assets/117736650/7a3a4df1-475b-4dc4-ab85-7e9b97eb7b27)\r\n\r\n![cv_models_benchmarked](https://github.com/tensorflow/tensorflow/assets/117736650/245103e6-f6d1-4da9-abb8-3a90a86217a9)\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-07-10T10:03:51Z",
        "closed_at": "2023-07-11T08:07:52Z",
        "merged_at": "2023-07-11T08:07:51Z",
        "body": "gcc complains of abiguity in some overloaded functions so cast the parameter to overcome this.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2023-07-10T09:57:53Z",
        "closed_at": "2023-07-11T15:38:58Z",
        "merged_at": "2023-07-11T15:38:57Z",
        "body": "Python 3.8 is no longer supported so drop attempts to build using it.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 205,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-07-08T16:22:37Z",
        "closed_at": "2023-07-20T19:18:33Z",
        "merged_at": "2023-07-20T19:18:33Z",
        "body": "Creates a set of fuzzers to FuzzTest style. One of the benefits is that this will reduce storage size required for the fuzzers, because the fuzzers will all be based off the same binary whereas the non-FuzzTest fuzzers will have a binary per fuzzer. This storage requirement has caused an issue on the OSS-Fuzz side:\r\nhttps://github.com/google/oss-fuzz/issues/9792\r\n\r\nMigrating to FuzzTest will make it easier to add new ops-specific fuzzers since we won't have to worry about disk size. The existing fuzzesr can be several GBs of storage and it quickly goes beyond what we have available at OSS-Fuzz.\r\n\r\nIt would however be nice to re-use the existing fuzzer helper logic from fuzz_session.h so I added a macro similar to what we have for libFuzzer but simple for FuzzTest. I migrated a set of the existing fuzzers.\r\n\r\nI figured it would be nice to do a soft transition, so we can remove the existing fuzzers after the ones introduced in this PR has shown to run for a while. I'm also curious in whether we will see a difference in performance from the FuzzTest and libFuzzer harnesses.\r\n\r\nThis PR supersedes https://github.com/tensorflow/tensorflow/pull/61122",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-07-07T15:19:39Z",
        "closed_at": "2023-07-09T03:16:43Z",
        "merged_at": null,
        "body": "Fixed a typo in the file. Changed the typo from \"GetDelegateKernalName\" to \"GetDelegateKernelName\".",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-07T03:45:21Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Description:\r\n\r\nThis pull request addresses a critical issue affecting the iOS c++ shared lib build. which results in a crash due to unsupported linker configuration.\r\n\r\n### Problem\r\n\r\nThe list of symbols to be exported on iOS was not previously defined in our Bazel build configuration. This oversight caused the configuration to fall back to \"//conditions:default\": -Wl,--version-script, a setting that is not supported by the linker on iOS/macOS platforms.\r\n\r\n\r\nthe build then crash with the following error message being generated:\r\n\r\n```sh\r\n>>  bazel build  -c opt --config=ios_arm64 //tensorflow/lite:libtensorflowlite.dylib     \r\n\r\nINFO: Analyzed target //tensorflow/lite:libtensorflowlite.dylib (104 packages loaded, 3138 targets configured).\r\nINFO: Found 1 target...\r\nERROR: /Users/rodrigogomes/workspace/personal/tensorflow/tensorflow/lite/BUILD:1334:24: Linking tensorflow/lite/libtensorflowlite.dylib failed: (Exit 1): cc_wrapper.sh failed: error executing command (from target //tensorflow/lite:libtensorflowlite.dylib) external/local_config_cc/cc_wrapper.sh @bazel-out/ios_arm64-opt/bin/tensorflow/lite/libtensorflowlite.dylib-2.params\r\nld: unknown option: --version-script\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\nError in child process '/usr/bin/xcrun'. 1\r\nTarget //tensorflow/lite:libtensorflowlite.dylib failed to build\r\nUse --verbose_failures to see the command lines of failed build steps.\r\nINFO: Elapsed time: 62.617s, Critical Path: 4.30s\r\nINFO: 198 processes: 3 internal, 195 local.\r\nFAILED: Build did NOT complete successfully\r\n\r\n```\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 55,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2023-07-07T02:19:48Z",
        "closed_at": "2023-08-09T04:27:16Z",
        "merged_at": "2023-08-09T04:27:16Z",
        "body": "This PR is for enabling XLA auto clustering mode for NextPluggableDevice, the basic idea is reusing GPU 's compilation device if plugin register it's jit_device_type as \"XLA_GPU_JIT\".",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 1261,
        "deletions": 0,
        "changed_files": 25,
        "created_at": "2023-07-07T01:40:48Z",
        "closed_at": "2023-07-13T06:17:45Z",
        "merged_at": null,
        "body": "This PR creates a suite of tidied CI scripts, extracted from previously-private TensorFlow source code within Google. It is still a work-in-progress, and as such is not yet documented. I'll be creating internal CI jobs to experiment with these, but I first need to have them merged.\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-07-06T22:01:34Z",
        "closed_at": "2023-07-10T20:24:25Z",
        "merged_at": "2023-07-10T20:24:24Z",
        "body": "This g3 doc is auto synced to tensorflow.org where the rendering is not correct: https://www.tensorflow.org/lite/guide/inference.md#run_inference_with_dynamic_shape_model",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-06T16:31:31Z",
        "closed_at": "2023-07-07T15:04:17Z",
        "merged_at": null,
        "body": "Fixed a typo error. Changed the spelling from \"GetDelegateKernalName\" to \"GetDelegateKernelName\"",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 161,
        "deletions": 69,
        "changed_files": 32,
        "created_at": "2023-07-06T02:38:37Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR works as a part of the whole Multi-Stream feature in TF, which is proposed in #61185.\r\n\r\nImplement the TensorHolder and add the object to runtime parameters. The TensorHolder is responsible for holding some CPU tensors until the end of the session.run(). It's helpful to avoid memory errors in HtoD stream merging.\r\n\r\n@changhuilin ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 137,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-07-06T02:34:38Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR works as a part of the whole Multi-Stream feature in TF, which is proposed in #61185.\r\n\r\nImplement the StreamGroupMgr that is responsible for stream group distribution.\r\n\r\n@changhuilin ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 218,
        "deletions": 14,
        "changed_files": 19,
        "created_at": "2023-07-06T02:33:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR works as a part of the whole Multi-Stream feature in TF, which is proposed in #61185.\r\n\r\nAdd StreamDevices and related factories. Add stream-related APIs and arguments. Cache the XLA compiler at the stream level.\r\n\r\n@changhuilin",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 215,
        "deletions": 92,
        "changed_files": 14,
        "created_at": "2023-07-06T02:29:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR works as a part of the whole Multi-Stream feature in TF, which is proposed in #61185.\r\n\r\nImplement DeviceOrdinalHelper to encode/decode stream and device information into/from the ordinal variable, and use it to create multiple allocators when necessary.\r\n\r\n@changhuilin",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-07-06T02:25:39Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR works as a part of the whole Multi-Stream feature in TF, which is proposed in #61185.\r\n\r\nEnable context-level cache because the kernels cannot be shared between CUDA contexts.\r\n\r\n@changhuilin",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 113,
        "deletions": 3,
        "changed_files": 6,
        "created_at": "2023-07-06T02:23:03Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR works as a part of the whole Multi-Stream feature in TF, which is proposed in #61185.\r\n\r\nAdd stream-related help functions in DeviceNameUtils, and use them in two places.\r\n\r\n@changhuilin ",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-07-06T02:20:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR works as a part of the whole Multi-Stream feature in TF, which is proposed in #61185.\r\n\r\nAdd stream-related APIs and variables to DeviceMgr.\r\n\r\n@changhuilin ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 95,
        "deletions": 56,
        "changed_files": 4,
        "created_at": "2023-07-06T02:18:37Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR works as a part of the whole Multi-Stream feature in TF, which is proposed in #61185.\r\n\r\nAdd the \"TF_GPU_CONTEXT_COUNT\" entrance, and modify related functions.\r\n\r\n@changhuilin ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-07-06T02:15:41Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR works as a part of the whole Multi-Stream feature in TF, which is proposed in #61185.\r\n\r\nOptimize the async allocator pool initialization process.\r\n\r\n@changhuilin ",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2023-07-06T02:13:46Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR works as a part of the whole Multi-Stream feature in TF, which is proposed in #61185.\r\n\r\nAdd an option for OpSegment to choose whether to own the constant op kernels.\r\n\r\n@changhuilin ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-06T02:09:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR works as a part of the whole Multi-Stream feature in TF, which is proposed in #61185.\r\n\r\nTwo fields (stream_merge_options & multi_stream_options) are added to \"config.proto\" to provide the entrance for related features.\r\n\r\n@changhuilin ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2731,
        "deletions": 442,
        "changed_files": 111,
        "created_at": "2023-07-06T02:00:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Multiple Stream TensorFlow is developed based on the official TensorFlow. It leverages the features of modern GPUs to accelerate deep learning training and inference. This Multi-Stream implementation has successfully helped several customers migrate their RecSys TF models to the GPU and go online.\r\n\r\nFor more details please visit [README_MultiStream.md](https://github.com/buptzyb/tensorflow/blob/multistream-release/README_MultiStream.md).\r\n\r\nThis PR is used as a reference and will not be merged to master. @changhuilin ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 148,
        "deletions": 7,
        "changed_files": 3,
        "created_at": "2023-07-06T00:17:50Z",
        "closed_at": "2023-08-01T04:04:19Z",
        "merged_at": "2023-08-01T04:04:19Z",
        "body": "- Allows dimensions with size=1 to have arbitrary stride (this is required for compatibility with [PyTorch](https://github.com/pytorch/pytorch/blob/fea683491eb11ae1726a2ca0b4b558825025ce7a/aten/src/ATen/DLConvertor.cpp#L230-L239), which sets all such strides to 1).\r\n- Allows empty tensors to have arbitrary strides.\r\n- This logic matches that of [Numpy](https://github.com/numpy/numpy/blob/b052950e2fa02a09c02530fb790485b73bcc2d04/numpy/core/src/multiarray/flagsobject.c#L115-L137).\r\n- Also adds a check that byte_offset == 0.\r\n- Adds tests to verify the stride logic and round-trip DLPack-->Tensor-->DLPack conversions.\r\n\r\n\r\n\r\ncc @nluehr @pjannaty ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-05T22:27:33Z",
        "closed_at": "2023-07-06T03:50:18Z",
        "merged_at": null,
        "body": "Fix typo in function description",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2023-07-05T11:31:11Z",
        "closed_at": "2023-07-05T22:51:12Z",
        "merged_at": null,
        "body": "Instead of `x * reciprocal(y)`, do `x / y`. This saves one op. Instead of (reciprocal, mul), you only have div.",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-07-05T08:48:18Z",
        "closed_at": "2023-07-26T21:24:46Z",
        "merged_at": "2023-07-26T21:24:45Z",
        "body": "The updated condition will only compile if both C++17 and C11 compliance are met, guaranteeing that the aligned_alloc feature is available. \r\n\r\nRelevant closed PR #57707 \r\n\r\nFixes #57706",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-07-05T03:56:09Z",
        "closed_at": "2023-07-05T13:38:49Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-04T20:52:30Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The TensorFlow Lite framework build for Metal fails with the Xcode Version 14.3 (14E222b) when running the command: \r\n`bazel build -c opt --config=ios_fat --cxxopt=--std=c++17 //tensorflow/lite/ios:TensorFlowLiteCMetal_framework`\r\n\r\n```\r\nERROR: /tensorflow/tensorflow/lite/delegates/gpu/common/transformations/BUILD:123:11: Compiling tensorflow/lite/delegates/gpu/common/transformations/global_pooling_to_reduce_op.cc failed: (Aborted): wrapped_clang_pp failed: error executing command external/local_config_cc/wrapped_clang_pp '-D_FORTIFY_SOURCE=1' -fstack-protector -fcolor-diagnostics -Wall -Wthread-safety -Wself-assign -fno-omit-frame-pointer -g0 -O2 -DNDEBUG ... (remaining 37 arguments skipped)\r\n\r\ntensorflow/lite/delegates/gpu/common/transformations/global_pooling_to_reduce_op.cc:59:15: error: 'any_cast<const tflite::gpu::Pooling2DAttributes &>' is unavailable: introduced in iOS 12.0\r\n        absl::any_cast<const Pooling2DAttributes&>(node->operation.attributes);\r\n```\r\n\r\nTo solve the problem, you need to change the TFL_MINIMUM_OS_VERSION = \"11.0\" to TFL_MINIMUM_OS_VERSION = \"12.0\".",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 26,
        "deletions": 37,
        "changed_files": 2,
        "created_at": "2023-07-04T12:58:58Z",
        "closed_at": "2023-07-23T16:34:34Z",
        "merged_at": "2023-07-23T16:34:33Z",
        "body": "In order to run optimized GEMM kernels for matrix multiplication through Arm Compute Library (ACL) when integrating it through oneDNN we need to specify that format for weights (RHS matrix) is any so that ACL can reorder them in the format that GEMM kernel expects them to be.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16539,
        "deletions": 820,
        "changed_files": 335,
        "created_at": "2023-07-04T12:06:35Z",
        "closed_at": "2023-07-04T12:06:54Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4838285,
        "deletions": 4736585,
        "changed_files": 21246,
        "created_at": "2023-07-03T16:18:29Z",
        "closed_at": "2023-07-03T16:19:13Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-07-01T14:08:22Z",
        "closed_at": "2023-07-04T17:54:28Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-01T14:05:11Z",
        "closed_at": "2023-07-04T17:51:11Z",
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-01T14:02:40Z",
        "closed_at": "2023-07-04T17:52:37Z",
        "merged_at": null,
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-30T23:31:25Z",
        "closed_at": "2023-07-06T16:34:44Z",
        "merged_at": "2023-07-06T16:34:43Z",
        "body": "Commit c762c4501ca017994c1fa5554c3c8e47b7c80b66 noted that \"I also know that gast 0.5.2 breaks one of our tests\" and committed \"gast versions above 0.4.0 are incompatible with some of TF's tests.\"\r\n\r\nIn #56244, it was suggested to raise a PR to remove the cap. In view of the above-mentioned constraints, I've excluded everything after 0.4.0 up to 0.5.2; note that 0.5.0 directly followed 0.4.0, see https://github.com/serge-sans-paille/gast/tags",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-30T23:18:48Z",
        "closed_at": "2023-08-25T19:28:14Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 71,
        "changed_files": 1,
        "created_at": "2023-06-29T16:09:03Z",
        "closed_at": "2023-06-30T19:00:47Z",
        "merged_at": "2023-06-30T19:00:47Z",
        "body": "Reduce the tests run for CI down to just min and max python versions",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 6913,
        "deletions": 853,
        "changed_files": 13,
        "created_at": "2023-06-29T14:27:58Z",
        "closed_at": "2023-07-13T17:19:23Z",
        "merged_at": "2023-07-13T17:19:23Z",
        "body": "This PR updates ACL to 23.05.1. It updates patches in oneDNN as required for this update. Additionally it adds ACL based reorders for select shapes.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 145,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-06-29T09:34:09Z",
        "closed_at": "2023-08-23T10:24:09Z",
        "merged_at": null,
        "body": "Creates a set of fuzzers to FuzzTest style. One of the benefits is that this will reduce storage size required for the fuzzers, because the fuzzers will all be based off the same binary whereas the non-FuzzTest fuzzers will have a binary per fuzzer. This storage requirement has caused an issue on the OSS-Fuzz side:\r\nhttps://github.com/google/oss-fuzz/issues/9792\r\n\r\nMigrating to FuzzTest will make it easier to add new ops-specific fuzzers since we won't have to worry about disk size. The existing fuzzesr can be several GBs of storage and it quickly goes beyond what we have available at OSS-Fuzz.\r\n\r\nIt would however be nice to re-use the existing fuzzer helper logic from fuzz_session.h so I added a macro similar to what we have for libFuzzer but simple for FuzzTest. I migrated a set of the existing fuzzers.\r\n\r\nI figured it would be nice to do a soft transition, so we can remove the existing fuzzers after the ones introduced in this PR has shown to run for a while. I'm also curious in whether we will see a difference in performance from the FuzzTest and libFuzzer harnesses.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 63,
        "changed_files": 2,
        "created_at": "2023-06-29T08:11:38Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The code just copied from `tensorflow/compiler/mlir/lite/stablehlo/transforms/unfuse_batch_norm_pass.cc`",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-28T18:26:37Z",
        "closed_at": "2023-06-28T18:38:36Z",
        "merged_at": "2023-06-28T18:38:35Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5053,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-06-28T15:49:19Z",
        "closed_at": "2023-07-13T17:19:23Z",
        "merged_at": "2023-07-13T17:19:23Z",
        "body": "This PR adds a patch to oneDNN for the Compute Library build adding support for jit-ed blk_reorder. The contents in the patch is fully authored by @kawakami-k, the source used for this patch is available here:\r\nhttps://github.com/oneapi-src/oneDNN/pull/1483",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 171,
        "deletions": 32,
        "changed_files": 9,
        "created_at": "2023-06-28T13:28:19Z",
        "closed_at": "2023-07-28T10:22:31Z",
        "merged_at": null,
        "body": "This PR follows an approach of using heuristics to choose whether to rewrite a oneDNN matmul node via mkl_layout_pass for AArch64 builds. The heuristics is based on a decision tree model with the shapes and number of ops as features. This work is based on three PRs in upstream TensorFlow:\r\n\r\n1. https://github.com/tensorflow/tensorflow/pull/60160 that uses the rewrite pass for the convolution microbenchmarks, which has been merged.\r\n2. https://github.com/tensorflow/tensorflow/pull/60026 that uses a heuristic based on a linear model to choose between oneDNN and Eigen.\r\n\r\nThe changes in this PR include the following:\r\n- Use the rewrite pass for matmul microbenchmarks\r\n- Use heuristic for matmul ops to decide when to rewrite a matmul node and is guarded for AArch64 builds\r\n\r\nPerformance impact:\r\nWith this PR, we show the performance before and after introducing this patch for 8 cores on Neoverse V1 platforms for default thread settings.\r\n### Matmul microbenchmarks\r\nBefore the patch\r\n![image](https://github.com/tensorflow/tensorflow/assets/65665931/6e0f033c-aeb2-490e-8f78-7b08b4d4b19e)\r\nAfter the patch\r\n![image](https://github.com/tensorflow/tensorflow/assets/65665931/a313fc01-c91c-4ca2-b7b8-5b6659c439a1)\r\n### NLP models from hugging face\r\n![image](https://github.com/tensorflow/tensorflow/assets/65665931/702fe640-c274-4dfe-83b0-6ef43537bf03)\r\n\r\n\r\n\r\n\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 95,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-06-28T12:44:42Z",
        "closed_at": "2023-07-10T19:24:14Z",
        "merged_at": "2023-07-10T19:24:14Z",
        "body": "This MR accounts for the legalization of tfl.squared_difference when the datatype is quantized INT8. This change ensures that the resulting TOSA graph matches the behaviour of the TensorFlow Lite reference operator.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2023-06-28T04:08:14Z",
        "closed_at": "2023-06-29T11:15:54Z",
        "merged_at": "2023-06-29T11:15:54Z",
        "body": "This CUDA API was introduced in CUDA 11.8. This patch fixes the build when using CUDA < 11.8.\r\n\r\ncc @nluehr @pjannaty ",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-28T00:10:25Z",
        "closed_at": "2023-06-28T15:28:44Z",
        "merged_at": "2023-06-28T15:28:44Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 47,
        "changed_files": 1,
        "created_at": "2023-06-27T19:25:44Z",
        "closed_at": "2023-06-30T19:04:44Z",
        "merged_at": "2023-06-30T19:04:43Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 126,
        "deletions": 151,
        "changed_files": 2,
        "created_at": "2023-06-27T19:04:11Z",
        "closed_at": "2023-06-27T19:05:57Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-06-27T18:21:10Z",
        "closed_at": "2023-06-27T19:06:20Z",
        "merged_at": "2023-06-27T19:06:20Z",
        "body": "Before merging this PR, please double check that it has correctly updated\n`core/public/version.h`, `tools/pip_package/setup.py`, and\n`tensorflow/tensorflow.bzl`. Also review the execution notes below:\n\n```\nMajor: 2 -> 2\nMinor: 13 -> 13\nPatch: 0 -> 0\n\nWARNING: Below are potentially instances of lingering old version string \n\"2.13.0-rc2\" in source directory \"tensorflow/\" that are not updated by this \nscript. Please check them manually!\ntensorflow/lite/core/c/c_api.h:116:2.13.0-rc2\n\nNo lingering old version strings \"2.13.0rc2\" found in source directory \n\"tensorflow/\". Good.\n```",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-27T16:16:32Z",
        "closed_at": "2023-06-27T18:05:39Z",
        "merged_at": "2023-06-27T18:05:39Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 859,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-06-27T15:23:08Z",
        "closed_at": "2023-07-13T19:17:29Z",
        "merged_at": null,
        "body": "This PR backports this oneDNN PR (https://github.com/oneapi-src/oneDNN/pull/1475/files) authored by me that has already been merged into oneDNN upstream.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-27T05:14:19Z",
        "closed_at": "2023-06-27T05:24:19Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 126,
        "deletions": 151,
        "changed_files": 2,
        "created_at": "2023-06-27T00:33:41Z",
        "closed_at": "2023-06-27T18:57:47Z",
        "merged_at": null,
        "body": null,
        "comments": 5
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-26T20:10:33Z",
        "closed_at": "2023-06-27T06:41:48Z",
        "merged_at": null,
        "body": null,
        "comments": 4
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-26T17:32:45Z",
        "closed_at": "2023-06-26T19:08:03Z",
        "merged_at": "2023-06-26T19:08:03Z",
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 12,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2023-06-26T15:19:55Z",
        "closed_at": "2023-06-28T07:31:42Z",
        "merged_at": "2023-06-28T07:31:42Z",
        "body": "Fix ambiguity by casting arguments to ensure desired function is used\r\n\r\nFixes https://github.com/tensorflow/tensorflow/issues/61068",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2023-06-26T10:27:27Z",
        "closed_at": "2023-08-09T19:09:11Z",
        "merged_at": "2023-08-09T19:09:11Z",
        "body": "At present the API `tf.experimental.numpy.vander` behaves differently compared to its Numpy variant `numpy.vander` when the argument value of `N=0` .\r\n\r\nI think the behaviour of Numpy variant is correct.Current TF implementation broadcasts N to `N=shape(x)[0]` when either N=0 or N=None which is not correct. When N=0 there should not be any broadcasting which is equivalent to `numpy.vander` behaviour.Hence proposing the changes in code to get numpy behaviour.\r\n\r\nAttached the gist for demo in same with and without the code changes and with the proposed change in code numpy behaviour can be achievable.\r\n\r\nFixes #60827 ",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-06-25T23:55:01Z",
        "closed_at": "2023-07-06T17:23:51Z",
        "merged_at": "2023-07-06T17:23:51Z",
        "body": null,
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-25T07:36:38Z",
        "closed_at": "2023-06-26T18:05:57Z",
        "merged_at": "2023-06-26T18:05:57Z",
        "body": "Limit the version of numpy that will be accepted\r\nfor install to the last one that works.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 340,
        "deletions": 345,
        "changed_files": 8,
        "created_at": "2023-06-23T21:29:48Z",
        "closed_at": "2023-06-26T21:31:07Z",
        "merged_at": "2023-06-26T21:31:07Z",
        "body": "change old stype of x.dyn_cast<T>() to new style: dyn_cast<T>(x)\r\n\r\n\r\nSigned-off-by: Tai Ly <tai.ly@arm.com>\r\nChange-Id: I0caf0492cc21c4b6a0e679202197e212cf01740d",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-23T20:49:47Z",
        "closed_at": "2023-06-26T08:52:13Z",
        "merged_at": null,
        "body": null,
        "comments": 2
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-23T18:35:04Z",
        "closed_at": "2023-06-28T07:54:32Z",
        "merged_at": "2023-06-28T07:54:31Z",
        "body": "Hello!\r\n\r\nWe're working on an [MLIR based compiler that takes StableHLO and lowers it to standard MLIR dialects](https://github.com/PennyLaneAI/catalyst/). To do this, we have relied on transformations available in `mlir-hlo-opt`. Part of our CI/CD process includes building `mlir-hlo-opt` from scratch in Github Actions whenever there's a new version of JAX. We noticed that a recent version of `mlir-hlo-opt` could not be built in Github Actions. We looked into this and found that a dependency was not being declared in a CMake file. This issue would normally not be found when building locally as it is triggered only when building using a single core. We believe that the issue can be resolved with the following patch. Thanks!\r\n\r\n**Description of change**: This patch declares LMHLOTransformsPassIncGen as a dependency to MhloTestAnalysis. Without it, building on a single core would attempt to compile `test_shape_component_analysis.cc` without having generated file `transforms/passes.h.inc`.\r\n\r\nThis error is not encountered when building on multiple cores as the distribution of the builds ensures that the file `transforms/passes.h.inc` is generated before attempting to compile `test_shape_component_analysis.cc`.\r\n\r\n**Benefits**: Building mlir-hlo in machines with limited resources will not run into this issue. This includes building on Github Actions.\r\n\r\n**Related Github issues:** Closes https://github.com/tensorflow/mlir-hlo/issues/68",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-06-23T14:45:38Z",
        "closed_at": "2023-06-27T09:18:51Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-23T07:02:09Z",
        "closed_at": "2023-06-26T16:08:26Z",
        "merged_at": "2023-06-26T16:08:26Z",
        "body": "Fixed spelling errors.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 182,
        "deletions": 62,
        "changed_files": 4,
        "created_at": "2023-06-22T14:17:16Z",
        "closed_at": "2023-06-27T21:34:25Z",
        "merged_at": "2023-06-27T21:34:25Z",
        "body": "Only build pip packages in ARM_CD action now to save time on the runners",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 9,
        "changed_files": 3,
        "created_at": "2023-06-22T14:07:24Z",
        "closed_at": "2023-06-26T17:06:32Z",
        "merged_at": "2023-06-26T17:06:32Z",
        "body": null,
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-22T12:04:11Z",
        "closed_at": "2023-06-22T13:51:36Z",
        "merged_at": null,
        "body": "Quiet those warnings about 'Installing as data is deprecated' as they just spam the log",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-21T16:25:22Z",
        "closed_at": "2023-06-23T14:58:27Z",
        "merged_at": "2023-06-23T14:58:27Z",
        "body": "//tensorflow/compiler/mlir/lite/debug:debug_test fails when built with gcc apparently due to differences in mangling of anonymous namespaces.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 59,
        "deletions": 25,
        "changed_files": 2,
        "created_at": "2023-06-21T14:20:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": "* When using tf.StridedSlice with new_axis_mask/shrink_axis_mask we must take into account the new/deleted dimentioned in begin_mask & end_mask.",
        "comments": 9
    },
    {
        "merged": true,
        "additions": 70,
        "deletions": 25,
        "changed_files": 3,
        "created_at": "2023-06-21T07:53:34Z",
        "closed_at": "2023-06-22T08:21:03Z",
        "merged_at": "2023-06-22T08:21:03Z",
        "body": "Cleanups build failures after commit 7e63c5529608ac11382c567fcda51a07c22dd401",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-06-20T12:39:04Z",
        "closed_at": "2023-07-10T12:26:50Z",
        "merged_at": "2023-07-10T12:26:50Z",
        "body": "Hi! We've been searching errors in tensorflow with [sydr-fuzz](https://github.com/ispras/oss-sydr-fuzz) security predicates and have found an error of unsigned integer overflow in `wav_io.cc:297`.\r\n\r\nThe error appears in computing the expected `bytes_per_second` value. Then it is compared with the input `bytes_per_second` value, and if they are not equal, the error is reported. But on the attached input, the unsigned integer overflow occurs and despite the fact that `bytes_per_sample` and `sample_rate` don't correspond to input `bytes_per_second`, the `expected_bytes_per_second` appears to be equal to `bytes_per_second` and the following check is passed.\r\n\r\nWith the attached input, `bytes_per_sample` equals to 128, `sample_rate` equals to 3196092545, and the `expected_bytes_per_second` equals to `bytes_per_second` equals to 1077952640.\r\n\r\nTo fix the error we suggest to change `expected_bytes_per_second` type to `uint64` and explicitly cast types to `uint64` in multiplication.\r\n\r\nTensorFlow version: 0db597d0d758aba578783b5bf46c889700a45085\r\n\r\nHow to reproduce\r\n\r\n1. Build docker from [here](https://github.com/ispras/oss-sydr-fuzz/tree/master/projects/tensorflow) and run the container:\r\n\r\n        sudo docker build -t oss-sydr-fuzz-tensorflow .\r\n        sudo docker run --privileged --rm -v `pwd`:/fuzz -it oss-sydr-fuzz-tensorflow /bin/bash\r\n\r\n2. Run the target on this input: [tf-wav-overflow.wav.txt](https://github.com/tensorflow/tensorflow/files/11799137/tf-wav-overflow.wav.txt)\r\n\r\n\r\n        /fuzzer/decode_wav_fuzz tf-wav-overflow.wav.txt\r\n\r\n3. You will see the following output:\r\n         \r\n        tensorflow/core/lib/wav/wav_io.cc:297:61: runtime error: unsigned integer overflow: 128 * 3196092545 cannot be represented in type 'unsigned int'\r\n        SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior tensorflow/core/lib/wav/wav_io.cc:297:61 in",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-20T07:22:06Z",
        "closed_at": "2023-06-21T06:40:08Z",
        "merged_at": "2023-06-21T06:40:08Z",
        "body": "I have changed the broken link address for xla_gpu_codegen from https://www.tensorflow.org/mlir/xla_gpu_codegen to https://www.tensorflow.org/mlir/xla_gpu_codegen?hl=zh-cn in TF documentation.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-06-19T15:28:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Background:\r\nError occurs usually means correct offset of next record cannot be determined.\r\nWhen chaining with ignore_errors to avoid single corrupted record abort whole processing, as reader doesn't advance to next file, then processing will be stuck a busy loop reading the broken record indefinitely.\r\n\r\nChanges: \r\nMoving on to next file if one read error shows and log errors.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2023-06-16T19:29:20Z",
        "closed_at": "2023-06-16T19:39:23Z",
        "merged_at": "2023-06-16T19:39:23Z",
        "body": "\u2026memory\r\n\r\nallocations, and stash them inside the runtime while TPUExecute is being invoked. These temporary device memory allocations are cleared at the end of TPUExecute.\r\n\r\nPiperOrigin-RevId: 540156433",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2023-06-16T10:00:15Z",
        "closed_at": "2023-06-21T03:42:23Z",
        "merged_at": "2023-06-21T03:42:23Z",
        "body": "Need to set defaults for auditwheel platform and project name",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 59,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2023-06-16T09:28:43Z",
        "closed_at": "2023-07-31T19:17:53Z",
        "merged_at": "2023-07-31T19:17:53Z",
        "body": "This commit updates the quantized matmul operation to produce the correct quantized output.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1142,
        "deletions": 178,
        "changed_files": 52,
        "created_at": "2023-06-16T07:03:41Z",
        "closed_at": "2023-09-30T01:46:57Z",
        "merged_at": null,
        "body": "This PR:\r\n\r\n* Enables detection of hipblaslt. Hooks it up in place of cublaslt when available. \r\n\r\n* Enables the _FusedMatMul op for ROCm and routes it to hipblaslt. \r\n\r\n* Fixes certain #includes due to their deprecation in ROCm 5.6.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-06-15T23:01:54Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This is a fix for issue https://github.com/tensorflow/tensorflow/issues/60884. If we initialize some ```TFLiteConverter``` object ```converter = tf.lite.TFLiteConverter.from_keras_model(model)```, then in order to customize quantization, we must first change our converter's supported types. For example, before running\r\n```\r\nconverter.target_spec.supported_ops = [\r\n    tf.lite.OpsSet.TFLITE_BUILTINS,\r\n    tf.lite.OpsSet.EXPERIMENTAL_TFLITE_BUILTINS_ACTIVATIONS_INT16_WEIGHTS_INT8\r\n]\r\n```\r\nwe must run ```converter.target_spec.supported_types = [tf.int8]```. This behaviour is clunky and the extra line goes undocumented. The proposed changes allow us to omit ```converter.target_spec.supported_types = [tf.int8]``` and simply change our ```supported_types``` during the initialization of our converter:\r\n```converter = tf.lite.TFLiteConverter.from_keras_model(model, supported_types=[tf.int8])```.",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2023-06-15T20:23:19Z",
        "closed_at": "2023-06-15T22:44:40Z",
        "merged_at": "2023-06-15T22:44:40Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/6c2bd21fb32e2a3b16d6a9ca2fd661acb196fd7f",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 19,
        "deletions": 13,
        "changed_files": 3,
        "created_at": "2023-06-15T18:32:46Z",
        "closed_at": "2023-06-15T22:55:36Z",
        "merged_at": "2023-06-15T22:55:36Z",
        "body": "\u2026memory\r\n\r\nallocations, and stash them inside the runtime while TPUExecute is being invoked. These temporary device memory allocations are cleared at the end of TPUExecute.\r\n\r\nPiperOrigin-RevId: 540156433",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 21,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-06-15T17:29:05Z",
        "closed_at": "2023-06-15T22:44:22Z",
        "merged_at": "2023-06-15T22:44:22Z",
        "body": "Refer to the original commit: https://github.com/tensorflow/tensorflow/commit/7a0fa5541fdeb67cba9ae2ef13a7dd507da58f76",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 92,
        "deletions": 100,
        "changed_files": 6,
        "created_at": "2023-06-15T15:25:53Z",
        "closed_at": "2023-06-16T01:16:20Z",
        "merged_at": "2023-06-16T01:16:19Z",
        "body": "pip tests are no longer supported so stop running them on AARCH64, run the python tests instead.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 21,
        "changed_files": 9,
        "created_at": "2023-06-15T11:25:30Z",
        "closed_at": "2023-06-15T14:17:13Z",
        "merged_at": null,
        "body": "For hermetic python, TF_PYTHON_VERSION is being used but with different semantics so update usage to match.",
        "comments": 1
    }
]