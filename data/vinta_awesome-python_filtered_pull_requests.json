[
    {
        "merged": false,
        "additions": 64,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-16T07:34:46Z",
        "closed_at": "2023-10-17T03:53:31Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-09T15:59:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAdded TextBlob to the NLP libraries. TextBlob is a Simple, Pythonic, text processing--Sentiment analysis, part-of-speech tagging, noun phrase extraction, translation, and more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nTextBlob stands on the giant shoulders of [NLTK](http://nltk.org/) and [pattern](https://github.com/clips/pattern/), and plays nicely with both.\r\n\r\n[Features](https://github.com/sloria/TextBlob#features)\r\nNoun phrase extraction\r\nPart-of-speech tagging\r\nSentiment analysis\r\nClassification (Naive Bayes, Decision Tree)\r\nTokenization (splitting text into words and sentences)\r\nWord and phrase frequencies\r\nParsing\r\nn-grams\r\nWord inflection (pluralization and singularization) and lemmatization\r\nSpelling correction\r\nAdd new models or languages through extensions\r\nWordNet integration\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\nPlease tag this as hacktoberfest-approved!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-04T09:43:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Gymnasium](https://github.com/Farama-Foundation/Gymnasium) is the successor of [gym](https://github.com/openai/gym), later of which is no longer being maintained.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nJust the fact that [gym](https://github.com/openai/gym) is no longer maintained and all further developments and fixes will only happen in [Gymnasium](https://github.com/Farama-Foundation/Gymnasium) should be enough to validate this change.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-10-03T20:51:21Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n**[Slideflow](https://github.com/jamesdolezal/slideflow)** is a deep learning library for digital pathology that provides a unified API for building, training, and testing models using Tensorflow or PyTorch.\r\n\r\nSlideflow includes tools for [whole-slide image processing](https://slideflow.dev/slide_processing), customizable deep learning [model training](https://slideflow.dev/training) with dozens of supported architectures, [multi-instance learning](https://slideflow.dev/mil), [self-supervised learning](https://slideflow.dev/ssl), [cell segmentation](https://slideflow.dev/cellseg), explainability tools (including [heatmaps](https://slideflow.dev/evaluation/#heatmaps), [mosaic maps](https://slideflow.dev/posthoc/#mosaic-maps), [GANs](https://slideflow.dev/stylegan/), and [saliency maps](https://slideflow.dev/saliency/)), analysis of [layer activations](https://slideflow.dev/posthoc/), [uncertainty quantification](https://slideflow.dev/uq/), and more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSlideflow is a one-of-a-kind library in this field and I haven't come across a similar one with this level of robustness. A variety of fast, optimized whole-slide image processing tools are included, including background filtering, blur/artifact detection, [stain normalization/augmentation](https://slideflow.dev/norm), and efficient storage in *.tfrecords format. Model training is easy and highly configurable, with a straightforward API for training custom architectures. Slideflow can also be used as an image processing backend for external training loops, serving optimized tf.data.Dataset or torch.utils.data.DataLoader to read and process slide images and perform real-time stain normalization.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-30T18:48:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nHere are some of the main features of Scikit-learn:\r\n1. Data classification and modeling.\r\n2. End-to-end machine learning algorithms.\r\n3. Pre-processing of data.\r\n4. Model selection. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is easily interoperable with other SciPy stack tools. Scikit-learn has a user-friendly and consistent interaction that makes it easy for you to share and use data. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-22T10:15:57Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nFastStream is a project that simplifies the process of writing producers and consumers for different message brokers.\r\nIt's currently supporting RabbitMQ and Apache Kafka only, but there are other brokers that will be implemented in a future.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFastStream is automated.\r\nIt automatically handles networking, validating, parsing and docs creation.\r\nIt's also fully compatible with any HTTP framework.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-14T04:43:33Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nI updated the homepage link for psycopg2, that was not working previously.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI discovered that psycopg now has version 3. Could psycopg3 be added as a new project?\r\n\r\nSome new features from psycopg3 compared to psycopg2\r\n- Asynchronous support\r\n- Server-side parameters binding\r\n- Prepared statements\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 877,
        "deletions": 601,
        "changed_files": 5,
        "created_at": "2023-09-14T00:45:33Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Summary\r\n\r\nAdd another processing script - `pypify.py` to apply to `README.md` after `sort.py`. \r\n\r\nThis script will add one-liners to each _installable_ library / package in \r\nREADME.md with a script to install it through pip. These one-liners are scraped from PyPI. \r\n\r\nSee docs in `pypify.py`.\r\n\r\n**EXAMPLE:**\r\n\r\nCurrent line featuring the flower package:\r\n```\r\n* [flower](https://github.com/mher/flower) - Real-time monitor and web admin for Celery.\r\n```\r\n\r\nAfter pypify:\r\n```\r\n* [flower](https://github.com/mher/flower) - Real-time monitor and web admin for Celery. **INSTALL**: `pip install flower`\r\n```\r\n\r\nThe resulting enhanced `README.md` can be post-processed by other scripts to scrape the \r\npackage info and give the user the ability to install them automatically in some package manager.\r\n\r\n## TODO\r\n\r\n- Maybe add exporting `README.md` to some structured format, e.g. JSON, YAML, Pandas, Excel, etc.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-13T09:26:59Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nImagine your job queue operates at very high rps and needs distribution over multiple workers. But you need to keep context-sensitive requests in same thread and manage thread request processing priority. In other words, sharded queue is a queue with sub-queues inside. Tasks are executed in FIFO order and you define how to route them correctly per handler basis.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no libraries that can be used for sharding and prioritize job queues keeping strict order\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-11T20:17:37Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nThis package is awesome because it helps you track all your LLM prompts, templates, variables and other prompt metadata. You can also visualize prompt chains and score/evaluate prompts with human feedback.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere are a lot of packages that are either just simple wrappers around openai or langchain, but you can do a whole lot more with CometLLM, including use the interactive UI. There are also a lot of packages that do one or some elements of prompt \"engineering\"/management, but there aren't many that can do all of these things.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-06T08:27:52Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[PDM](https://pdm.fming.dev/latest/) is a modern Python package and dependency manager supporting the latest PEP standards. But it is more than a package manager. It boosts your development workflow in various aspects. The most significant benefit is it installs and manages packages in a similar way to npm that doesn't need to create a virtualenv at all!\r\n\r\nFeature highlights:\r\n\r\n- Simple and fast dependency resolver, mainly for large binary distributions.\r\n- A [PEP 517](https://www.python.org/dev/peps/pep-0517) build backend.\r\n- [PEP 621](https://www.python.org/dev/peps/pep-0621) project metadata.\r\n- Flexible and powerful plug-in system.\r\n- Versatile user scripts.\r\n- Opt-in centralized installation cache like [pnpm](https://pnpm.io/motivation#saving-disk-space-and-boosting-installation-speed).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPDM is like Poetry, but more respectful of PEP standards, with more features.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-01T14:01:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nMamba is a fast, robust, and cross-platform package manager.\r\n\r\nDescribe features.\r\nIt runs on Windows, OS X and Linux (ARM64 and PPC64LE included) and is fully compatible with conda packages and supports most of conda\u2019s commands.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThe mamba-org organization hosts multiple Mamba flavors:\r\n\r\nmamba: a Python-based CLI conceived as a drop-in replacement for conda, offering higher speed and more reliable environment solutions\r\n\r\nmicromamba: a pure C++-based CLI, self-contained in a single-file executable\r\n\r\nlibmamba: a C++ library exposing low-level and high-level APIs on top of which both mamba and micromamba are built\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-30T04:33:19Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n- **[README-AI](https://github.com/eli64s/readme-ai)**: Python library and CLI that auto-generates comprehensive README.md files for your software and data projects.\r\n- **Motivation**: Simplifies the documentation process, aiming to enhance the adoption and usability of open-source projects.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. **Automated Codebase Documentation**: README-AI leverages large-language models to generate technical summaries of your repository contents.\r\n\r\n2. **Badge Integration**: Visualizes codebase metadata via [shields.io](https://shields.io/) badges and more, offering a visually pleasing and informative README out-of-the-box.\r\n\r\n3. **User-Friendly**: This tool aims to improve the technical workflow for all skill levels and project use-cases.\r\n\r\n4. **Dynamic Setup Guides**: README-AI preprocesses the contents of your repository and generates dynamic instructions for installing, running, and testing your project.\r\n\r\n5. **AI-Powered Content**: Detailed prompts embedded with repository metadata are used to create a more contextually accurate and in-depth README, via integration with OpenAI's GPT APIs.\r\n\r\n6. **Custom Templates**: Feature under development that allows users to select from a variety of README formats and styles, tailored for specific use-cases like data science, AI/ML, research, etc.\r\n\r\n7. **Flexible Installation Options**: Offers various installation methods, including Pip, Docker, Conda, and manual setup, giving users multiple options to suit their workflow.\r\n\r\n---\r\n\r\nThank you!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-29T13:00:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Adding a new Python library for data visualization and web application building\r\n\r\n## What is this Python project?\r\n\r\nTaipy is an open-source Python library for building your web application front-end & back-end. \r\nNo knowledge of web development is required! \r\n\r\nTaipy helps you develop an application's front-end without knowing about HTML, JS, and CSS. It provides a simple syntax, accelerating the process of creating interactive and customizable multiple-page dashboards. Taipy generates highly interactive interfaces, including charts and all sorts of widely used controls.\r\n\r\nTaipy is also used to develop the back-end of an application. It models dataflows and orchestrates pipelines. Each pipeline execution is referred to as a scenario. Scenarios are stored, recorded, and actionable, enabling what-if analysis and KPI comparison.\r\n\r\nConfiguring your pipelines has never been simpler with the help of Taipy Studio, the graphical editor.\r\n\r\nAs a data scientist or developer, Taipy will help you be successful with your Python developments. Whether you want to develop a simple pilot or a full-scale application, either on IDEs\u2019 or Notebooks, Taipy provides all the functionalities you need. It has been designed to reduce drastically the development and deployment time.\r\n\r\nBesides, Taipy greatly eases your web application deployment. It provides the most suitable cloud tool to host, deploy, and share your Taipy applications easily.\u00a0In addition, this platform provides the ability to manage, store, and maintain the various states of your backend.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Provides a simple syntax to accelerate the process of creating interactive & customizable multiple-page dashboards without requiring any knowledge of web development (CSS, HTML, and JavaScript). It uses augmented Markdown.\r\n- Flexible: easy user input\r\n- Enables the use of asynchronous calls\r\n- Decimator: allows dealing with large/big data\r\n- Available on several development environments: IDEs or Notebooks.\r\n- API extension: allows the bringing of third-party graphical components and libraries.\r\n- Offers front-end and back-end components. Pure Python.\r\n- Callbacks: Efficient event loops\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-23T05:16:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Javascript\r\n\r\n*Libraries for interpolating with javascript code.*\r\n\r\n* Duktape\r\n    * [dukpy](https://github.com/amol-/dukpy) - Simple JavaScript interpreter for Python.\r\n* Node\r\n    * [JSPyBridge](https://github.com/extremeheat/JSPyBridge) - \ud83c\udf09. Bridge to interoperate Node.js and Python.\r\n* SpiderMonkey\r\n    * [PythonMonkey](https://github.com/Distributive-Network/PythonMonkey) - A Mozilla SpiderMonkey JavaScript engine embedded into the Python VM, using the Python engine to provide the JS host environment.\r\n* Transpiler\r\n    * [Js2Py](https://github.com/PiotrDabkowski/Js2Py/) - JavaScript to Python Translator & JavaScript interpreter written in 100% pure Python\ud83d\ude80\r\n* V8\r\n    * [PyMiniRacer](https://github.com/sqreen/PyMiniRacer) - PyMiniRacer is a V8 bridge in Python.\r\n    * [STPyV8](https://github.com/cloudflare/stpyv8) - Python 3 and JavaScript interoperability. Successor To PyV8.\r\n\r\n---\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-22T13:44:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n**[Questionary](https://github.com/tmbo/questionary)** is a Python library designed to provide a simple mechanic for building pretty command-line user prompts. It's based on functional programming principles and inspired by functional user prompts like select, rawselect, text, password, confirm, and many more which can be found in Inquirer.js.\r\n\r\n**Functional Design**: Straightforward way to prompt the user for input by focusing on functional design.\r\n\r\n**Variety of Prompts**: It supports a wide range of prompts like free text inputs, multiple choice, yes/no confirmation, and so on.\r\n\r\n**Validation Support**: Can provide custom validation for any question type.\r\n\r\n**Auto-Completion**: Support for autocompletion in text prompt.\r\n\r\n**Styling**: Built-in styles for questions and default answers, including color and token customization.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n**User Experience**: questionary focuses on a fluid and interactive experience. It navigates between questions based on the answers provided.\r\n\r\n**Customizability**: It provides a greater level of control over question styling and presentation, supporting multiple styles and colors.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-21T11:56:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nA language for matching/validating/filtering Python dictionaries\r\n## What's the difference between this Python project and similar ones?\r\nThe kmatch library can be used for a wide variety of applications. One example is filtering a list of dictionaries that match a pattern. Another example is to validate dictionaries passed to a function.\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-21T11:49:44Z",
        "closed_at": "2023-08-21T11:52:14Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nkmatch library provides a language for matching python dictionaries\r\n\r\n## What's the difference between this Python project and similar ones?\r\nkmatch can be used for a wide variety of application\r\nOne example is filtering a list of dictionaries that match a pattern. and you can validate dictionaries passed to a function\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-20T23:48:05Z",
        "closed_at": null,
        "merged_at": null,
        "body": "# General Comments\r\n\r\nThe purpose of this pull request is to add polars to the Data Analysis section and Plotly to the Data Visualization section \r\n\r\n\r\nThe changes made to the README.md file are well-formatted and adhere to the existing style of the document.\r\nThe links provided for polars and Plotly point to the correct GitHub repositories.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-10T01:20:33Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nDjango-jazzmin is an Open source Drop-in theme for Django admin that provides a more stylish and user-friendly admin interface for Django projects. It is based on the AdminLTE 3 and Bootstrap 4 frameworks, and it offers a number of features that make it more powerful and flexible than the default Django admin interface.\r\n\r\n\r\nDescribe features.\r\n- Drop-in admin skin, all configurations optional\r\n- Bootstrap 4 & AdminLTE UI components\r\n- Customisable UI (via Live UI changes, or custom CSS/JS)\r\n- Customisable side, top and user menu\r\n- 4 different Change form templates (horizontal tabs, vertical tabs, carousel, collapsible)\r\n- Responsive\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Actively maintained: Django-jazzmin is still actively maintained, with regular releases and bug fixes. Django-suit has not been updated since 2019, Django-xadmin has not been updated since 2020, and Django-jet is still in its early stages of development.\r\n\r\n- Easy to integrate: Django-jazzmin is easy to integrate with existing Django projects. It can be installed with a single command and does not require any changes to your Django models. \r\n\r\n- Wide range of features: Django-jazzmin offers a wide range of features, including it Live UI changes.\r\n\r\n- Popularity: Django-Jazzmin is more popular than other similar libraries and has good documentation and support.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review.\r\n\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-08T10:20:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nResume Matcher\r\nDescribe features.\r\n- Python Based ATS Tool to help people get their resumes improved with matching keywords from Job Description.\r\n- 1.4K+ Stars, 200+ Fork & 250+ people in community building this tool more powerful. \r\n- Free & Open Source, powered by Vector Search, Spacy, NLTK & more. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n- This is a free and open-source tool or alternative to paid software that are out there. \r\n- This gives control to the people and the user's data is localized.\r\n- This is built by the community. For the community. \r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-05T15:21:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Zipline is no longer maintained (see https://github.com/quantopian/zipline/issues/2841).\r\n\r\nEither remove or replace with a maintained fork.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-02T03:14:11Z",
        "closed_at": "2023-09-22T17:05:17Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-01T09:25:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Hazm](https://www.roshan-ai.ir/hazm/) is a python library to perform natural language processing tasks on Persian text. It offers various features for analyzing, processing, and understanding Persian text. You can use Hazm to normalize text, tokenize sentences and words, lemmatize words, assign part-of-speech tags, identify dependency relations, create word and sentence embeddings, or read popular Persian corpora.\r\n\r\n**Features:**\r\n- Normalization: Converts text to a standard form, such as removing diacritics, correcting spacing, etc.\r\n- Tokenization: Splits text into sentences and words.\r\n- Lemmatization: Reduces words to their base forms.\r\n- POS tagging: Assigns a part of speech to each word.\r\n- Dependency parsing: Identifies the syntactic relations between words.\r\n- Embedding: Creates vector representations of words and sentences.\r\n- Persian corpora reading: Easily read popular Persian corpora with ready-made scripts and minimal code.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAs far as my knowledge goes, there are no other libraries that can match the utility provided by this package.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-19T09:54:14Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nVedro.io appears to be a modern and pragmatic framework, providing all the necessary functionality right out of the box without relying on magic.\r\n\r\nFeatures:\r\n\r\n- Many plugins (for Allure, PyCharm, Gitlab, Playwright, Pyppeteer, Vedro-dev)\r\n- Beautiful reporting system\r\n- Skipping scenarios\r\n- Built-in parametrization\r\n- Built-in scenarios distribution server (Vedro Cloud)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Vedro is a modular framework. Each library framework can be replaced with any other library.\r\n- Vedro has no magic (no autouse fixtures and any global variables).\r\n- Vedro has a blog where users can find best practices, examples, and more.\r\n- Vedro has a built-in scenarios distribution server (self-hosted Vedro Cloud).\r\n- Still a small but active community.\r\n- Vedro is not only a framework for testing. Vedro is a universe of libraries that work well together and separately from each other.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-16T22:37:37Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n[\r\npython-starlark-go](https://github.com/caketop/python-starlark-go) provides Python bindings for Starlark, a dialect of Python intended for configuration. Starlark can't access your files and is deterministic, meaning that the same code and input data always produce the same result.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompared to INI, JSON, YAML, TOML, etc. for configuration, the advantage is that you configure your Python program in almost-Python without compromising security. The worst a Starlark program can do is waste memory and CPU time. When you use a programming language for configuration, you don't have to choose between repeating yourself and adding control flow to, e.g., YAML (usually an anti-pattern). Compared to [Jsonnet](https://github.com/google/jsonnet) or [Dhall](https://github.com/s-zeng/dhall-python), there is less language to learn.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-12T23:50:48Z",
        "closed_at": "2023-07-13T15:37:09Z",
        "merged_at": "2023-07-13T15:37:09Z",
        "body": "This open source project provides lighting fast capabilities for PyTorch training code.\r\nIt is explained in details in this post - https://magazine.sebastianraschka.com/p/accelerating-pytorch-model-training\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-12T01:57:49Z",
        "closed_at": null,
        "merged_at": null,
        "body": "bold\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-10T07:33:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nTextual is a Rapid Application Development framework for Python, built by [Textualize.io](https://www.textualize.io/).\r\nBuild sophisticated user interfaces with a simple Python API. Run your apps in the terminal and (coming soon) a web browser.\r\n\r\nYou can build sophisticated apps in your terminal using Textual. It supports majority of Widgets (components) supported by other GUI frameworks. Textual is based on modern web development framework and it's very easy to develop apps. it also supports events that are asynchronous in nature.\r\n\r\n## What's the difference between this Python project and similar ones?\r\ncurses is pretty old compared to Textual. \r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-09T12:43:40Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt is selenium based scraper with best practices from experienced bot developers to help create undetectable, low boilerplate and easy to debug bots.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1.  Adds Powerful Methods to make working with Selenium a lot easier.\r\n2.  Follows best practices to avoid Bot Detection by Cloudflare and PerimeterX.\r\n3.  Saves the HTML, Screenshot, and the run details for each task run to enable easy debugging.\r\n4.  Utility components to write scraped data as JSON, CSV, and Excel files.\r\n5.  Automatically downloads and initializes the correct Chrome driver.\r\n6.  Fast and Developer friendly.\r\n\r\n--\r\n*Ranks #1 in webscraping in dev.to see [here](https://dev.to/t/webscraping/top/infinity)*\r\nPlease let me know if you have questions regarding Bose. You may view Bose [here](https://github.com/omkarcloud/bose) (Has 110 Stars)\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4353,
        "deletions": 0,
        "changed_files": 17,
        "created_at": "2023-07-09T06:02:07Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\n\nDescribe features.\n\n## What's the difference between this Python project and similar ones?\n\nEnumerate comparisons.\n\n--\n\nAnyone who agrees with this pull request could submit an *Approve* review to it.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-09T03:43:02Z",
        "closed_at": "2023-09-26T19:52:06Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nImageKit is a Django app that helps you to add variations of uploaded images to your models. These variations are called \u201cspecs\u201d and can include things like different sizes (e.g. thumbnails) and black and white versions.\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nIs faster and is integrated with Django models\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-08T10:09:59Z",
        "closed_at": null,
        "merged_at": null,
        "body": "add domain admin\r\n\r\n## What is this Python project?\r\n\r\na domain monitor systemt.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-07-07T02:08:05Z",
        "closed_at": "2023-07-07T02:08:22Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-06T03:19:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\nXorbits is a scalable and distributed system that scales many python libraries including numpy, pandas, sklearn, etc.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\nDetailed comparison can refer to https://doc.xorbits.io/en/latest/getting_started/why_xorbits/comparisons.html\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-04T14:30:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n**JoliGEN** is an integrated framework for training custom generative AI image-to-image models\r\n\r\nMain Features:\r\n\r\n- JoliGEN implements both **GAN and Diffusion models** for unpaired and paired image to image translation tasks, including domain and style adaptation with conservation of semantics such as image and object classes, masks, ...\r\n\r\n- JoliGEN generative AI capabilities are targeted at real world applications such as **Controled Image Generation**, **Augmented Reality**, **Dataset Smart Augmentation** and object insertion, **Synthetic to Real** transforms.\r\n\r\n- JoliGEN allows for fast and stable training with astonishing results. A [**server with REST API**](https://www.joligen.com/doc/server.html#running-joligen-server) is provided that allows for simplified deployment and usage.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis project combines various state-of-the-art methods and model architectures for training image-to-image generative models (such as [CycleGAN](https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix), [Palette](https://github.com/Janspiry/Palette-Image-to-Image-Diffusion-Models), [Cut](https://github.com/taesungp/contrastive-unpaired-translation)...),  open-source projects (like [Segment Anything](https://github.com/facebookresearch/segment-anything)), and [JoliBrain](https://github.com/jolibrain) open-source work.\r\n\r\nThere isn't really a similar project, at least not that we've heard of.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-02T12:21:47Z",
        "closed_at": null,
        "merged_at": null,
        "body": "**DemoGPT** enables you to create quick demos by just using prompts.\r\n\r\n## What is this Python project?\r\n\r\n-  **Automated Demo Creation**: With just a simple prompt, DemoGPT can help generate a basic framework for your application.\r\n\r\n-  **LLM Integration**: Built on top of powerful language models, DemoGPT brings the power of advanced AI into application building.\r\n\r\n-  **LangChain Code Generation**: DemoGPT uses LangChain's documentation tree and a Tree-of-Transformers approach to automatically generate application code.\r\n\r\n- **Streamlined User Interface**: With the Streamlit app, user-friendly design and easy navigation are prioritized.\r\n\r\n- **Customizability**: Users have the ability to customize the generated applications according to their specific requirements.\r\n\r\n- **Cross-Platform**: DemoGPT is designed to work across different platforms.\r\n\r\n-  **Open Source**: The codebase is open-source, allowing developers to extend and adapt it to their specific needs.\r\n\r\n-  **Ease of Use**: The system is designed with a focus on user experience, ensuring a shallow learning curve even for non-technical users.\r\n\r\n-  **Scalability**: The architecture is designed to handle the generation of complex applications while maintaining good performance.\r\n\r\n- **Community and Support**: A growing community of developers and enthusiasts is available for support and contribution.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n\ud83e\udde9\ud83d\udd25 DemoGPT enables you to create quick demos by using your prompt. The differentiation point is that it is built top on Langchain documentation tree and it uses ToT approach. It can easily crate LLM-based applications despite of other automation codes. It's specialized on prototype generation. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-22T17:18:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nCircuitPython is a microcontroller Python implementation\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI think CircuitPython is for high-level interfacing and building small projects, while MicroPython gives access to more low-level features.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-22T09:35:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Added Python Tutorial\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-17T10:18:39Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPyI18n is GNU gettext free, simple and easy to use internationalization library for Python, inspired by Ruby i18n. It supposed to be lightweight and fast all the time.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It is simple and easy to use, supports namespaces as well.\r\n- Does not require any additional dependencies other than PyYAML.\r\n- Actively supported and developed, all bugs are fixed as soon as possible.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-16T07:56:04Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nScalene is a high-performance CPU, GPU and memory profiler for Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It runs orders of magnitude faster than many other profilers.\r\n- Includes both CLI and a web-based GUI.\r\n- First profiler ever to incorporate AI-powered proposed optimizations.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-09T01:09:58Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is hands-down the fastest cryptography library I've used in Python and it's trustworthy.\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-06T17:21:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Unmaintained. Last release in 2018, commit in 2020.\r\nextra-malus : has ~ 1/4 of the forks and stars of the other projects of its category.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-03T07:48:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Added Oracle Database driver\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-06-02T23:56:05Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[pytest-watcher](https://github.com/olzhasar/pytest-watcher) is a tool to automatically rerun tests (using `pytest` by default) whenever your code changes.\r\nThe tool saves a lot of time and is especially useful for TDD practitioners.\r\n\r\nPypi:\r\nhttps://pypi.org/project/pytest-watcher/\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI believe there are currently no utilities like this in the list.\r\nPreviously, there was a project called `pytest-watch` which, unfortunately, is no longer maintained. This project serves as a substitute for it.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-24T17:50:19Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nmapfun is a function that applies a mapping function to an infinite number of input elements, with options to skip certain elements and selectively apply the mapping to keys and/or values of objects.\r\n\r\nThe mapfun function has been developed in JavaScript and Python, offering the same functionality in different programming languages.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-23T15:44:52Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[CustomTkinter](https://github.com/TomSchimansky/CustomTkinter) is a modern UI library based on tkinter\r\n\r\n## Features\r\n\r\n+ Can be used along side with tkinter\r\n+ Respects OS appearance(can be adjusted manually too)\r\n+ Has support for HighDPI scaling on windows and macos\r\n+ Consistent look across all OS\r\n+ Anyone with basic tkinter knowledge can easily use this\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\ntkinter is very easy to learn without the steep learning curve that comes with other GUI frameworks,being based on tkinter and without the ugly windows I think CustomTkinter is awesome and belongs here :cake:\r\n\r\n> ##### I dont know deleting a fork would delete its pending pull request too.So I opened again,sorry!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-22T11:07:03Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis library helps developers to turn their code snippets into snapshot images like PNG, which can be shared on any platform.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- First of its kind library\r\n- Several online applications are present, but no python package available\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-17T07:55:22Z",
        "closed_at": "2023-05-17T10:47:48Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[CustomTkinter](https://github.com/TomSchimansky/CustomTkinter) is a modern UI library based on tkinter\r\n\r\n## Features\r\n\r\n+ Can be used along side with tkinter\r\n+ Respects OS appearance(can be adjusted manually too)\r\n+ Has support for HighDPI scaling on windows and macos\r\n+ Consistent look across all OS\r\n+ Anyone with basic tkinter knowledge can easily use this\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\ntkinter is very easy to learn without the steep learning curve that comes with other GUI frameworks,being based on tkinter and without the ugly windows I think CustomTkinter is awesome and belongs here :cake:\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-15T17:48:47Z",
        "closed_at": null,
        "merged_at": null,
        "body": "PyAssimilator: https://github.com/knucklesuganda/py_assimilator\r\n\r\n## What is this Python project?\r\n\r\nThe best Python patterns that allow you to completely remove dependencies from your code. PyAssimilator supports multiple databases and enables you to quickly switch data storages without changing a single line of your code.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Simple and readable DDD patterns.\r\n- You can switch data storages without changing a single line of your code. For example, MySQL to MongoDB without changing the logic.\r\n- You can remove more than 40% of your boilerplate code.\r\n- You remove any kind of external dependencies from your code and move them to the patterns.\r\n- Common things like CRUD are already implemented, and you can use them with one function.\r\n- You can easily implement your own patterns for any kind of external provider.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-15T11:07:19Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Hey, I have added a reference link for Python Tutorial. I came upon this article while looking for resources to learn Python. This citation, in my opinion, will enhance the content of this article. Hope that my contribution will benefit other learners.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-14T08:44:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Add Alembic as DB migration tool\r\n\r\n## What is this Python project?\r\n\r\nAlembic provides for the creation, management, and invocation of change management scripts for a relational database, using SQLAlchemy as the underlying engine. It's widely used by a variety of projects such as airflow\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNot aware of any other libraries that can provide the same utility as this package does\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-10T14:45:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe [Thumbnails](https://github.com/pysnippet/thumbnails) is a video thumbnail generator for modern web video players that stands out for its unparalleled optimization for the fastest thumbnail generation.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nBy utilizing minimal resources, users can generate more in less time. And with a user-friendly CLI and a convenient Python API, this tool is the ultimate solution for efficient and streamlined thumbnail creation.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-08T18:55:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[deptry](https://github.com/fpgmaas/deptry) is a command line tool to check for issues with dependencies in a Python project, such as obsolete or missing dependencies. It supports the following types of projects:\r\n\r\n - Projects that use [Poetry](https://python-poetry.org/) and a corresponding pyproject.toml file\r\n - Projects that use [PDM](https://pdm.fming.dev/latest/) and a corresponding pyproject.toml file\r\n - Projects that use a requirements.txt file according to the [pip](https://pip.pypa.io/en/stable/user_guide/) standards\r\n\r\nDependency issues are detected by scanning for imported modules within all Python files in a directory and its subdirectories, and comparing those to the dependencies listed in the project's requirements.\r\n\r\nThe documentation can be found [here](https://fpgmaas.github.io/deptry/).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAs far as I know, the only similar project is [pip-check-reqs](https://github.com/r1chardj0n3s/pip-check-reqs). This only supports scanning of `requirements.txt`, whereas deptry supports a broader range of dependency specifications. It also contains a richer set of functionality, is currently under more active development, and has better documentation.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-04T15:27:46Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Update Pyqt and add PySide\r\n\r\n## PyQT vs PySide\r\n\r\nPyQt and PySide are two sets of Python bindings for the Qt toolkit by The Qt Company, used for developing graphical user interface (GUI) applications. Both are very similar in terms of functionality and design, as they both provide Python bindings for the same Qt libraries. However, there are some differences between them that are detailed below:\r\n\r\nLicense: PyQt has a commercial license, which means a license is required for commercial use. PySide, on the other hand, is open-source and distributed under the terms of the GNU General Public License (GPL).\r\n\r\nSupport: PyQt is maintained and developed by Riverbank Computing Ltd., while PySide is developed and maintained by the open-source community and The Qt Company.\r\n\r\nVersions: PyQt has support for older versions of Qt, while PySide only has support for more recent versions.\r\n\r\nDocumentation: PyQt has more detailed and extensive documentation compared to PySide.\r\n\r\nOverall, both tools are excellent choices for developing GUI applications in Python. The choice between PyQt and PySide will depend on the project's needs, personal preference, and budget.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-03T21:42:03Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPydantic:\r\n* uses type hints to define validation schema, so static typing tools and IDEs work elegantly with your data, and you don't need to learn a new DSL to define schemas\r\n* has JSON Schema integration\r\n* Supports validation of dataclasses\r\n* Is generally faster than other validation libraries\r\n* is the validation behind the very popular [FastAPI](https://fastapi.tiangolo.com/) web framework (already listed here)\r\n\r\nPydantic is download [60m times a month](https://pepy.tech/project/pydantic) - it's the most downloaded python data validation library.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-05-02T12:28:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPython binding for Dear ImGUI C++ which is **light-weight** and **bloat-free**\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n**Better implementation** of Dear ImGUI C++ library as a Python binding, \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-26T01:47:46Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n* This tool generates various reports to help analyze memory usage in libraries and applications. Fully customizable reporting data!\r\n* Can act as library to perform fine-grained profiling tasks.\r\n* Full stack traces for every function call so it can accurately represent the call stack, unlike sampling profilers.\r\n* Ability to work with Python and C/C++ threading features.\r\n* Integration with Jupyter Notebooks by using cell magic.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1) This project is actively maintained by the Bloomberg Engineering team.\r\n2) The project was originally an internal tool for development within the organization, which has since been moved to be an open source project on August 27, 2022.\r\n3) The closest project similar to this one is [pyflame](https://github.com/uber-archive/pyflame) which was written to leverage C++ is currently unmaintained and deprecated.\r\n4) Native integration with the pytest library.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-23T11:59:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nMediaPipe Solutions provides a suite of libraries and tools for you to quickly apply artificial intelligence (AI) and machine learning (ML) techniques in your applications. You can plug these solutions into your applications immediately, customize them to your needs, and use them across multiple development platforms.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\ni didn't find any\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-23T04:49:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## DI-engine\r\n\r\nDI-engine is a generalized Decision Intelligence engine. It supports most basic deep reinforcement learning (DRL) algorithms, such as DQN, PPO, SAC, and domain-specific algorithms like QMIX in multi-agent RL, GAIL in inverse RL, and RND in exploration problems.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-19T11:30:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt compiles all Python libraries together for easy access\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-13T01:50:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-04-12T05:23:54Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nUpdated the existing ReadMe file\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nfuzzywuzzy git repo is moved and renamed to thefuzz\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-12T00:19:32Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPyBroker is a framework for creating algorithmic trading strategies, including those that utilize machine learning.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUnlike other algotrading frameworks, PyBroker is specifically designed for developing trading strategies that use machine learning. With PyBroker, you can easily create and fine-tune trading rules, build powerful models, and gain valuable insights into your strategy\u2019s performance.\r\n\r\nSome of the key features of PyBroker include:\r\n\r\n- A super-fast backtesting engine built using NumPy and accelerated with Numba.\r\n\r\n- The ability to create and execute trading rules and models across multiple instruments with ease.\r\n\r\n- Access to historical data from Alpaca and Yahoo Finance, or from your own data provider.\r\n\r\n- The option to train and backtest models using Walkforward Analysis, which simulates how the strategy would perform during actual trading.\r\n\r\n- More reliable trading metrics that use randomized bootstrapping to provide more accurate results.\r\n\r\n- Support for strategies that use ranking and flexible position sizing.\r\n\r\n- Caching of downloaded data, indicators, and models to speed up your development process.\r\n\r\n- Parallelized computations that enable faster performance.\r\n\r\nAdditionally, PyBroker was written to be Pythonic and very easy to use.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-11T13:43:32Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nThis is an open source cross platform app developement framework\r\nDescribe features.\r\n\r\nAdded a new section but not sure how to link, can anyone help me with the link? If anyone responds I'll describe it!\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-04-11T10:17:45Z",
        "closed_at": "2023-04-12T15:40:58Z",
        "merged_at": null,
        "body": "minor spelling correction to readme.md document.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-04-09T14:42:19Z",
        "closed_at": null,
        "merged_at": null,
        "body": "* PyPDF2 was merged into pypdf. PyPDF2 got deprecated ([source](https://pypi.org/project/PyPDF2/))\r\n* Link to PyPI instead of the (moved) Github project\r\n* `pypdf==3.1.0` is essentially the same as `PyPDF2==3.0.0`, except for the name\r\n\r\nI am the maintainer of both projects, so I know what I'm talking about :-)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-05T16:53:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPants is a flexible build system for Python, JVM, Go and other languages and environments. It focuses on build determinism and fine-grained caching to make your builds fast and reliable. It leverages existing information via code introspection to minimize boilerplate and intelligently create dependency links between parts of your codebase, so that you can build, test, and ship the things that you've changed, and not the things you haven't. While it is typically envisaged as a tool for managing a monorepo, it can be used as well for managing single projects in a repository.\r\n\r\nPants started at Twitter to handle their Scala monorepo, but was eventually spun off into its own thing, with a Pants v2 engine being a complete re-write from the ground up, focusing on more generalized use cases, rather than being an open-sourced version of a large SV company's build tools.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUnlike Poetry or Flit, Pants has very strong support for multiple build targets, and can easily manage multiple projects with a single repository. It's a general purpose build tool that could be integrated with multiple language environments. Unlike some of the other tools in its class (like Bazel or Please), Pants is very actively developed, and has a very active community. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-05T04:09:21Z",
        "closed_at": "2023-04-22T16:40:32Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA library that provides access to the full Project Gutenberg dataset.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no other maintained libraries I could find for accessing Project Gutenberg.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-03T18:03:14Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nOpen-source NLP framework for building industrial strength applications on top of Transformer and LLM AI models.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Supports a wide range of models\r\n* Supports a wide range of databases and vector stores\r\n* Easily customisable and extendable, NLP pipelines can be easily composed into larger applications\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-02T20:56:15Z",
        "closed_at": null,
        "merged_at": null,
        "body": "I'd like to propose adding the smtplib module to the repository. smtplib is a Python standard library that provides an SMTP client session object to send emails over the internet. Other popular libraries, like yagmail, rely on smtplib as a dependency.\r\n\r\nI believe adding smtplib to the repository would be good to know this module\r\n\r\nIf you agree with this proposal, please consider submitting an Approve review for this pull request.\r\n\r\nThank you!\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-31T14:39:57Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nWeekly recap with tutorials, articles and projects.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEach article/project has a link to the relevant discussions (example: https://discu.eu/weekly/python/2023/12/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-27T00:47:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is an async task queue, similar to celery or dramatiq. But this library is capable of executing async funcions. \r\n\r\nAlso it has replaceable brokers for different queue implementations:\r\n* Redis pub\\sub\r\n* RabbitMQ\r\n* Kafka\r\n* Nats\r\n* Memphis\r\n\r\nand more to come.\r\n\r\nAlso, it supports integrations with async frameworks like: \r\n* FastAPI\r\n* AioHTTP\r\n* LiteStar\r\n* AioGram for building telegram bots\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI've created a comparison table in docs. Please take a look at [this table](https://taskiq-python.github.io/guide/#why-not-use-existing-libraries). \r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-26T11:47:01Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-03-24T23:08:39Z",
        "closed_at": "2023-03-27T14:18:30Z",
        "merged_at": "2023-03-27T14:18:30Z",
        "body": "Fixed issue #2398 by changing the name of the \"Files\" section so it doesn't link to the actual files of the project.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-24T20:40:33Z",
        "closed_at": "2023-03-27T14:17:32Z",
        "merged_at": "2023-03-27T14:17:32Z",
        "body": "Fixed Zappa github project link as it moved to a new repository under https://github.com/zappa/Zappa\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-22T17:00:15Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe RAPIDS libraries of cuDF, cuML and cuGraph that provide dataframe manipulation operations, ML algortihms, and graph algorithms. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nGPU accelerated Machine learning ETL libraries vs the popular CPU versions (pandas, scikit-learn, networkx, and others)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-22T02:52:55Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAn online learning resource for Python devs to learn about common security vulnerabilities in the code and how to fix them in a fun and interactive manner while also getting a score for it in a game.\r\nCan visit the site at: https://play.secdim.com/game/python\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhile there might be resources for outlining security vulnerabilities, none of them teach how to fix it through a game. This platform specializes in creating secure programming games to teach application security through.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-19T13:14:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nFlaskNetworkBackup is free open-source Flask app for backup on switches,routers and firewalls.\r\n\r\nThis app can:\r\n\r\n    Getting backup from Fortinet, Palo Alto, Cisco, Aruba, Dell Force10, Brocade ICX, Ruijie, Juniper, Huawei devices\r\n    Creating a .cfg file and email the file as an attachment\r\n    Easy-to-use web interface\r\n    Add your device once and backup without re-enter again\r\n    Store your email configuration, login data, backups on SQLite\r\n    Download configuration backup as cfg file\r\n    Search devices and backups\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis application is web-based and user-friendly. Easy to use to get, email and download network devices backups.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-07T06:14:11Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n`aioauth` asynchronous implementation of OAuth 2.0 protocol\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are few great OAuth frameworks for Python like [oauthlib](https://github.com/oauthlib/oauthlib) and [authlib](https://github.com/lepture/authlib), but they do not support asyncio and rewriting these libraries to asyncio is a significant challenge (see issues [here](https://github.com/lepture/authlib/issues/63) and [here](https://github.com/oauthlib/oauthlib/issues/415)).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-05T17:20:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPython validation library to validate files using type, mime, extension, magic numbers and size that supports Django. \u2705\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-02T12:16:59Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n`python-fsutil` provides high-level file-system [methods](https://github.com/fabiocaccamo/python-fsutil#methods) for performing common operations with one line of code.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-02T12:06:57Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n`python-benedict` is a subclass of the built-in dict type, meaning that it is fully compatible with existing dictionaries and can be used as a drop-in replacement in most cases.\r\n\r\n### Features\r\n-   100% **backward-compatible**, you can safely wrap existing dictionaries.\r\n-   **Keylist** support using **list of keys** as key.\r\n-   **Keypath** support using **keypath-separator** *(dot syntax by default)*.\r\n-   Keypath **list-index** support  *(also negative)* using the standard `[n]` suffix.\r\n-   Normalized **I/O operations** with most common formats: `base64`, `csv`, `ini`, `json`, `pickle`, `plist`, `query-string`, `toml`, `xls`, `xml`, `yaml`.\r\n-   Multiple **I/O operations** backends: `filepath` *(read/write)*, `url` *(read-only)*, `s3` *(read/write)*.\r\n-   Many **utility** and **parse methods** to retrieve data as needed *(check the [API](https://github.com/fabiocaccamo/python-benedict#api) section)*.\r\n-   Well **tested**. ;)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-02-28T10:42:57Z",
        "closed_at": "2023-02-28T11:29:35Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-27T12:19:53Z",
        "closed_at": "2023-02-27T12:21:58Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 957,
        "deletions": 956,
        "changed_files": 1,
        "created_at": "2023-02-25T02:08:48Z",
        "closed_at": "2023-02-25T12:17:37Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nGlobal custom management extensions for the Django Framework.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSome of the items this library offers\r\n\r\n- Command extensions\r\n - generate graph models\r\n - shell plus\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-23T05:14:37Z",
        "closed_at": null,
        "merged_at": null,
        "body": "\r\n## What is this Python project?\r\n\r\nSemgrep is a fast, open-source, static analysis engine for finding bugs, detecting vulnerabilities in third-party dependencies, and enforcing code standards. It is faster than Bandit and covers almost all static analysis tools.\r\n\r\nSemgrep analyzes code locally on your computer or in your build environment: code is never uploaded.\r\n\r\nIts rules look like the code you already write; no abstract syntax trees, regex wrestling, or painful DSLs. You can write your own rules instead of using the already mentioned rules. Also, GitLab recently announced they are transitioning a majority GitLab SAST analyzers to Semgrep!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFaster Static analysis tool than any other tool.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-21T23:29:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nProvides easy access to a wide range of market data using [Polygon's Stock API](https://polygon.io/docs/stocks/getting-started) with the [Python client](https://github.com/polygon-io/client-python). Polygon is a financial data platform that provides both real-time and historical market data for Stocks, Options, Forex, and Crypto. There are 40+ example code snipped, for the [REST API](https://github.com/polygon-io/client-python/tree/master/examples/rest), and [real-time streaming](https://github.com/polygon-io/client-python/tree/master/examples/websocket), along with [video tutorials](https://polygon.io/blog/polygon-io-with-python-for-stock-market-data/).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Great [documentation](https://polygon.io/docs/stocks/getting-started)\r\n- Rich API for both historical and real-time data with example code\r\n- Free historical end of day data\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-20T05:33:08Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n[Quix Streams](https://github.com/quixio/quix-streams) is a library for developing real-time streaming applications focused on time-series data and high-performance. It was developed at McLaren for processing huge sensor data streams from F1 racing cars, and is designed to be used for high-frequency telemetry services when you need to process high volumes of time-series data with up to nanosecond precision. It uses a message broker such as Apache Kafka (instead of a database) so you can process time-series data with high performance and resource savings.\r\n\r\nUsing Quix Streams, you can:\r\n* Produce time-series and event data to a Kafka Topic.\r\n* Consume time-series and event data from a Kafka Topic.\r\n* Process data by consuming it from one Kafka Topic, process it, and then producing the results back to another Kafka Topic.\r\n* Attach metadata to streams and group streams by metadata attributes.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhat's distinct about Quix Streams is its processing API\u2014although it\u2019s a client library, it\u2019s incredibly powerful.\r\n* On the feature spectrum, it lies somewhere between Kafka client libraries such as Faust and kafka-python (which are easy to use but have a basic feature set) and full-fat stream processing engines like Flink and Spark (which are powerful but have a steep learning curve).\r\n* Includes many built in functions and data types such as `ParameterData` (for time-series data) and `EventData`, buffering and state management for rolling window calculations, serialization support for video and audio streams, and more.\r\n* The main difference is that processing is done in Python rather than Java, and it runs in a client environment rather than a server-side engine.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-17T15:19:14Z",
        "closed_at": "2023-04-09T04:33:09Z",
        "merged_at": null,
        "body": "Hi @vinta,\r\n\r\nI came across your repository [awesome-python](https://github.com/vinta/awesome-python) and found it to be a valuable resource for Python enthusiasts.\r\n\r\nWhile browsing through the repository, I noticed that it was missing links to any structured guides such as the famous [\"Python Developer Roadmap\"](https://roadmap.sh/python). I took the initiative to submit a [\"Pull Request\"](https://github.com/vinta/awesome-python/pull/2355) adding it in others section.\r\n\r\nThank you for your time and effort in maintaining this valuable resource :)\r\n\r\nBest,\r\nMouaaz\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-17T03:06:59Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\npyodbc is an open-source Python module that makes accessing ODBC databases simple. It implements the DB API 2.0 specification but is packed with even more Pythonic convenience.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's the only well-maintained open-source python module that allows connecting to all kinds of persistent storage with support for ODBC like Microsoft Access, Microsoft Excel, Google Big Query, Teradata, Vertica, Hive, and more.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-17T02:52:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAn extremely fast Python linter, written in Rust.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n    * 10-100x faster than existing linters\r\n\r\n    * Installable via pip\r\n\r\n    *  pyproject.toml support\r\n\r\n    *  Built-in caching, to avoid re-analyzing unchanged files\r\n\r\n    * Autofix support, for automatic error correction (e.g., automatically remove unused imports)\r\n\r\n    * [Near-parity](https://beta.ruff.rs/docs/#how-does-ruff-compare-to-flake8) with the built-in Flake8 rule set\r\n\r\n    * Native re-implementations of dozens of Flake8 plugins, like [flake8-bugbear](https://pypi.org/project/flake8-bugbear/)\r\n\r\n    *  First-party editor integrations for [VS Code](https://github.com/charliermarsh/ruff-vscode) and [more](https://github.com/charliermarsh/ruff-lsp)\r\n\r\n    *  Monorepo-friendly, with [hierarchical and cascading configuration](https://beta.ruff.rs/docs/#pyprojecttoml-discovery)\r\n\r\nRuff aims to be orders of magnitude faster than alternative tools while integrating more functionality behind a single, common interface.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-13T06:16:22Z",
        "closed_at": "2023-03-30T03:40:02Z",
        "merged_at": "2023-03-30T03:40:01Z",
        "body": "Add audioFlux: A library for audio and music analysis, feature extraction.\r\n\r\n## What is this Python project?\r\n\r\nA library for audio and music analysis and feature extraction, which supports dozens of time-frequency analysis and transformation methods, as well as hundreds of corresponding time-domain and frequency-domain feature combinations, can be provided to the deep learning network for training, and can be used to study the classification, separation, music information retrieval (MIR), ASR and other tasks in the audio field.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Systematic and multi-dimensional feature extraction and combination can be flexibly used for various task research and analysis\r\n- The performance is efficient, the core is mostly implemented in C, and FFT hardware acceleration based on different platforms is convenient for large-scale data feature extraction.\r\n- It is applicable to the mobile end and supports real-time calculation of audio stream at the mobile end.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 39,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-08T11:36:58Z",
        "closed_at": "2023-02-08T17:18:00Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-02-06T10:44:06Z",
        "closed_at": "2023-07-01T08:33:40Z",
        "merged_at": "2023-07-01T08:33:40Z",
        "body": "Old link was just the old pyston repository with a readme.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-05T11:20:14Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAdded new feature request issue file\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis issue template allow the user to describe the issue in more descriptive way\r\n\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-04T14:36:57Z",
        "closed_at": "2023-02-05T23:24:37Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[roadmap.sh](https://roadmap.sh) is an opensource project with community curated roadmaps and visual guides for developers. Linked resource is the roadmap for learning Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is any other similar roadmap in the list.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-02T21:50:08Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[mashumaro](https://github.com/Fatal1ty/mashumaro) is a project that adds the ability to generate methods for serialization / deserialization of dataclasses with big variety of standard types out of the box to / from different formats (dict, json, msgpack, yaml, toml).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* it's written in pure python and works by generating highly optimized code for a specific dataclass taking into account all alterations, which makes it faster compared to alternatives\r\n* it has many extension options (third-party types, hooks, different serialization strategies, dialects, aliases, etc.)\r\n* it has full support for user-defined generic types\r\n* it has full support for user-defined variadic generic types from PEP 646\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-27T17:45:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": "add okcli\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-23T19:25:52Z",
        "closed_at": null,
        "merged_at": null,
        "body": "What is this Python project?\r\n\r\nPynecone is an open-source, full-stack python framework that makes it easy to build and deploy web apps in minutes. It offers the ease of use and accessibility of low-code frameworks, combined with the flexibility, performance, and customizability of traditional web development. Pynecone is open-source and designed to be easy to get started with for those with no previous web development experience.\r\n\r\nWith Pynecone, data scientists and software engineers can create high-quality web applications quickly and easily without needing to learn web development. Whether you want to build a small-scale data science project/internal app, or a large-scale multi-page web app, Pynecone has the tools and features to handle any project. The framework is optimized for performance, scalability, and SEO, so you can focus on creating a beautiful and engaging web app that you can be proud of.\r\n\r\nHere is a short description of Pynecone from a user: https://www.youtube.com/watch?v=47BL6WLZJ1g\r\n\r\nWhat's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\n* Compared to Django/Flask, in Pynecone you write your UI in pure Python (no HTML or Javascript)\r\nIn Pynecone the UI compiles down to a NextJS/React app, and is fully customizable with CSS\r\n* You can easily wrap any React component and add it to Pynecone\r\n* Traditional API requests are replaced by simple Python functions\r\n* Compared to Streamlit, Pynecone aims to build real websites that are look just like a website you would make with traditional frontend tools\r\n\r\n\r\nAnyone who agrees with this pull request could submit an Approve review to it.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-22T20:30:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The change resolve #2047 by adding pyscript to the web frameworks  \r\nSigned-off-by: Hani Kamal ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-20T21:14:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Adds [bytewax](https://github.com/bytewax/bytewax) to distributed compute under the stream processing subheading. Easy to use Python stream processing framework.\r\n\r\n## What is this Python project?\r\n\r\nStream Processing Framework.\r\n- connects to any streaming data source (Kafka, Pulsar, Redpanda, websockets, SSE etc.)\r\n- execute native python in stream processing operators.\r\n- stateful processing capabilities.\r\n- scales on k8s.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFaust is the most similar. Bytewax supports in-memory state first, can work with more than just Kafka and it is still actively supported/maintained.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-19T00:41:30Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nWith Flet, you code in Python only and a get multi-user, realtime Single-Page Application (SPA), with a beautiful Flutter UI.\r\n([Website](https://flet.dev/), [GitHub](https://github.com/flet-dev/flet))\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n- Based on Flutter - Flutter UI rendered\r\n- No SDKs, no thousands of dependencies, no complex tooling - Flet has built-in web server with assets hosting and desktop clients.\r\n- Deploy Flet app as a web app and view it in a browser. Package it as a standalone desktop app for Windows, macOS and Linux. Install it on mobile as [PWA](https://web.dev/what-are-pwas/)\r\n- Threads could be started anyhow within, without blocking the app's execution loop\r\n- Flet has a very simple architecture\r\n- Has hot reload for developpers\r\n- much more: https://flet.dev/\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 182,
        "deletions": 1363,
        "changed_files": 4,
        "created_at": "2023-01-18T14:54:08Z",
        "closed_at": "2023-01-18T14:54:40Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-16T03:49:40Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nOzon3 is an open-source Python package to easily obtain real-time, historical, or forecasted air quality data anywhere in the world. Reliable, accurate, and simple. Has 45 stars, 22 forks, 14 contributors, and 3 users so far.\r\n\r\nDescribe features.\r\n\r\n- Air quality data available for 11,000+ stations, and 1000 cities.\r\n- Uses the World Air Quality Index's API under the hood, meaning accurate and reliable data.\r\n- Historical air quality data from 2014 onwards.\r\n- Real-time air quality data for 15 parameters (updated hourly).\r\n- 7 and 14-day air quality forecasts for all stations.\r\n- Completely free and open-source for everyone!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- All other air quality data packages are simple wrappers around air quality APIs. Ozon3, by comparison, provides complex methods and combines a lot of data from the AQICN API to provide the perfect interface for python programmers to access air quality data.\r\n- No other package can provide this quantity of historical data for free.\r\n- No other package covers this many stations and cities.\r\n- Tried and tested, and proven to work really well!\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-15T17:18:54Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Major changes\r\nJust a link and small description into the Readme for an interesting open source data analytic package.\r\n\r\n## What is this Python project?\r\n\r\n[MNE](https://mne.tools/stable/index.html) is a Python based Package for neurophysiological data analysis and more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAs many science Python package and libraries, it has [Machine Learning](https://mne.tools/stable/auto_tutorials/machine-learning/50_decoding.html) application. It can also give data visualization graphs.\r\n\r\nYou'll be able to visualize your EEG, MEG data and more.\r\n\r\n[Tutorials](https://mne.tools/stable/auto_tutorials/index.html) are given on the website.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-14T14:19:21Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nKlotho is a CLI tool for transforming plain Python code to deployable cloud native code. It introduces klotho annotations that transform code to execution units (lambdas, fargate, kubernetes), persist ORMs like SQLAlchemy, and more\r\n\r\n## What's the difference between this Python project and similar ones?\r\nAs far as we know there are no similar projects. The closest one would be Chalice \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-13T16:52:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPython  implementation that run with only 4KB of RAM, zero dependencies, easy to bind with C.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- RAM usage: 4KB(PikaPython), 16KB(MicroPython)\r\n- Dependency: No OS, No file system(PikaPython), No OS(MicroPython)\r\n- Bind C module: write pyi(PikaPython), write C macro(MicroPython)\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-12T10:21:35Z",
        "closed_at": "2023-05-22T19:27:20Z",
        "merged_at": null,
        "body": "added a new library sounddevice in the audio section ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-10T18:36:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPython Standard Library for parsing csv and TOML files\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNo real difference to make here, just thought it was right to include the standard library. \r\n\r\n`csv` isn't in the list while `csvkit` is. And `tomllib` was recently released with python 3.11.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-01-07T20:12:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDagster is a job orchestration framework that is used to build data assets. It is a great tool, works on multiple platforms, and is very easy to set it up. It has a lot of useful features, such as:\r\n\r\n- Managing data assets with code, building python-based data jobs to load, transfer, and transform data\r\n- Integrates with [dbt](https://www.getdbt.com/) and provides a user interface to run dbt models\r\n- Provides a UI to monitor jobs, debug runs, inspect assets, or even launch backfills\r\n- Multiplatform - works with Windows and Mac by just installing from pip (no other dependencies)\r\n- It has multiple executors to run tasks, including in-process, multi-process, Dask, Celery, Docker, and Kubernetes.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- One great comparison for dagster is Airflow - but Dagster concentrates more on orchestrating data assets, including table materializations, etc\r\n- It is not just a scheduler, but a framework to build jobs using Dagster API \r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-03T18:11:35Z",
        "closed_at": "2023-01-05T12:29:52Z",
        "merged_at": "2023-01-05T12:29:52Z",
        "body": "## What is this (abandoned) Python project?\r\n\r\npyannotate has had its last update in 2019 and has [major/breaking bugs](https://github.com/dropbox/pyannotate/issues/92).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-31T07:11:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt comes under the Section \"Libraries for Data Analyzing\". Polars is a blazingly fast DataFrame library completely written in Rust, using the Apache Arrow memory model.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n![benchmarks](https://user-images.githubusercontent.com/43924834/210128359-00c6041e-c217-4283-a7a2-1de7dde9b7f0.png)\r\n\r\n* Utilizes all the available cores unlike single-threaded libraries such as NumPy and Pandas.\r\n* Built from the ground up designed for parallelization of queries on dataframes.\r\n* Its csv and parquet readers are among the fastest in existence.\r\n* It consists of a lazy query engine, allowing Polars to do several optimizations that may improve query time and memory usage.\r\n\r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-30T18:17:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is in python library for linter\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n<p align=\"center\">\r\n  <img alt=\"Bar chart with benchmark results\" src=\"https://user-images.githubusercontent.com/1309177/187504482-6d9df992-a81d-4e86-9f6a-d958741c8182.svg\">\r\n</p>\r\n\r\n- 10-100x faster than existing linters\r\n-  Installable via pip\r\n- hammer_and_wrench pyproject.toml support\r\n- Native re-implementations of popular Flake8 plugins, like [flake8-bugbear](https://pypi.org/project/flake8-bugbear/)\r\n- Monorepo-friendly configuration via hierarchical and cascading settings\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-28T20:49:16Z",
        "closed_at": "2023-01-18T14:55:54Z",
        "merged_at": null,
        "body": "## Streamlit\r\n\r\n\"The fastest way to build data apps in Python\"\r\n\r\nThis is basically Python's version of RStudio/Posit's Shiny for creating data web applications.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-16T09:42:49Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n`pandas-profiling` generates profile reports from a `pandas` DataFrame.\r\nThe reports are like a richer version of `DataFrame.describe` with a lot of information that any data scientist is looking for: distribution description, missing values, type inference, zero, high correlation, skewness, etc.\r\n\r\nThe reports can be generated in PDF or HTML. They contain alerts that give a clear information on the issues with a given dataset.\r\n\r\nThe library can also generate comparison reports between two datasets, so it can be used to compare two versions of the same dataset, or some new data once a model is in production (sort of model monitoring but for data).\r\n\r\nIt is well maintained with active development, has 10k stars on GitHub and it is used by many companies, including large ones.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAs far as I know, there is no alternative library.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-16T08:32:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nCambridge dictionary cli app.\r\n\r\nFeatures:\r\n1. Auto-suggests related words on typo.\r\n2. Interactive suggestion menu to select words from in the above case.\r\n3. Handles past and past-particle words.\r\n4. No API/database involved.\r\n5. A Persistent caching mechanism. This avoids looking up already searched words; hence fast results.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-10T12:46:59Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPyxel is a retro game engine similar to Pico-8 and TIC-80.\r\n\r\nThanks to its simple specifications inspired by retro gaming consoles, such as only 16 colors can be displayed and only 4 sounds can be played back at the same time, you can feel free to enjoy making pixel art style games.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Focus on retro game development with built-in specifications to the palette, image banks, sounds, tilemaps etc.\r\n- Includes a resource editor to edit images, tilemaps, sounds and music.\r\n- Can create applications for desktop and web.\r\n- Pyxel has 11000 stars on GitHub. It is the number one game library for Python in the world.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 108,
        "deletions": 103,
        "changed_files": 1,
        "created_at": "2022-12-07T18:49:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Sort README.md by running `sort.py`.\r\n\r\n## What is this Python project?\r\n\r\nWhisper is a general-purpose speech recognition model. It is trained on a large dataset of diverse audio and is also a multi-task model that can perform multilingual speech recognition as well as speech translation and language identification.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Easy to use\r\n* Easy to install\r\n* Effective\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-07T14:06:57Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA library for building CLI applications based on Python 3.6+ type hints. Made by tiangelo, the creator of fastapi \r\n\r\n[typer](https://github.com/tiangolo/typer)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFrom readme: \r\n\r\nIntuitive to write: Great editor support. Completion everywhere. Less time debugging. Designed to be easy to use and learn. Less time reading docs.\r\nEasy to use: It's easy to use for the final users. Automatic help, and automatic completion for all shells.\r\nShort: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.\r\nStart simple: The simplest example adds only 2 lines of code to your app: 1 import, 1 function call.\r\nGrow large: Grow in complexity as much as you want, create arbitrarily complex trees of commands and groups of subcommands, with options and arguments.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-07T13:51:55Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA wrapper of [SQLAlchemy](https://www.sqlalchemy.org/) based on [pydantic](https://github.com/pydantic/pydantic) objects. Made by tiangelo, creator of FastAPI.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFrom docs: \r\n\r\nIntuitive to write: Great editor support. Completion everywhere. Less time debugging. Designed to be easy to use and learn. Less time reading docs.\r\nEasy to use: It has sensible defaults and does a lot of work underneath to simplify the code you write.\r\nCompatible: It is designed to be compatible with FastAPI, Pydantic, and SQLAlchemy.\r\nExtensible: You have all the power of SQLAlchemy and Pydantic underneath.\r\nShort: Minimize code duplication. A single type annotation does a lot of work. No need to duplicate models in SQLAlchemy and Pydantic.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-07T13:46:05Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA rewrite of [cookiecutter](https://github.com/audreyr/cookiecutter) into a general purpose configuration language to build modular code generators and declarative CLIs.\r\n\r\n[tackle](https://github.com/sudoblockio/tackle)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Does everything cookiecutter does plus the following\r\n- Creates self documenting CLIs out of yaml / json / toml \r\n- Allows users to modularize code templating by importing other tackle providers that specialize in various parts of generating code \r\n- Turing complete syntax lets users conditionally prompt for options \r\n- Over 100 hooks which act as plugins within your config file \r\n\r\nIt is most comparable to Dhall, jsonnet, and CUE but specializes in generating code. I personally use it to manage kubernetes manifests by code generating them sort of like Helm but much more flexible. \r\n\r\n---\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-06T14:28:04Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n`pedalboard` is a Python library for working with audio: reading, writing, adding effects, and more. It supports most popular audio file formats and a number of common audio effects out of the box, and also allows the use of [VST3\u00ae](https://www.steinberg.net/en/company/technologies/vst3.html) and [Audio Unit](https://en.wikipedia.org/wiki/Audio_Units) formats for third-party plugins.\r\n\r\n`pedalboard` was built by [Spotify's Audio Intelligence Lab](https://research.atspotify.com/audio-intelligence/) to enable using studio-quality audio effects from within Python and TensorFlow. Internally at Spotify, `pedalboard` is used for [data augmentation](https://en.wikipedia.org/wiki/Data_augmentation) to improve machine learning models. pedalboard also helps in the process of content creation, making it possible to add effects to audio without using a Digital Audio Workstation.\r\n\r\n## Features (Copied from original project description)\r\n - Built-in audio I/O utilities ([pedalboard.io](https://spotify.github.io/pedalboard/reference/pedalboard.io.html))\r\n   - Support for reading and writing AIFF, FLAC, MP3, OGG, and WAV files on all platforms with no dependencies\r\n   - Additional support for reading AAC, AC3, WMA, and other formats depending on platform\r\n   - Support for on-the-fly resampling of audio files and streams with `O(1)` memory usage\r\n - Built-in support for a number of basic audio transformations, including:\r\n   - Guitar-style effects: `Chorus`, `Distortion`, `Phaser`, `Clipping`\r\n   - Loudness and dynamic range effects: `Compressor`, `Gain`, `Limiter`\r\n   - Equalizers and filters: `HighpassFilter`, `LadderFilter`, `LowpassFilter`\r\n   - Spatial effects: `Convolution`, `Delay`, `Reverb`\r\n   - Pitch effects: `PitchShift`\r\n   - Lossy compression: `GSMFullRateCompressor`, `MP3Compressor`\r\n   - Quality reduction: `Resample`, `Bitcrush`\r\n - Supports VST3\u00ae plugins on macOS, Windows, and Linux ([pedalboard.load_plugin](https://spotify.github.io/pedalboard/reference/pedalboard.html#pedalboard.load_plugin))\r\n - Supports Audio Units on macOS\r\n - Strong thread-safety, memory usage, and speed guarantees\r\n   - Releases Python's Global Interpreter Lock (GIL) to allow use of multiple CPU cores\r\n     - No need to use `multiprocessing`!\r\n   - Even when only using one thread:\r\n     - Processes audio up to **300x** faster than [pySoX](https://github.com/rabitt/pysox) for single transforms, and 2-5x faster than [SoxBindings](https://github.com/pseeth/soxbindings) (via [iCorv](https://github.com/iCorv/pedalboard_with_tfdata))\r\n     - Reads audio files up to **4x** faster than [librosa.load](https://librosa.org/doc/main/generated/librosa.load.html) (in many cases)\r\n - Tested compatibility with TensorFlow - can be used in `tf.data` pipelines!\r\n\r\n## What's the difference between this Python project and similar ones?\r\nEnumerate comparisons.\r\n- Simple API.\r\n- Extremely fast.\r\n- Supports different kinds of audio files.\r\n- Strong thread-safety, and memory usage.\r\n- Built-in audio transformations.\r\n- Type hints.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-05T14:28:11Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Algviz](https://algviz.com) is an animation engine based on Jupyter to make it easier to visualize algorithms.\r\n\r\nFor example:\r\n\r\n+ Bubble sort algorithm:\r\n    ![bubble_sort_animation](https://cdn.jsdelivr.net/gh/zjl9959/algviz-launch@master/svgs/BubbleSort.svg)\r\n+ NQueens problem:\r\n    ![NQueens_animation](https://cdn.jsdelivr.net/gh/zjl9959/algviz-launch@master/svgs/NQueens.svg)\r\n+ Prim algorithm:\r\n    ![Prim_animation](https://cdn.jsdelivr.net/gh/zjl9959/algviz-launch@master/svgs/Prim_sec.svg)\r\n\r\nYou can try more examples in the online editor by clicking the button below:\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/zjl9959/algviz-launch)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n-- Simple API, vivid animations.\r\n-- Support multiple data structures, such as `vector`, `table`, `linked list`, `tree` and `graph`.\r\n-- Can be embedded into Jupyter notebook.\r\n-- The generated animation is based on SVG, which is portable and space-saving.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-04T12:00:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Jina](https://github.com/jina-ai/jina) is a framework that empowers anyone to build such applications in the cloud. It handles infrastructure complexity, making advanced solution engineering and cloud-native technologies accessible to every developer.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n[Jina](https://github.com/jina-ai/jina) is a lean and efficient framework that makes advanced solution engineering and cloud-native technologies accessible to every developer. Applications built with Jina enjoy the following features out of the box:\r\n\r\n\r\n### Universal\r\n- Polyglot gateway that supports gRPC, WebSockets, HTTP, GraphQL protocols with TLS\r\n\r\n### Performance\r\n- Intuitive design pattern for high-performance microservices.\r\n\r\n### Cloud-native\r\n- Seamless Docker container integration: sharing, exploring, sandboxing, versioning and dependency control via Jina Hub\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-12-03T09:22:27Z",
        "closed_at": "2022-12-04T11:58:03Z",
        "merged_at": "2022-12-04T11:58:03Z",
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-01T19:58:32Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is the Python library for interacting with the Svix API which is great for adding webhook functionality to your api.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nMost webhook libraries are for receiving webhooks only. This lets you setup up an entire service for your users to subscribe to specific events that you send them webhooks for as well as how to receive webhooks and verify signatures.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-28T08:26:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[`click-extra`](https://github.com/kdeldycke/click-extra) is a collection of helpers and utilities for [Click](https://click.palletsprojects.com/), the Python CLI framework.\r\n\r\nIt is a drop-in replacement with good defaults that saves lots of boilerplate code and frustration. It also comes with [workarounds and patches](https://kdeldycke.github.io/click-extra/issues.html) that have not reached upstream yet (or are unlikely to).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis project adds the following features on top of `click`:\r\n\r\n- Configuration file loader for:\r\n  - `TOML`\r\n  - `YAML`\r\n  - `JSON`, with inline and block comments (Python-style `#` and Javascript-style `//`)\r\n  - `INI`, with extended interpolation, multi-level sections and non-native types (`list`, `set`, \u2026)\r\n  - `XML`\r\n- Download configuration from remote URLs\r\n- Optional strict validation of configuration\r\n- Search of configuration file from default user folder and glob patterns\r\n- Respect of `CLI` > `Configuration` > `Environment` > `Defaults` precedence\r\n- `--show-params` option to debug parameters defaults, values, environment variables and provenance\r\n- Colorization of help screens\r\n- `-h`/`--help` option names (see [rant on other inconsistencies](https://blog.craftyguy.net/cmdline-help/))\r\n- `--color`/`--no-color` option flag\r\n- Recognize the `NO_COLOR` environment variable convention from [`no-color.org`](https://no-color.org)\r\n- Colored `--version` option\r\n- Colored `--verbosity` option and logs\r\n- `--time`/`--no-time` flag to measure duration of command execution\r\n- Platform recognition utilities (macOS, Linux and Windows)\r\n- New conditional markers for `pytest`:\r\n  - `@skip_linux`, `@skip_macos` and `@skip_windows`\r\n  - `@unless_linux`, `@unless_macos` and `@unless_windows`\r\n  - `@destructive` and `@non_destructive`\r\n- [ANSI-capable Pygments lexers](https://kdeldycke.github.io/click-extra/pygments.html#lexers) for shell session and console output\r\n- Pygments styles and filters for ANSI rendering\r\n- [Fixes 30+ bugs](https://kdeldycke.github.io/click-extra/issues.html) from other Click-related projects\r\n- Rely on [`cloup`](https://github.com/janluke/cloup) to add:\r\n  - option groups\r\n  - constraints\r\n  - subcommands sections\r\n  - aliases\r\n  - command suggestion (`Did you mean <subcommand>?`)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-23T05:45:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Add a line this is a demo version",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-22T08:55:14Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Added the following for your review and feedback:\r\n\r\n* [Explore Python](https://kandi.openweaver.com/explore/python)\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-15T07:07:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt is a framework to easily create classes which attributes gets validated during object creation.\r\nThe base of the validation are type hints.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt makes heavily use of type hints and reduces so the amount of code lines.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-11T00:21:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nHypercorn is an ASGI and WSGI server that supports both HTTP 1.1 and HTTP 2, as well as websockets.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSupports HTTP 2, unlike uvicorn. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-11-09T18:47:38Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n**Learn Python 3** is an open source book to learn Python Programming. \r\nIt resides in [Github](https://github.com/animator/learn-python) and is available both as [PDF](https://github.com/animator/learn-python/blob/main/pdf/learn-python-v2022.10.pdf) and [HTML](https://animator.github.io/learn-python/).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe book has a very well defined structure. It is concise and touches a lot of fundamental concepts very well.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2022-11-01T19:50:22Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nStarlette is a production ready, lightweight and low-complexity HTTP web framework/toolkit.\r\nWebSocket support.\r\n* In-process background tasks\r\n* Startup and shutdown events\r\n* CORS, GZip, Static Files, Streaming responses.\r\n* Session and Cookie support.\r\n* Compatible with asyncio and trio backends.\r\n* Great overall performance [against independent benchmarks](https://www.techempower.com/benchmarks/#hw=ph&test=fortune&l=zijzen-sf).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nStarlette is a minimalist ASGI library for writing against basic but powerful Request and Response classes. \r\n* Supports HTTP \r\n* Supports WebSockets\r\n\r\nThis framework is used by FastAPI already present in the list under **RESTful API**\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-01T14:49:53Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The original faust project hasn't received any updates in a long time. We're still actively maintaining our fork, please direct users to us!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-31T04:27:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nCommand line tool to listen to your favorite book, or article and save it to listen offline.\r\n\r\nSupported Formats:- pdf/txt/docs/rst/epub/mobie\r\n\r\nDescribe features.\r\n\r\n1. Create JSON format book\r\n2. Liste to your book with\r\n3. Save your audiobook for later\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n \r\n I don't think there is a similar project available in python(to my knowledge).\r\n--\r\n\r\nDocumentation:- [Audiobook Documentation](https://audiobook.readthedocs.io/)\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-10-30T21:08:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPlotly Library is an open-source library that can be used to easily visualize and understand data.\r\nPlotly supports a number of different plot types, including line charts, scatter plots, histograms, and cox plots.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPlotly has the ability to discover any outliers or anomalies in a huge number of data points using its hover tool.\r\nIt has a pleasing appearance and appeals to a variety of audiences.\r\nIt enables us to completely customize our graphs, which improves the significance and readability of our plot for others.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-25T11:14:26Z",
        "closed_at": "2022-10-25T11:22:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[website](https://strawberry.rocks/)\r\nPython GraphQL library inspired by dataclasses\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\nCompared to Graphene\r\nWorks with type annotations, has a better developer experience and is active mantained. \r\nStrawberry works with Django, asgi, Starlette, FastAPI, Flask and other frameworks. \r\n\r\nAs [FastAPI docs](https://fastapi.tiangolo.com/advanced/graphql/) says: \r\n>If you need or want to work with GraphQL, [Strawberry](https://strawberry.rocks/) is the recommended library as it has the design closest to FastAPI's design, it's all based on type annotations.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-23T08:50:23Z",
        "closed_at": "2022-10-24T17:34:27Z",
        "merged_at": "2022-10-24T17:34:27Z",
        "body": "redirected pyqt to link to official docs, which is more useful for a beginner\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-13T11:11:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "added 4 free to read books to the books section, and removed one that was not free to read.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-10-03T17:25:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Refurb](https://github.com/dosisod/refurb/) is a code checker that uses pattern matching on abstract syntax trees to find patterns in the code and suggest improvements that make the code more readable and/or modern.\r\n\r\nI started using it, and it suggested I replace:\r\n\r\n```python\r\ntry:\r\n    something()\r\nexcept Exception:\r\n    pass\r\n```\r\n\r\nwith:\r\n\r\n```python\r\nwith contextlib.supress(Exception):\r\n    something()\r\n```\r\nAnd got me hooked.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis project covers the code once it is correct, so it's compatible with other tools such as format checkers, style checkers, linters, type checkers. This will suggest modern approaches to frequently written patterns that are less readable than the suggested alternatives.\r\n\r\nI am not aware of other tools in this space.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-01T23:49:03Z",
        "closed_at": "2022-10-02T15:59:07Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-01T13:55:47Z",
        "closed_at": "2022-10-24T17:35:07Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-09-28T20:22:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "No updates for four years, apistar.org is dead, the repo has been archived.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-26T14:50:55Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[mamba](https://github.com/mamba-org/mamba) is a reimplementation of the conda package manager in C++.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nmamba is a full replacement for conda, on aarch64 Linux, the official conda may unavailable, mamba can be an alternative in this case.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-16T14:57:40Z",
        "closed_at": "2023-01-13T20:27:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nShiny makes it easy to build interactive web applications with the power of Python\u2019s data and scientific stack.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n-  Write your application in Python; no web development skills required.\r\n- Built from the ground up to support custom layouts, styles, and the modularity required for full-fledged applications, all from Python.\r\n- Uses reactivity to efficiently handle data processing and minimize expensive re-computations.\r\n\r\n\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-14T15:04:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n[Reloadium](https://github.com/reloadware/reloadium) adds hot reloading and profiling features to any Python application\r\nComes with a plugin for PyCharm and VsCode (in progress)\r\n\r\n## What's the difference between this Python project and similar ones?\r\nComes with full support for the most popular libraries like Django, Flask, Pandas, SqlAlchemy, PyGame\r\nEnables restarting frames, line profiling, fixing errors while debugging and other advanced hot reloading features.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-14T09:44:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n`hyperparameter` is a configuration framework designed for data scientists and machine learning engineers. It works in a more pythonic way:  the users write their code in python and add a decorator to the functions or classes; `hyperparameter` will map the keyword arguments to configuration keys and use a `with` context to manage the configurations.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n`hyperparameter` is not a config file parser. It is a configuration framework that maps keyword arguments to configuration keys. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-09T02:27:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPython library that provides common and simple database abstractions on top of Google Sheets.\r\n\r\n1. Provide a straightforward **key-value** and **row based database** interfaces on top of Google Sheets.\r\n2. Serve your data **without any server setup** (by leveraging Google Sheets infrastructure).\r\n3. Support **flexible enough query language** to perform various data queries.\r\n4. **Manually manipulate data** via the familiar Google Sheets UI (no admin page required).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nComparisons are elaborated in [Alternative Analysis section](https://github.com/FreeLeh/docs/blob/main/freedb/alternatives.md).\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 98,
        "deletions": 95,
        "changed_files": 1,
        "created_at": "2022-09-08T11:46:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Add Sqlmodel to Python ORM Section\r\n sql model is an orm that is very useful and can be very helpful to many users",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-09-06T12:34:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt is an async ORM-like tool that acts as a DB interface layer to execute and hydrate SQL queries into Python objects.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Think of it as a one-way ORM: you provide the query, it provides the interface for managing the pool, executing queries, transaction, and model hydration\r\n- Makes `.sql` files first-class citizens\r\n- Emphasize data retrieval as a query action\r\n- Provides customizable tooling for projects with complex schema requirements to get data from the DB into Python\r\n- Easily enable developers to make full use of DB potential and not just limited toolset\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-29T12:48:20Z",
        "closed_at": "2022-09-08T04:50:17Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis Project Tries To Bring Cool Things From Other Languages To Python. For Example:\r\n\r\n* One Line Conditions In C++\r\n* PHP Interfaces\r\n* C++ Switch-Case\r\n\r\nBut For Sure It Has Some Differences To That Languages Too. It Has Common Data Types With Some Cool Options Too. For Example `PyshaString` ( There Is Other DataTypes Like `PyshaDict` And `PyshaList` Too. ) That Has:\r\n*  `<<` Operator For Append To And String\r\n* `+=` Operator To Append To An String With Setting Changes\r\n* `>>` Operator To Prepend To An String\r\n*  `replace_dict` To Replace All Keys Of Dict With Values\r\n* Lots Of Other Cool Things :)\r\n\r\nPysha Has A New Ability To Get An Array With a Huge Dimontions From Input With `Loop` Class. It Has A `Crossplatformer` That Helps You Make Your Application Crossplatform Easier.It Has Cool Decorators Like `retry`,`ignore`,`once`,`timer` and `interface`. It Has a `PercentPrinter` That can make a Progressbar for you In Command Line. And Lots Of Other Cool Options :) You Can Check For More If You Want.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI Personally Did'nt Saw Any Python Library Or Framework That Give You Option To Use `Switch Case`, `PHP Interface` Or `C++ One Line Conditions`. I Admit Its A Little Bit Different But I Think Still Its Cool :)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-08-25T11:00:53Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nI am the maintainer of AWS Data Wrangler which has now been renamed to AWS SDK for pandas.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe former [URL](https://github.com/awslabs/aws-data-wrangler) is now pointing to the new [repository](https://github.com/aws/aws-sdk-pandas) with the new name \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-22T08:12:22Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nHerePy is a library that provides a Python interface to the HERE location APIs. Currently it supports the APIs below\r\n\r\n- DestinationWeatherApi\r\n- EVChargingStationsApi\r\n- FleetTelematicsApi\r\n- GeocoderApi\r\n- GeocoderAutoCompleteApi\r\n- GeocoderReverseApi\r\n- PlacesApi\r\n- PublicTransitApi\r\n- RmeApi\r\n- RoutingApi\r\n- TrafficApi\r\n- IsolineRoutingApi\r\n- MapTileApi\r\n- VectorTileApi\r\n- MapImageApi\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nHerePy is a Python framework that contains different location data based API clients with an easy to use interface. It also supports some APIs which other projects don't, such as EVChargingStations, FleetTelematics, MapTile and VectorTile APIs.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-08-21T02:14:08Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-20T15:42:17Z",
        "closed_at": "2022-12-24T04:01:18Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n`PyCryptodome` It is a library that can replace pycrypto.\r\n`SageMath` It has a lot of features in the field of mathematics.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt provides various features related to cryptography.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-20T09:02:05Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-20T03:54:35Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## pytube\r\n\r\npytube is a lightweight library written in Python. It has no third-party dependencies and aims to be highly reliable.\r\npytube includes a command-line utility, allowing you to download videos right from the terminal.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEasy to use\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-08-17T19:40:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-17T12:44:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Adding Trunk to CLI productivity tools.\r\n\r\n## What is this Python project?\r\n\r\nTool for linting, static analysis, and merge queue via CLI. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis package brings together multiple tools to service all languages in 1 package. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-06T04:22:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\npyttsx3 it's an offline text to speech synthesis library\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n-- It can be used offline\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-03T10:47:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n`torchvision` is a computer vision library on top of PyTorch\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It provides very intuitive and pythonic APIs for image processing and creating a computation graph (compared to OpenCV)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-08-01T15:34:54Z",
        "closed_at": "2022-08-13T04:00:33Z",
        "merged_at": null,
        "body": "Added https in the LICENSES sections and removed http for the creative standard reference web address! ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-01T09:28:11Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA dataframe lib written in Rust, with Python API\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's faster\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-27T10:39:32Z",
        "closed_at": "2022-07-27T19:24:27Z",
        "merged_at": null,
        "body": "Add FastAPI in Asynchronous Web Frameworks",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-07-26T09:29:44Z",
        "closed_at": "2022-07-27T03:39:21Z",
        "merged_at": "2022-07-27T03:39:21Z",
        "body": "In line 226: dogpile.cache is next generation replacement for Beaker made by same authors ->  dogpile.cache is a next generation replacement for Beaker made by the same authors.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-25T14:22:57Z",
        "closed_at": null,
        "merged_at": null,
        "body": "DVC, CML and MLEM added into Machine Learning and Job Scheduler section\r\n\r\n## What is this Python project?\r\n\r\n* Open-source Version Control System for Machine Learning Projects\r\n* Continuous Machine Learning (CML) is CI/CD for Machine Learning Projects\r\n* Open-source tool to simplify ML model deployment_\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* DVC combines a number of existing ideas into a single tool, with the goal of bringing best practices from software engineering into the data science field (refer to [What is DVC?](https://dvc.org/doc/user-guide/what-is-dvc) for more details).\r\n\r\n* MLOps isn't a platform- it's an ecosystem of tools. CML helps you bring your favorite DevOps tools to machine learning.\r\n\r\n* Git-native ML model development. Enable GitFlow and other software engineering best practices.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-23T14:40:07Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nFrida is a [free](https://www.gnu.org/philosophy/free-sw.en.html) dynamic instrumentation toolkit that enables software professionals to execute their own scripts in software that has traditionally been locked down; i.e. proprietary (such as Android applications).\r\n\r\nThis allows the software community to hook into live processes, enabling them to test, add functionality to, or even debug such applications.\r\n\r\nfrom: https://techmonitor.ai/technology/software/frida-tool-software-reverse\r\n\r\n\u201cFrida makes it possible for a small company to create products compatible with products from large software companies. For example if a big company dominates the market in one area but isn\u2019t interested in supporting users with Android phones, a small company could use Frida to gain the knowledge needed to create a compatible app for Android users.\u201d\r\n\r\nDue to its ability to hook into processes dynamically, developers can rapidly develop tools using Frida. For example, in an Android application process, this can be hooked into to extract the output of the process itself, meaning that any additional functionality can be added with minimal effort. (For the technically inclined, the Frida team has produced a [useful example](https://www.frida.re/docs/examples/android) for injecting arbitrary JavaScript into an Android app process.)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFrida though has cross platform compatibility stands out because of its ability to also debug android applications.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-19T20:31:53Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt's a tool to download videos from YouTube, Twitch Clips and many more types of videos or video platforms.\r\n\r\nIt also supports plugins and has a python api.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* More extractors / support for more websites\r\n* faster\r\n* works better on slow internet connections\r\n* Better plugin support / plugin support\r\n* Better api support\r\n* Can block content in videos with sponsorblocker.\r\netc.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-14T19:04:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis project provides modern _pythonic_ bindings to OpenGL.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n### ModernGL vs PyOpenGL\r\n\r\n--Compared to PyOpenGL it is more pythonic, and easier to use and learn.\r\n--Faster than PyOpenGL in certain cases.\r\n--Less amount of code for the same behaviour.\r\n```\r\n# PyOpenGL\r\nvbo1 = glGenBuffers(1)\r\nGL.glBindBuffer(GL_ARRAY_BUFFER, vbo1)\r\nGL.glBufferData(GL_ARRAY_BUFFER, b'Hello World!', GL_STATIC_DRAW)\r\n\r\nvbo2 = glGenBuffers(1)\r\nGL.glBindBuffer(GL_ARRAY_BUFFER, vbo2)\r\nGL.glBufferData(GL_ARRAY_BUFFER, b'\\x00' * 1024, GL_DYNAMIC_DRAW)\r\n```\r\n```\r\n# ModernGL\r\nvbo1 = ctx.buffer(b'Hello World!')\r\nvbo2 = ctx.buffer(reserve=1024, dynamic=True)\r\n```\r\n\r\nAnother pull request was made years ago here: #893 But it went stale. I'm actually surprised it isn't already on the list, it seems fairly popular, and quite nice.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-12T18:40:37Z",
        "closed_at": "2022-11-06T18:14:56Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n This Library a Audio Validator For Django With d MIME type checking the magic numbers signature And Extension Use FileType Library \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nthis library is first audio validator for django\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-10T13:41:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nwikilink is a multiprocessing web-scraping *application* to scrape the wiki pages, extract urls and find the minimum number of links between 2 given wiki pages.\r\n\r\nhttps://github.com/tranlyvu/wiki-link\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-10T10:21:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n- Boilerplate /code structure for the restful Flask-Restx framework\r\n- Link of [the project](https://github.com/tranlyvu/Flask-RESTX-boilerplate)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-09T03:40:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n* pybind11 is a lightweight header-only library that exposes C++ types in Python and vice versa, mainly to create Python bindings of existing C++ code. (cite from the official doc)\r\n\r\n* Inspired by Boost.Python, but aim to resolve the complexity.\r\n\r\n* A very compact implementation. It's only composed of ~4K line without comments.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. It's a lightweight, header only C++ library.\r\n2. It supprots modern C++ (instead of just C)\r\n3. One need not to learn a third language other than C++ and Python. (Some others require)\r\n4. Also Used by popular project like Cafe2 machine learning framework.\r\n5. Its documentation is quite complete!\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-07T17:07:57Z",
        "closed_at": "2022-07-07T17:10:30Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-04T00:27:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPycord is a discord API wrapper used for building discord bots and webhooks.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPycord (in my opinion) has:\r\n* a better community\r\n* more support\r\n* faster updates and development\r\n* it's also more consistent since discord.py was stopped then restarted\r\n\r\nThis is a duplicate of [this](https://github.com/vinta/awesome-python/pull/2089) PR. It was automatically closed after I deleted the branch, however it already had 3 upvotes\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-07-03T23:02:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nTextual is a TUI (Text User Interface) framework for Python inspired by modern web development. Currently a Work in Progress. It uses Rich to render rich text, so anything that Rich can render may be used in Textual.\r\n\r\nEvent handling in Textual is asynchronous (using async and await keywords). Widgets (UI components) can independently update and communicate with each other via message passing.\r\n\r\nTextual has more in common with modern web development than it does with curses; layout is done with CSS grid and (soon) the theme may be customized with CSS. Other techniques are borrowed from JS frameworks such as Vue and React.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nncurses and urwid look old-school compared to these projects (textual+rich)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 128,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-30T17:25:01Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-30T01:38:32Z",
        "closed_at": "2022-07-04T00:22:23Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPycord is a discord API wrapper used for building discord bots and webhooks.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPycord (in my opinion) has:\r\n* a better community\r\n* more support\r\n* faster updates and development\r\n* it's also more consistent since discord.py was stopped then restarted\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-29T19:47:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-29T19:44:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 72,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-29T19:15:04Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-29T19:14:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-29T07:01:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA collection of useful charts to help when doing ML model selection and hyperparameter fiddling.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is the only data-vis package I've seen specifically aimed at assisting model selection.\r\n\r\nThe docs are thorough and they've put some effort into having a concise API.\r\n\r\nFWIW, it extends Matplotlib and is listed on [Matplotlib's own list of helpful third party packages](https://matplotlib.org/mpl-third-party/#domain-specific-libraries).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-28T09:39:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Arctic is a high performance datastore for numeric data (https://github.com/man-group/arctic)\r\n\r\n## What is this Python project?\r\n\r\n\"Arctic is a high performance datastore for numeric data. It supports Pandas, numpy arrays and pickled objects out-of-the-box, with pluggable support for other data types and optional versioning.\"\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n\"Arctic can query millions of rows per second per client, achieves ~10x compression on network bandwidth, ~10x compression on disk, and scales to hundreds of millions of rows per second per [MongoDB] instance.\"\r\n\r\nThere isn't really similar project. It seems like a very specialized project.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-27T19:51:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nGraph-tool is an efficient [Python](https://www.python.org/) module for manipulation and statistical analysis of [graphs](https://en.wikipedia.org/wiki/Graph_%28mathematics%29) (a.k.a. [networks](https://en.wikipedia.org/wiki/Network_theory)). \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nContrary to most other Python modules with similar functionality, the core data structures and algorithms are implemented in [C++](https://en.wikipedia.org/wiki/C%2B%2B), making extensive use of [template metaprogramming](https://en.wikipedia.org/wiki/Template_metaprogramming), based heavily on the [Boost Graph Library](https://www.boost.org/doc/libs/release/libs/graph). This confers it a level of [performance](https://graph-tool.skewed.de/performance) that is comparable (both in memory usage and computation time) to that of a pure C/C++ library.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-25T12:31:51Z",
        "closed_at": "2022-10-07T05:04:53Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nContains every basic python resource a beginner into python needs.\r\nContains YT creators, cheatsheets, podcasts, newsletters, blogs, yt playlists, twitter creators. official links, ebooks, documentation sites and many more.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompiled. well structured info.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-24T13:24:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nLineaPy helps data science professionals to quickly clean up their long, messy development scripts/notebooks and automatically transform them into production-ready pipelines.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- LineaPy primarily aims to serve the needs of data scientists, rather then professional programmers. Hence, the project is more low-code than other refactoring tools.\r\n- The project is better suited to serving refactoring needs in interactive computing (e.g., Jupyter notebooks) which is an integral part of data science workflows.\r\n- Given this nature, the project also integrates with other major components of the data science tooling ecosystem, such as Apache Airflow.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-20T16:08:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nCovalent is a framework for distributed computing on heterogeneous infrastructure - from CPUs, to GPUs, to quantum computers and more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Designed to work across advanced computing hardware such as GPU clusters, (federations of) supercomputers, and quantum computers.\r\n* Native parallelization across diverse hardware types\r\n* Designed for on-premise and cloud deployments\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-19T16:11:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nNextcord is a modern, easy-to-use, feature-rich, and async-ready API wrapper for Discord.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. Maintained\r\n2. Rich documentation\r\n3. Great discord server\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-18T06:47:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Ursina Engine\r\n\r\nUrsina makes it easier to develop games, visualizations and other kinds of software.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n        \u2022 Reload code/textures/models while in-game\r\n        \u2022 Automatic import of .psd and .blend files\r\n        \u2022 Easy to use mesh class for making procedural geometry\r\n        \u2022 Concise code and less boilerplate code\r\n        \u2022 Built-in animation and tweening\r\n        \u2022 Pre-made prefabs such as FirstPersonController, 2d platformer controller, editor camera\r\n        \u2022 Lots of included procedural 3D primitives\r\n        \u2022 Play in fullscreen while developing\r\n        \u2022 Many shaders to choose from, or write your own with GLSL\r\n****\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-11T04:55:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nArgonaut makes App deployments to AWS cloud environments a breeze by automating several aspects.\r\nIt allows both App and Infrastructure management through the same interface.\r\nWe recently added Django app support on AWS Lambda environments.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nMuch simpler setup allowing you to deploy in minutes.\r\nHigh customization possibilities.\r\nAllows deployment on your cloud.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-05-08T14:54:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-07T18:56:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis framework is designed to take events from chat services and other sources and execute Python functions (skills) based on their contents. Those functions can be anything you like, from simple conversational responses to running complex tasks. The true power of this project is to act as a glue library to bring the multitude of natural language APIs, chat services and third-party APIs together.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is designed to be extendable, scalable and simple.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 99,
        "deletions": 95,
        "changed_files": 1,
        "created_at": "2022-05-04T03:54:08Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n- Is an interface to [Graphviz](https://www.graphviz.org/)\r\n- Can parse and dump into the [DOT language](https://en.wikipedia.org/wiki/DOT_%28graph_description_language%29) used by GraphViz\r\n- Is written in pure Python,\r\nand [networkx](https://github.com/networkx/networkx) can convert its graphs to pydot.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It's a neat way to visualize graphs or binary trees in which I haven't seen anywhere else yet.\r\n- Can be especially useful if developing algorithms based on neural networks and decision trees.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-04T03:28:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPyCaret is an ML project management solution that shortens the lifecycle of machine learning projects.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Make performing standard activities in an ML project simpler.\r\n- Python version of the Caret machine learning package.\r\n- Enables models to be tested, compared and tuned on a specific dataset with just a few lines of code.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-04T03:05:54Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nSkyfield is a pure Python astronomy package that makes it easy to generate high precision- research grade positions for planet and earth satellites.\r\n\r\n-Written in pure python and it installs without any compilation\r\n-Supports Python\u00a02.6, 2.7 and 3.\r\n-Compute geocentric positions\r\n-Obtain topocentric coordinates from a specific location on the Earth\u2019s surface to the desired planet.\r\n-Will accept Astropy time objects as input and return results in AstroPy units.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nSimilar to Astropy, Skyfield can chart the morning and evening sky for a particular planet, such as the apparition of Venus.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 98,
        "deletions": 95,
        "changed_files": 1,
        "created_at": "2022-05-04T02:49:29Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nProblem Solving with Algorithms and Data Structures Using Python SECOND EDITION by Bradley N. Miller and David L. Ranum. This is a great book for beginner - intermediate Software Developers looking to improve their knowledge on DSA. \r\nDescribe features.\r\nThis book has 3 key features:\r\n- > A strong focus on problem solving introduces students to the fundamental data structures and algorithms by providing a very readable text without introducing an overwhelming amount of new language syntax.\r\n- > Algorithm analysis in terms of Big-O running time is introduced early and applied throughout.\r\n- > Python is used to facilitate the success of beginning students in using and mastering data structures and algorithms.\r\n- [Book on Amazon](https://www.amazon.com/Problem-Solving-Algorithms-Structures-Python/dp/1590282574)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n- Many books either have too many visuals and not enough code or vice versa. This book provides a perfect balance.\r\n- The topics chosen to illustrate algos are hard to find described better in other books.\r\n- Extremely clear, and reader-friendly without sacrificing depth and breadth of topics. Covers classic/important cs problems in addition to helping consolidate Python syntax.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 875,
        "deletions": 875,
        "changed_files": 1,
        "created_at": "2022-05-04T02:23:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nSoftware to create deepfake videos.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nInstructional videos, Youtube examples.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 876,
        "deletions": 875,
        "changed_files": 1,
        "created_at": "2022-05-04T02:13:58Z",
        "closed_at": "2022-05-17T02:30:51Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt spins up a testing environment on your local machine that provides the same functionality and APIs as the real AWS cloud environment.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-30T20:50:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA tool for managing the entire lifecycle of a project: creation, versioning, building (with its build backend Hatchling), environment management, publishing, etc.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- In comparison to `poetry`, Hatch specializes in environment management and has a more featureful plugin system.\r\n- In comparison to `poetry-core`, Hatchling never strays from community standards and is in fact eager to adopt new ones (it's the only backend that currently supports [PEP 639](https://www.python.org/dev/peps/pep-0639/)).\r\n- In comparison to `setuptools`, Hatchling is far smaller, making it less susceptible to security issues and more auditable. For example, the logic to build a wheel resides in this [one file](https://github.com/ofek/hatch/blob/master/backend/src/hatchling/builders/wheel.py). Also, wheels and sdists are built in a reproducible manner by default.\r\n- In comparison to `flit-core`, Hatchling is extensible by design. For example, there is already [a plugin](https://github.com/ofek/hatch-vcs) for [setuptools_scm](https://github.com/pypa/setuptools_scm) (which despite the legacy naming is actually now decoupled from `setuptools`) and [a plugin](https://github.com/ofek/hatch-mypyc) for compiling code with [Mypyc](https://github.com/mypyc/mypyc).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-29T14:18:30Z",
        "closed_at": "2023-01-12T13:59:44Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\naiomysql is a \"driver\" for accessing a MySQL database from the [asyncio](http://docs.python.org/3.5/library/asyncio.html) (PEP-3156/tulip) framework. It depends on and reuses most parts of [PyMySQL](https://github.com/PyMySQL/PyMySQL) .\r\n\r\naiopg is a library for accessing a [PostgreSQL](http://www.postgresql.org/) database from the [asyncio](https://docs.python.org/3/library/asyncio.html) (PEP-3156/tulip) framework.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThese db drivers operate asynchronously.\r\nMore details are as above.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-25T00:09:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-21T20:15:26Z",
        "closed_at": "2023-04-09T14:43:37Z",
        "merged_at": null,
        "body": "The project recently got several updates. The maintainer changed and the PyPI page links to all recent pages.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-15T23:19:06Z",
        "closed_at": "2022-07-23T03:49:58Z",
        "merged_at": null,
        "body": "An awesome, dead simple C gamedev library with Python bindings.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-13T08:11:31Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nSquirrel is a great library for fast and flexible loading of large-scale datasets which makes it very useful for anyone working with deep learning. You can write your own drivers and load, transform, share datasets of images, text or multi-modal.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\ngreat speed and flexibility - there are benchmarks at https://merantix-momentum.com/technology/squirrel\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-12T09:33:33Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Signed-off-by: Sylvain Hellegouarch <sh@defuze.org>\r\n\r\n## What is this Python project?\r\n\r\nChaos Toolkit is a leading chaos engineering engineering engine. It's been around for almost 5 years and has grown a very nice friendly user base and is used in large organisations across industries.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNone known at this time.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-10T20:01:54Z",
        "closed_at": "2022-07-29T04:33:42Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nStreamlit turns data scripts into shareable web apps in minutes.\r\nAll in pure Python. No front\u2011end experience required.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUsing pure python, no additional libraries are needed. Ease of use is prioritized.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-10T06:22:41Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAdded an amazing GUI library that allows you to create and deploy cross-platform native context menus. It's really easy to use and integrates pretty vital functionality with native context menus.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFrom my research I haven't found any other libraries in Python that edit the context menu, and there's especially no other libraries to create cascading context menus.\r\n\r\nYou can find the home page here: https://github.com/saleguas/context_menu\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-04-05T16:32:47Z",
        "closed_at": "2022-04-06T11:42:20Z",
        "merged_at": null,
        "body": " Download anything from Instagram with this robot\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-30T03:23:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nEasy. Awesome. \r\nSimple JWT provides a JSON Web Token authentication backend for the Django REST Framework.\r\nIt aims to cover the most common use cases of JWTs by offering a conservative set of default features. It also aims to be easily extensible in case a desired feature is not present.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nhttps://github.com/jpadilla/django-rest-framework-jwt\r\n- No more updates since August 13, 2019\r\n- So it is right to use simplejwt\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-18T17:11:04Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-18T13:01:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe open soz\u00farce project Flower allows to federate any workload with any machine learning framework. It can be used to develop federated learning, analytics, and evaluation.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAdding federated learning resources. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-17T15:34:21Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is small framework for quick microservices scaffold generation\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-14T07:06:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Added New Python Resources\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-11T12:17:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIt's a command line interface for [pypi.org](https://pypi-org \"The Python Package Index (PyPI) is a repository of software for the Python programming language.\")\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI've personally used it extensively and can say for sure that this is better than the alternatives. There also seems to be a [detailed comparison in the docs](https://wasi-master.github.io/pypi-command-line/#alternatives)\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-10T15:06:41Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nChaos Genius is an open-source ML-powered analytics engine for outlier detection and root cause analysis. Chaos Genius can be used to monitor and analyze high dimensionality business, data, and system metrics at scale.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nChaos Genius offers an OSS alternative to proprietary analytics tools like AWS Lookout, Anodot, Sisu Data & Outlier.ai. It provides end to end platform from data ingestion, metric definition to machine learning and alerts. Other Python projects require significant engineering, machine learning, and plumbing to provide similar functionality. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-05T12:26:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "\u2026Analysis/Linting using many tools/Scanners with One Report\r\n\r\n## What is this Python project?\r\n\r\nCode Scanning/SAST/Static Analysis/Linting using many tools/Scanners with One Report. Written in Python. Suppors also Python scanning and also others.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no other similar ones.\r\n\r\nThere are other projects (i.e projects written in Java). However, having many tools (outputting in JSON) used to do Code Scanning and making one report is unique here.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-04T14:39:15Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-23T13:12:54Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## cachetools\r\n\r\nThe [cachetools](https://cachetools.readthedocs.io/en/stable/) module provides various memoizing collections and decorators, including variants of the Python Standard Library\u2019s [@lru_cache](http://docs.python.org/3/library/functools.html#functools.lru_cache) function decorator.\r\n\r\nFor the purpose of this module, a cache is a [mutable](http://docs.python.org/dev/glossary.html#term-mutable) [mapping](http://docs.python.org/dev/glossary.html#term-mapping) of a fixed maximum size. When the cache is full, i.e. by adding another item the cache would exceed its maximum size, the cache must choose which item(s) to discard based on a suitable [cache algorithm](http://en.wikipedia.org/wiki/Cache_algorithms).\r\n\r\nThis module provides multiple cache classes based on different cache algorithms, as well as decorators for easily memoizing function and method calls.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis module provides many useful variants and extensions of the Python Standard Library\u2019s [@lru_cache (http://docs.python.org/3/library/functools.html#functools.lru_cache) function decorator.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-21T18:48:40Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nCollection of Python Code Snippets for Beginners\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nA creative take on common Python patterns which is great for beginners.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2022-02-15T08:46:32Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n`databooks` is a package to ease the collaboration between data scientists using [Jupyter notebooks](https://jupyter.org/), by reducing the number of git conflicts between different notebooks and resolution of git conflicts when encountered.\r\n\r\nThe key features include:\r\n\r\n- CLI tool\r\n  - Clear notebook metadata\r\n  - Resolve git conflicts\r\n- Simple to use\r\n- Simple API for using modelling and comparing notebooks using [Pydantic](https://pydantic-docs.helpmanual.io/)\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- [nb-clean](https://github.com/srstevenson/nb-clean): helps clear notebook metadata, but only that, so more limited in scope compared to databooks.\r\n- [nbdime](https://github.com/jupyter/nbdime): helps with diffs and merges of notebooks, however, databooks supports a way to resolve existing conflicts, which is not supported by nbdime.\r\n- [nbdev](https://github.com/fastai/nbdev): nbdev provides an opinionated template for developing packages with notebooks, databooks is a configurable CLI tool that you can use in whatever way you prefer.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-03T16:53:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPloomber is an open-source python library.\r\nIt's the fastest \u26a1\ufe0f way to build data pipelines. Develop iteratively, deploy anywhere. \u2601\ufe0f\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPloomber is focused on data scientists instead of software engineers. It can run locally without any complex setup like airflow for instance.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-27T18:14:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nQuickly create customizable UI components around your models. Gradio makes it easy for you to \"play around\" with your model in your browser by dragging-and-dropping in your own images, pasting your own text, recording your own voice, etc. and seeing what the model outputs.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nGradio is useful for:\r\n- Demoing your machine learning models for clients / collaborators / users / students\r\n- Deploying your models quickly with automatic shareable links and getting feedback on model performance\r\n- Debugging your model interactively during development using built-in interpretation visualizations for any model\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-23T18:22:01Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA minimalistic http client https://github.com/sonic182/aiosonic for asyncio\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPure 100% python async http client, with decent performance\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an Approve review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2022-01-22T20:18:40Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This PR has several parts:\r\n1. Rename \"Geolocation\" to \"geospatial data processing\", since it's a more accurate description of what these libraries do.\r\n2. Create a new subcategory for the \"core\" libraries and frameworks that are used for data analysis in the Python ecosystem.\r\n3. Move or add many popular libraries for visuzaliation and [exploratory] data analysis (see below).\r\n\r\nAdded / moves libraries:\r\n1. Cartopy, which is a complete geospatial data processing suit.\r\n2. GeoPandas, a geospatial data processing suit that is part of the HoloViz suit.\r\n3. TextBlob, a high-level API to NLTK.\r\n4. Dataprep, Pandas Profiling, SweetViz and Lux, which are \"exploratory data analysis\" tools that can automatically visualize a dataset.\r\n5. Folium, an API for rendering spatial data using Leaflet.js\r\n6. Glue, which is used to visualize data across different domains.\r\n7. HoloViz, a suit of modern visualization libraries.\r\n8. napari, is an advanced image viewer and annotator that can deal with very large images and layered data.\r\n9. D-Tale, a spreadsheet-like interface to Pandas DFs.\r\n10. xarray, a Pandas alternative for >3-dimensional data.\r\n11. PyArrow, an interface to Apache Arrow.\r\n12. bamboolib, a gui for visualizing and tranforming DFs.\r\n13. Turi Create, a machine learning framework from Apple.\r\n14. Polars, a fast Pandas alternative written in Rust.\r\n15. Vaex, an Arrow-NumPy hybrid for large datasets.\r\n16. RAPIDS, a suit of libraries for running data analysis tasks on GPUs.\r\n17. Modin, a Pandas-like API on top of Dask and Ray.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-22T13:31:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nRaylib is a simple library for videogames programming. This set of static bindings provides a fast and familier interface with the original Raylib 4.0 API. Genuinly suprised to not see any python-raylib bindings already, so I'd very much like to suggest this package be the one featured on this fantastic list.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Automatically generated to be as close as possible to original Raylib.\r\n- Faster, fewer bugs and easier to maintain than ctypes.\r\n- Commercial-friendly license.\r\n-  Docstrings and auto-completion.\r\n- Now includes extra libraries: raygui, rlgl and physac\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-01-21T14:28:13Z",
        "closed_at": "2022-01-22T20:09:35Z",
        "merged_at": null,
        "body": "The libraries in this category allow for much more than just geolocation, so rather than starting a different category we can just rename this one.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-01-21T14:22:57Z",
        "closed_at": "2022-01-22T20:09:58Z",
        "merged_at": null,
        "body": "Cartopy is more than just a visulization library: \"Python package designed for geospatial data processing in order to produce maps and other geospatial data analyses\".",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-21T14:21:06Z",
        "closed_at": "2022-01-22T20:10:39Z",
        "merged_at": null,
        "body": "Popular library for working with geographic data on top of Panads - 3k stars and 667 forks on Github.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-01-21T14:14:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Theano has been deprecated and replaced with Aesra (see project pages)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-14T12:46:29Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## About P2PNetwork\r\n\r\nlibp2p is a networking stack and library modularized out of The IPFS Project, and bundled separately for other tools to use.\r\n\r\nlibp2p is the product of a long, and arduous quest of understanding -- a deep dive into the internet's network stack, and plentiful peer-to-peer protocols from the past. Building large-scale peer-to-peer systems has been complex and difficult in the last 15 years, and libp2p is a way to fix that. It is a \"network stack\" -- a protocol suite -- that cleanly separates concerns, and enables sophisticated applications to only use the protocols they absolutely need, without giving up interoperability and upgradeability. libp2p grew out of IPFS, but it is built so that lots of people can use it, for lots of different projects. [More](https://libp2p.io/)\r\n\r\n## About Multiaddr\r\n\r\nMultiaddr aims to make network addresses future-proof, composable, and efficient.\r\n\r\nCurrent addressing schemes have a number of problems.\r\n\r\nThey hinder protocol migrations and interoperability between protocols.\r\nThey don't compose well. There are plenty of X-over-Y constructions, but only few of them can be addressed in a classic URI/URL or host:port scheme.\r\nThey don't multiplex: they address ports, not processes.\r\nThey're implicit, in that they presume out-of-band values and context.\r\nThey don't have efficient machine-readable representations.\r\nMultiaddr solves these problems by modelling network addresses as arbitrary encapsulations of protocols.\r\n\r\nMultiaddrs support addresses for any network protocol.\r\nMultiaddrs are self-describing.\r\nMultiaddrs conform to a simple syntax, making them trivial to parse and construct.\r\nMultiaddrs have human-readable and efficient machine-readable representations.\r\nMultiaddrs encapsulate well, allowing trivial wrapping and unwrapping of encapsulation layers. [More](https://multiformats.io/multiaddr/)\r\n\r\n## About Multihash\r\n\r\nMultihash is a protocol for differentiating outputs from various well-established hash functions, addressing size + encoding considerations. It is useful to write applications that future-proof their use of hashes, and allow multiple hash functions to coexist.\r\n\r\nMultihash is particularly important in systems which depend on cryptographically secure hash functions. Attacks may break the cryptographic properties of secure hash functions. These cryptographic breaks are particularly painful in large tool ecosystems, where tools may have made assumptions about hash values, such as function and digest size. Upgrading becomes a nightmare, as all tools which make those assumptions would have to be upgraded to use the new hash function and new hash digest length. Tools may face serious interoperability problems or error-prone special casing. [More](https://multiformats.io/multihash/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an Approve review to it.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-11T09:10:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nAdded a code profiler that is not in the list\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-08T16:05:52Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA batteries included task runner, that uses pyproject.toml for configuration and works well with poetry.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Uses pyproject.toml for configuration\r\n- Integrates seamlessly with the [poetry](https://python-poetry.org/) dependency manager, either as a plugin or via its own CLI.\r\n- Can also be used with any virtualenv or standalone\r\n- Works cross platform (depending how tasks are defined)\r\n- Simple things are simple, complex things are possible: \r\n  - various ways of defining tasks (e.g. shell commands or python functions)\r\n  - define CLI arguments for tasks\r\n  - compose tasks together\r\n  - command line completion\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-06T17:01:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nTwo very usefull packages are added\r\n**Streamlit** - Streamlit turns data scripts into shareable web apps in minutes.\r\n**Pycaret** - PyCaret is an open-source, low-code machine learning library in Python that automates machine learning workflows.\r\n\r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-04T15:45:49Z",
        "closed_at": "2022-05-24T03:53:54Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis project is a fork of discord.py. Help discord.py alive.\r\n\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-03T09:07:47Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nOnacol is a low-opinionated configuration management library with following features:\r\n\r\n- YAML (=structured and hierarchical) configuration file support\r\n- Environment variables support (explicit and implicit)\r\n- CLI arguments support\r\n- Configuration merging/overwriting/layering\r\n- Parameter validation (via Cerberus)\r\n- Configuration schema, documentation and default values are defined in single YAML -> No code schema.\r\n- Minimal dependencies\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nComparing with all the configuration management libraries & frameworks I could find on GitHub, based on the features I consider important:\r\n\r\n| Framework | YAML | ENV vars | CLI args | Merging | Validation | No code schema |\r\n| :-------------- | :------: | :-----------: | :----------: | :---------: | :-----------: | :---------------------: |\r\n| [Hydra]       |   \u2714\ufe0f    |     \u2714\ufe0f        |     \u2753      |    \u2714\ufe0f      |      \u2714\ufe0f       |     \u2716\ufe0f                    |\r\n| [Pydantic]   |   \u2753    |    \u2753         |      \u2714\ufe0f     |    \u2714\ufe0f      |      \u2714\ufe0f       |     \u2716\ufe0f                    |\r\n| [Dynaconf]  |    \u2714\ufe0f   |    \u2753         |      \u2714\ufe0f     |    \u2714\ufe0f      |      \u2714\ufe0f       |     \u2716\ufe0f                    |\r\n| [python-dotenv] |   \u2716\ufe0f  |    \u2714\ufe0f         |     \u2716\ufe0f    |    \u2716\ufe0f     |     \u2716\ufe0f       |     \u2716\ufe0f                    |\r\n| [Gin Config] |   \u2753   |    \u2753         |     \u2753         |    \u2753    |     \u2714\ufe0f      |     \u2716\ufe0f                    |\r\n| [Python Decouple] |    \u2716\ufe0f   |     \u2716\ufe0f  |     \u2714\ufe0f         |    \u2714\ufe0f   |      \u2716\ufe0f         |     \u2716\ufe0f              |\r\n| [OmegaConf] |   \u2714\ufe0f   |    \u2714\ufe0f         |     \u2714\ufe0f         |    \u2714\ufe0f    |     \u2714\ufe0f      |     \u2716\ufe0f                    |\r\n| [Confuse]   |   \u2714\ufe0f    |    \u2714\ufe0f         |      \u2753     |    \u2714\ufe0f      |      \u2714\ufe0f       |     \u2716\ufe0f                    |\r\n| [Everett]   |   \u2714\ufe0f    |    \u2714\ufe0f         |      \u2714\ufe0f     |    \u2753      |      \u2714\ufe0f       |     \u2716\ufe0f                    |\r\n| [parse_it]   |   \u2714\ufe0f    |    \u2714\ufe0f         |      \u2714\ufe0f     |    \u2714\ufe0f       |      \u2753       |     \u2716\ufe0f                    |\r\n| [Grift]         |   \u2716\ufe0f    |     \u2716\ufe0f        |     \u2716\ufe0f      |    \u2753      |      \u2714\ufe0f       |     \u2716\ufe0f                    |\r\n| [profig]   |   \u2716\ufe0f   |    \u2714\ufe0f         |      \u2716\ufe0f     |    \u2753      |      \u2714\ufe0f       |     \u2716\ufe0f                    |\r\n| [tweak]   |   \u2714\ufe0f   |    \u2716\ufe0f         |      \u2716\ufe0f     |    \u2714\ufe0f      |     \u2716\ufe0f       |     \u2716\ufe0f                    |\r\n| [Bison]   |   \u2714\ufe0f   |    \u2753       |      \u2714\ufe0f     |    \u2714\ufe0f      |     \u2714\ufe0f       |     \u2716\ufe0f                    |\r\n| [Config-Man] |   \u2716\ufe0f   |    \u2714\ufe0f         |     \u2714\ufe0f         |    \u2753    |     \u2714\ufe0f      |     \u2716\ufe0f                    |\r\n| [figga]   |   \u2714\ufe0f   |    \u2716\ufe0f         |      \u2714\ufe0f     |    \u2753      |     \u2716\ufe0f       |     \u2716\ufe0f                    |\r\n| [**Onacol**] |   \u2714\ufe0f   |    \u2714\ufe0f         |     \u2714\ufe0f         |    \u2714\ufe0f    |     \u2714\ufe0f      |     \u2714\ufe0f                    |\r\n\r\n[Hydra]: https://hydra.cc/\r\n[Pydantic]: https://pydantic-docs.helpmanual.io/\r\n[Dynaconf]: https://github.com/rochacbruno/dynaconf\r\n[python-dotenv]: https://github.com/theskumar/python-dotenv\r\n[Gin Config]: https://github.com/google/gin-config\r\n[Python Decouple]: https://github.com/henriquebastos/python-decouple\r\n[OmegaConf]: https://github.com/omry/omegaconf\r\n[Confuse]: https://github.com/beetbox/confuse\r\n[Everett]: https://github.com/willkg/everett\r\n[parse_it]: https://github.com/naorlivne/parse_it\r\n[Grift]: https://github.com/kensho-technologies/grift\r\n[profig]: https://github.com/dhagrow/profig\r\n[tweak]: https://github.com/kislyuk/tweak\r\n[Bison]: https://github.com/edaniszewski/bison\r\n[Config-Man]: https://github.com/mmohaveri/config-man\r\n[figga]: https://github.com/berislavlopac/figga\r\n[**Onacol**]: https://github.com/calcite/onacol\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-12-19T01:29:52Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nSometimes it's very hard to find if some large files are eating up the system storage. We always need to detect these and takes actions afterwards. But in bigger file system it's challenging enough to filter through thousands and millions of files. This CLI application helps to find those giant files that are eating up your system storage with lot of filtering options and faster result.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Faster result\r\n- Works on huge file storage\r\n- Lot of filtering capabilities\r\n- No dependency overhead \r\n- easy to install and operate\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-12-17T03:28:30Z",
        "closed_at": "2021-12-17T04:24:25Z",
        "merged_at": "2021-12-17T04:24:25Z",
        "body": "## What is this Python project?\r\n\r\nArcade - A game development library\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe previous link mentioned does not exist now. So I updated it with the latest one.\r\n\r\n![arcade_old_link](https://user-images.githubusercontent.com/48170643/146484082-d04c2d90-ac50-475d-9c86-ed4990db334f.PNG)\r\n\r\n**New Link - [https://api.arcade.academy/en/latest/](https://api.arcade.academy/en/latest/)**\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-12-14T09:14:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Dataconf\r\n\r\nDataconf is a simple dataclasses configuration management for Python with hocon/json/yaml/properties/env-vars/dict support, based on awesome and lightweight pyhocon parsing library.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-12-13T15:46:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-12-08T12:51:04Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nhttps://github.com/RobertCraigie/prisma-client-py.\r\n\r\nAn auto-generated, fully type safe ORM tailored specifically for your schema - works with SQLite, PostgreSQL, MySQL, MongoDB, MariaDB, Azure SQL, SQL Server and AWS Aurora.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- The *first* and *only* ORM for Python that offers full query type safety.\r\n- Native support for usage with and without `async`\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-12-01T11:20:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Added RexMex - a recommender system evaluation library.\r\n\r\n## What is this Python project?\r\n\r\nA recommender metric library for fair evaluation: covers coverage, classification, ranking, and rating.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nComprehensive - it includes 30+ metrics that are not in other libraries.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-11-19T04:09:52Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDiscord.py is a python wrapper for making Discord bots and interacting with Discord's API.\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-11-16T09:10:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nobjectfactory is a python package to easily implement the factory design pattern for object creation, serialization, and polymorphism\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- designed for easy polymorphic object loading\r\n- integrates with marshmallow for serialization, validation, and custom schemas\r\n- schema defined seamlessly as part of class definition\r\n- highly flexible to complex, nested, or unique object structures\r\n\r\nrepo here:\r\nhttps://github.com/devinaconley/py-object-factory\r\n\r\ndocs here:\r\nhttps://objectfactory.readthedocs.io/\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-11-15T23:30:01Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA bidirectional UTM-WGS84 converter.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n-\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 982,
        "deletions": 982,
        "changed_files": 1,
        "created_at": "2021-11-15T13:11:21Z",
        "closed_at": "2021-11-15T16:33:25Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA bidirectional UTM-WGS84 converter.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n-\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-11-14T08:37:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": "[xltpl](https://github.com/zhangyu836/xltpl)\r\n\r\n## What is this Python project?\r\n\r\nA python module to generate xls/x files from a xls/x template.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhen xltpl reads a xls/x file, it creates a tree for each worksheet.\r\nAnd, each tree is translated to a jinja2 template with custom tags.\r\nWhen the template is rendered, jinja2 extensions of cumtom tags call corresponding tree nodes to write the xls/x file.\r\n[README](https://github.com/zhangyu836/xltpl/blob/master/README_EN.md)\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-11-12T19:09:19Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Beryl-python is the official driver for BerylDB, a key-value database used for session caching.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-10T09:22:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[JSONClasses](https://www.jsonclasses.com). \r\nA Pydantic alternative, an ORM, a web server.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nDeclarative data modeling.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-11-02T04:28:46Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-01T18:27:38Z",
        "closed_at": "2022-07-13T17:32:49Z",
        "merged_at": null,
        "body": "minor change to link saleor to its github page instead of the website, being consistent with other projects\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 32,
        "deletions": 34,
        "changed_files": 1,
        "created_at": "2021-10-29T14:07:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nOnline .PYC/.PYO decompilation tool.\r\nSimilar to awesome-php.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThis project is open-source, easy to understand, and implement.\r\nThis project could be useful on almost any GitHub project,\r\nto record and automatically update the 'ReadME' file contents\r\nwith the information of the libraries used in the project.\r\n\r\n## Changes:\r\nFaster & more efficient code.  I simplified it where I could without impacting the readablility and functionality of the code.\r\nA difference of around 44% during compile time & a little bit faster run-time. (8.9nsec-by timeit)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-27T09:33:41Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Add detectron",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-27T09:32:03Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Add detectron2",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-25T13:14:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPython uses .po files for storing translations for multi-lingual user interface.\r\nThis tool is very practical for editing those translations.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is completely free, prevents errors that occur when manually editing PO files, and is practical for non-technical translators.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-24T13:16:49Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n`vmam` is a Free and Open Source network access control (NAC) solution. that access the network under a specific domain and a specific VLAN, through LDAP authentication and RADIUS server. This is based on [RFC 3579](https://tools.ietf.org/html/rfc3579#section-2.1).\r\nBasically it creates mac-address users that represent the network card of a machine and associates these users with LDAP groups that represent the various VLANs specified created on their own network architecture.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Work with an open source LDAP server or Active Directory\r\n* Have a manual mode\r\n* Have an automatic mode\r\n* Use it in command line or as a python module\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-24T11:55:05Z",
        "closed_at": null,
        "merged_at": null,
        "body": "UPDATE README\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-21T07:42:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nOnline .PYC/.PYO decompilation tool.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSimilar to other Python decompilers, but available as an online tool (no registration required).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-21T04:23:53Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe project provides common calculations and analysis tools required in microwave and RF engineering. This library can be used to perform scientific computation in the fields integrated circuits, high speed digital networks, waveguides and even optics. It is considered the go-to package in the industry when python is required to be used.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nTo my knowledge, this is the only fully functional and actively maintained python package for RF/Microwave engineering. There is nothing else out there which provides all the functionality that this library does.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-19T06:54:39Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is a deep learning OCR open source project supported by more than 70 languages. To my surprise, in addition to the basic OCR functions, it also has layout analysis and chart analysis, and can train and fine tune its own data. It's incredible\u3002\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- [x] It provides a deep learning semi-automatic annotation tool. Although it is not very useful for ordinary users, it will be a powerful production tool for deep learning developers.\r\n- [x] The language support range is very wide, allowing developers to train language models without preset.\r\n- [x] The update speed of the algorithm is very fast, and it has an ultra lightweight model less than 10MB. It can be used whether it is a server or not.\r\n\r\nHope to be merged into this very interesting Python project family, thank you!\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-18T18:51:40Z",
        "closed_at": null,
        "merged_at": null,
        "body": "\r\nUpdated the link for the Arcade game framework which was previously pointing towards a nonexistent page.\r\n\r\n## What is this Python project?\r\n\r\nN/A\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nN/A\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-18T10:46:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nBoilerplate template for a Python Flask application with HTMX and Tailwind CSS\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompared to other Flask boilerplates, it's using HTMX \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-17T14:51:38Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA Easy Implementation of PyTorch (It will be better if you learn pytorch first but then you can learning pytorch-lightning to make the DL process easier)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIts much easier than PyTorch\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-14T14:49:05Z",
        "closed_at": "2022-06-06T11:45:41Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\npython-nmap is a python library which helps in using nmap port scanner. It allows to easilly manipulate nmap scan results and will be a perfect tool for systems administrators who want to automatize scanning task and reports. It also supports nmap script outputs.([Source Text](https://pypi.org/project/python-nmap/))\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe fsociety project also uses Nmap (binary) for information gathering. With python-nmap you can easily use nmap in your own script. \r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-10T23:26:57Z",
        "closed_at": "2023-02-17T02:42:13Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\npyodbc is an open source Python module that makes accessing ODBC databases simple. It implements the DB API 2.0 specification but is packed with even more Pythonic convenience.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFound no similar odbc projects.\r\n\r\nThis python module allows connecting to all kinds of persistent storage with support for odbc like Microsoft Access, Microsoft Excel, Google Big Query, Teradata, Vertica, Hive and more.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-10T08:38:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis extends the native `codecs` with many encodings, e.g. morse, many bases (58, 62, 100, etc), sms, klopf, ...\r\nIt also provides a clean API for adding new encodings and a special feature based on a graph search for guessing multi-layer encodings.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFound no similar project.\r\n\r\nStrong points :\r\n- Clean API for adding new encodings\r\n- Test generation based on __examples__ dunder\r\n- Guess feature for decoding multiple layers\r\n- Supported on a regular basis, including new codecs\r\n\r\nWeak points :\r\n- Few stars ; probably suffers from a lack of visibility yet (this PR may fix this)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-06T13:52:54Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA caching library that provides LRU & TTL caching, plus memoization decorators.\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n### Compared to `functools`\r\n\r\n- it provides async support out of the box\r\n- it provides ttl caching out of the box\r\n\r\n### Compared to many other caching libraries in the same niche\r\n\r\n- simpler approach (it does not consider object sizes, only its count)\r\n- simpler & more performant approach for ttl caching (using `monotonic` instead of `datetime`)\r\n- more correct approach (when it comes to `__hash__` and `__eq__` functions)\r\n- ability to discard emptyish/nullish values from being cached at the decorator level\r\n- proper type hints\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-04T05:20:17Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nIt's a pretty useful resource that shows different design pattern implementations in different programming languages, including python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThe examples and practical use scenarios are easy and quick to understand, especially for beginners.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-03T13:22:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis library is defined to encourage similarity between Python modules used to access _NOSQL_ databases. In this way, I hope for consistency that leads to more easily understood modules, code that generally gets more portability across databases and a broader scope of database connectivity from Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Interface classes for all type of NOSQL database: **key-value**, **column**, **documents** and **graph** database.\r\n* ODM classes\r\n* Supports all CRUD operations\r\n* Functions that facilitate connection and session management\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-26T11:36:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nThis is a library that allows you to create preview images, make logos, create a font pages for marketing, make a font banner for web and font booklet from one or more selected fonts.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n- Based on [Pillow](https://pillow.readthedocs.io/en/stable/) library\r\n- It is a specific font library\r\n- With this library is possible to create a [complex image](https://fontpreview.readthedocs.io/en/latest/example.html#fontpreview-example) with font.\r\n- [FiraCode example](https://github.com/MatteoGuadrini/fontpreview#advanced-usage) with python\r\n- Make a logos with one or two letters, like [Typescript logo](https://fontpreview.readthedocs.io/en/latest/example.html#fontlogo-example)\r\n- Dynamically creation of text banner with code for the web framework, like Flask or Django.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-26T00:12:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-21T21:18:22Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[`humanize`](https://github.com/jmoiron/humanize) is a library that can turn values into more human readable formats. Examples include \"3 minutes ago\", \"32.4 KB\", \"1/3\" (`humanize.fractional(1/3)`), etc.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- Couldn't find anything similar on the list.\r\n\r\nDocumentation: https://python-humanize.readthedocs.io/en/latest/?badge=latest\r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-19T15:21:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Added dinosay\r\n### What is this Python project?\r\ndinosay is a humble, simple, nice and paleolithic alternative to cowsay command line tool.\r\n\r\n### What's the difference between this Python project and similar ones?\r\n- It can be used directly in the command line\r\n- It can be used as a python library to beautify scripts\r\n- It can be used to build custom command lines\r\n- Use a custom files\r\n- Customize _eye_, _tongue_, _comic_ and _behavior_ of the dinosaur than has been printed\r\n- List all dinosaur, behavior and parts with only one command: `dinolist`\r\n\r\nDocs: https://matteoguadrini.github.io/dinosay/\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-14T08:58:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nStrawberry is a library to create GraphQL APIs using python by adopting a syntax similar to dataclasses and making use of type hints\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is a modern library that tries to use the most modern python features to make it easier to develop APIs. It has also a very friendly and welcoming community and it is well maintained :)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-12T12:41:15Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\npyreports is a python library that allows you to create complex reports from various sources such as databases, text files, ldap, etc. and perform processing, filters, counters, etc. and then export or write them in various formats or in databases.\r\n\r\nYou can use this library for complex reports, or to simply filter data into datasets divided by topic. Furthermore, it is possible to export in various formats, such as csv, excel files or write directly to the database (mysql, mssql, postgresql and more).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Capture any type of data\r\n- Export data in many formats\r\n- Data analysis\r\n- Process data with filters and maps\r\n- Some functions will help you to process averages, percentages and much more\r\n--\r\n\r\nDocs: https://pyreports.readthedocs.io/en/latest/\r\nSite: https://matteoguadrini.github.io/pyreports/\r\n\r\nAnyone who agrees with this pull request could submit an Approve review to it.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-03T07:58:47Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPyC2PA is Python implementation of C2PA (Coalition for Content Provenance and Authenticity) addressing the prevalence of misleading information online through the development of technical standards for certifying the source and history (or provenance) of media content.\r\n\r\nDescribe features.\r\n\r\n- Inject metadata into JPEG files using JUMBF injection\r\n- Support for Single & Multiple Injection\r\n- Injected JPEG files will have metadata embedded into photo itself making it traceable across the web\r\n- Injected JPEG files verifiable with CAI Verification Website (https://verify.contentauthenticity.org/)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is the first project that injects CAI metadata into photos. Content Authenticity Initiative is headed by Adobe and C2PA specs are headed by Adobe, Microsoft and other technology companies. Its a movement to create authentic digital assets in a time where misinformation is very prevalent.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-08-31T15:45:59Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Hi,\r\n\r\nStjepan from Manning here. I thought this title might be a good match to your list. Thank you for considering it.\r\n\r\nBest,\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-08-27T01:07:30Z",
        "closed_at": "2022-06-06T00:23:59Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis python project is called Flask-SocketIO.\r\n\r\nThe Link : https://flask-socketio.readthedocs.io\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhat makes this python project different is that its geared toward flask applications to allow you to implement real time communication between client and server using socketIO.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-08-04T14:18:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nhttps://github.com/BayesWitnesses/m2cgen\r\n\r\nA tool that allows the conversion of trained classic ML models into a native code (Java, C, Python, Go, JavaScript, Visual Basic, C#, R, PowerShell, PHP, Dart, Haskell, Ruby, F#, Rust) with zero dependencies.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIn comparison with `sklearn-porter`, `m2cgen` has much wider support of machine learning models and target languages, and is actively maintained.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-08-04T12:13:15Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nBasically, it's a feature to show the quality of code we are uploading here in this repo.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-30T06:57:09Z",
        "closed_at": "2021-07-30T06:59:14Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\nCornell is a record & reply mock server for E2E tests\r\n\r\nRepo - https://github.com/hiredscorelabs/cornell\r\nDocumentation - https://hiredscorelabs.github.io/cornell/\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n* Ability for mocking in distributed systems and run complex E2E tests\r\n* Cornell wraps vcrpy with flask which provides a lightweight record and replay server\r\n* Easy for extensions \r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-07-25T07:03:59Z",
        "closed_at": "2021-07-25T12:53:55Z",
        "merged_at": "2021-07-25T12:53:55Z",
        "body": "fixed a typo on line 5.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2021-07-25T06:57:26Z",
        "closed_at": "2021-07-25T12:54:29Z",
        "merged_at": "2021-07-25T12:54:29Z",
        "body": "\r\nfixed a few things in the readme :)\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-20T21:18:09Z",
        "closed_at": "2021-08-29T05:56:28Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nan easy to use wrapper for the Discord API. (https://github.com/Rapptz/discord.py)\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. async\r\n2. feature-rich\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-18T21:05:29Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA single line of code for Full Stack Python Security (https://www.manning.com/books/full-stack-python-security)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is the only book dedicated to Python security.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-07-17T09:03:15Z",
        "closed_at": null,
        "merged_at": null,
        "body": "\r\n# Features\r\n\r\n    Generic parsing of dates in over 200 language locales plus numerous formats in a language agnostic fashion.\r\n    Generic parsing of relative dates like: '1 min ago', '2 weeks ago', '3 months, 1 week and 1 day ago', 'in 2 days', 'tomorrow'.\r\n    Generic parsing of dates with time zones abbreviations or UTC offsets like: 'August 14, 2015 EST', 'July 4, 2013 PST', '21 July 2013 10:15 pm +0500'.\r\n    Date lookup in longer texts.\r\n    Support for non-Gregorian calendar systems. See Supported Calendars.\r\n    Extensive test coverage\r\n\r\n# Popular Formats\r\n`\r\n    >>> import dateparser\r\n    >>> dateparser.parse('12/12/12')\r\n    datetime.datetime(2012, 12, 12, 0, 0)\r\n    >>> dateparser.parse('Fri, 12 Dec 2014 10:55:50')\r\n    datetime.datetime(2014, 12, 12, 10, 55, 50)\r\n    >>> dateparser.parse('Martes 21 de Octubre de 2014')  # Spanish (Tuesday 21 October 2014)\r\n    datetime.datetime(2014, 10, 21, 0, 0)\r\n    >>> dateparser.parse('Le 11 D\u00e9cembre 2014 \u00e0 09:00')  # French (11 December 2014 at 09:00)\r\n    datetime.datetime(2014, 12, 11, 9, 0)\r\n    >>> dateparser.parse('13 \u044f\u043d\u0432\u0430\u0440\u044f 2015 \u0433. \u0432 13:34')  # Russian (13 January 2015 at 13:34)\r\n    datetime.datetime(2015, 1, 13, 13, 34)\r\n    >>> dateparser.parse('1 \u0e40\u0e14\u0e37\u0e2d\u0e19\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21 2005, 1:00 AM')  # Thai (1 October 2005, 1:00 AM)\r\n    datetime.datetime(2005, 10, 1, 1, 0)\r\n`\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-15T06:22:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nAny one can submit his/her Python notebooks on nbshare.io. It is a great way to learn Python through sharing notebooks.\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nTo best of my knowledge, there is no another platform which lets you share and learn Python through notebooks.\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-14T14:54:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nLets you use all the powers of Vue.js to write web UIs running in your browser but in pure Python.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-13T08:20:53Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nBy wrapping vcrpy with Flask, Cornell provides a lightweight record and replay server that can be easily used during distributed system testing and simulate all HTTP traffic needed for your tests.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nBy building a proxy server and complete workflow on top of VCR.py, cornell makes it super easy to test complex external API services. Wheather you have full control over them or not.\r\nFull docs at - https://hiredscorelabs.github.io/cornell/\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-05T14:55:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAdded quo, a dynamic python module for creating cli apps\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-05T14:11:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIntel\u00ae Extension for Scikit-learn provides drop-in replacement patching functionality for a seamless way to speed up Scikit-learn application. Acceleration is achieved through the use of the Intel\u00ae oneAPI Data Analytics Library ([oneDAL](https://github.com/oneapi-src/oneDAL)) and its convenient Python API daal4py powering the extension underneath.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Library uses all capabilities of the hardware, which allows you to get a significant performance boost for the classic machine learning algorithms. Check their [patching section](https://github.com/oneapi-src/oneDAL#scikit-learn-patching) and [medium articles](https://github.com/intel/scikit-learn-intelex#-follow-us-on-medium) for more details.\r\n\r\n![](https://raw.githubusercontent.com/intel/scikit-learn-intelex/master/doc/sources/_static/scikit-learn-acceleration-2021.2.3.PNG)\r\n- All optimizations can be easily integrated into scikit-learn application by changing one line of code. Check their [get started section](https://github.com/intel/scikit-learn-intelex#%EF%B8%8F-get-started) for more details. \r\n- The library supports intel GPU. Check their [get started section](https://github.com/intel/scikit-learn-intelex#%EF%B8%8F-get-started) for more details. \r\n- The library allows accelerating the prediction step for XGBoost and LightGBM. Read more [here](https://medium.com/intel-analytics-software/improving-the-performance-of-xgboost-and-lightgbm-inference-3b542c03447e).\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-07-02T07:11:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nImplementation of State Machine in Python\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't find nothing similar in the actually open-source code\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-27T18:43:44Z",
        "closed_at": "2023-08-06T02:53:21Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is an AutoML package as an alternative from popular methods inside scikit-learn, such as Grid Search and Randomized Grid Search.\r\n\r\nSklearn-genetic-opt uses evolutionary algorithms to choose the set of hyperparameters that optimizes the cross-validation scores, it can be used for both regression and classification problems with a scikit-learn alike API.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* It uses AI for the optimization process, instead of brute force approach like GridSearch.\r\n* It adds several features missing in similar packages, worth to mention:\r\n   - **Callbacks:** Allows to monitor, save the models and stop the training when some of several possible criteria is met, such as the model has run for a long time, a threshold metric was achieved, etc. It even allows the user to create a custom callback.\r\n   - **Plotting:** It was several build-in plotting functionalities to help the user understand the optimization process and take decisions over the models.\r\n   - **Tensorboard:** It can log with just a single line of code all the evaluation metrics to a tensorboard instance to monitor the training.\r\n   - **MLflow:** With one single config class, log all the metrics, models, hyperparameters of each run into a MLflow server.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-06-18T15:36:29Z",
        "closed_at": "2021-09-13T18:19:54Z",
        "merged_at": null,
        "body": "Quick Summary\r\n---------------------\r\n* add pikepdf and PyMuPDF, two powerful and well-supported PDF libraries for Python\r\n* include a note that PyPDF2 is pure-python and unmaintained",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-17T16:31:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nSierra is a Python framework created to develop web applications solely on Python and integrate with HTML and CSS\r\nPowerful functionalities of Python combined with regular web dev can open up a new stream for web application development purely with Python\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n\r\nOther existing HTML manipulation/web dev libraries do not offer base for web development solely on Python, and offer only limited use for functionalities. With Sierra, \r\nmost of Python's powerful functionalities can be integrated with their web applications - including other existing libraries too.\r\nEspecially with libraries like Flask among others, Sierra can definitely be a win-win.\r\n\r\nIt's a relatively new release, and development is on at a fast pace.\r\nI would create a new section for this, since this is a relatively new stream.\r\nEdit: I see a section called 'Web Frameworks', it would fit there\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-15T19:21:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA framework for your API that provides:\r\n- Automated Integration Testing\r\n- Automated Live Documentation\r\n\r\nGiven an API specification, written in YAML/JSON format, ScanAPI hits the specified endpoints, runs the test cases, and generates a detailed report of this execution - which can also be used as the API documentation itself.\r\n\r\nWith almost no Python knowledge, the user can define endpoints to be hit, the expected behavior for each response and will receive a full real-time diagnostic report of the API!\r\n\r\n[Website](https://scanapi.dev)\r\n[Main Repo](https://github.com/scanapi/scanapi)\r\n[Content created by the community](https://scanapi.dev/community.html)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. It works for any REST API, doesn't matter how it was built;\r\n2. It is extremely useful for testing and documenting both owned and third-party APIs;\r\n3. It is possible to chain requests, which is essential for testing complex scenarios;\r\n4. The documentation is automatically generated, it never gets outdated;\r\n5. It is simple. The syntax is simple, and it requires almost no language-specific knowledge;\r\n6. It is extremely flexible, once pure python code is accepted in the specification;\r\n7. There is nothing in the market that does what ScanAPI does.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-10T11:39:24Z",
        "closed_at": "2021-12-03T13:40:13Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nOpen-source Python wrapper for google speech to text API and also works with hugging face transformers\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n[Speech_recognition](https://github.com/Uberi/speech_recognition) is an alternative to easySpeech but sometimes people face issues while installing its dependencies but this doesn't occur with easySpeech\r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-10T08:41:16Z",
        "closed_at": "2021-09-12T12:13:38Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\npyreports is a python library that allows you to create complex reports from various sources such as databases, text files, ldap, etc. and perform processing, filters, counters, etc. and then export or write them in various formats or in databases.\r\n\r\nYou can use this library for complex reports, or to simply filter data into datasets divided by topic. Furthermore, it is possible to export in various formats, such as csv, excel files or write directly to the database (mysql, mssql, postgresql and more).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Capture any type of data\r\n* Export data in many formats\r\n* Data analysis\r\n* Process data with filters and maps\r\n* Some functions will help you to process averages, percentages and much more\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-10T08:37:20Z",
        "closed_at": "2021-09-12T12:14:13Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is a library that allows you to create preview images, make logos, create a font pages for marketing, make a font banner for web and font booklet from one or more selected fonts.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Based on Pillow library\r\n* It is a specific font library\r\n* Whit this library is possible to create a complex image with font: [FiraCode exmple with python](https://github.com/MatteoGuadrini/fontpreview#advanced-usage)\r\n* Make a logos with one or two letters, like [Typescript logo](https://fontpreview.readthedocs.io/en/latest/example.html#fontlogo-example)\r\n* Dynamically creation of text banner with code for the web framework, like Flask or Django\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an Approve review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-10T08:32:02Z",
        "closed_at": "2021-09-12T12:14:28Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\ndinosay is a humble, simple, nice and paleolithic alternative to cowsay command line tool.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* It can be used directly in the command line\r\n* It can be used as a python library to beautify scripts\r\n* It can be used to build custom command lines\r\n* Use a custom files\r\n* Customize eye, tongue, comic and behavior of the dinosaur than has been printed\r\n* List all dinosaur, behavior and parts with only one command: dinolist\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-07T23:39:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nFeast is an open source feature store for machine learning. It allows teams to operationalize data for machine learning. \r\n* Build point-in-time correct training datasets\r\n* Materialize offline/batch data into online stores\r\n* Ensure retrieval consistency between training and online serving\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\nUnclear what comparison exists.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-07T04:38:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Tkinter Designer was created to speed up the GUI-development process in Python. It uses the well-known design software Figma to make creating beautiful Tkinter GUIs in Python a piece of cake.\r\n\r\nTkinter Designer is Featured on Awsomeopensource.com in Top 19 GUI Applications list.\r\n - https://awesomeopensource.com/projects/gui-application\r\n\r\nHere are more mentions of Tkinter Designer - \r\nhttps://docs.google.com/document/d/1vNRZY2XuDtG9MYxAEFAfah4uSqIgpOJCqci7xyV7Nmk/edit?usp=sharing",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-06T15:10:08Z",
        "closed_at": null,
        "merged_at": null,
        "body": "It offers cross-platform, customizable ML solutions such as Face Detection,Face Mesh,Iris,Hands Detection etc.\r\n\r\n## What is this Python project?\r\n\r\nIt is a python library for used widely for computer vision",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-06T12:05:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nthe smart python cms and you can see the demo: https://farapy.herokuapp.com/\r\n\r\n## What's the difference between this Python project and similar ones?\r\n1) Modular\r\n2) Easy to develop (for business edition)\r\n3) Fast deployment\r\n4) Real power of security between all of other content management systems based on python\r\n5) Perfect utilities and etc\r\n\r\nEnumerate comparisons.\r\n\r\n5\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 982,
        "deletions": 982,
        "changed_files": 1,
        "created_at": "2021-06-04T20:58:22Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nThe fastest unstructured dataset management for TensorFlow/PyTorch. Stream data real-time & version-control it.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n1. It allows you to version control data via chunked compressed arrays. \r\n2. Hub datasets are compatible to TensorFlow and PyTorch.\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 982,
        "deletions": 982,
        "changed_files": 1,
        "created_at": "2021-06-04T20:13:17Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe fastest computer vision dataset management framework for data streaming, data visualization, version-control and collaboration.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It allows you to upload and store data on Hub and then visualize that data.\r\n- It allows you to fork datasets you like after visualizing them in the visualization platform on Activeloop.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-06-04T14:41:28Z",
        "closed_at": "2023-08-30T20:20:54Z",
        "merged_at": null,
        "body": null,
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-29T04:13:39Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nJAX is a machine learning library with a NumPy-like interface designed to run on accelerators such as GPUs and TPUs. Its distinguishing feature are arbitrarily composable function transformations, enabling JIT compilation, higher order gradients, automatic batching, simple multi-device parallelism, and more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- PyTorch: JAX provides higher order gradients, automatic batching, and JIT compilation at higher performance than PyTorch\r\n- TensorFlow: JAX is much simpler and narrower in scope, which means all its components are better integrated, easier to use, and has fewer bugs. It also exclusively leverages the XLA compiler instead of pre-compiled kernels.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-27T08:08:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "https://github.com/TomNicholas/Python-for-Scientists is no longer maintained.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-25T11:00:28Z",
        "closed_at": "2022-06-23T20:25:33Z",
        "merged_at": null,
        "body": "## Disclaimer\r\n\r\nI am not involved with the publisher or the author in any way. I simply think this is a very valuable book.\r\n\r\n\r\n## What is this Python project?\r\n\r\n_Effective Python_ is one of the most in-depth and helpful books out there. It covers all kinds of topics and pitfalls and proposes several quasi-standards to deal with them.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Where other resources describe the how to achieve a thing in Python, this book explains the why and the reason of doing it this way. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-22T13:21:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Add a Command-line Interface Development\r\n\r\n## What is this Python project?\r\n\r\nTyper is a library for building CLI applications that users will love using and developers will love creating. Based on Python 3.6+ type hints.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n-  Intuitive to write: Great editor support. Completion everywhere. Less time debugging. Designed to be easy to use and learn. Less time reading docs.\r\n \r\n- Easy to use: It's easy to use for the final users. Automatic help, and automatic completion for all shells.\r\n\r\n-  Short: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.\r\n-  Start simple: The simplest example adds only 2 lines of code to your app: 1 import, 1 function call.\r\n- Grow large: Grow in complexity as much as you want, create arbitrarily complex trees of commands and groups of subcommands, with options and arguments.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-19T16:59:30Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\npython package for manipulating gpx files and easily converting gpx to other different formats\r\n\r\nDescribe features.\r\n\r\n- Convert gpx files to other formats such as csv, arrays, dataframes, excel and json\r\n- Convert csv files to gpx\r\n- Apply interpolation on the gpx data\r\n- \r\n## What's the difference between this Python project and similar ones?\r\n\r\n- convert gpx easily to most used formats and not only csv\r\n- apply interpolation on the gpx data\r\n- \r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-19T16:43:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA flexible free and unlimited python tool to translate between different languages in a simple way using multiple translators.\r\n\r\nDescribe features.\r\n\r\n* Support for google translate\r\n* Support for the microsoft translator\r\n* Support for Pons translator\r\n* Support for the Linguee translator\r\n* Support for the Mymemory translator\r\n* Support for the Yandex translator\r\n* Support for the QCRI translator\r\n* Support for the DeepL translator\r\n* Support for proxy usage\r\n* Automatic single language detection\r\n* Batch language detection\r\n* Translate directly from a text file\r\n* Get multiple translations for a word\r\n* Automate the translation of different paragraphs in different languages\r\n* Translate directly from the terminal\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAs far as I know, there is no similar tool \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-19T16:34:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "\r\n\r\n## What is this Python project?\r\n\r\nigel is a machine learning library that makes it very easy to train and validate ML models. It can be used without any coding experience, it also comes with a built-in GUI for users who are not familiar with the CLI\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAs far as I know, there is no similar project to igel\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-18T09:31:18Z",
        "closed_at": "2022-09-02T04:09:41Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA Neural Search framework to implement AI powered semantic search in your project\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Based on Neural Networks\r\n* Works on pre-trained Neural Network models, saving time and efforts\r\n* Decentralized architecture\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-18T09:28:54Z",
        "closed_at": "2021-05-18T09:33:28Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA Neural Search framework to implement AI powered semantic search in your project\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Based on Neural Networks\r\n* Works on pre-trained Neural Network models, saving time and efforts\r\n* Decentralized architecture\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-05-16T14:45:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe lightweight PyTorch wrapper for high-performance AI research to scale your models, not the boilerplate.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-05-07T06:54:07Z",
        "closed_at": "2022-06-14T19:31:49Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA suite of utilities for AWS Lambda functions to ease adopting best practices such as tracing, structured logging, custom metrics async, parameters and secrets management, idempotency, and more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n**Tenets**\r\n\r\nThis project separates core utilities that will be available in other runtimes vs general utilities that might not be available across all runtimes.\r\n\r\n- **AWS Lambda only** We optimise for AWS Lambda function environments and supported runtimes only. Utilities might work with web frameworks and non-Lambda environments, though they are not officially supported.\r\n- **Eases the adoption of best practices**. The main priority of the utilities is to facilitate best practices adoption, as defined in the AWS Well-Architected Serverless Lens; all other functionality is optional.\r\n- **Keep it lean**. Additional dependencies are carefully considered for security and ease of maintenance, and prevent negatively impacting startup time.\r\n- **We strive for backwards compatibility**. New features and changes should keep backwards compatibility. If a breaking change cannot be avoided, the deprecation and migration process should be clearly defined.\r\n- **We work backwards from the community**. We aim to strike a balance of what would work best for 80% of customers. Emerging practices are considered and discussed via Requests for Comment (RFCs)\r\nIdiomatic. Utilities follow programming language idioms and language-specific best practices.\r\n\r\n**Highlighted Features**\r\n\r\n- **Tracing** - Decorators and utilities to trace Lambda function handlers, and both synchronous and asynchronous functions\r\n- **Logging** - Structured logging made easier, and decorator to enrich structured logging with key Lambda context details\r\n- **Metrics** - Custom Metrics created asynchronously via CloudWatch Embedded Metric Format (EMF)\r\nBring your own middleware - Decorator factory to create your own middleware to run logic before, and after each Lambda invocation\r\n- **Parameters utility** - Retrieve and cache parameter values from Parameter Store, Secrets Manager, or DynamoDB\r\n- **Batch processing** - Handle partial failures for AWS SQS batch processing\r\n- **Typing** - Static typing classes to speedup development in your IDE\r\n- **Validation** - JSON Schema validator for inbound events and responses\r\n- **Event source data classes** - Data classes describing the schema of common Lambda event triggers\r\n- **Parser** - Data parsing and deep validation using Pydantic\r\n- **Idempotency** - Convert your Lambda functions into idempotent operations which are safe to retry\r\n- **Event Handler** - Decorators to help simplify AppSync [GraphQL] and API Gateway events. Think Flask for AWS Lambda\r\n- **Feature Flags** - A simple rule engine to evaluate when one or multiple features should be enabled depending on the input\r\n\r\n**More info**\r\n\r\n- [AWS Lambda Powertools - GitHub](https://github.com/awslabs/aws-lambda-powertools-python)\r\n- [AWS Lambda Powertools - Docs](https://awslabs.github.io/aws-lambda-powertools-python/latest/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-04-22T15:25:53Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Hi, I'm a UX designer/marketer who has been learning a bit of Python on my own. I recently discovered\u00a0DevProjects and wanted to include them in the list because I personally find the projects and community useful and interactive! Since I'm a beginner, I find other people's solutions helpful.\r\n\r\n## What is this Python project?\r\n\r\nI didn't choose a specific Python project from DevProjects, but I find the projects helpful as they're categorized as easy, medium, and difficult. As I'm new to Python, I usually try my hands on the easy ones, look at other people's solutions, and look at what the community is discussing about for each project. I like that new projects are added once in a while and that the website is completely free. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nDevProjects is very organized and doesn't give you step by step instructions on how to complete the projects. It challenges you to think on your own, but all the projects have really clearly written requirements and suggested implementations, and I like that you can read other people's solutions and comments on different projects.\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-20T13:07:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nBeanie is an Asynchronous ODM for MongoDB. It is based on Motor and Pydantic.\r\n\r\nThe project page with a quick-start example: https://github.com/roman-right/beanie\r\n\r\nThe documentation could be found here - https://roman-right.github.io/beanie/\r\n\r\nAlso, there are some articles about BeanieI:\r\n\r\n- In MongoDB developer blog - https://developer.mongodb.com/article/beanie-odm-fastapi-cocktails/\r\n- Mine from dev.to - https://dev.to/romanright/announcing-beanie-1-0-mongodb-odm-with-query-builder-4mbl\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. It is Asynchronous\r\n2. Find-, Update-, Aggregation Query Builders\r\n3. Data and schema migrations out of the box\r\n4. Indexes management\r\n5. Projections support\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-12T03:53:08Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nSQLLEX - Pythonic superstructure over sqlite3\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhat the heck is Sqllex? \ud83e\udd14\r\n\r\nSqllex is a python library created to make it easier for developers to interact with databases. Currently it supports only SQLite databases but we\u2019re planning to expand this list soon. SQLite is a nice and simple tool for admining databases, but Sqllex makes it even more easy and comfortable.\r\n\r\nIt'll be a lot easier to show then explain. Wiki / examples: https://github.com/v1a0/sqllex/wiki\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-08T12:14:33Z",
        "closed_at": "2021-11-06T18:36:07Z",
        "merged_at": null,
        "body": "section newsletters - add freecodecamp python articles collection",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-01T19:28:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nIn the section 'Environment management' I have added the pipenv tool. I consider it one of the best there is.\r\n\r\n## What's the difference between this Python project and similar ones ?\r\nPipenv is a packaging tool for Python that solves some common problems associated with the typical workflow using pip , virtualenv , and the good old requirements. txt . In addition to addressing some common issues, it consolidates and simplifies the development process to a single command line tool.\r\n\r\n--\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-01T08:41:08Z",
        "closed_at": "2021-04-23T03:28:04Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is a link to a curated list of real-world python projects.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- link to multiple python projects with user-story & deliverables\r\n- community of python developers \r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-04-01T06:43:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nHub - Fastest unstructured dataset management for TensorFlow/PyTorch by activeloop.ai. Stream & version-control data. Converts large data into a single numpy-like array on the cloud, accessible on any machine.\r\n\r\nDescribe features.\r\n\r\n- Store and retrieve large datasets with version-control\r\n- Collaborate as in Google Docs: Multiple data scientists working on the same data in sync with no interruptions\r\n- Access from multiple machines simultaneously\r\n- Deploy anywhere - locally, on Google Cloud, S3, Azure, and Activeloop (by default - and for free!)\r\n- Integrate with your ML tools like Numpy, Dask, Ray, PyTorch, or TensorFlow\r\n- Create arrays as big as you want. You can store images as big as 100k by 100k!\r\n- Keep the shape of each sample dynamic. This way you can store small and big arrays as 1 array.\r\n- Visualize any slice of the data in a matter of seconds without redundant manipulations\r\n\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\nIt's much more deep learning, machine learning-oriented, and makes easy handling of the data.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-29T11:33:58Z",
        "closed_at": null,
        "merged_at": null,
        "body": "# What is this Python project?\r\n\r\n[pyABC](https://github.com/icb-dcm/pyabc) is a tool for distributed likelihood-free inference using Approximate Bayesian Computation.\r\n\r\n# What's the difference between this project and similar ones?\r\n\r\n* It provides a state-of-the-art implementation of ABC-SMC with a few unique algorithms, such as population size adaptation, measurement noise quantification, and automatic distance learning.\r\n* It allows to exploit HPC infrastructure, thus scaling to computationally complex problems.\r\n* It has a very easy-to-use interface and is used by researchers in many areas.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-28T04:29:41Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA library for a simple integration of the JSON-RPC 2.0 protocol to a Python application using aiohttp. The motivation is to provide a simple, fast and reliable way to integrate the JSON-RPC 2.0 protocol into your application on the server and/or client side. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Features\r\n* Code quality\r\n* Good abstractions\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-18T08:24:15Z",
        "closed_at": "2021-06-10T08:28:45Z",
        "merged_at": null,
        "body": "## fontpreview: What is this Python project?\r\n\r\nThis is a library that allows you to create preview images from one or more selected fonts.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Based on Pillow library\r\n* It is a specific font library\r\n\r\n\r\n## dinosay: What is this Python project?\r\n\r\ndinosay is a humble, simple, nice and paleolithic alternative to cowsay.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* It can be used directly in the command line\r\n* It can be used as a python library to beautify scripts\r\n* It can be used to build custom command lines\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-17T20:06:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nLiquidb simplifies migration burden in big Django projects. One of useful use cases to quickly change state of DB schema in Django project that has with few codependent Django applications. Another example is to rollback to given state, so that code in Django project is consistent with DB schema.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere is no similar projects for Django in Python as far as I know. \r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-15T17:33:22Z",
        "closed_at": null,
        "merged_at": null,
        "body": "To make the existing curated list more awesome, added a useful module to the list.\r\n\r\n## What is this Python project?\r\n\r\nWhen working with date and time information in Python, you commonly use the classes date, datetime and/or time from the datetime package. Babel provides functions for locale-specific formatting of those objects in its dates module.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPython\u2019s datetime module has different ways to deal with times and dates: naive and timezone-aware datetime objects.\r\n\r\nBabel generally recommends you to store all your time in naive datetime objects and treat them as UTC at all times. This simplifies dealing with time a lot because otherwise you can get into the hairy situation where you are dealing with datetime objects of different timezones. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-11T19:32:58Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAn API client library with APIs to solve common business problems (i.e. virus scanning APIs, document conversion APIs, OCR APIs, validation APIs, etc.).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are currently no directly similar products.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-11T09:53:31Z",
        "closed_at": "2021-03-11T10:26:42Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-06T16:47:50Z",
        "closed_at": "2023-04-12T21:06:55Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n`pdbr` is intended to make the PDB results more colorful. it uses Rich library to carry out that.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- New commands\r\n- IPython support\r\n- Celery support\r\n- Custom rich styles.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-06T15:06:37Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA Prometheus exporter for Celery metrics.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nExplained in the 'Why?' section: https://github.com/danihodovic/celery-exporter/#why-another-exporter\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-03-06T09:22:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAriadne is a Python library for implementing GraphQL servers using a schema-first approach. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSchema-first approach - unlike graphene the schema is defined explicitly and is not inferred from code, it's more light-weight and less opinionated, it has subscriptions, file uploads,  tracing and other useful stuff built-in.\r\n\r\nExample hello world app with starlette:\r\n```py\r\nfrom ariadne import QueryType, make_executable_schema\r\nfrom ariadne.asgi import GraphQL\r\nfrom starlette.applications import Starlette\r\n\r\ntype_defs = \"\"\"\r\n    type Query {\r\n        hello: String!\r\n    }\r\n\"\"\"\r\n\r\nquery = QueryType()\r\n\r\n\r\n@query.field(\"hello\")\r\ndef resolve_hello(*_):\r\n    return \"Hello world!\"\r\n\r\n\r\n# Create executable schema instance\r\nschema = make_executable_schema(type_defs, query)\r\n\r\napp = Starlette(debug=True)\r\napp.mount(\"/graphql\", GraphQL(schema, debug=True))\r\n\r\n```\r\n\r\nHere's a really nice into and justification from one of the authors: https://blog.mirumee.com/schema-first-graphql-the-road-less-travelled-cf0e50d5ccff\r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-25T10:11:30Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Added nbshare.io as a resource for Python tutorials\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-02-13T16:36:09Z",
        "closed_at": "2021-03-27T14:21:46Z",
        "merged_at": null,
        "body": "Hi, i'm Danix, a Python developer/Pythonista, i sorry if my english is bad but i only speak spanish.  I viewed Awersome Python repository and i wanted to contribute to it! In my contribution, i added the new Pylance to the Plugins/IDE's category, and the Ursina Engine framework to the Game Development category, i updated the Panda3D description to add the 2, i added the \"awesome\" Python Land to Resources/Tutorial Websites category and i added Awesome Python in Education why it's creator, [quobit](https://github.com/quobit) gived me permission to do it,.\r\n\r\nQuestions:\r\nQ: Why Ursina Engine is \"awesome\".\r\nA: Ursina Engine is \"awesome\" why is based in the Panda3D game development framework but compared to Panda3D it's really easy to use and it's a good first shoot for beginners in 3D game development (i think).\r\nQ: Why Pylance is \"awesome\".\r\nA: Pylance is a Microsoft official extension for VSCode that adds some incredible functions to the programming with Python (i don't used it but look really good), that is why it's \"awesome\".\r\nQ: What you updated from the Panda3D description.\r\nA: I added the 2D support to the description.\r\nQ: Why Python Land is \"awesome\".\r\nA: It's \"awesome\" why it Python Tutorial is soo easy for beginners (and experienced developers), and it's really complete.\r\nQ: Why Awesome Python in Education is \"awesome\".\r\nA: It's \"Awesome\" why it have a lot's of Python learning resources, game engine and more! It haves more of 500 starts and 100 forks! So, it don't needs explication.\r\n\r\nWell, i hope you like my contribution and accept it.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-10T16:08:14Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nBigData library for having additional layer of abstraction between CSV/JSON/Parquet and NumPy/Pandas\r\n\r\n## What's the difference between this Python project and similar ones?\r\nadditional client abstraction layer over BigData stack\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-02-06T18:20:22Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nLark is a general-purpose parsing toolkit.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nLark is already skyrocketing in popularity, compared to the competition: https://star-history.t9t.io/#lark-parser/lark&dabeaz/ply\r\n\r\nIt's much friendlier to beginners, with a better interface.\r\n\r\nIt can do a lot of things that PLY, and others, can't, like parsing natural language.\r\n\r\nIt also lets you generate a standalone parser, which is pretty unique.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-02-03T23:19:36Z",
        "closed_at": "2021-02-04T06:00:05Z",
        "merged_at": "2021-02-04T06:00:05Z",
        "body": "Fixes dramatiq spelling.\r\n`daramatiq` -> `dramatiq`",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-31T16:18:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nCaer simplifies our approach towards Computer Vision by abstracting away unnecessary boilerplate code giving us the flexibility to quickly prototype deep learning models and research ideas.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThis project has an elegant, type-checked API and unique design philosophy. This library has >2m downloads on PyPi. See the official repository: https://github.com/jasmcaus/caer\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request, please submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-31T12:44:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Added the rsa library. Under cryptography section. It uses the rsa algorithm for asymmetric encryption using public and private keys.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-30T13:45:16Z",
        "closed_at": "2023-08-25T22:57:50Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[PyG2Plot](https://github.com/hustcc/PyG2Plot) is a Python3 binding for [@AntV/G2Plot]( https://github.com/antvis/G2Plot) which an interactive and responsive charting library. Based on the grammar of graphics, you can easily make superior statistical charts through a few lines of code. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. based on AntV G2, the grammar of graphic\r\n2. easy to create common plots\r\n3. jupyter supported\r\n\r\nAlso pr to [awesome-javascript](https://github.com/sorrycc/awesome-javascript/pull/760).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-29T13:39:05Z",
        "closed_at": null,
        "merged_at": null,
        "body": "\u2026 CLI tools.\r\n\r\n## What is this Python project?\r\n\r\nThis library is aimed to provide useful features and to shorten required lines of code for writing nice-looking command-line interface tools.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThis library is well designed, excellent coded with security in mind and is easy to use.  Multiple examples are available on the authors website [https://github.com/dhondta/python-tinyscript](https://github.com/dhondta/python-tinyscript)\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-25T02:05:12Z",
        "closed_at": "2021-01-25T05:15:25Z",
        "merged_at": "2021-01-25T05:15:25Z",
        "body": "resolve #1713\r\n\r\n## What is this Python project?\r\n\r\nGunicorn 'Green Unicorn' is a Python WSGI HTTP Server for UNIX. It's a pre-fork worker model. The Gunicorn server is broadly compatible with various web frameworks, simply implemented, light on server resources, and fairly speedy.\r\n\r\nhttps://gunicorn.org/\r\nhttps://github.com/benoitc/gunicorn\r\nhttps://en.wikipedia.org/wiki/Gunicorn\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-22T15:59:35Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nData validation and settings management using Python type hinting.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Pure Python\r\n- Intended as a supplement to standard library dataclasses and typing modules\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-22T15:56:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\nTraitlets is a pure Python library enabling:\r\n\r\n- the enforcement of strong typing for attributes of Python objects (typed attributes are called \"traits\");\r\n- dynamically calculated default values;\r\n- automatic validation and coercion of trait attributes when attempting a change;\r\n- registering for receiving notifications when trait values change;\r\n- reading configuring values from files or from command line arguments - a distinct layer on top of traitlets, so you may use traitlets without the configuration machinery.\r\n\r\nIts implementation relies on the descriptor pattern, and it is a lightweight pure-python alternative of the traits library.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Pure Python\r\n- configurable from file or CLI arguments\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-22T15:26:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPint allows you to manipulate physical quantities in a unit-aware manner.  Is compatible with other libraries such as numpy\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nComes with a list of physical constants, units, and prefixes\r\nAutomatically typesets units for display in Jupyter\r\nAll operations are unit-aware\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-22T14:30:02Z",
        "closed_at": "2021-01-22T14:31:55Z",
        "merged_at": "2021-01-22T14:31:55Z",
        "body": "fixed a spelling error that I made but did not notice until after you already merged this branch",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-22T14:28:22Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nD-Tale is the combination of a Flask back-end and a React front-end to bring you an easy way to view & analyze Pandas data structures. It integrates seamlessly with jupyter notebooks & python/jupyter terminals. Currently this tool supports such Pandas objects as DataFrame, Series, MultiIndex, DatetimeIndex & RangeIndex.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAs far as I can tell there isn't anything for Exploratory Data Analysis on awesome-python yet so this might be in its own class.  The difference between this project and the ones in Data Visualization is that this one will allow users to apply a GUI to their pandas objects w/ one line of code `dtale.show(df)`.  This GUI comes complete with the following key features:\r\n* Smooth grid for sorting, filtering, selecting & editing\r\n* Chart builder created on top of `plotly-dash`\r\n* Network analysis using a combination of `networkx` & the JS package `vis-network`\r\n* Code exports so you can learn pandas as you perform operations\r\nThis package can also be integrated into your own Streamlit notebooks & Flask or Django applications. There are links to detailed instructions on how to do both in the README.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 6
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-21T16:28:33Z",
        "closed_at": "2021-01-22T10:24:03Z",
        "merged_at": "2021-01-22T10:24:03Z",
        "body": "## What is this Python project?\r\n\r\nIt is a SQlite interface in the Python standard library\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is in the python standard library\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-21T16:16:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nHoloviews is a high-level plotting library that simplifies the process of plotting data, abstracting away the minutiae of drawing axes and glyphs allowing you to focus on what the graph is trying to convey.   Holoviews supports bokeh, matplotlib, and plotly as backends for rendering the plot.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1.  abstracts the process of creating plots\r\n2. focuses on the structure and content of the data, not the structure and contents of a plot (e.g. a collection of axes, glyphs, etc.)\r\n3. a holoviews plot can be transformed, sliced, and cross-sectioned to create other plots without having to redraw anything.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-21T16:04:35Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nOracle's own database driver for working with Oracle SQL databases\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no other drivers for Oracle SQL databases.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-20T23:22:37Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nRADIS :\r\n- compute emission & absorption molecular spectra based on standard line databases (HITRAN/HITEMP) \r\n- can be used for combustion, plasma physics, atmospheres and exoplanet research\r\n- is also a post-processing toolbox to compare with experimental spectra \r\n- Has an online interface : https://radis.github.io/radis-lab/ with preconfigured research-grade databases, and a (WIP) webpage app https://radis.app/  for educational use \r\n- Aims at building a spectroscopy-enthusiasts community !\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Implements a new algorithm that makes it up to 4 orders of magnitude faster than equivalent codes ([hapi](https://github.com/hitranonline/hapi)) \r\n- Has non-equilibrium support (multiple-temperatures)\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-16T20:41:38Z",
        "closed_at": "2021-01-21T13:21:21Z",
        "merged_at": "2021-01-21T13:21:21Z",
        "body": "## What is this Python project?\r\n\r\nClickHouse Python Driver with native (TCP) interface support.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* It allows to have an excellent driver of Python for ClickHouse\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-11T12:41:55Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nMediator pattern implementation for python 3.6+. Supports pipline behaviors, async handling.\r\nLibrary uses type annotations to register handlers and behaviors and match queries to them.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- python class as a Query (or Command) in CQRS\r\n- python function or class as a handler of queries\r\n- easy registering handlers and behaviors by decorator\r\n- mediator.send(query) in synchronous mode\r\n- await mediator.send_async(query) in async mode\r\n- behavior wraps handler. For example for validation, speed measurement and others\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n\r\nhttps://github.com/megafetis/mediatr_py\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-09T15:48:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "added MediaCMS to the list of CMSes.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-08T16:47:30Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nFastAPI a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints,\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt has very good support for type hints and mature toolchain.\r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-01-08T12:48:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "As discussed in https://github.com/vinta/awesome-python/issues/1619#issuecomment-756729525 adding a bot that can automatically manage the repository, track changelog, and take care of project version lifecycle. The bot will check the repository setup once it is enabled by the repository maintainer (@vinta). Please [follow the instructions in docs](https://thoth-station.ninja/docs/developers/adviser/integration.html#kebechet-github-application) for more info. Basically, you'll need to enable https://github.com/apps/khebhut application and let @sesheta be the collaborator of the repo so it can open PRs.\r\n\r\nLet us know if you have any issues, questions or you find any difficulties with the setup. We are happy to help.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-08T10:42:36Z",
        "closed_at": "2021-01-22T10:23:17Z",
        "merged_at": "2021-01-22T10:23:17Z",
        "body": "Repo is no longer supported, is archived and read-only. Maintainer is recommending people use the Maxmind's GeoIP2 Python API.\r\nMaxmind's GeoIP2 Python API.: https://github.com/maxmind/GeoIP2-python\r\npygeoip: https://github.com/appliedsec/pygeoip\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-08T10:27:43Z",
        "closed_at": "2021-01-22T10:22:54Z",
        "merged_at": "2021-01-22T10:22:54Z",
        "body": "Remove the profiling repo as it has been archived and no longer maintained. The repo owner is highly recommending people switching to py-spy which provides better performance and usability.\r\nRepo: https://github.com/what-studio/profiling\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-08T10:21:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The original line_profiler repo is no longer maintained and links to this new maintained repo.\r\nOld Repo: https://github.com/rkern/line_profiler\r\nNew Repo: https://github.com/pyutils/line_profiler\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-08T10:13:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Repository has been archived by the owner. It is now read-only. No Maintenance Intended.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-01-07T15:50:11Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nWas deprecated because the dependencies are reliant on py2 and nobody is working on it.\r\n \r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-28T20:46:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Texthero](https://www.github.com/jbesomi/texthero) is a library that combines a wide range of text preprocessing, visualization and representation functionality in an easy-to-use, well-documented way.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- well-documented and -maintained\r\n- up-to-date features\r\n- seamlessly integrated with Pandas, thus extremely easy and intuitive to use\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-28T17:53:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nAn open source, self hosted video and media CMS\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. Modern stack (Python3/Django3/Reactjs).\r\n2. REST API included.\r\n3. Support for multiple publishing workflows\r\n4. Sane defaults for encoding of videos\r\n5. adaptive streaming (HLS)\r\n6. resumable uploads (through chunked file uploads)\r\n7. custom media management dashbord\r\n8. responsive design - multiple themes\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-26T23:35:17Z",
        "closed_at": "2021-01-26T17:43:25Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis project is a website blog-alike with plenty of articles that teach you a lot of different Python topics.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. The content ranges from beginner to advanced.\r\n2. Provides you with useful examples.\r\n3. The blog gets updated with new features.\r\n4. There's a newsletter you can subscribe to that sends you regular emails with tips and tricks about Python.\r\n5. Concise content. Explained in a way that is useful to understand.\r\n6. Easy to navigate through (links previous tutorials when needed.)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2020-12-25T16:30:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nCompares performance of various python serialization packages\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nDon't know about existence of similar projects\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-18T12:31:32Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThe `log` function of `timelogging` is designed to be a drop-in replacement for `print` and it enables a clean output of either the time, time and day, or a fully customizable timestamp.\r\n\r\nIt is designed to allow logging to be as minimalistic as possible and it aspires to be as customizable as possible as well.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is a wrapper around the builtin `logging` library with way less overhead. This allows quicker prototyping, especially for data science tasks where the tracking of run durations of code blocks in  a script is very important. \r\n\r\nThrough this log function the time can be easily tracked with just one line of code of importing it. I find it very useful and I use it all the time.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-17T06:10:57Z",
        "closed_at": null,
        "merged_at": null,
        "body": "The powerful python cms wrote by django and python\r\nsample site: boshra.org or faral.tech\r\n\r\nWhat's the difference between this Python project and similar ones?\r\nForm creator\r\nnew context processor\r\nnew stream fields\r\nhttps://djangopackages.org/grids/g/cms/\r\nhttps://www.linkedin.com/company/faralco/\r\nhttps://www.wappalyzer.com/technologies/cms/farapy\r\nhttps://github.com/Faral-Ghaemi/FaraPy",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-12-14T08:21:16Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Pdfminer.six](https://github.com/pdfminer/pdfminer.six) is a community maintained fork of the original [PDFMiner](https://github.com/euske/pdfminer). It is a tool for extracting information from PDF documents.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n> As of 2020, `PDFMiner` is not actively maintained. For the active project, check out its fork `pdfminer.six`.\r\n\r\nSo I change `PDFMiner` to `pdfminer.six`\r\n\r\n----\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-13T16:15:54Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-13T10:23:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Including a small, toggleable section with a headline that gives a comparison between the two former, which I hope should be alright with regards to the formatting:\r\n\r\n![image](https://user-images.githubusercontent.com/7313176/102009118-965a6680-3d35-11eb-8d02-a5e40ccb236e.png)\r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-12-11T22:13:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Since this PR isn't for adding a project, I deviated from the format. Let me know if you'd still like me to follow it.\r\n\r\nAdd [awesome-fastapi](https://github.com/mjhea0/awesome-fastapi) list for the FastAPI web framework.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-11T15:34:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nJupylet is a unique library for sound synthesis, live music coding, graphics, and game programming interactively in Jupyter notebooks:\r\n\r\n[https://github.com/nir/jupylet](https://github.com/nir/jupylet)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Jupylet brings interactive live music coding and live loops in the spirit of Sonic Pi to Jupyter, building on the natural interactivity of Jupyter Notebooks. \r\n\r\n* Jupylet brings the full power of sound synthesis to pure Python (and Numpy) - in contrast other sound synthesis libraries for Python are typically binding to C libraries or to separate audio servers. \r\n\r\nHere is an example of two simple live loops playing a synthesized instrument, created with a few lines of code:\r\nhttps://jupylet.readthedocs.io/en/latest/_static/audio/tb303.5.ogg\r\n\r\nYou can find the code for this example in [the online documentation](https://jupylet.readthedocs.io/en/latest/programmers_reference_guide/synthesis.html#filters). \r\n\r\n* Jupylet brings 2D and 3D interactive game programming into Jupyter. There are other Python libraries for game programming, but I am not aware of any that is designed to be programmed interactively.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-07T22:49:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA multi language graphical debugger for Vim\r\n\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-12-04T14:10:04Z",
        "closed_at": "2020-12-04T16:13:05Z",
        "merged_at": "2020-12-04T16:13:05Z",
        "body": "Hey @vinta \r\n\r\njust improving the readability a bit..\r\n\r\nCheers!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-12-03T14:46:01Z",
        "closed_at": "2022-04-07T01:45:28Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nPipenv is a well-known package and virtualenv manage tool under the PyPA namespace.\r\n\r\nPDM is a new developed package manager that supports [PEP 582](https://www.python.org/dev/peps/pep-0582/) and a bunch of fancy features\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-29T03:18:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nA efficent , lightweight and simple JSON database which focus on schema regularity.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* A unique ID is automatically assigned to each json data added.\r\n* Checks for schema regularity. If any json data have conflicts with the schema of the database its rejected.\r\n* Supports all CRUD operations.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-22T20:17:45Z",
        "closed_at": "2021-01-16T15:48:40Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nThis is one of the most popular books of all time focusing on Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis book is geared toward people newer to the language and uses a practical approach to solidify concepts.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-22T04:28:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n[Neuraxle](https://www.neuraxle.org/) is an extension of the Scikit-Learn project to enable more sophisticated Machine Learning projects, as well as Deep Learning projects. Features: \r\n\r\n- \u26a1\ufe0f Component-Based: Build encapsulated steps, then compose them to build complex pipelines.\r\n- \ud83d\udd25 Evolving State: Each pipeline step can fit, and evolve through the learning process\r\n- \ud83c\udf9b Hyperparameter Tuning: Optimize your pipelines using AutoML, where each pipeline step has their own hyperparameter space.\r\n- \ud83d\udd0c Compatible: Use your favorite machine learning libraries inside and outside Neuraxle pipelines.\r\n- \ud83d\ude80 Production Ready: Pipeline steps can manage how they are saved by themselves, and the lifecycle of the objects allow for train, and test modes.\r\n- \ud83c\udff9 Streaming Pipeline: Transform data in many pipeline steps at the same time in parallel using multiprocessing Queues.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis framework is very similar to Scikit-Learn. However, Scikit-Learn has some limitations, and Scikit-Learn users have been stuck with these problems sometimes. Hopefully, Neuraxle solves most of the encountered problems when it comes to using it for deep learning, and is built upon Scikit-Learn with compatibility in mind, rather than as a replacement. \r\n\r\nHere is a full article dedicated to the differences between Scikit-Learn and Neuraxle, as well as how Neuraxle solves the problems that Scikit-Learn has: \r\n- https://www.neuraxle.org/stable/scikit-learn_problems_solutions.html\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-17T11:34:53Z",
        "closed_at": "2020-11-17T17:13:08Z",
        "merged_at": "2020-11-17T17:13:08Z",
        "body": "Just a quick correction to the table of contents - based on PR #1677. Thanks.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-17T11:32:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "# added [WSocket](https://github.com/Ksengine/wsocket) to list\r\n\r\n## Simple WSGI HTTP + Websocket Server, Framework, Middleware And App.\r\n\r\n## Includes\r\n- Server(WSGI) included - works with any WSGI framework\r\n- Middleware - adds Websocket support for any  WSGI framework\r\n- Framework - simple Websocket WSGI web application framework\r\n- App - Event based app for Websocket communication\r\n**When external server used some clients like Firefox requires `http 1.1` Server. Middleware, Framework, App**\r\n- Handler - adds Websocket support to [wsgiref](https://docs.python.org/3/library/wsgiref.html \"python builtin WSGI server\")(python builtin WSGI server)\r\n- Client -Coming soon...\r\n\r\n## Common Features\r\n\r\n- only single file less than 1000 lines\r\n- websocket sub protocol supported\r\n- websocket message compression supported (works if client asks)\r\n- receive and send pong and ping messages(with automatic pong sender)\r\n- receive and send binary or text messages\r\n- works for messages with or without mask\r\n- closing messages supported\r\n- auto and manual close\r\n\r\n## Alternatives\r\n### Non WSGI\r\n- [Autobahn](http://crossbar.io/autobahn/) - huge with extras\r\n- [websocket-client](https://github.com/websocket-client/websocket-client) - client only no server\r\n-[websockets](https://pypi.org/project/websockets/) - python2 not supported\r\n\r\n### WSGI\r\n- [Django Channels](https://channels.readthedocs.io/en/stable/) - only for Django. but WSocket middleware can add support for any WSGI framework.\r\n- [Flask-SocketIO](https://flask-socketio.readthedocs.io/en/latest/) - only for Flask.\r\n- [gevent-websocket](https://pypi.org/project/gevent-websocket/) - only for Gevent Server\r\n- [ws4py](https://github.com/Lawouach/WebSocket-for-Python) - works with few servers. but WSocket works with many servers\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-13T16:47:31Z",
        "closed_at": "2020-11-17T04:54:53Z",
        "merged_at": "2020-11-17T04:54:53Z",
        "body": "## What is this Python project?\r\n\r\n[Zato](https://zato.io) is a full-featured open-source enterprise integration platform in Python - a scalable, high-performance service bus for SOA, APIs, publish/subscribe topics, guaranteed delivery message queues, file transfer and Single Sign-On.\r\n\r\nBuilt in features include high-availability clusters, servers, web-admin GUI, scheduler and dozens of protocols supported out of the box, such as REST, SOAP, IBM MQ, SAP, Odoo, AMQP, ZeroMQ, AWS, OpenStack, FTP, SFTP, ElasticSearch, Redis, MongoDB, SQL, e-mail, SMS and much, much more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no other project like this in Python.\r\n\r\n## Voting\r\n\r\nAnyone who agrees with this pull request can vote for it by adding a :+1: to it and the maintainer will merge it when votes reach 20 or more.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-11T10:44:07Z",
        "closed_at": "2022-05-23T08:01:17Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nFlask-State is a lightweight chart plugin to show machine state.\r\n\r\n- Monitoring indicators: CPU, Memory, Disk usage, LoadAVG, Boot time.\r\n- Extensible: It has rich options for extended functions, including redis monitoring, user authentication, custom logging, i18n and etc.\r\n- Stable: Lightweight dependencies, meanwhile solving multi-progress concurrency problems (if you use gunicorn).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know other similar Python projects.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-11T10:03:11Z",
        "closed_at": "2021-01-29T11:08:26Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nfile-system utilities for lazy devs.\r\n- Simple and intuitive.\r\n- Zero dependencies.\r\n- Compatibile with python 2 and 3.\r\n- Well tested.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know similar libraries.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-05T20:15:32Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Hi,\r\nI am Branko from Manning Publications and I thought this new book of ours could be a good resource for the list.\r\nThanks for considering it!",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-05T11:49:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nGenerate codes similar to Heroku URLs (adjective-noun-code), or Youtube (URL Safe). It can easily be extended to add custom rules.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere's not another project like this listed.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-11-03T11:00:50Z",
        "closed_at": "2020-11-18T06:46:33Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\n*Think Python: How to Think Like a Computer Scientist* is a book on python released under the GNU Free Documentation license. This book does not take the usual approach by other tutorials on teaching how to program with python but it teaches you to understand programs and solve problems efficiently.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Instead of just teaching programming with python, teaches you to solve problems too.\r\n- Comparing it to other books, this book also teaches you to understand how programs work while learning python.\r\n- Comparatively bigger than other resources but can be very useful for people who does not just want to learn scripting with python but to make programs for scientific research and production uses.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 5
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-11-03T07:50:39Z",
        "closed_at": "2020-11-04T17:07:48Z",
        "merged_at": "2020-11-04T17:07:48Z",
        "body": "This looks like a typo @vinta...\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-29T15:03:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nEland is a Python Elasticsearch client for exploring and analyzing data in Elasticsearch with a familiar Pandas-compatible API.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Where possible the package uses existing Python APIs and data structures to make it easy to switch between numpy, pandas, scikit-learn to their Elasticsearch powered equivalents. \r\n\r\n- In general, the data resides in Elasticsearch and not in memory, which allows Eland to access large datasets stored in Elasticsearch.\r\n\r\n- Eland also provides tools to upload trained machine learning models from your common libraries like scikit-learn, XGBoost, and LightGBM into Elasticsearch.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-26T02:58:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nProvides a client library for interacting with here geocoder api\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nHERE exposes a number of rest APIs and this library is intended to make it even easier for python programmers to use the geocoder API. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2020-10-25T17:46:34Z",
        "closed_at": "2020-10-25T22:12:25Z",
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nDescribe features.\r\nAdding some code\r\nAdding some code\r\nAdding some code\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-21T22:32:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nvedo ([github](https://github.com/marcomusy/vedo)) is a really useful library which allows to work with meshes and volumes.\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- package has an extensive list of features enumerated [here](https://github.com/marcomusy/vedo#--features) \r\n- intuitive API and lots of usage examples\r\n- can export 3d scenes to file or to web page\r\n- is part of the ubuntu/debian distribution\r\n\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-20T20:49:37Z",
        "closed_at": "2020-10-21T12:42:48Z",
        "merged_at": "2020-10-21T12:42:48Z",
        "body": "This can be seen by following the link at the top of https://github.com/mitsuhiko/python-modernize readme",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2020-10-16T08:12:00Z",
        "closed_at": "2020-10-17T13:51:40Z",
        "merged_at": "2020-10-17T13:51:40Z",
        "body": "Hey @vinta \r\n\r\njust fixing the celery link - website is down.\r\n\r\nCheers!",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-13T17:08:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Other section is edited\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-10T19:55:35Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## What is this Python project?\r\n\r\nVizTracer is a logging/debugging/profiling tool that can trace and visualize code execution. It can record function entries/exits along with a lot of other optional information and generate an HTML file using google-trace-viewer to visualize the whole execution through time.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* VizTracer is using a much more intuitive UI - an interactive web page, compared to many other command line based tracers.\r\n* VizTracer has a very low overhead, similar to cProfile, because the essential part is implemented in pure C.\r\n* VizTracer is very powerful feature wise. It can record different kind of information without changing the source code. It has even more logging options with source code modification.\r\n* VizTracer is super easy to use and has no dependecies at all, and, it supports Windows.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2020-10-08T10:04:59Z",
        "closed_at": null,
        "merged_at": null,
        "body": "notifier adding\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
        "comments": 1
    }
]