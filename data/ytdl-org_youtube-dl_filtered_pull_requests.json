[
    {
        "merged": false,
        "additions": 103,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-10-12T23:05:58Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis enables to extract videos posted to the University of Geneva mediaserver, located at https://mediaserver.unige.ch. It supports:\r\n- Single courses/videos\r\n- Whole course \"playlists\" (accessible by clicking on the course's title)\r\n\r\nThanks and cheers !\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-11T06:11:04Z",
        "closed_at": "2023-10-11T06:15:00Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-10-11T03:01:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 65,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-10-10T04:30:22Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd new extractor for MTVA Archivum site.\r\n\r\nCloses #21430\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 633,
        "deletions": 227,
        "changed_files": 4,
        "created_at": "2023-10-02T16:40:21Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<details><summary>Boilerplate: own code, new features+improvement</summary>\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n</details>\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR fixes and updates the existing XHamster[Embed,User] IEs and adds some new playlist extractors, including a pseudo-URL scheme `xhsearch...:` like `ytsearch...`.\r\n\r\nSpecifically:\r\n* a default UA 'Mozilla' is set to bypass a possible captcha page (resolves #32539)\r\n* the list of domains is updated to include those domains listed as trusted in the page that are aliased to xhamster.com, but excluding domains that redirect to xhamster (eg xhday.com) (fixes #31023)\r\n* video extraction is re-factored and made safer using `traverse_obj()` \r\n* playlist extractors are added for Creator (aka Pornstar, Celebrity), Category (aka Tag), and Search pages (resolves #31371): a URL with a specified page is extracted as a single page playlist with `(p{n})` appended to title; otherwise next page continuations are followed with `(all)` appended; any additional qualifications are also added to the title (eg category search `hawaiian (fps=60,all)`)\r\n* a pseudo-URL scheme `xhsearch...` allows searching from the yt-dl command line, eg `youtube-dl \"xhsearchall:no sex\"`; if a result count is specified like `xhsearch15:...` `(first 15)` is added to the search term as the title.\r\n\r\nFor testing the playlists, a previous performance enhancement that limited test playlist processing to the `playlist_mincount` if specified is now only applied if other playlist counts are not being tested.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-09-19T08:44:31Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n\r\nThe internal structure for the video urls seems to have been changed a little bit, causing `ERROR: Cannot parse data` (https://github.com/ytdl-org/youtube-dl/issues/30872). This is a minor change to account for the current structure\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-09-18T15:57:19Z",
        "closed_at": "2023-09-18T15:59:34Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-09-13T19:29:25Z",
        "closed_at": "2023-09-13T19:29:45Z",
        "merged_at": null,
        "body": "### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis change fixes downloading at vimeo urls with more than one \"/\" block",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-09-13T19:10:33Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n  - It is not a new extractor.\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n  - I had no choice of style in this case.\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n  - Can't be helped then; I have no idea how to test for this.\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n  - All original 3760 complaints were preserved. No new ones have been added.\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix #32558\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nMy change concatenates the filename verbatim to the output, instead of to the template that is fed into msg(). This way, percent signs in the filename will not trip up msg().",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-09-13T18:24:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe mixcloud API address changed from www.mixcloud.com/graphql to app.mixcloud.com/graphql\r\nThis PR updates the address to restore functionality.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-08-19T06:08:14Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-17T04:07:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd info extractor to support site [caffeine.tv](https://www.caffeine.tv/)\r\n\r\nCloses #31016\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 103,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-08-16T06:30:46Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nBuild on code from PR #31631. Original author seemed to be not working on it anymore.\r\n- Add playlist info extractor to download playlists\r\n- Refactor code from suggestions by @dirkf\r\n\r\nCloses #31203\r\nCloses #31631 ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-08-15T20:21:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Why?\r\nOptions like `preferredquality` are ignored when postprocessing mp3s.\r\n\r\nWhat?\r\nRemove `mp3` from the list of `filecodec` values to check for in the \"lossless\" condition.\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nWhy?\r\nOptions like `preferredquality` are ignored when postprocessing mp3s.\r\n\r\nWhat?\r\nRemove `mp3` from the list of `filecodec` values to check for in the \"lossless\" condition.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-08-15T08:02:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n\r\nRef: #32448",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2023-08-09T12:30:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nMediaset underwent a name change. It used to be called mediasetplay but it's now called mediainfinity. Hence why downloads were failing. I've looked through previous pull requests and this isn't the first time it has undergone a name change so this is the latest update. It's basically the same site so I didn't change much in the extractor, only updated the regex to capture the new format of the URL.\r\n\r\n- Updated the regex to reflect the name change.\r\n- Changed the site URL of the first test to one that uses the new name change.\r\n\r\nThis should close #32491\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 91,
        "deletions": 90,
        "changed_files": 3,
        "created_at": "2023-07-31T19:03:02Z",
        "closed_at": "2023-08-01T00:05:10Z",
        "merged_at": "2023-08-01T00:05:10Z",
        "body": "<details>\r\n<summary>Boilerplate: own/yt-dlp code, bug fix/improvement</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] Except for code from yt-dlp, for which this or the below have been asserted, I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAfter merging #32481, one [further change](https://github.com/ytdl-org/youtube-dl/pull/32481#discussion_r1278527838) was needed. Meanwhile new _flake8_ Linter rules appeared. This PR addresses both.\r\n\r\nTo pass new Linter rules, direct comparison to `type`s is reworked and at the same time `isinstance()` tests (especially for str/unicode/bytes) are revised, avoiding actual Python version tests as far as possible",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 203,
        "deletions": 85,
        "changed_files": 6,
        "created_at": "2023-07-28T11:35:29Z",
        "closed_at": "2023-07-29T13:27:26Z",
        "merged_at": "2023-07-29T13:27:26Z",
        "body": "<details>\r\n<summary>Boilerplate: own/yt-dlp code, bug fix/improvement</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] Except for code taken from yt-dlp for which either this or the below has already been asserted, I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR encapsulates various under-the-hood fixes, improvements and tests.\r\n* Process `Content-Encoding`s according to [RFC 9110](https://datatracker.ietf.org/doc/html/rfc9110):\r\n  - support nested encodings\r\n  - support `br` encoding, if _Brotli_ package is installed (`pip install brotli`, [\"Only Python 2.7+ is supported.\"](https://github.com/google/brotli/blob/master/python/README.md) -- Only?)\r\n  - support 'compress' encoding, if _ncompress_ package is installed (`pip install ncompress`, \"Requires: Python >=3.8\")\r\n  - change: the response `Content-Encoding` header has only unprocessed encodings, or is removed if all encodings were decoded\r\n  - change: the value in the `Content-Length` header is the decoded length\r\n  - `zlib` is used for both deflate and gzip decompression (except for Jython which doesn't support this in 2.7.1 for reasons not investigated)\r\n  - some elements taken from https://github.com/yt-dlp/yt-dlp/pull/7094: thx @coletdjnz.\r\n* Rework URL path munging for ., .. components ( https://github.com/yt-dlp/yt-dlp/issues/3355):\r\n  - revise e8de54b as part of `utils.YoutubeDLHandler`\r\n  - using this, also process `Location` header for redirects\r\n  - use the static (test_utils) and network (test_http) tests from yt-dlp/yt-dlp#7662.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 475,
        "deletions": 200,
        "changed_files": 38,
        "created_at": "2023-07-25T11:55:38Z",
        "closed_at": "2023-07-25T12:19:43Z",
        "merged_at": "2023-07-25T12:19:43Z",
        "body": "<details>\r\n<summary>Boilerplate: own/yt-dlp code, bug fix/improvement</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] Except for code from yt-dlp where this or the below has already been asserted, I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR encapsulates various under-the-hood fixes, improvements and tests.\r\n* Makes CI support Python 3.10, 3.11, 3.12 beta, using [pynose](https://pypi.org/project/pynose/) for Py >= 3.9.\r\n* Changes CI defaults to core tests on CPython 2.7, 3.2, 3.5, 3.9, 3.11 (POSIX) and 3.4 (Windows) plus pypy-2.7, pypy-3.6, pypy-3.7 and Jython 2.7:\r\n  - PR tests stay as core+download\r\n  - `Actions` page workflow dispatch allows selection of core, download, or both and also the full set of Pythons (sadly not Graham or Terry, though).\r\n* Make Jython tests succeed better: especially, pre-compile the giant lazy extractors file with CPython 2.7 (note: this would have to be replicated by an unlikely rebuilder of yt-dl for Jython with lazy extractors enabled).\r\n* Update developer guidance to cover `traverse_obj()`.\r\n* Fix/test `update_Request()` with empty data (not `None`): thx https://github.com/yt-dlp/yt-dlp/pull/7648\r\n  - also rework 1fa8b86.\r\n* Add and use `devscripts/utils.py` from yt-dlp.\r\n* Extend use of `compat_open()` similar to Py 3 `open()`.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-18T14:31:39Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nuqload.com now redirects to uqload.co\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1522,
        "deletions": 274,
        "changed_files": 15,
        "created_at": "2023-07-18T03:27:04Z",
        "closed_at": "2023-07-18T09:50:46Z",
        "merged_at": "2023-07-18T09:50:46Z",
        "body": "<details>\r\n<summary>Boilerplate: mixed code, improvement</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/), except for code from yt-dlp for which this or the below has been asserted\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nDuring file downloads, youtube-dl or the external downloaders that it invokes may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.\r\n\r\nThis PR implements various remediations to avoid this behaviour:\r\n* removing the Cookie header upon HTTP redirects\r\n* having native downloaders calculate their own Cookie header from the Cookiejar\r\n* using each external downloader's built-in support for cookies, instead of passing them as header arguments; or if the external downloader does not have proper cookie support, disabling HTTP redirection (axel only)\r\n* processing cookies passed as HTTP headers to limit their scope (`--add-header \"Cookie:...\"` is scoped to input URL domain only)\r\n* storing cookies in a separate cookies field of the info dict instead of http_headers so as not to lose their scope.\r\n\r\nThese remediations match similar ones committed to yt-dlp:\r\nhttps://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729\r\nhttps://github.com/yt-dlp/yt-dlp/commit/f8b4bcc0a791274223723488bfbfc23ea3276641\r\nhttps://github.com/yt-dlp/yt-dlp/commit/3121512228487c9c690d3d39bfd2579addf96e07\r\nhttps://github.com/yt-dlp/yt-dlp/commit/6c5211cebeacfc53ad5d5ddf4a659be76039656f\r\nhttps://github.com/yt-dlp/yt-dlp/commit/42ded0a429c20ec13dc006825e1508d9a02f0ad4\r\n\r\nThanks to yt-dlp devs involved in https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj, especially those referenced in commits here.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 56,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-07-13T03:05:30Z",
        "closed_at": "2023-07-18T02:41:15Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-07-08T15:42:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nSkylineWebcams support is broken \u2014 I got the following output trying a random webcam:\r\n\r\n```console\r\n$ youtube-dl -vU 'https://www.skylinewebcams.com/it/webcam/espana/canarias/santa-cruz-de-tenerife/playa-los-cristianos.html'\r\n[debug] System config: []\r\n[debug] User config: []\r\n[debug] Custom config: []\r\n[debug] Command-line args: ['-vU', 'https://www.skylinewebcams.com/it/webcam/espana/canarias/santa-cruz-de-tenerife/playa-los-cristianos.html']\r\n[debug] Encodings: locale UTF-8, fs utf-8, out utf-8, pref UTF-8\r\n[debug] youtube-dl version 2021.12.17\r\n[debug] Python version 3.11.3 (CPython) - Linux-6.2.10-1-clear-x86_64-with-glibc2.37\r\n[debug] exe versions: ffmpeg 6.0, ffprobe 6.0\r\n[debug] Proxy map: {}\r\nIt looks like you installed youtube-dl with a package manager, pip, setup.py or a tarball. Please use that to update.\r\n[SkylineWebcams] playa-los-cristianos: Downloading webpage\r\nERROR: Unable to extract stream url; please report this issue on https://yt-dl.org/bug . Make sure you are using the latest version; see  https://yt-dl.org/update  on how to update. Be sure to call youtube-dl with the --verbose flag and include its complete output.\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.11/site-packages/youtube_dl/YoutubeDL.py\", line 815, in wrapper\r\n    return func(self, *args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib/python3.11/site-packages/youtube_dl/YoutubeDL.py\", line 836, in __extract_info\r\n    ie_result = ie.extract(url)\r\n                ^^^^^^^^^^^^^^^\r\n  File \"/usr/lib/python3.11/site-packages/youtube_dl/extractor/common.py\", line 534, in extract\r\n    ie_result = self._real_extract(url)\r\n                ^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib/python3.11/site-packages/youtube_dl/extractor/skylinewebcams.py\", line 28, in _real_extract\r\n    stream_url = self._search_regex(\r\n                 ^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib/python3.11/site-packages/youtube_dl/extractor/common.py\", line 1012, in _search_regex\r\n    raise RegexNotFoundError('Unable to extract %s' % _name)\r\nyoutube_dl.utils.RegexNotFoundError: Unable to extract stream url; please report this issue on https://yt-dl.org/bug . Make sure you are using the latest version; see  https://yt-dl.org/update  on how to update. Be sure to call youtube-dl with the --verbose flag and include its complete output.\r\n```\r\n\r\nThe raw stream url is now `source:'livee.m3u8?a=abcd1234...'` \u2014 I tried to fix the regex, then noticed the base domain did not appear in the stream url and fixed that too, but it doesn't suffice. Inspecting network requests there's no `livee.m3u8` but various ones to `https://hd-auth.skylinewebcams.com/live`, so also tried to do a simple replace and _it seems_ working now.\r\n\r\nNeedless to say it's a pretty hackish approach and it should be investigated further.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-19T17:45:26Z",
        "closed_at": "2023-07-18T02:42:36Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2023-06-19T09:11:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n\r\nVarious changes I needed to make to the script to make it work on my Ubuntu 20.04 LTS machine.\r\nNamely:\r\n\r\n* changed name of wine apt package so that script doesn't crash about unrecognised package\r\n* changed sourceforge download url for py2exe to a working url\r\n* added support for where 32-bit windows libraries are installed on 64-bit machines\r\n\r\nI have tried to make the changes generic so that they should work on all machines.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-06-16T14:24:08Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [X] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [X] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [X] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [X] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [X] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [X] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [X] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdded ability to download high quality 256k AAC streams with a Soundcloud GO+ account using cookies\r\nThis is not the same as a #26265\r\n\r\n```text\r\npython3 -m youtube_dl -F --cookies soundcloud.com_cookies.txt https://soundcloud.com/g-e-j-u/bm-geju-fractoids-garden-220831\r\n[soundcloud] g-e-j-u/bm-geju-fractoids-garden-220831: Downloading webpage\r\n[soundcloud] 1371317128: Downloading JSON metadata\r\n[soundcloud] 1371317128: Downloading JSON metadata\r\n[soundcloud] 1371317128: Downloading JSON metadata\r\n[soundcloud] 1371317128: Downloading JSON metadata\r\n[soundcloud] 1371317128: Downloading JSON metadata\r\n[info] Available formats for 1371317128:\r\nformat code   extension  resolution note\r\nhls_opus_64   opus       audio only audio@ 64k\r\nhls_mp3_128   mp3        audio only audio@128k\r\nhls_aac_256   aac        audio only audio@256k\r\nhttp_mp3_128  mp3        audio only audio@128k\r\nhttp_aac_256  aac        audio only audio@256k (best)\r\n```",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-06-16T10:20:55Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nMany music extractors returns only `release_year` field, and it is not stored in the metadata.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 238,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-05-28T13:28:58Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<details>\r\n<summary>Boilerplate: own code, new extractor</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR adds an extractor module for hqporner.com, as suggested in https://github.com/yt-dlp/yt-dlp/issues/7116. The module provides three extractors:\r\n* `HQPornerIE` for video pages\r\n* `HQPornerListIE` for playlist pages based on category or performer\r\n* `HQPornerSearchIE` for search pages.\r\n\r\nFor video pages, the following metadata is extracted:\r\n* `title` from video caption or page title\r\n* `age_limit` fixed at 18, though pages include RTA tag\r\n* `upload_date` from approximate age in caption\r\n* `description` from \"featuring ...\" in caption\r\n* `duration` from caption or page description\r\n* `categories` from caption or page meta keywords\r\n* `tags` from page description\r\n* `thumbnail` from HTML5 video.\r\n\r\nPlaylist entries get `title`, `duration`, `thumbnail`.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1136,
        "deletions": 313,
        "changed_files": 5,
        "created_at": "2023-05-25T16:40:15Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<details>\r\n<summary>Merged/old/own code, fix/improvement</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code, except as below, and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of existing code and code merged from yt-dlp, previously released under the same terms.\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR is intended to overhaul the DPlay extractor module that supports various DPlay and DiscoveryPlus sites. An update to `traverse_obj()` is included but is expected to be superseded by the similar version in PR #32138.\r\n\r\nTo do:\r\n- [ ] decide which, if any, of the dplay.* sites are still valid\r\n- [ ] decide which, if any, of the US topic-based sites are still valid\r\n- [ ] decide whether the existing broken playlist extractors for .in/.it can be fixed or should be deleted\r\n- [ ] decide whether the US topic-based and other sites in `extractor/discovery(?:vr|go)?.py` are still valid\r\n- [ ] decide whether the CA topic-based and other sites in `extractor/bellmedia.py` are still valid (see also #18312)\r\n- [ ] solve #19184, #20722, #30259 if still valid\r\n- [ ] review #16719 and solve if applicable for D+\r\n- [ ] add a new playlist extractor for other (or all) regions\r\n- [ ] add data for further regional DiscoveryPlus versions\r\n- [ ] support GlobalCyclingNetworkPlus (resolves #32309, https://github.com/yt-dlp/yt-dlp/pull/7360).\r\n\r\nDetermining the validity of sites requires testing in-region because typically the user-facing URL is redirected to the user's local site even where the extractor's API requests return valid data.\r\n\r\nResolves #23317\r\nResolves #25580\r\nResolves #22972 (it.dplay.com/discovery-channel/...)\r\nResolves #29144\r\nResolves #29249 \r\nResolves (supersedes) #29643\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 90,
        "deletions": 67,
        "changed_files": 2,
        "created_at": "2023-05-19T19:08:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nNHK World VOD is broken since a few weeks.\r\n\r\nThis is due changing to self-hosted API and player instance.\r\n\r\nNecessary tweaks were to\r\n- make PikselIE use the host of the given URL instead of hard-coded Piksel host.\r\n- use the correct template url for the initial API call in NhkVodIE\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-05-14T10:22:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "\u2026hen or equal to 2\r\n\r\nSee https://github.com/yt-dlp/yt-dlp/issues/7046\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe makefile had a hardcoded major version check of pandoc against 2. In my pandoc 3 installation the check failed and smart-markdown was not used, even though it is available. That caused double dashes to be rendered as single, long dashes.\r\n\r\nThis PR fixes the version check by numerically comparing the pandoc major version to be greater then or equal to 2.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 242,
        "deletions": 173,
        "changed_files": 1,
        "created_at": "2023-05-09T18:20:11Z",
        "closed_at": null,
        "merged_at": null,
        "body": "\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] (not applicable) Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n    - which tests exactly?\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n    - minor \\# problems\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nModify `extractor/toggle.py` to fix downloading mewatch videos like https://www.mewatch.sg/clips/Seraph-Sun-Aloysius-will-suddenly-sing-some-old-songs-in-high-pitch-on-set-84901\r\n\r\nIncluding /watch,/clips,/episode,/movie\r\n\r\nFixes #32043 \r\n\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 1097,
        "deletions": 95,
        "changed_files": 10,
        "created_at": "2023-05-03T14:11:49Z",
        "closed_at": "2023-07-19T21:14:50Z",
        "merged_at": "2023-07-19T21:14:50Z",
        "body": "<details>\r\n<summary>Boilerplate: yt-dlp code, new extractor+improvement</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code, except as below and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] Where I am not the original author of this code it was released under the same terms at https://github.com/yt-dlp.\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nThis PR adds four new extractors back-ported from yt-dlp, together with some core improvements to support them.\r\n\r\n* **GlobalPlayer**, from https://github.com/yt-dlp/yt-dlp/pull/6903, thanks @garret1317; resolves #31688\r\n* **Whyp**, from https://github.com/yt-dlp/yt-dlp/pull/6803, thanks @CoryTibbettsDev\r\n* **DLF**, from https://github.com/yt-dlp/yt-dlp/pull/6697, thanks @nick-cd\r\n* **Clipchamp**, from https://github.com/yt-dlp/yt-dlp/pull/6978, thanks @bashonly.\r\n\r\nSupporting improvements:\r\n* update `traverse_obj()` to support traversal of `Iterable`s, `set`s and `re.Match`es (aka `compat_re_Match`): thanks @Grub4k; add convenience function `T()` as a (slight) abbreviation of `set((x,))` since literal set `{x}` isn't in Py2.6\r\n* improve `js_to_json()`: thanks @ChillingPepper, @Grub4k, @pukkandan; add limited support for `!` evaluation (eg, `!!0` -> `false`)\r\n* support multiple groups in `group` argument of InfoExtractor._search_regex()`, etc\r\n* add keyword arguments to `merge_dicts()`: `unblank=True` to disallow empty string, `rev=False` to reverse the order of `merge_dict`'s `args` list; `rev=True` matches `{**dict1, **dict2, ...}` (not in Py 2)\r\n* add search methods for Next/Nuxt.js from yt-dlp to `InfoExtractor` with tests\r\n  - `_search_nextjs_data()`, from https://github.com/yt-dlp/yt-dlp/pull/1386\r\n      thanks @selfisekai\r\n  - `_search_nuxt_data()`, from https://github.com/yt-dlp/yt-dlp/pull/1921,\r\n      thanks @Lesmiscore, @pukkandan\r\n* fix HTML5 type recognition and tests, from https://github.com/yt-dlp/yt-dlp/commit/222a230871fe4fe63f35c49590379c9a77116819, thanks @Lesmiscore\r\n* add `_match_valid_url()` class method to `InfoExtractor` and refactor\r\n* support Sequence of patterns in _VALID_URL.\r\n\r\nAn immediate compat fix to `traverse_obj()` is also included: fixes #32456.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 78,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-04-27T13:26:39Z",
        "closed_at": "2023-04-27T15:39:58Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis pull request adds support for the coverapi.store website via a new extractor.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-04-23T03:46:14Z",
        "closed_at": "2023-04-24T10:44:53Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 21,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-04-19T00:14:21Z",
        "closed_at": "2023-04-19T03:19:56Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 126,
        "deletions": 66,
        "changed_files": 4,
        "created_at": "2023-04-16T22:46:21Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<details>\r\n<summary>Boilerplate: own code, bug fix</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe video player at the British Film Institute Player website (player.bfi.org.uk) has been changed to use Brightcove as video host. This PR upgrades `BFIPlayerIE` to handle the new format. Apparently all pages have been affected and there is no need to fall back to the former video host Ooyala.\r\n\r\nThere are some ancillary changes to make this work better:\r\n* in utils.py, `parse_qs()` can now (correctly) accept kwargs\r\n* to make `parse_qs()` fully compatible for Python </>= 3.10, now shim <3.10\r\n* (belatedly) create a `brightcove:new:` pseudo-URL-scheme to enable extractors to pass hosted videos without special knowledge of Brightcove URLs\r\n* also make `BrightcoveNewIE` support smuggled `force_videoid` to pass desired resulting video_id.\r\n\r\nThanks to @bashonly and @epon in https://github.com/yt-dlp/yt-dlp/issues/6822.\r\n\r\nTo do:\r\n- [ ] detect paid content which is said to be DRM-protected (#26534)\r\n- [ ] handle playlist pages (eg https://player.bfi.org.uk/free/collection/disabled-britain-on-film) (#19235).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2023-04-12T14:10:08Z",
        "closed_at": "2023-04-12T22:40:38Z",
        "merged_at": "2023-04-12T22:40:38Z",
        "body": "### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis is a follow up to fe7e130 I think which didn't fix everything.\r\n\r\nSample failing command:\r\n\r\n```\r\n> youtube-dl --print-json \"https://www.youtube.com/watch?v=SrK1yv3g8dI\"\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/gabi/.local/bin/youtube-dl\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/home/gabi/.local/lib/python3.10/site-packages/youtube_dl/__init__.py\", line 475, in main\r\n    _real_main(argv)\r\n  File \"/home/gabi/.local/lib/python3.10/site-packages/youtube_dl/__init__.py\", line 465, in _real_main\r\n    retcode = ydl.download(all_urls)\r\n  File \"/home/gabi/.local/lib/python3.10/site-packages/youtube_dl/YoutubeDL.py\", line 2085, in download\r\n    res = self.extract_info(\r\n  File \"/home/gabi/.local/lib/python3.10/site-packages/youtube_dl/YoutubeDL.py\", line 815, in extract_info\r\n    return self.__extract_info(url, ie, download, extra_info, process)\r\n  File \"/home/gabi/.local/lib/python3.10/site-packages/youtube_dl/YoutubeDL.py\", line 822, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"/home/gabi/.local/lib/python3.10/site-packages/youtube_dl/YoutubeDL.py\", line 854, in __extract_info\r\n    return self.process_ie_result(ie_result, download, extra_info)\r\n  File \"/home/gabi/.local/lib/python3.10/site-packages/youtube_dl/YoutubeDL.py\", line 888, in process_ie_result\r\n    return self.process_video_result(ie_result, download=download)\r\n  File \"/home/gabi/.local/lib/python3.10/site-packages/youtube_dl/YoutubeDL.py\", line 1698, in process_video_result\r\n    self.process_info(new_info)\r\n  File \"/home/gabi/.local/lib/python3.10/site-packages/youtube_dl/YoutubeDL.py\", line 1807, in process_info\r\n    self.__forced_printings(info_dict, filename, incomplete=False)\r\n  File \"/home/gabi/.local/lib/python3.10/site-packages/youtube_dl/YoutubeDL.py\", line 1780, in __forced_printings\r\n    self.to_stdout(json.dumps(info_dict))\r\n  File \"/usr/lib/python3.10/json/__init__.py\", line 231, in dumps\r\n    return _default_encoder.encode(obj)\r\n  File \"/usr/lib/python3.10/json/encoder.py\", line 199, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n  File \"/usr/lib/python3.10/json/encoder.py\", line 257, in iterencode\r\n    return _iterencode(o, 0)\r\n  File \"/usr/lib/python3.10/json/encoder.py\", line 179, in default\r\n    raise TypeError(f'Object of type {o.__class__.__name__} '\r\nTypeError: Object of type LazyList is not JSON serializable\r\n```",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 697,
        "deletions": 128,
        "changed_files": 2,
        "created_at": "2023-04-11T13:07:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] Where I am not the original author of this code it was released under the same terms at https://github.com/yt-dlp.\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR switches VOD extraction to new APIs.\r\n\r\nThe original proposal added an extractor `TVappIE`. After alignment with the yt-dlp extractor from  https://github.com/yt-dlp/yt-dlp/pull/6989, there are now two new extractors, `TVPStreamIE` and `TVPVODVideoIE`, plus `TVPVODSeriesIE` replacing `TVPWebsiteIE`: thanks @selfisekai.\r\n\r\nThese changes have been applied over the aligned code:\r\n* use `traverse_obj()` for safer extraction\r\n* fix tests that are not blocked from UK.\r\n\r\nCompared with the yt-dlp extractor, \r\n* episode number 0 in site metadata is treated as missing (`None`), since it seems to apply to one-off shows\r\n* as the yt-dl download test harness now supports test cases with variable `id`s, a real test has been added for `TVPStreamIE`.\r\n\r\n\r\n",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 91,
        "changed_files": 1,
        "created_at": "2023-04-11T01:20:21Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe senate.gov extractor has been broken as per https://github.com/ytdl-org/youtube-dl/issues/31373. This is because the locations of the m3u8 files had been moved to different URLs, and the format of these URLs have also changed. The extraction of these formats can be found [here](https://thedailywtf.com/articles/enterprise-streaming).\r\n\r\nNote: This is a continuation of this [pull request](https://github.com/ytdl-org/youtube-dl/pull/31411). \r\n\r\nDepending on the video, there are four possible locations for the m3u8 to be located at:\r\n\r\n- https://www-senate-gov-media-srs.akamaized.net/hls/live/{stream_id}/{committee}/{filename}/master.m3u8\r\n- https://www-senate-gov-msl3archive.akamaized.net/{msl3}/{filename}_1/master.m3u8\r\n- {stream_domain}/i/{filename}_1@{stream_number}/master.m3u8\r\n- https://ussenate-f.akamaihd.net/i/{video_id}\r\n\r\nThe above parameters are found in the following places:\r\n- committee, filename - query parameters in the URL\r\n- stream_number, stream_domain, stream_id, msl3 - a js table variable called streamInfo which has been hardcoded as a python list in senateisvp.py\r\n\r\nThe new extractor will grab the parameters from the url and the lookup table, then iterate through the possible locations for the m3u8, returning it and its information when found.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-04-10T10:40:59Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nSimple patch to fix southparkstudios.nu extraction in Finland. Unfortunately, all tests are broken before and after the patch due to \"hlsnative has detected features it does not support\", but extraction works for both collections and episodes.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 151,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-04-09T12:42:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-04-01T15:16:15Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### I have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/).\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of my *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of my *pull request* and other information\r\n\r\nAdded an extractor to support player.vod2.infomaniak.com as requested in #31329 ",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-03-31T11:02:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n\r\n---\r\n\r\n### Fix support for NPO sites\r\nThis fixes two things that have been changed on the NPO websites:\r\n+ The current video player no longer returns the token in the JSON body, but instead provides us with an XSRF token in the cookie.\r\n+ A second call changed from GET to POST and should include this XSRF token.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 93,
        "deletions": 1236,
        "changed_files": 11,
        "created_at": "2023-03-30T16:49:21Z",
        "closed_at": "2023-03-30T16:54:54Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 201,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2023-03-27T21:34:17Z",
        "closed_at": "2023-04-04T22:31:47Z",
        "merged_at": null,
        "body": "Use pybuilder to generate binaries and optionally run unit tests",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 68,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-27T14:54:36Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 88,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-03-23T13:08:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nResolves #31412.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-03-23T00:37:27Z",
        "closed_at": "2023-05-31T01:56:21Z",
        "merged_at": null,
        "body": "\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\nIt only rename the legal age verification cookie.",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 7,
        "changed_files": 2,
        "created_at": "2023-03-21T14:01:51Z",
        "closed_at": "2023-03-25T13:00:21Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nthe mtime of a file normally reflects the last modification time of the file on disk rather than what the contents of the file represent. youtube-dl goes against this convention by default, which can cause issues when users don't know about youtube-dl special mtime behavior, e.g. premature deletion of files by cleanup scripts or time-based file searches.\r\n\r\ninstead of behaving in this unconventional way by default, youtube-dl should not modify the mtime of its output files unless the user specifically asks for that.\r\n\r\nfixes #1709\r\n\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 146,
        "deletions": 35,
        "changed_files": 1,
        "created_at": "2023-03-21T06:43:40Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR does two things for the 10Play extractor:\r\n\r\n1. Fixes an issue where almost all videos now require authentication (authentication was not previously supported at all)\r\n2. Adds the ability to download an entire season as a playlist\r\n\r\nAfter searching the PRs it seems like @aarubui created a patch for the first issue in #28728 but withdrew it for unspecified reasons. So here's another working version, and this time it does playlists, too!",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 190,
        "deletions": 33,
        "changed_files": 1,
        "created_at": "2023-03-19T02:47:41Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<details>\r\n<summary>Boilerplate: own code, bug fix</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAustralian provider SBS has changed its hosting arrangements and APIs, breaking the existing extractor.\r\n\r\nThe PR is intended to deal with the new APIs.\r\n\r\nSome specialisations of extractor methods are included:\r\n* `_download_webpage_handle()` detects geo-restriction\r\n* `_extract_m3u8_formats()` defaults to the native downloader.\r\n\r\nAs most shows of interest are geo-restricted to Australia, it needs thorough testing in-region (please).\r\n\r\nThe initial version retains the old extractor as dead code. If none of it turns out to be needed, a future commit will remove it.\r\n\r\nResolves #31841.\r\nSee also https://github.com/yt-dlp/yt-dlp/issues/6543.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-03-14T03:56:35Z",
        "closed_at": "2023-04-22T01:09:31Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nMy first time contributing to an open-source project! This should add an extractor for #31334, does both bunkr.is and bunkr.ru links\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-12T14:44:43Z",
        "closed_at": "2023-03-12T19:24:17Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-03-09T16:19:22Z",
        "closed_at": "2023-03-09T16:19:44Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-03-07T23:13:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis is my first time contributing and the issue #31334 seemed like a simple enough task. The issue was raised with the request that bunkr.is is supported. \r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2023-03-06T13:10:55Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nStatus quo: IndaVideo extractor is broken, the API URL seems to have changed since the last commit. I don't know how long it has been broken, I first noticed it ~2 weeks ago, the first time I ever tried the extractor.\r\n\r\nMy pull request contains the correct URL which I acquired from inspecting the in-browser behavior of the IndaVideo platform. The fix works for every video I tried. It's unclear why the platform added this seemingly arbitrary suffix.\r\n\r\nI also updated the list of IndaVideo example videos as some of them have been deleted.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-03-04T17:54:19Z",
        "closed_at": "2023-03-07T15:49:31Z",
        "merged_at": "2023-03-07T15:49:31Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe \"Get cookies.txt\" extension (which used to be okay) has now turned malicious and is no longer suitable for recommending to others, so this pull request edits README.md to remove the link to it.\r\n\r\nThis PR does **not** alter any code, so I have not run any tests as they are not applicable.\r\n\r\nFixes #31465.",
        "comments": 16
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2023-03-04T14:00:54Z",
        "closed_at": "2023-03-04T15:16:17Z",
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nIgnores the uploader_id as a try-catch. YouTube probably changed something.\r\nIf we want the uploader_id from YouTube we will need to update this instead of just ignoring it.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2355,
        "deletions": 538,
        "changed_files": 32,
        "created_at": "2023-02-27T14:23:17Z",
        "closed_at": "2023-03-04T11:48:05Z",
        "merged_at": null,
        "body": null,
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-02-25T06:18:42Z",
        "closed_at": "2023-02-25T16:20:32Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 203,
        "deletions": 125,
        "changed_files": 2,
        "created_at": "2023-02-24T05:00:30Z",
        "closed_at": "2023-02-24T12:22:16Z",
        "merged_at": "2023-02-24T12:22:16Z",
        "body": "<details>\r\n<summary>Boilerplate: own code, bug fix</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAccording to #31530, YouTube has changed its metadata so that the owner URL has the format `.../@ownerslug` rather than `.../user/user_id` or `.../channel/channel_id`. Some, if not all, music videos retain the previous scheme.\r\n\r\nThis caused several problems:\r\n1. Owing to an extraction bug, failing to match the previous patterns crashed the extractor.\r\n2. After resolving the crash, various metadata items were not being extracted, and some [study was needed to work out what values should be extracted](https://github.com/ytdl-org/youtube-dl/issues/31530#issuecomment-1435734719).\r\n3. The resolution of this meant that many tests failed.\r\n\r\nProposed final resolution from linked post:\r\n* `uploader` is the author text value\r\n* `channel` is the same\r\n* `uploader_id` becomes the @... value\r\n* `channel_id` is `channelId`\r\n* `uploader_url` is the author URL with /@...\r\n* `channel_url` is `/channel/{channel_id}` at least while that is valid.\r\n\r\nThe linked post identifies that these metadata items may be available in various parts of the YT webpage, with slightly different access paths depending on the page type.\r\n\r\nThus, this PR\r\n1. updates the YouTube extractor to handle the new format\r\n2. returns values as proposed in https://github.com/ytdl-org/youtube-dl/issues/31530#issuecomment-1435734719\r\n3. updates the tests affected by the changes\r\n4. to support one of the tests, solves a long-standing issue in the download test that prevented testing cases where the `id` changed.\r\n\r\nCloses #31568\r\nResolves #31530",
        "comments": 17
    },
    {
        "merged": false,
        "additions": 44,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-02-21T17:13:14Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\nhttps://archive.softwareheritage.org/browse/origin/directory/?origin_url=https://github.com/tokune/youtube-dl\r\nhttps://github.com/ytdl-org/youtube-dl/issues/13889#issuecomment-326045140\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nFixes https://github.com/ytdl-org/youtube-dl/issues/13889 . Due to tokune's youtube-dl fork being taken down back in 2020, when the \"DMCA incident\" occurred, I used the SoftwareHeritige archive of it. Thank you Tokune for creating the extractor itself and SoftwareHeritage for archiving GitHub repositories without any cost to access them.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 50,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-02-20T19:44:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2023-02-20T07:45:35Z",
        "closed_at": "2023-02-20T16:33:04Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-02-18T14:03:58Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdding support for Kick.com (Resolves #31430  )\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-02-18T04:39:50Z",
        "closed_at": "2023-02-24T12:22:18Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n\r\nan example this https://www.youtube.com/channel/UCKjaXKTMQMgpyac7WsnNrKw and https://www.youtube.com/@alangomezok are the same, it also crashed because it didn't match, the new url template, but it looks like that is already fixed\r\n\r\nhope this helps, my first proposed change :)",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2023-02-17T22:41:21Z",
        "closed_at": "2023-02-20T16:34:09Z",
        "merged_at": null,
        "body": "merge origin\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 23,
        "changed_files": 1,
        "created_at": "2023-02-12T04:13:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe TubiTv extractor was modified to support TubiTv's live streams, specifically the \"Live TV\" feature at <https://tubitv.com/live>. The accepted URLs are the ones after you click on the video preview from that guide page.\r\n\r\nIn addition, the existing tests for the extractor didn't work because the videos referenced were no longer available, so I updated those to include a normal on-demand video, plus a live stream.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-02-11T20:07:29Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Resolves #30884\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis pull request resolves the issue seen in #30884.  With this change, the following types of URLs should function again:\r\n\r\n * URLs to specific videos that start with \"/api/\", e.g., https://learning.oreilly.com/api/v1/book/9781491935828/chapter/video226616.html\r\n * URLs to the video class so that the whole playlist can be downloaded, e.g., https://learning.oreilly.com/videos/design-patterns-in/9781491935828/\r\n\r\nThis was tested with oreilly account credentials passed via `--username` and `--password`.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 827,
        "deletions": 234,
        "changed_files": 15,
        "created_at": "2023-02-10T17:21:04Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nI know youtube-dl does not support --get-comments but I have been trying to submit this pull for about a month, and I have been banned from yt-dlp for issue spamming, I really would like to see it work and get put in the main version. You could try adding --get-comments support to youtube-dl to bypass this though. Please also do not ban me here too.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 62,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-02-06T15:52:16Z",
        "closed_at": "2023-02-11T02:54:45Z",
        "merged_at": "2023-02-11T02:54:45Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nadd support for streamsb.com\r\n\r\nResolves #30607.\r\n",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 36,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-02-06T12:03:44Z",
        "closed_at": "2023-02-11T02:47:43Z",
        "merged_at": "2023-02-11T02:47:43Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nAdds support for kommunetv.no\r\n\r\nFixes #30801\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 44,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-02-06T10:32:43Z",
        "closed_at": "2023-02-11T02:37:45Z",
        "merged_at": "2023-02-11T02:37:45Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdds support for filemoon.sx\r\n\r\nResolves #31126\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 96,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-02-05T16:11:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe online archive at www.mujrozhlas.cz provides access to a comprehensive collection of audio material created by \u010cesk\u00fd rozhlas (Czech Radio), an official public broadcasting company in Czechia.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 193,
        "deletions": 24,
        "changed_files": 5,
        "created_at": "2023-01-27T11:40:21Z",
        "closed_at": "2023-02-09T20:19:27Z",
        "merged_at": "2023-02-09T20:19:27Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis pull request support a external downloader aria2p(a command-line tool and Python library to interact with an aria2c daemon process through JSON-RPC). It can make download faster and get the rate of progress and other information such as download speed, eta time more easily(compared with use aria2c only). When use aria2p, install aria2c and aria2p(by pip) first. **Run aria2c and enable with the --enable-rpc option in the background.** Then all data will download with the aria2c daemon process.\r\n\r\nFor example:\r\n```bash\r\npython -m youtube_dl --external-downloader aria2p \"http://www.youtube.com/watch?&v=BaW_jenozKc\"\r\n```\r\nRelated: #31188",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1485,
        "changed_files": 1,
        "created_at": "2023-01-27T07:40:00Z",
        "closed_at": "2023-01-27T07:40:06Z",
        "merged_at": null,
        "body": "### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nA Spotify extractor\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1485,
        "changed_files": 1,
        "created_at": "2023-01-27T07:33:38Z",
        "closed_at": "2023-01-27T07:35:04Z",
        "merged_at": null,
        "body": "### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ X ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ X ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ X ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdding a Spotify extractor",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-26T15:19:03Z",
        "closed_at": "2023-02-09T12:31:08Z",
        "merged_at": null,
        "body": "### What is the purpose of your *pull request*?\r\n- [x] Docs\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nI was searching for the supported platforms in the readme but couldn't find them. Eventually found the link to to docs. Would be nice to link to the list directly.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 88,
        "deletions": 27,
        "changed_files": 1,
        "created_at": "2023-01-25T05:27:21Z",
        "closed_at": "2023-02-02T16:58:21Z",
        "merged_at": "2023-02-02T16:58:21Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n\r\nThis PR adds the ability to download entire series of ATK as youtube-dl playlists.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2023-01-23T18:47:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n\r\n\r\nResolves #31485\r\n",
        "comments": 7
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-23T17:54:27Z",
        "closed_at": "2023-02-02T17:10:10Z",
        "merged_at": "2023-02-02T17:10:10Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis is a change to the Readme file where the sentence ends in a colon but should really end on a full stop. \r\nI thought it would probably be better to make use of an example as stated on [here](https://github.com/ytdl-org/youtube-dl/issues/31425)",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2023-01-23T13:14:22Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 179,
        "deletions": 148,
        "changed_files": 1,
        "created_at": "2023-01-23T11:44:31Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 63,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2023-01-21T00:37:37Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nI came across same company websites that provided videos via video-cdn.net, e.g. [this](https://e.video-cdn.net/video?video-id=6Bgr8MMPyF8JjThYxoQu-R&player-id=6hGfu8KMjUJG3vcN4PW63D). Some more can be found with the [help of Google](https://www.google.com/search?q=video+site%3Avideo-cdn.net). The PR adds an extractor for those videos.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 138,
        "deletions": 18,
        "changed_files": 4,
        "created_at": "2023-01-18T04:22:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis pull request improves the support for Rumble.com and adds support for UsaWatchdog.com which depends on the improved rumble support.\r\n\r\nrumble.py:\r\nRumble offers two methods for embedding videos: JScript and iframes. The legacy iframes method was previously supported by RumbleEmbedIE. Rumble.com itself uses the JScript method.\r\n\r\n1. Adds support for Rumble's JScript embedding method. (RumblePageIE)\r\n2. Adds support for Rumble video pages. (via RumblePageIE)\r\n3. Adds support for Rumble channel and user playlists. (RumblePlaylistIE)\r\n4. Provides a function to extract both JScript and iframes video ids from non Rumble sites which use Rumble for video hosting. (e.g. UsaWatchdog)\r\n5. Fixes the crash that occurs when an invalid Rumble video URL is provided by returning None from the actual data extraction function.\r\n6. The actual data extraction function was moved to a base class which both RumbleEmbedIE and RumblePageIE now inherit.\r\n\r\nusawatchdog.py\r\nUsaWatchdog now uses Rumble for video hosting. The included extractor uses the function in rumble.py to extract the video ids from story pages (UsaWatchdogStoryIE). Also included is the ability to extract a playlist from the front page of UsaWatchdog.com\r\n\r\nNote: I am the original author of all the new code. Some of the code in rumble.py existing previously as part of youtube-dl. I simply rearranged it somewhat.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 207,
        "deletions": 30,
        "changed_files": 3,
        "created_at": "2023-01-15T18:41:05Z",
        "closed_at": "2023-01-15T18:41:20Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 179,
        "deletions": 148,
        "changed_files": 1,
        "created_at": "2023-01-08T12:45:52Z",
        "closed_at": "2023-01-12T01:53:16Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 10,
        "deletions": 24,
        "changed_files": 1,
        "created_at": "2023-01-06T04:51:02Z",
        "closed_at": "2023-02-02T17:12:36Z",
        "merged_at": "2023-02-02T17:12:36Z",
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nThis PR fixes the broken extractor as described in #22734 by adding the url to the manifest server as it no longer exists in the html. Additionally the jpeg formats are added as thumbnails.\r\n\r\nCloses #22734",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 275,
        "deletions": 177,
        "changed_files": 4,
        "created_at": "2022-12-22T19:36:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR adds support for podcasts (radio shows) and live musical webradio of Radio France (stations _France Inter_, _France Culture_, _France Info_, _FIP_, _Le Mouv_ and _France Musique_).\r\n\r\nOld extractors are removed since they do not work anymore after the merge of their respective websites under www.radiofrance.fr.\r\n\r\nThis closes :\r\n- https://github.com/ytdl-org/youtube-dl/issues/17276 (extractor for FIP)\r\n- https://github.com/ytdl-org/youtube-dl/issues/15349 (old site is gone)\r\n- https://github.com/ytdl-org/youtube-dl/issues/4646 (Le mouv')\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 109,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-12-22T01:27:31Z",
        "closed_at": "2023-02-02T17:13:39Z",
        "merged_at": "2023-02-02T17:13:39Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nImplement extractor for Pr0gramm social media. Pr0gramm did not work with the generic IE fallback, because page content is loaded dynamically with JS. Basically: it \"re-routes\" regular urls, encountered by end users, to a compatibility-page served statically (provided by Pr0gramm), which does contain video information. From here, metadata and video information is extracted.\r\n\r\nThis is primarily meant for urls like `https://pr0gramm.com/new/video/5466437`, `https://pr0gramm.com/new/5466437`, but obviously also provides support for the static compatibility site (to where public urls are routed to): `https://pr0gramm.com/static/5466437`\r\n\r\nThanks to @dirkf for pointing me the right way on more than one occasion!\r\n\r\nOutput when running yt-dl with -v\r\n```\r\n\u279c  youtube-dl git:(pr0gramm-extractor) python -m youtube_dl -v https://pr0gramm.com/new/video/5466437\r\n[debug] System config: []\r\n[debug] User config: []\r\n[debug] Custom config: []\r\n[debug] Command-line args: [u'-v', u'https://pr0gramm.com/new/video/5466437']\r\n[debug] Encodings: locale UTF-8, fs utf-8, out UTF-8, pref UTF-8\r\n[debug] youtube-dl version 2021.12.17\r\n[debug] Git HEAD: d8b46090a\r\n[debug] Python version 2.7.18 (CPython) - Darwin-21.6.0-x86_64-i386-64bit\r\n[debug] exe versions: ffmpeg 5.1.2, ffprobe 5.1.2, rtmpdump 2.4\r\n[debug] Proxy map: {}\r\n[Pr0grammStatic] 5466437: Downloading webpage\r\n[debug] Default format spec: bestvideo+bestaudio/best\r\n[debug] Invoking downloader on u'http://img.pr0gramm.com/2022/12/21/62ae8aa5e2da0ebf.mp4'\r\n[download] Destination: pr0gramm-5466437.mp4\r\n[download]   0.0% of 13.70MiB at Unknown speed ETA Unk\r\n[download]   0.0% of 13.70MiB at Unknown speed ETA Unk\r\n[download] 100% of 13.70MiB in 00:0\r\n```\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-12-19T16:05:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nPornHub video metadata is downloaded while downloading playlist even though video id is present in archive file.\r\nThis happens because PornoHub playlist extractor doesn't extract video id and video id is needed to check presence in archive. With video id exported downloading new videos from playlists happens faster.\r\n\r\nExample (before):\r\nFirst attempt downloads metadata and video. Second attempt downloads only metadata.\r\n\r\n> python -m youtube_dl -v --download-archive archive.txt --playlist-items 1 https://rt.pornhub.com/model/luxury-girl/videos\r\n[debug] System config: []\r\n[debug] User config: []\r\n[debug] Custom config: []\r\n[debug] Command-line args: [u'-v', u'--download-archive', u'archive.txt', u'--playlist-items', u'1', u'https://rt.pornhub.com/model/luxury-girl/videos']\r\n[debug] Encodings: locale UTF-8, fs UTF-8, out UTF-8, pref UTF-8\r\n[debug] youtube-dl version 2021.12.17\r\n[debug] Git HEAD: 195f22f67\r\n[debug] Python version 2.7.18 (CPython) - Linux-5.15.0-56-generic-x86_64-with-Ubuntu-20.04-focal\r\n[debug] exe versions: ffmpeg 4.2.7, ffprobe 4.2.7\r\n[debug] Proxy map: {}\r\n[download] Downloading playlist: model/luxury-girl/videos\r\n[PornHubPagedVideoList] model/luxury-girl/videos: Downloading page 1\r\n[PornHubPagedVideoList] playlist model/luxury-girl/videos: Downloading 1 videos\r\n[download] Downloading video 1 of 1\r\n[PornHub] ph638e30ea5325d: Downloading pc webpage\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading JSON metadata\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\nWARNING: unable to extract view count; please report this issue on https://yt-dl.org/bug . Make sure you are using the latest version; see  https://yt-dl.org/update  on how to update. Be sure to call youtube-dl with the --verbose flag and include its complete output.\r\n[debug] Default format spec: bestvideo+bestaudio/best\r\n[debug] Invoking downloader on u'https://ev-h.phncdn.com/hls/videos/202212/05/420850311/,1080P_4000K,720P_4000K,480P_2000K,240P_1000K,_420850311.mp4.urlset/index-f1-v1-a1.m3u8?validfrom=1671460872&validto=1671468072&ipa=<ip>&hdl=-1&hash=ugBHt9juTr4uTAHIvAUyTdyeDfw%3D'\r\n[hlsnative] Downloading m3u8 manifest\r\n[hlsnative] Total fragments: 301\r\n[download] Destination: He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.mp4\r\n[download] 100% of 322.97MiB in 07:26\r\n[debug] ffmpeg command line: ffprobe -show_streams 'file:He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.mp4'\r\n[ffmpeg] Fixing malformed AAC bitstream in \"He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.mp4\"\r\n[debug] ffmpeg command line: ffmpeg -y -loglevel 'repeat+info' -i 'file:He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.mp4' -c copy -f mp4 '-bsf:a' aac_adtstoasc 'file:He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.temp.mp4'\r\n[download] Finished downloading playlist: model/luxury-girl/videos\r\n\r\n> python -m youtube_dl -v --download-archive archive.txt --playlist-items 1 https://rt.pornhub.com/model/luxury-girl/videos\r\n[debug] System config: []\r\n[debug] User config: []\r\n[debug] Custom config: []\r\n[debug] Command-line args: [u'-v', u'--download-archive', u'archive.txt', u'--playlist-items', u'1', u'https://rt.pornhub.com/model/luxury-girl/videos']\r\n[debug] Encodings: locale UTF-8, fs UTF-8, out UTF-8, pref UTF-8\r\n[debug] youtube-dl version 2021.12.17\r\n[debug] Git HEAD: 195f22f67\r\n[debug] Python version 2.7.18 (CPython) - Linux-5.15.0-56-generic-x86_64-with-Ubuntu-20.04-focal\r\n[debug] exe versions: ffmpeg 4.2.7, ffprobe 4.2.7\r\n[debug] Proxy map: {}\r\n[download] Downloading playlist: model/luxury-girl/videos\r\n[PornHubPagedVideoList] model/luxury-girl/videos: Downloading page 1\r\n[PornHubPagedVideoList] playlist model/luxury-girl/videos: Downloading 1 videos\r\n[download] Downloading video 1 of 1\r\n[PornHub] ph638e30ea5325d: Downloading pc webpage\r\n[PornHub] ph638e30ea5325d: Downloading JSON metadata\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\nWARNING: unable to extract view count; please report this issue on https://yt-dl.org/bug . Make sure you are using the latest version; see  https://yt-dl.org/update  on how to update. Be sure to call youtube-dl with the --verbose flag and include its complete output.\r\n[debug] Default format spec: bestvideo+bestaudio/best\r\n[download] He Fucked Me Right On The Sunbed While I Was Sunbathing has already been recorded in archive\r\n[download] Finished downloading playlist: model/luxury-girl/videos\r\n\r\n\r\nExample (after):\r\n\r\n> python -m youtube_dl -v --download-archive archive.txt --playlist-items 1 https://rt.pornhub.com/model/luxury-girl/videos\r\n[debug] System config: []\r\n[debug] User config: []\r\n[debug] Custom config: []\r\n[debug] Command-line args: [u'-v', u'--download-archive', u'archive.txt', u'--playlist-items', u'1', u'https://rt.pornhub.com/model/luxury-girl/videos']\r\n[debug] Encodings: locale UTF-8, fs UTF-8, out UTF-8, pref UTF-8\r\n[debug] youtube-dl version 2021.12.17\r\n[debug] Git HEAD: f9c466d2d\r\n[debug] Python version 2.7.18 (CPython) - Linux-5.15.0-56-generic-x86_64-with-Ubuntu-20.04-focal\r\n[debug] exe versions: ffmpeg 4.2.7, ffprobe 4.2.7\r\n[debug] Proxy map: {}\r\n[download] Downloading playlist: model/luxury-girl/videos\r\n[PornHubPagedVideoList] model/luxury-girl/videos: Downloading page 1\r\n[PornHubPagedVideoList] playlist model/luxury-girl/videos: Downloading 1 videos\r\n[download] Downloading video 1 of 1\r\n[PornHub] ph638e30ea5325d: Downloading pc webpage\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading JSON metadata\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\nWARNING: unable to extract view count; please report this issue on https://yt-dl.org/bug . Make sure you are using the latest version; see  https://yt-dl.org/update  on how to update. Be sure to call youtube-dl with the --verbose flag and include its complete output.\r\n[debug] Default format spec: bestvideo+bestaudio/best\r\n[debug] Invoking downloader on u'https://ev-h.phncdn.com/hls/videos/202212/05/420850311/,1080P_4000K,720P_4000K,480P_2000K,240P_1000K,_420850311.mp4.urlset/index-f1-v1-a1.m3u8?validfrom=1671459973&validto=1671467173&ipa=<ip>&hdl=-1&hash=h%2Fhdm9Fcirg8zw9gBnxgZtsgO48%3D'\r\n[hlsnative] Downloading m3u8 manifest\r\n[hlsnative] Total fragments: 301\r\n[download] Destination: He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.mp4\r\n[download] 100% of 322.97MiB in 04:10\r\n[debug] ffmpeg command line: ffprobe -show_streams 'file:He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.mp4'\r\n[ffmpeg] Fixing malformed AAC bitstream in \"He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.mp4\"\r\n[debug] ffmpeg command line: ffmpeg -y -loglevel 'repeat+info' -i 'file:He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.mp4' -c copy -f mp4 '-bsf:a' aac_adtstoasc 'file:He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.temp.mp4'\r\n[download] Finished downloading playlist: model/luxury-girl/videos\r\n\r\n> python -m youtube_dl -v --download-archive archive.txt --playlist-items 1 https://rt.pornhub.com/model/luxury-girl/videos\r\n[debug] System config: []\r\n[debug] User config: []\r\n[debug] Custom config: []\r\n[debug] Command-line args: [u'-v', u'--download-archive', u'archive.txt', u'--playlist-items', u'1', u'https://rt.pornhub.com/model/luxury-girl/videos']\r\n[debug] Encodings: locale UTF-8, fs UTF-8, out UTF-8, pref UTF-8\r\n[debug] youtube-dl version 2021.12.17\r\n[debug] Git HEAD: f9c466d2d\r\n[debug] Python version 2.7.18 (CPython) - Linux-5.15.0-56-generic-x86_64-with-Ubuntu-20.04-focal\r\n[debug] exe versions: ffmpeg 4.2.7, ffprobe 4.2.7\r\n[debug] Proxy map: {}\r\n[download] Downloading playlist: model/luxury-girl/videos\r\n[PornHubPagedVideoList] model/luxury-girl/videos: Downloading page 1\r\n[PornHubPagedVideoList] playlist model/luxury-girl/videos: Downloading 1 videos\r\n[download] Downloading video 1 of 1\r\n[download] He Fucked Me Right On The Sunbed While I Was Sunbathing has already been recorded in archive\r\n[download] Finished downloading playlist: model/luxury-girl/videos\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-12-19T13:39:50Z",
        "closed_at": "2022-12-19T16:04:11Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nPornHub video metadata is downloaded while downloading playlist even though video id is present in archive file.\r\nThis happens because PornoHub playlist extractor doesn't extract video id and video id is needed to check presence in archive. With video id exported downloading new videos from playlists happens faster.\r\n\r\nExample (before):\r\nFirst attempt downloads metadata and video. Second attempt downloads only metadata.\r\n\r\n> python -m youtube_dl -v --download-archive archive.txt --playlist-items 1 https://rt.pornhub.com/model/luxury-girl/videos\r\n[debug] System config: []\r\n[debug] User config: []\r\n[debug] Custom config: []\r\n[debug] Command-line args: [u'-v', u'--download-archive', u'archive.txt', u'--playlist-items', u'1', u'https://rt.pornhub.com/model/luxury-girl/videos']\r\n[debug] Encodings: locale UTF-8, fs UTF-8, out UTF-8, pref UTF-8\r\n[debug] youtube-dl version 2021.12.17\r\n[debug] Git HEAD: 195f22f67\r\n[debug] Python version 2.7.18 (CPython) - Linux-5.15.0-56-generic-x86_64-with-Ubuntu-20.04-focal\r\n[debug] exe versions: ffmpeg 4.2.7, ffprobe 4.2.7\r\n[debug] Proxy map: {}\r\n[download] Downloading playlist: model/luxury-girl/videos\r\n[PornHubPagedVideoList] model/luxury-girl/videos: Downloading page 1\r\n[PornHubPagedVideoList] playlist model/luxury-girl/videos: Downloading 1 videos\r\n[download] Downloading video 1 of 1\r\n[PornHub] ph638e30ea5325d: Downloading pc webpage\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading JSON metadata\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\nWARNING: unable to extract view count; please report this issue on https://yt-dl.org/bug . Make sure you are using the latest version; see  https://yt-dl.org/update  on how to update. Be sure to call youtube-dl with the --verbose flag and include its complete output.\r\n[debug] Default format spec: bestvideo+bestaudio/best\r\n[debug] Invoking downloader on u'https://ev-h.phncdn.com/hls/videos/202212/05/420850311/,1080P_4000K,720P_4000K,480P_2000K,240P_1000K,_420850311.mp4.urlset/index-f1-v1-a1.m3u8?validfrom=1671460872&validto=1671468072&ipa=89.64.77.248&hdl=-1&hash=ugBHt9juTr4uTAHIvAUyTdyeDfw%3D'\r\n[hlsnative] Downloading m3u8 manifest\r\n[hlsnative] Total fragments: 301\r\n[download] Destination: He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.mp4\r\n[download] 100% of 322.97MiB in 07:26\r\n[debug] ffmpeg command line: ffprobe -show_streams 'file:He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.mp4'\r\n[ffmpeg] Fixing malformed AAC bitstream in \"He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.mp4\"\r\n[debug] ffmpeg command line: ffmpeg -y -loglevel 'repeat+info' -i 'file:He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.mp4' -c copy -f mp4 '-bsf:a' aac_adtstoasc 'file:He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.temp.mp4'\r\n[download] Finished downloading playlist: model/luxury-girl/videos\r\n\r\n> python -m youtube_dl -v --download-archive archive.txt --playlist-items 1 https://rt.pornhub.com/model/luxury-girl/videos\r\n[debug] System config: []\r\n[debug] User config: []\r\n[debug] Custom config: []\r\n[debug] Command-line args: [u'-v', u'--download-archive', u'archive.txt', u'--playlist-items', u'1', u'https://rt.pornhub.com/model/luxury-girl/videos']\r\n[debug] Encodings: locale UTF-8, fs UTF-8, out UTF-8, pref UTF-8\r\n[debug] youtube-dl version 2021.12.17\r\n[debug] Git HEAD: 195f22f67\r\n[debug] Python version 2.7.18 (CPython) - Linux-5.15.0-56-generic-x86_64-with-Ubuntu-20.04-focal\r\n[debug] exe versions: ffmpeg 4.2.7, ffprobe 4.2.7\r\n[debug] Proxy map: {}\r\n[download] Downloading playlist: model/luxury-girl/videos\r\n[PornHubPagedVideoList] model/luxury-girl/videos: Downloading page 1\r\n[PornHubPagedVideoList] playlist model/luxury-girl/videos: Downloading 1 videos\r\n[download] Downloading video 1 of 1\r\n[PornHub] ph638e30ea5325d: Downloading pc webpage\r\n[PornHub] ph638e30ea5325d: Downloading JSON metadata\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\nWARNING: unable to extract view count; please report this issue on https://yt-dl.org/bug . Make sure you are using the latest version; see  https://yt-dl.org/update  on how to update. Be sure to call youtube-dl with the --verbose flag and include its complete output.\r\n[debug] Default format spec: bestvideo+bestaudio/best\r\n[download] He Fucked Me Right On The Sunbed While I Was Sunbathing has already been recorded in archive\r\n[download] Finished downloading playlist: model/luxury-girl/videos\r\n\r\n\r\nExample (after):\r\n\r\n> python -m youtube_dl -v --download-archive archive.txt --playlist-items 1 https://rt.pornhub.com/model/luxury-girl/videos\r\n[debug] System config: []\r\n[debug] User config: []\r\n[debug] Custom config: []\r\n[debug] Command-line args: [u'-v', u'--download-archive', u'archive.txt', u'--playlist-items', u'1', u'https://rt.pornhub.com/model/luxury-girl/videos']\r\n[debug] Encodings: locale UTF-8, fs UTF-8, out UTF-8, pref UTF-8\r\n[debug] youtube-dl version 2021.12.17\r\n[debug] Git HEAD: f9c466d2d\r\n[debug] Python version 2.7.18 (CPython) - Linux-5.15.0-56-generic-x86_64-with-Ubuntu-20.04-focal\r\n[debug] exe versions: ffmpeg 4.2.7, ffprobe 4.2.7\r\n[debug] Proxy map: {}\r\n[download] Downloading playlist: model/luxury-girl/videos\r\n[PornHubPagedVideoList] model/luxury-girl/videos: Downloading page 1\r\n[PornHubPagedVideoList] playlist model/luxury-girl/videos: Downloading 1 videos\r\n[download] Downloading video 1 of 1\r\n[PornHub] ph638e30ea5325d: Downloading pc webpage\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading JSON metadata\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\n[PornHub] ph638e30ea5325d: Downloading m3u8 information\r\nWARNING: unable to extract view count; please report this issue on https://yt-dl.org/bug . Make sure you are using the latest version; see  https://yt-dl.org/update  on how to update. Be sure to call youtube-dl with the --verbose flag and include its complete output.\r\n[debug] Default format spec: bestvideo+bestaudio/best\r\n[debug] Invoking downloader on u'https://ev-h.phncdn.com/hls/videos/202212/05/420850311/,1080P_4000K,720P_4000K,480P_2000K,240P_1000K,_420850311.mp4.urlset/index-f1-v1-a1.m3u8?validfrom=1671459973&validto=1671467173&ipa=<ip>&hdl=-1&hash=h%2Fhdm9Fcirg8zw9gBnxgZtsgO48%3D'\r\n[hlsnative] Downloading m3u8 manifest\r\n[hlsnative] Total fragments: 301\r\n[download] Destination: He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.mp4\r\n[download] 100% of 322.97MiB in 04:10\r\n[debug] ffmpeg command line: ffprobe -show_streams 'file:He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.mp4'\r\n[ffmpeg] Fixing malformed AAC bitstream in \"He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.mp4\"\r\n[debug] ffmpeg command line: ffmpeg -y -loglevel 'repeat+info' -i 'file:He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.mp4' -c copy -f mp4 '-bsf:a' aac_adtstoasc 'file:He Fucked Me Right On The Sunbed While I Was Sunbathing-ph638e30ea5325d.temp.mp4'\r\n[download] Finished downloading playlist: model/luxury-girl/videos\r\n\r\n> python -m youtube_dl -v --download-archive archive.txt --playlist-items 1 https://rt.pornhub.com/model/luxury-girl/videos\r\n[debug] System config: []\r\n[debug] User config: []\r\n[debug] Custom config: []\r\n[debug] Command-line args: [u'-v', u'--download-archive', u'archive.txt', u'--playlist-items', u'1', u'https://rt.pornhub.com/model/luxury-girl/videos']\r\n[debug] Encodings: locale UTF-8, fs UTF-8, out UTF-8, pref UTF-8\r\n[debug] youtube-dl version 2021.12.17\r\n[debug] Git HEAD: f9c466d2d\r\n[debug] Python version 2.7.18 (CPython) - Linux-5.15.0-56-generic-x86_64-with-Ubuntu-20.04-focal\r\n[debug] exe versions: ffmpeg 4.2.7, ffprobe 4.2.7\r\n[debug] Proxy map: {}\r\n[download] Downloading playlist: model/luxury-girl/videos\r\n[PornHubPagedVideoList] model/luxury-girl/videos: Downloading page 1\r\n[PornHubPagedVideoList] playlist model/luxury-girl/videos: Downloading 1 videos\r\n[download] Downloading video 1 of 1\r\n[download] He Fucked Me Right On The Sunbed While I Was Sunbathing has already been recorded in archive\r\n[download] Finished downloading playlist: model/luxury-girl/videos\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-12-17T18:00:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n- [x] Chore\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis is will dependabot to check github action which this project uses for updates in order to keep them up-to-date.\r\n\r\nhttps://docs.github.com/en/code-security/dependabot/working-with-dependabot/keeping-your-actions-up-to-date-with-dependabot",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 218,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-12-15T16:41:40Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd a new extractor which is able to download from [Invidious](https://invidious.io/) instances, since the Youtube extractor isn't able to download from Invidious correctly.\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2022-12-14T15:16:41Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nNode.js 12 actions are deprecated. For example have a look [here](https://github.com/ytdl-org/youtube-dl/actions/runs/3686496783):\r\n\r\n<img width=\"856\" alt=\"image\" src=\"https://user-images.githubusercontent.com/18568381/207634493-5d535482-e9a0-4b84-92ac-c669a07fa418.png\">\r\n\r\nFor more information see:\r\nhttps://github.blog/changelog/2022-09-22-github-actions-all-actions-will-begin-running-on-node16-instead-of-node12/.\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 75,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-12-12T01:40:47Z",
        "closed_at": "2023-02-02T17:21:05Z",
        "merged_at": "2023-02-02T17:21:05Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdds a new extractor for Callin. Works for both Python2 and Python3.\r\nSupersedes, closes #31230.\r\n\r\nSpecial thanks to @dirkf for the insights provided in the issue thread.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-12-12T01:24:38Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdded extra metadata to be returned from extractor, specifically createdTime, modifiedTime, and owners as requested by #31358. \r\n\r\nWe did this by generating an API key through the Google Drive API website and extracting the metadata from the json data. The metadata was then passed into the return dict of the extractor.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 113,
        "deletions": 92,
        "changed_files": 1,
        "created_at": "2022-12-10T21:04:44Z",
        "closed_at": "2023-04-11T01:12:04Z",
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe senate.gov extractor has been broken as per [#31373](https://github.com/ytdl-org/youtube-dl/issues/31373). This is because the locations of the m3u8 files had been moved to different URLs, and the format of these URLs have also changed. The extraction of these formats can be found [here](https://thedailywtf.com/articles/enterprise-streaming).\r\n\r\nDepending on the video, there are four possible locations for the m3u8 to be located at:\r\n- https://www-senate-gov-media-srs.akamaized.net/hls/live/{stream_id}/{committee}/{filename}/master.m3u8\r\n- https://www-senate-gov-msl3archive.akamaized.net/{msl3}/{filename}_1/master.m3u8\r\n- {stream_domain}/i/{filename}_1@{stream_number}/master.m3u8\r\n- https://ussenate-f.akamaihd.net/i/{video_id}\r\n\r\nThe above parameters are found in the following places:\r\n- committee, filename - query parameters in the URL\r\n- stream_number, stream_domain, stream_id, msl3 - a js table variable called streamInfo which has been hardcoded as a python dict in senateisvp.py\r\n\r\nThe new extractor will grab the parameters from the url and the lookup table, then iterate through the possible locations for the m3u8, returning it and its information when found.\r\n\r\nSpecial thanks to [dirkf](https://github.com/dirkf) for the insights as well as code provided in the issue thread.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-12-10T03:21:55Z",
        "closed_at": "2023-02-02T17:26:31Z",
        "merged_at": "2023-02-02T17:26:31Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nFixed a bug related to youtube-dl not being able to find and download videos listed under a channel's \"shorts\" subpage with help and guidance from @dirkf. Also tried to improve upon the solution by having the playlist data allow a title to be proposed in the list of playlist items. When running youtube-dl with the --flat-playlist and --dump-json option, the returned JSON data now has the title for each video. \r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 174,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-12-04T09:57:15Z",
        "closed_at": "2023-02-02T17:33:09Z",
        "merged_at": "2023-02-02T17:33:09Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdds a new extractor for Blerp. Uses Blerp's GraphQL API to query the file in the CDN required for download.\r\n\r\nResolves #31340.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 102,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-11-29T18:58:27Z",
        "closed_at": "2023-02-02T23:19:03Z",
        "merged_at": "2023-02-02T23:19:03Z",
        "body": "<details>\r\n<summary>Boilerplate: mixed code, new extractor</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code, and I am willing to release it under [Unlicense](http://unlicense.org/), but the below applies to the majority of the code\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (yt-dlp)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nBack-port of yt-dlp FIFA extractor as requested in #31365.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-11-20T10:35:15Z",
        "closed_at": "2023-02-02T23:20:15Z",
        "merged_at": "2023-02-02T23:20:15Z",
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nsupport for new xhamster domain xhvid.com\r\n\r\nexample: https://xhvid.com/videos/lk-mm-xhc6wn6",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 143,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2022-11-20T09:47:21Z",
        "closed_at": "2022-11-20T09:47:51Z",
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [x] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nsupport for new xhamster domain xhvid.com\r\n\r\nexample: https://xhvid.com/videos/lk-mm-xhc6wn6\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 88,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-11-16T18:22:35Z",
        "closed_at": "2023-02-02T23:25:45Z",
        "merged_at": "2023-02-02T23:25:45Z",
        "body": "From old PR #26283 (DMCAed repo) by @fonkap:\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] At least skimmed through [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site) and [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) sections\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nNew extractor for the site https://www.myvideo.ge/ \r\n\r\nSupersedes, closes #26283.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1500,
        "deletions": 3852,
        "changed_files": 612,
        "created_at": "2022-11-13T16:57:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] ~~Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)~~ N/A\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] ~~Covered the code with tests (note that PRs without tests will be REJECTED)~~ N/A\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\n* Lints the whole project with [autopep8](https://pypi.org/project/autopep8/) and [isort](https://pycqa.github.io/isort/)\r\n* Add [pre-commit](https://pre-commit.com/) config and CI workflow to enforce the style for future commits\r\n\r\nFollowed from https://github.com/ytdl-org/youtube-dl/pull/31327#issuecomment-1312259942\r\n\r\nIf you plan to squash this during merge, I would recommend making atleast 2 commits, one with https://github.com/ytdl-org/youtube-dl/commit/9201e8ae08118ba3f62bf4454e5761c8dea77f19, https://github.com/ytdl-org/youtube-dl/commit/a90ebc077c0854cdd400ca55fbe10e364c2cce63, https://github.com/ytdl-org/youtube-dl/commit/3abaaefae0fa968b788b6e3c6384fa5a417ebd41 and another with the rest\r\n\r\n### TODO\r\n\r\n> The POC reveals ([7dc2e7b](https://github.com/ytdl-org/youtube-dl/commit/7dc2e7bf02990a0f93bfc158a21d41e951194606)) what appears to be an actual bug in `format_bytes()` (`str` -> `compat_str` or `compat_basestring`).\r\n\r\n- [x] I don't think we should mix style changes with actual code change. I suggest patching this separately\r\n\r\n> Also for the isort commit ([cafba86](https://github.com/ytdl-org/youtube-dl/commit/cafba86bec10b94501ecd8cdd7816799340aeac2)) there is a [git blame problem](https://akrabat.com/ignoring-revisions-with-git-blame/).\r\n\r\n- [ ] ~~Should I add the commit(s) to a new `git-blame-ignore-revs` file? Depending on your merge workflow, the commit ids may change - so I want to confirm first.~~ Or, you could always add it in a new commit after merging this\r\n\r\n- [ ] Should changes be made to the contribution guide and PR template? In other words, do we want to instruct devs to use pre-commit, or is it sufficient to rely on the CI?\r\n\r\n- [ ] If you wish for the changes to be applied automatically on PRs, you can revert the workflow and use https://pre-commit.ci instead. There are ways to do this with GH workflow too, but pre-commit.ci is a better solution\r\n\r\n- [ ] When creating a release workflow (e.g. #30644), I suggest adding a step with `pre-commit autoupdate` to it\r\n\r\n- [ ] The CI is expected to fail when there are new changes in master. Merging and committing with a `pre-commit run --all-files` will fix it. ~~I'm not doing it rn since~~ it'll have to be re-done after each commit to the master. Instead it makes sense to do it just once, before actually merging this",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 62,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-11-07T14:46:31Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd very rudimentary extractor for Telegram. Supports only public and channels which are previewable with browser.\r\n\r\nResolves #28748.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2247,
        "deletions": 6889,
        "changed_files": 769,
        "created_at": "2022-11-03T00:44:59Z",
        "closed_at": "2022-11-03T20:56:13Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [X] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] (N/A) Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [X] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [X] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [X] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [X] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nReordered imports with isort\r\nTidied up python 3 changes\r\nchanged type checks to isinstance() calls\r\nsimplified some conditional branches\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 6,
        "changed_files": 2,
        "created_at": "2022-11-02T09:50:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nEdit the README.md and the help text to clarify that the number specified for the --playlist-start and --playlist-end options when downloading a playlist is inclusive",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 25,
        "deletions": 18,
        "changed_files": 1,
        "created_at": "2022-10-31T08:47:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR fixes the date to the way ccma provides it as well as fixing some broken tests\r\n\r\ncloses #30961",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 47,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-10-22T17:18:46Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis Extractor adds support for Recurbate.com videos.\r\nAccess to the videos is still restricted under their premium plan, so it is necessary to use cookies from an active session via `--cookies`.\r\n\r\nResolves #28793\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 101,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-10-22T12:35:36Z",
        "closed_at": "2023-02-09T11:25:29Z",
        "merged_at": "2023-02-09T11:25:29Z",
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\nNew extractor for https://live.rbg.tum.de/ lecture streaming site.\r\nThis supersedes, closes #27362.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-10-22T10:43:25Z",
        "closed_at": "2022-10-30T11:48:44Z",
        "merged_at": "2022-10-30T11:48:44Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nSupport song url shared from mobile app.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 25,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-10-22T05:42:29Z",
        "closed_at": "2022-10-30T11:46:46Z",
        "merged_at": "2022-10-30T11:46:46Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd warnings for users outside of China, add more diagnostic information, and give suggested advice.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 245,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-10-14T06:49:17Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<!--\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n-->\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\n<!--\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible. \r\n-->\r\n\r\nThis pull request adds extractor for [vxxx.com](https://vxxx.com/) (**NSFW!**) and its \"friend\" sites, presumably using the same technology stack, therefore, can be extracted in a similar way. These sites are:\r\n\r\n***All sites below are NSFW!***\r\n\r\n- [vxxx.com](https://vxxx.com/)\r\n- [bdsmx.tube](https://bdsmx.tube/)\r\n- [inporn.com](https://inporn.com/)\r\n- [xmilf.com](https://xmilf.com/)\r\n- [blackporn.tube](https://blackporn.tube/)\r\n- [mrgay.com](https://mrgay.com/)\r\n\r\nSince there is no existing issue asking for supporting the above-mentioned site, I'm attaching a site support request info here:\r\n\r\n## Checklist\r\n\r\n<!--\r\nCarefully read and work through this check list in order to prevent the most common mistakes and misuse of youtube-dl:\r\n- First of, make sure you are using the latest version of youtube-dl. Run `youtube-dl --version` and ensure your version is 2021.12.17. If it's not, see https://yt-dl.org/update on how to update. Issues with outdated version will be REJECTED.\r\n- Make sure that all provided video/audio/playlist URLs (if any) are alive and playable in a browser.\r\n- Make sure that site you are requesting is not dedicated to copyright infringement, see https://yt-dl.org/copyright-infringement. youtube-dl does not support such sites. In order for site support request to be accepted all provided example URLs should not violate any copyrights.\r\n- Search the bugtracker for similar site support requests: http://yt-dl.org/search-issues. DO NOT post duplicates.\r\n- Finally, put x into all relevant boxes (like this [x])\r\n-->\r\n\r\n- [x] I'm reporting a new site support request\r\n- [x] I've verified that I'm running youtube-dl version **2021.12.17**\r\n- [x] I've checked that all provided URLs are alive and playable in a browser\r\n- [x] I've checked that none of provided URLs violate any copyrights\r\n- [x] I've searched the bugtracker for similar site support requests including closed ones\r\n\r\n\r\n## Example URLs\r\n\r\n<!--\r\nProvide all kinds of example URLs support for which should be included. Replace following example URLs by yours.\r\n-->\r\n\r\n***All links below are NSFW!***\r\n\r\n- Single video: https://vxxx.com/video-80747/\r\n- Single video: https://bdsmx.tube/video/127583/latex-puppy-leashed/\r\n- Single video: https://inporn.com/video/533613/2k-t-2nd-season-parm-151/\r\n- Single video: https://xmilf.com/video/143777/big-boob-brunette-masturbates3/\r\n- Single video: https://blackporn.tube/video/10043813/young-ebony-babe-gets-super-wet/\r\n- Single video: https://mrgay.com/video/10169199/jpn-crossdresser-6/\r\n\r\nNone of these sites supports playlists.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-10-04T15:04:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "At university, colleagues and I tried this tool, but all of us got the error at this point:\r\n\r\n  youtube-dl [OPTIONS] URL [URL...]\r\n\r\n  youtube-dl -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best' URL https://www.youtube.com/watch?v=Toon9VARRIU\r\n\r\n![youtube-dl-miguelgargallo-contribution](https://user-images.githubusercontent.com/5947268/193855229-f3a8c3a0-410d-462d-9408-c7bf201408ec.png)\r\n\r\nERROR: You've asked youtube-dl to download the URL \"URL\". That doesn't make any sense. Simply remove the parameter in your command or configuration. Add -v to the command line to see what arguments and configuration youtube-dl got.\r\n\r\nSo, to avoid future devs into this error... we love the project and want to improve it!\r\n\r\nBy just removing the \"URL\" word.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 32,
        "deletions": 25,
        "changed_files": 1,
        "created_at": "2022-10-02T22:30:20Z",
        "closed_at": "2022-10-18T15:06:28Z",
        "merged_at": "2022-10-18T15:06:28Z",
        "body": "[ADN] Rename Anime Digital Network to Animation Digital Network.\r\n\r\n~~As adverted on the home page: https://animationdigitalnetwork.fr/~~\r\n\r\nEdit: It's not advertised anymore since the 12/10.\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New feature\r\n- [ ] New extractor\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nIt's a fix of the extractor. Everything generally work but a few thing need to be updated.\r\n\r\nFirst, to use this extractor, we have to update the URL since ADN rename itself from \u201cAnime\u201d to \u201cAnimation\u201d.  \r\nInitially, that wasn't the only goal of that PR. But reading the extractor tutorial and testing my code lead to two other commits.\r\n\r\n> Anime Digital Network se transforme en Animation Digital Network !!\r\n> Pensez \u00e0 mettre \u00e0 jour votre URL.\r\n\r\nThat can be translated to :\r\n\r\n> Anime Digital Network is changing to Animation Digital Network!\r\n> Remember to update your URL.\r\n\r\nIt's exactly what I'm doing.\r\n\r\nFix #31273\r\n\r\nThen, I update the test of that extractor since the video used isn't available now.  \r\nI did this change because over-wise I fear the PR will not be merged.\r\n\r\nAnd finally, I found that the subtitle key used to decrypt the subtitle was old and must be updated. I did it.\r\n\r\nPS: I also updated the test and update the key used to extract subtitle. ^^",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-10-02T16:49:30Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractorExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd extractor for NestCam video.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-09-28T02:50:48Z",
        "closed_at": "2023-03-20T05:22:28Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2022-09-19T14:57:00Z",
        "closed_at": "2022-10-10T22:52:48Z",
        "merged_at": "2022-10-10T22:52:48Z",
        "body": "Apparently the motherless.com has the \"thumb-member-username\" item replaced by \"media-meta-member\", so updating the extractor accordingly.\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible. Fix #29626 and #31128.\r\n\r\nCurrent extractor of motherless.com is unable to extract the uploader_id. For example:\r\n```shellsession\r\n$ ./youtube-dl -v https://motherless.com/060351D\r\n[debug] System config: []\r\n[debug] User config: []\r\n[debug] Custom config: []\r\n[debug] Command-line args: [u'-v', u'https://motherless.com/060351D']\r\n[debug] Encodings: locale UTF-8, fs UTF-8, out UTF-8, pref UTF-8\r\n[debug] youtube-dl version 2021.12.17\r\n[debug] Python version 2.7.16 (CPython) - Linux-4.19.0-16-amd64-x86_64-with-debian-10.12\r\n[debug] exe versions: none\r\n[debug] Proxy map: {}\r\n[Motherless] 060351D: Downloading webpage\r\nERROR: Unable to extract uploader_id; please report this issue on https://yt-dl.org/bug . Make sure you are using the latest version; type  youtube-dl -U  to update. Be sure to call youtube-dl with the --verbose flag and include its complete output.\r\nTraceback (most recent call last):\r\n  File \"./youtube-dl/youtube_dl/YoutubeDL.py\", line 816, in wrapper\r\n    return func(self, *args, **kwargs)\r\n  File \"./youtube-dl/youtube_dl/YoutubeDL.py\", line 837, in __extract_info\r\n    ie_result = ie.extract(url)\r\n  File \"./youtube-dl/youtube_dl/extractor/common.py\", line 534, in extract\r\n    ie_result = self._real_extract(url)\r\n  File \"./youtube-dl/youtube_dl/extractor/motherless.py\", line 131, in _real_extract\r\n    webpage, 'uploader_id')\r\n  File \"./youtube-dl/youtube_dl/extractor/common.py\", line 1021, in _html_search_regex\r\n    res = self._search_regex(pattern, string, name, default, fatal, flags, group)\r\n  File \"./youtube-dl/youtube_dl/extractor/common.py\", line 1012, in _search_regex\r\n    raise RegexNotFoundError('Unable to extract %s' % _name)\r\nRegexNotFoundError: Unable to extract uploader_id; please report this issue on https://yt-dl.org/bug . Make sure you are using the latest version; type  youtube-dl -U  to update. Be sure to call youtube-dl with the --verbose flag and include its complete output.\r\n```\r\nThe reason has been found the website had changed the \"thumb-member-username\" by \"media-meta-member\". So change the extractor accordingly:\r\n```diff\r\n--- a/youtube_dl/extractor/motherless.py\r\n+++ b/youtube_dl/extractor/motherless.py\r\n@@ -127,7 +127,7 @@ class MotherlessIE(InfoExtractor):\r\n \r\n         comment_count = webpage.count('class=\"media-comment-contents\"')\r\n         uploader_id = self._html_search_regex(\r\n-            r'\"thumb-member-username\">\\s+<a href=\"/m/([^\"]+)\"',\r\n+            r'\"media-meta-member\">\\s+<a href=\"/m/([^\"]+)\"',\r\n             webpage, 'uploader_id')\r\n \r\n         categories = self._html_search_meta('keywords', webpage, default=None)\r\n```\r\n\r\nTesting like this:\r\n```shellsession\r\n$ ./youtube-dl -v https://motherless.com/060351D\r\n[debug] System config: []\r\n[debug] User config: []\r\n[debug] Custom config: []\r\n[debug] Command-line args: [u'-v', u'https://motherless.com/060351D']\r\n[debug] Encodings: locale UTF-8, fs UTF-8, out UTF-8, pref UTF-8\r\n[debug] youtube-dl version 2021.12.17\r\n[debug] Python version 2.7.16 (CPython) - Linux-4.19.0-16-amd64-x86_64-with-debian-10.12\r\n[debug] exe versions: none\r\n[debug] Proxy map: {}\r\n[Motherless] 060351D: Downloading webpage\r\n[debug] Default format spec: best/bestvideo+bestaudio\r\n[debug] Invoking downloader on u'https://cdn5-videos.motherlessmedia.com/videos/060351D.mp4'\r\n[download] Destination: Skydiving pussy - hilarious with sound on-060351D.mp4\r\n[download] 100% of 2.24MiB in 00:06\r\n```",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 130,
        "deletions": 58,
        "changed_files": 2,
        "created_at": "2022-09-17T18:41:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [X] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [X] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [X] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [X] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [X] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [X] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [X] Bug fix\r\n- [X] Improvement\r\n- [ ] New extractor\r\n- [X] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nthis PR makes the rtve.es extractors work again, and adds a series of improvements.\r\nthese are very small commits, but I can split the PR if you'd like. summary of the changes:\r\n\r\n- 7cc35d10511f4ead5e92a3949a444d81ecadb119: update the obfuscation, which has long been broken since RTVE altered it.\r\n  no other PR fixes this, to my knowledge\r\n- 33650c8eb69e87ef49d463e050dc4a8082d23ece, 11bd5b961283f2761669d6714ca4f2ac06d6ea4e: other fixes needed to get extractors working again (mostly URL changes).\r\n  simpler/updated version of:\r\n   - #29818 \r\n   - #29816 \r\n   - #26295\r\n- 52858d5879067e15f095da51336c33bb7080c9ef, e4c57418df6f495e12f6b7aca96d3c0e4e37bfd2: support new URLs, in particular audio clips.\r\n  much simpler version of:\r\n   - #29023\r\n- d7939e2c079b7e663bcc3485617151528e4c49bd: use the new API endpoint for metadata; add `description` and `url`.\r\n\r\n",
        "comments": 21
    },
    {
        "merged": true,
        "additions": 129,
        "deletions": 40,
        "changed_files": 3,
        "created_at": "2022-09-14T04:31:39Z",
        "closed_at": "2022-10-11T12:55:09Z",
        "merged_at": "2022-10-11T12:55:09Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nNetease music downloading was broken for a long time, based on @TianyiShi2001's research https://github.com/ytdl-org/youtube-dl/issues/18051#issuecomment-859964832, I finally get the download url through player api and fixed it.\r\n\r\nfixes #11216 \r\nfixes #11365\r\nfixes #18051",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 104,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-09-03T17:17:54Z",
        "closed_at": "2023-04-10T16:46:23Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-08-31T19:01:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [X] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [X] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [X] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [X] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nCBS no longer uses the show name after `shows` in the URL. Format is:\r\n\r\ncbs.com/shows/video/ID\r\nThis is the current season of Big Brother episode 24:\r\nhttps://www.cbs.com/shows/video/GdZlRWQ9xaxkOmx573U_ZhuSl_nfBqFw/\r\n\r\nAdded a unit test for the above URL\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-29T20:43:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "When getting JSON using \"--flat-playlist\", it misses any information about video age. It is very desirable to have such information. \r\nThis PR adds \"published_time\" to the JSON.\r\n\r\nExample:\r\n  youtube-dl --flat-playlist -j ytsearch10:\"egg recipe\"\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-08-29T10:00:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nEnable the download of videos from https://www.w24.at. My kids likes the videos from a certain sport instructor which were previously pulled from YouTube.\r\n\r\nFixes #31211",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 173,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-08-28T17:41:20Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdded a bandlab extractor. Resolves #31184 \r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2022-08-25T20:17:43Z",
        "closed_at": "2022-12-13T03:28:50Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nCommit 1baa0f5 introduced a regression which caused search queries such as\r\n\"ytsearch:search query\" to be changed to \"ytsearch:search%20query\".\r\nThis arose when setting the default-search option to \"ytsearch\"\r\nand when calling the YoutubeDL.extract_info method.\r\n\r\nThis occurred because sanitize_url, which doesn't always receive a URL,\r\nperforms a URL escape. Instead, this escape should be performed in\r\nsanitized_Request, which always receives a URL.\r\n\r\nExample:\r\n\r\n```sh\r\n\u276f youtube-dl \"search query\" --default-search ytsearch\r\n[download] Downloading playlist: search%20query\r\n[youtube:search] query \"search%20query\": Downloading page 1\r\n[youtube:search] playlist search%20query: Downloading 1 videos\r\n...\r\n```\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 139,
        "deletions": 9,
        "changed_files": 5,
        "created_at": "2022-08-20T03:24:36Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nIn regards to the recent youtube \"n_function\" update, if another fancy way comes up that the current jsinterp can't handle, this patch can give users a workaround until it is fixed in jsinterp.\r\nBut of course, you need to have selenium installed($ pip install selenium) and webdriver for the browser you want to use. :p\r\n- [options] Added workaround option to execute \"n_function\"\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 52,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2022-08-20T02:28:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [?] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdds support for // and /* ... */ style comments in JS.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 139,
        "deletions": 22,
        "changed_files": 3,
        "created_at": "2022-08-18T19:33:14Z",
        "closed_at": "2022-08-19T10:45:05Z",
        "merged_at": "2022-08-19T10:45:04Z",
        "body": "<details>\r\n<summary>Boilerplate: mixed code, bug fix/improvement</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/), except for code from yt-dlp for which either this or the below has been asserted\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR adapts the changes from yt-dlp/yt-dlp@f6ca640 (thanks @pukkandan) to handle new player 1f7d5369 served by YT:\r\n* parses regexp literals\r\n* supports throw/catch execution\r\n* adds parse support for regexp flags in case they should appear.\r\n\r\nCloses #31173, had it been re-opened.\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 8,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-08-18T18:27:18Z",
        "closed_at": "2022-08-19T20:00:22Z",
        "merged_at": "2022-08-19T20:00:22Z",
        "body": "## Please follow the guide below\r\n\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nImplement the proposed fix at issue #31131 for the infoq extractor\r\n\r\nResolves #31131.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-08-17T14:23:38Z",
        "closed_at": "2022-08-30T08:15:05Z",
        "merged_at": null,
        "body": "\u2026idRenderer ones (horizontalListRenderer)\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nI was getting the album from Sonata Arctica here\r\nhttps://www.youtube.com/channel/UCyGTmzFc3YzefTe8mOQ-QgA/playlists and realized\r\nit did only get the created playlists, not the albums and singles.\r\n\r\nBy debugging the code, I realized the album and single parts are in a\r\nhorizontalListRenderer. Parsing this renderer was not yet implemented.\r\n\r\nBy looking at the content, I realized that apart from being of type\r\nhorizontalListRenderer, the items were in the same format as the ones I found in\r\na gridRenderer.\r\n\r\nSo I just used the same code for a few lines above that deal with a\r\ngridRenderer. I definitely don't know enough to ensure it will always be the\r\ncase, so I'm just starting this pull request to start the discussion.\r\n\r\nAlso, I wanted to copy the tests about the gridRenderer to make tests about the\r\nhorizontalListRenderer, but I could not find any. I don't have the skill to\r\nwrite tests on my own, so I might need so help there.\r\n\r\nThank you for the awesome youtube-dl.\r\n",
        "comments": 15
    },
    {
        "merged": true,
        "additions": 267,
        "deletions": 40,
        "changed_files": 3,
        "created_at": "2022-08-17T04:57:07Z",
        "closed_at": "2022-08-17T13:22:03Z",
        "merged_at": "2022-08-17T13:22:03Z",
        "body": "<details>\r\n<summary>Boilerplate: mixed code, improvement/bug fix</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/), except for code from yt-dlp for which this or the below has been asserted\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR continues the upgrade of the mini JS interpreter and also addresses new syntax served in player c81bbb4a served by YouTube.\r\n\r\nThe PR adds support for:\r\n* operator ??\r\n* operator ?.\r\n* operator **\r\n* accurate operator functions (resolves #31173)\r\n* `undefined` handling\r\n* object literals {a: 1, \"b\": expr}.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 161,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-08-17T00:21:03Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis pull request adds support to download videos from https://www.veejoy.de/, a german video site operated and based around the company behind Europa Park. The extractor can be used to download either movies or episodes of series. Since the site seems to be built around nextjs, the extractor searches for `__NEXT_DATA__` and works its way towards the medias metadata and location from there.\r\n\r\nCurrently the most basic features are supported and the installer defaults to the uncompressed original footage, which surprisingly is lying at a public endpoint in their CDN. A method to extract the compressed chunk-based and compressed video is already in place (`get_video_formats`), but since the CDN seems to use some kind of cookie based checksum verification while downloading, it forbids me to download the chunks via ffmpeg. Unfortunately, I couldn't get my head around the problem yet, but as said, the extractor works with the uncompressed version. ",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 91,
        "deletions": 22,
        "changed_files": 1,
        "created_at": "2022-08-15T15:06:47Z",
        "closed_at": "2022-10-10T18:26:32Z",
        "merged_at": "2022-10-10T18:26:32Z",
        "body": "<details>\r\n<summary>Boilerplate: own code, improvement</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR provides an improved version of the ManyVids extractor, which\r\n* extracts all formats from page\r\n* extracts description (see https://github.com/yt-dlp/yt-dlp/issues/4634), uploader, views, likes\r\n* downrates previews.\r\n\r\nPlease comment if this fixes the issue #28758, where a user could not download a paid video using cookies from a logged-in browser session. The extractor doesn't support username/password authentication.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 504,
        "deletions": 251,
        "changed_files": 6,
        "created_at": "2022-08-14T16:38:58Z",
        "closed_at": "2022-08-14T17:45:46Z",
        "merged_at": "2022-08-14T17:45:46Z",
        "body": "<details>\r\n<summary>Boilerplate: mixed code, bug fix</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/), except for code from yt-dlp for which either this or the below has been asserted\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nIssue #31164 reported errors with new players served by YouTube. More complex JS constructs confused yt-dl's JSInterp mini-JS interpreter.\r\n\r\nThanks mostly to @pukkandan, this PR fixes the problem code by back-porting from https://github.com/pukkandan/yt-dlp-dev/commit/8f53dc44a0cc1c2d98c35740b9293462c080f5d0 into the existing previously back-ported framework.\r\n\r\nAdditionally:\r\n* supports `void` used in player 324f67b9\r\n* improves `<<`/`>>` precedence (TODO item in back-ported code), by preventing an operator search for `<`/`>` from matching the operator with the same first character\r\n* improves processing of expressions in comma-list expressions, where the last item of a multi-item list wasn't fully processed\r\n* allows for `let`, `const` in case they should appear\r\n* allows for further comparison operators in case they should appear\r\n* adds more tests\r\n* allows for variable in `new Date(...)`\r\n* improves argument list parsing and processing.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-14T11:44:00Z",
        "closed_at": "2022-08-14T16:09:13Z",
        "merged_at": null,
        "body": "Proposing a local youtube-dl method for installing youtube-dl on windows from the command line.\r\nTested locally on windows8 with the official python for windows.\r\n\r\nThe python -ensurepip/python -mpip install is the accepted portable modern way of doing pip install (since it avoid installing extra binary dependency for pip).\r\n\r\nI skipped the extra step of installing ffmpeg in the PATH, but this method maybe easier than brew or other packaging tools on some platform.\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [X] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [X] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [X] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [X] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [X] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [X] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [X] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-14T09:43:19Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [X] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [X] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [X] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [X] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\n[hls downloader] Sleep 10 seconds after getting a 429 Too Many Requests\r\n\r\nOtherwise the next retry will happen immediately, most likely also getting a 429.\r\n\r\nSimilar to https://github.com/ytdl-org/youtube-dl/pull/28270, but much simpler and smaller scoped. #28270 is probably the right long term solution.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-08-11T04:31:37Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nImproved the Yandex Music extractor: if cookies with authorization from a premium account are specified, then the extracted URL refers to **H**igh **Q**uality (320 kbps)\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2022-08-11T03:28:04Z",
        "closed_at": null,
        "merged_at": null,
        "body": "It would be helpful to me to have an option to discard the styles from TTML subtitles.\r\n\r\nThis PR adds a `--ttml-convert-no-style` option which does just that.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-08-11T00:51:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis pull request adds an extractor for videos from the [hololive official fanclub](https://hololive-fc.com/) website. Although it does not support live streams, it works with archived live videos.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 662,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-08-10T19:55:06Z",
        "closed_at": "2022-11-03T10:09:38Z",
        "merged_at": "2022-11-03T10:09:37Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/), except for code from yt-dlp for which this or the below has been asserted\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nBackport `traverse_obj` from yt-dlp required for https://github.com/ytdl-org/youtube-dl/pull/31097.\r\n\r\nThanks @pukkandan (orignal code), @grub4k (rewrite & tests).\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2022-08-10T15:57:42Z",
        "closed_at": "2022-08-11T14:11:14Z",
        "merged_at": null,
        "body": "Return playlist instead of single video info in case of multiple\r\nplayer elements.\r\n\r\nExample with two parts.\r\n\r\nhttps://tele5.de/mediathek/merlin-2-der-letzte-zauberer/\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [X] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [X] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n\r\n\r\n### What is the purpose of your *pull request*?\r\n- [X] Improvement\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe purpose of this PR is to get ytdl to download all videos instead only the first one which is annoying at best.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2022-08-09T21:15:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nBackport https://github.com/yt-dlp/yt-dlp/commit/551f93885e25c208c581702494d758e58b608992 to ignore non-audio-video streams in selectors. Required for https://github.com/ytdl-org/youtube-dl/pull/31097\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 4,
        "changed_files": 3,
        "created_at": "2022-08-09T20:02:54Z",
        "closed_at": "2022-08-09T20:05:01Z",
        "merged_at": "2022-08-09T20:05:01Z",
        "body": "<details>\r\n<summary>Boilerplate: own code, improvement/bug fix</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nImprove download test logs (add test case name).\r\n\r\nAlso clean up some new _flake8_ issues (space after keyword).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 107,
        "deletions": 76,
        "changed_files": 2,
        "created_at": "2022-08-09T19:38:59Z",
        "closed_at": "2022-10-10T23:05:17Z",
        "merged_at": "2022-10-10T23:05:17Z",
        "body": "<details>\r\n<summary>Boilerplate: mixed code, bug fix</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/), except for code from yt-dlp for which either this or the below has been asserted.\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nUpdates ZDF extractors using some yt-dlp code and test-cases, and fixes and improves `ZDFChannelIE`. For more details, see the commit messages.\r\n\r\nAlso adds a new expected value for test cases, like this\r\n```js\r\n        'info_dict': {\r\n            ...\r\n            'field': 'lambda x: some_expression(x)',\r\n            ...\r\n```\r\nThis test succeeds iff the `some_expression(got)` is true.\r\n\r\nThe test syntax is used here to test that none of the playlist items is one of the known non-video items on the page that should have been skipped, as part of the fix for #31149.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2022-08-09T02:44:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\nThis request trims the standard Twitter ID field to workaround the bug reported in #29912\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-08-07T18:15:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 72,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-08-07T16:52:09Z",
        "closed_at": "2022-08-23T17:33:29Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 71,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-08-07T15:05:15Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis patch adds a new extractor for truthsocial.com, the microblogging service founded by former U.S. president Donald Trump. Due to its frequent use by the Trump family and other political actors, this would be a useful addition to the library for journalists and other researchers.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 220,
        "deletions": 62,
        "changed_files": 3,
        "created_at": "2022-08-04T14:44:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nSee discussion in #30900.\r\n\r\nResolves #30900.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 11,
        "changed_files": 11,
        "created_at": "2022-07-28T05:28:33Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThere was a typo in each of the ISSUE_TEMPLATE files (and a comment in extractor/common.py) where a sentence started with \"First of\", when it should have started with \"First of all\". This PR fixes that.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 71,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-07-22T10:14:49Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd support for NoodleDude videos\r\n--\r\nAutomated submit by PRB0t\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 688,
        "deletions": 3,
        "changed_files": 5,
        "created_at": "2022-07-19T23:14:55Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nBackport Panopto support from yt-dlp. Thanks to @kmark and @coletdjnz. Closes https://github.com/ytdl-org/youtube-dl/pull/13449\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 45,
        "deletions": 38,
        "changed_files": 1,
        "created_at": "2022-07-16T22:03:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n\r\nThis pull request attempts to fix #30575.\r\n\r\n- One of the links contained no media (video was removed from the website); removed and added a new test\r\n- One of the videos had an incorrect uploader; replaced with the correct one\r\n- Separated extractor for audio and video; now both audio and video can be downloaded",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-07-15T05:13:30Z",
        "closed_at": "2022-07-18T18:10:28Z",
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nThis commit is the fix for the issue \"[YouTube] Output inconsistency when URL is video and playlist link\" (#31087).",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-07-11T17:19:30Z",
        "closed_at": "2022-07-16T11:49:48Z",
        "merged_at": null,
        "body": "Made small change for readability\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 15,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-06-27T23:28:34Z",
        "closed_at": "2022-07-11T23:35:40Z",
        "merged_at": "2022-07-11T23:35:40Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nThe video_format of url in  #31030 is video/dash, as it's not present in the if ... if else ... if else ..., it goes to the last else that tries and fails to load the url. This fix should correctly handle video/dash as a m3u8 file.\r\n",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-06-27T12:15:24Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd an extractor for [Livestreamfails](https://livestreamfails.com), a Twitch clip mirror site for [r/livestreamfail](https://reddit.com/r/LivestreamFail/).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 459,
        "deletions": 211,
        "changed_files": 7,
        "created_at": "2022-06-21T15:21:58Z",
        "closed_at": "2023-02-09T11:01:58Z",
        "merged_at": "2023-02-09T11:01:58Z",
        "body": "<details>\r\n<summary>Boilerplate: mixed code, improvement</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/), except where\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (https://github.com/yt-dlp/yt-dlp/pull/3233)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR revives the ability to bypass some age restrictions on YT videos (specifically tiers 1-3 of https://github.com/yt-dlp/yt-dlp/pull/575#issuecomment-888837000), following [yt-dlp PR #3233](https://github.com/yt-dlp/yt-dlp/pull/3233).\r\n\r\nThis function is disabled if the `--age-limit` parameter is set to a value less than 18.\r\n\r\nAdded with this PR is utility function `update_url(url, **kwargs)` which allows modifying (eg, `..., netloc='www.youtube.com')`) or removing (eg, `..., query=None)`) URL components from a URL string or parsed URL tuple to produce a new URL string.\r\n\r\nResolves #1495\r\nResolves #5617\r\nResolves #26652\r\nResolves #26665\r\nResolves #29578\r\nResolves #29086\r\nResolves #29659\r\nResolves #29729\r\nResolves #29811\r\nResolves #30019\r\nResolves #30255\r\nResolves #30953\r\nResolves #31034",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 46,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-06-20T17:34:57Z",
        "closed_at": "2023-01-29T21:35:37Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe purpose of this pull request is to add a new extractor to the list. This PR contains the extractor of Movies2Watch website. ",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 54,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-06-12T03:11:52Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis pull request adds [qingting.fm](https://www.qingting.fm/), probably the largest podcast website in China.",
        "comments": 15
    },
    {
        "merged": false,
        "additions": 239,
        "deletions": 79,
        "changed_files": 2,
        "created_at": "2022-06-10T15:22:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<details>\r\n<summary>Boilerplate: mixed code, improvement</summary>\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/), except where:\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (see Description)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR re-works the BitChute extractor module based on the yt-dlp version, which in turn derives from the yt-dl version and unmerged yt-dl PRs.\r\n\r\nThe functional improvements are\r\n* better extraction of videos (`BitChuteIE`)\r\n* better extraction of channels (`BitchuteChannelIE`)\r\n* added extraction of playlists (`BitChutePlaylistIE`)\r\n* all tests pass.\r\n\r\nSpecific changes, apart from those needed for the yt-dl platform include the following.\r\n\r\nThroughout\r\n* relax regexes\r\n* refactor common functions in `BitChuteBaseIE`, inherited by other IEs \r\n\r\nBitChute\r\n* extract `timestamp` instead of `upload_date` (resolves #24180, closes #24182)\r\n* extract `'age_limit': 18` if NSFW\r\n* better extraction of title and description\r\n* detect 404 and report as expected error\r\n* detected blocked channel and report as expected error (resolves #28461)\r\n* extract `channel_url` (resolves #28500)\r\n\r\nBitChuteChannel\r\n* fix listing entries\r\n* include NSFW if `--age-limit 18` (or higher) (resolves #24419)\r\n\r\nBitChutePlaylist\r\n* add extractor based on `BitChuteChannelIE` and PR #26725 (resolves #29964, closes #26725, would resolve https://github.com/yt-dlp/yt-dlp/issues/2845)\r\n\r\nAlso closes #26569, resolves #29531.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 227,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-06-10T13:32:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n                           *Mostly, some lines are often longer than 80 columns, and no data point is extracted from more than a single source.*\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis pull request adds [tube.switch.ch](https://tube.switch.ch), probably the largest Swiss website for universities to share lecture videos.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 178,
        "deletions": 31,
        "changed_files": 2,
        "created_at": "2022-06-06T15:13:17Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<details>\r\n<summary>Boilerplate:  mixed code, improvement</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/), except where:\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (yt-dlp/yt_dlp/extractor/spankbang.py)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR updates the SpankBang extractor module. The main changes are:\r\n* `SpankBangIE` back-ported from yt-dlp (small changes)\r\n* `SpankBangPlaylistIE` reworked to support multi-page playlists.\r\n\r\nResolves #30728.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 139,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-06-04T12:27:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<details>\r\n<summary>Boilerplate: mixed code, new extractor</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/), except where:\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (`yt-dlp/yt_dlp/extractor/doodstream.py`)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR adds the DoodStreamIE extractor as originally proposed in #28008 and subsequently included in yt-dlc and yt-dlp.\r\n\r\nThe code is taken from the current yt-dlp extractor, adapted for the yt-dl platform, with these further fixes and improvements:\r\n\r\n* enforce vanilla UA `Mozilla/5.0` to bypass CloudFlare blockage\r\n* extract from both embed (`/e/`) and player (`/d/`) pages to get additional metadata (duration, size, upload date)\r\n* raise error for `Video not found` title in the embed page\r\n* also recognise TLDs .so, .la, .pm, .sh, .ws, .one.\r\n\r\nOther candidate TLDs are .com, .cx, or indeed `[a-z0-9-]*`.\r\n\r\nCloses #28903.\r\nCloses #28008.\r\nResolves #28883.\r\nWith suitable changes to the Generic extractor (eg, https://github.com/ytdl-org/youtube-dl/pull/28903/commits/7496a0401cc1f398bd6d72a566025de178e7871d in reverse), would handle #29628.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 29,
        "deletions": 11,
        "changed_files": 1,
        "created_at": "2022-06-03T17:15:27Z",
        "closed_at": "2022-11-11T00:49:14Z",
        "merged_at": "2022-11-11T00:49:14Z",
        "body": "<details>\r\n<summary>Boilerplate: mixed code, improvement</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/), except where:\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (PR #29596)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nAdds several improvements to the `jwplayer` extraction  and parsing code in `extractor/common.py`:\r\n\r\n* don't crash parser if jwplayer_data is invalid (empty or no formats)\r\n* use `label` in `sources[n]` as `format_id`\r\n* use `parse_resolution()`\r\n* relax `jwplayer().setup(...)` RE  (based on PR #27274)\r\n* add filesize extraction (yt-dlp).\r\n\r\nAlso adds a small update from orphaned PR #29596:\r\n* detect more manifest formats in `_parse_jwplayer_formats()`\r\n\r\nAlso adds improved extraction from PR #25433 (thanks @martin54).\r\n\r\nSupersedes: \r\n* closes #29596\r\n* closes #27274\r\n* closes #25433.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 289,
        "deletions": 140,
        "changed_files": 2,
        "created_at": "2022-06-02T23:54:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<details>\r\n<summary>Boilerplate: \"Unlicense\" code, improvement</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR back-ports the updates made to the Soundcloud extractor module in yt-dlc and yt-dlp to yt-dl.\r\n\r\nThe main changes are:\r\n* implement login and other improvements as originally offered in PR #26265\r\n* add `SoundcloudRelatedIE`.\r\n\r\nCloses #26265\r\nExpected to resolve #28521\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 91,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-06-02T16:35:19Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] At least skimmed through [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site) and [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) sections\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nDownloads videos and courses from [macProVideo.com](https://www.macprovideo.com). MacProVideo is an online video course provider. This PR allows downloading individual videos from a course or downloading a whole course as a playlist.\r\n\r\nThis is moved over from #26232 ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 34,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2022-05-27T22:28:49Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nDumpert has changed playout to HLS a while ago (months or even over a year) which causes all videos since that change to download as .m3u8 files actually containing mp4 data. Older videos are unaffected, that's why the test never failed. Additionally, the site has received a new layout with some new possible URLs a while ago, those should now work as well.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-05-17T11:47:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n### Description of your *pull request* and other information\r\n\r\nFix #28389. When extracting audio, and the containing format isn't 'opus', but the requested format is, then youtube-dl will call ffmpg to do the conversion. Without specifying the preferred quality, youtube-dl defaults to '5'. Integers 0-9 are currently sent to ffmpeg as the bitrate for 'opus', which is clearly an error and this PR fixes that. It uses an arbitrary (specific to opus) scale to convert 0-9 into reasonable bitrates between 6 kb/s to 210 kb/s.... with 5 (the default) giving 96 kb/s",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 111,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-05-16T18:57:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\n[MegaCartoons](https://www.megacartoons.net/) provides many cartoon series, such as [SpongeBob](https://www.megacartoons.net/video-series/spongebob-squarepants/) or [Ben10](https://www.megacartoons.net/video-series/ben-10/). As far as I found out, the site has no problems concerning copyright. This extractor allows the extraction of the video URL of single episodes.\r\n",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-05-12T20:18:08Z",
        "closed_at": "2022-09-23T08:34:54Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdds urls for other instances of piped. I was already doing this for yt-dlp ( https://github.com/yt-dlp/yt-dlp/pull/3714 ) and I thought it was worth adding to youtube-dl too (especially after coming across https://github.com/ytdl-org/youtube-dl/issues/30820 ).\r\nThis does not offer a permanent solution to other instances but given the invidious instances are added in a similar fashion I thought a half solution was better than none\r\n\r\nDidn't add tests as the insidious instances in the same file do not have tests, have tested and all instances work however.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-05-12T13:48:07Z",
        "closed_at": "2022-05-20T01:52:50Z",
        "merged_at": null,
        "body": "untill -> until\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 51,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2022-05-07T21:04:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdds HD support to VidLii.\r\nThis was originally done in #29291, but I deleted that fork a long time ago so I can't make any more edits to it.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 344,
        "deletions": 5,
        "changed_files": 3,
        "created_at": "2022-05-06T10:21:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<details>\r\n<summary>Boilerplate: own code, new extractor</summary>\r\n## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n</details>\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAs requested in #30906, the PR adds support for TRT (Turkish state TV/Radio) at the site `https://www.trtizle.com`.\r\n\r\nFeatures\r\n- [x] individual catch-up for TRT shows with URL path `/{cat}/{show}/{episode}` for cat matching `diziler|programlar|belgesel|filmler|cocuk|trtarsiv|engelsiz`\r\n- [x] playlist support for TRT series with URL path `/{cat}/{show}` as above\r\n- [x] live stream support for TV channels like `/canli/tv/trt-{chan}`\r\n- [x] live stream support for radio channels like `/canli/radyo/{chan}'\r\n- [ ] login support (meanwhile, use `--cookies ...`)\r\n- [ ] personal playlist support (`/listem`)\r\n\r\nAlthough the episode and series pages are basically identical, yt-dl has no way (at present) of forcing playlist extraction from an episode page since `--yes-playlist` doesn't mean that. You have to remove the episode part of the URL manually to get the series playlist.\r\n\r\nTo do:\r\n- [ ] test radio channels in region (EPG JSON gives 403 in UK)\r\n- [ ] test TRT-2 in region (manifests give 403 in UK)\r\n- [ ] test TRT-*Spor in region (manifests give 403 in UK)\r\n- [ ] add tests for cats `trtarsiv`, `engelsiz`\r\n- [ ] add tests for live radio.\r\n\r\nTo improve extraction, the common routines that process `application/ld+json` data are enhanced:\r\n* series name is extracted from data types such as `TVSeries`\r\n* `None` values for certain fields no longer overwrite previously extracted values.\r\n\r\nResolves #30906.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 99,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-05-04T18:02:44Z",
        "closed_at": "2023-01-12T13:50:27Z",
        "merged_at": null,
        "body": "\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n\r\n\r\n- [x] New extractor\r\n\r\n\r\n### Description \r\n\r\nHello, in a course of my university we were asked to contribute in an open source project and I chose this one. My plan is to try and build an extractor but so far I am facing difficulties (I am still beginner in programming skills). Is it possible to help me a bit on this? \r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 176,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-05-01T17:42:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR provides an extractor for [cozy.tv](https://cozy.tv). It is a streaming service. It can extract only saved streams. Live-stream download is not implemented yet.\r\n\r\nExample url: `https://cozy.tv/<user>/replays/<id>`",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-04-29T14:55:41Z",
        "closed_at": "2022-04-29T15:56:01Z",
        "merged_at": "2022-04-29T15:56:01Z",
        "body": "<details>\r\n<summary>Boilerplate: own code, improvement</summary>\r\n## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n</details>\r\n\r\n\r\n### Description of your *pull request* and other information\r\nClarify how test cases are named in `TestDownload`.\r\n\r\nResolves #30898.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 182,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-04-28T10:43:41Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<details>\r\n<summary>Boilerplate: own code, new extractor</summary>\r\n## Please follow the guide below\r\n\r\n---\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n</details>\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nIssue #30899 requested support for the newly launched Talk TV UK channel, which features Murdoch luminaries mouthing off.\r\n\r\nThis PR implements support for the catchup shows and series pages at www.talk.tv, as well as for the live stream. There's not a lot of metadata available: `thumbnail` is in the player data; the extractor finds `title`, `description`, `duration` (dependent on the text format in the page) from the displayed HTML; the `last-modification:` of the manifest URL is used to generate a `timestamp`.\r\n\r\nResolves #30899.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 33,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2022-04-22T16:16:37Z",
        "closed_at": "2022-04-28T09:18:10Z",
        "merged_at": "2022-04-28T09:18:10Z",
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis pull request adds an extractor for the KTH Play website. KTH Play is a website which KTH uses to publish lectures and other videos online. KTH is a university in Stockholm, Sweden.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 132,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-04-18T17:45:18Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR adds an extractor for CamWhoresBay, for both a single video page and (more importantly) all videos for a model.\r\n\r\ncaveat emptor: There are tests, and the ones for the video page are working fine, but i have no idea how to get the one for the model page to work, as there is no `id` or `ext`. I looked at other extractors, but did not find a working solution.\r\n\r\nfor the video test, i also found no way to use a regex in the `formats` dict, but it is required for the `rnd` parameter - so i'm skipping that, and just check the primary URL.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2022-04-17T16:51:21Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\naddresses the 3x issues I raised and detailed in #30864 \r\n\r\n**static rainfocus api's in extractor are no longer valid**\r\ni have addressed this in the same way the browser does, by fetching the tokens from a js script. It is plausible to only update the static tokens (they have been valid since 2018). \r\nThis method may be more useful if the api key updates again, however it equally has the risk of failing if the site javascript dramatically changes.\r\n\r\ni have left in the RAINFOCUS_API_PROFILE_ID and RAINFOCUS_WIDGET_ID constants but set them to blank.\r\nIf blank the values will be fetched at runtime via a `_download_webpage()` call.\r\nIn future if somebody wished to quickly patch the extractor they could set these values without needing to debug why the dynamic fetch is failing.\r\n\r\n**tests no longer pass**\r\ntesting url's and info_dict have been updated with url's and data that are current and pass the tests.\r\n\r\n**ciscolive domain has changed**\r\nupdated Origin to match valid domain, updated regex to no longer permit old domain (`ciscolive.cisco.com`), updated tests with url paths featuring the new domain.\r\n\r\nadded a couple informative `ExtractorError()` these occur when tokens can not be obtained or video playlists are empty (the later can occur in 2 scenarios:\r\n1. where a search returns 0 results (which would result in no download occuring)\r\n2. where the api key was invalid but the search would have otherwise returned >0 results.\r\n\r\nI'm conscious the messages on these ExtractorErrors() could be better/shorter.\r\n\r\n<br /><br />\r\ntechnical details for each including failing outputs are contained within issue #30864 \r\n<br /><br />\r\n\r\nRelevant working test outputs\r\n```\r\n$ python test/test_download.py TestDownload.test_CiscoLiveSession\r\n[CiscoLiveSession] catalog.js: Downloading webpage\r\n[CiscoLiveSession] 16360600004400017rMx: Downloading webpage\r\n[brightcove:new] 6128601216001: Downloading JSON metadata\r\n[brightcove:new] 6128601216001: Downloading m3u8 information\r\n[brightcove:new] 6128601216001: Downloading m3u8 information\r\n[brightcove:new] 6128601216001: Downloading MPD manifest\r\n[brightcove:new] 6128601216001: Downloading MPD manifest\r\n[info] Writing video description metadata as JSON to: test_CiscoLiveSession_6128601216001.info.json\r\n[debug] Invoking downloader on 'https://bcbolt446c5271-a.akamaihd.net/media/v1/pmp4/static/clear/5647924234001/b460c78b-b38e-4aa9-b363-538e45f53415/417dfc89-f5ef-41cb-8af9-6a4a7477c109/main.mp4?akamai_token=exp=1652642459~acl=/media/v1/pmp4/static/clear/5647924234001/b460c78b-b38e-4aa9-b363-538e45f53415/417dfc89-f5ef-41cb-8af9-6a4a7477c109/main.mp4*~hmac=fdf8c03287cdda9b213427413978da4fd903737f11c180bc889b8218524e09fa'\r\n[download] Destination: test_CiscoLiveSession_6128601216001.mp4\r\n[download] 100% of 10.00KiB in 00:00\r\n.\r\n----------------------------------------------------------------------\r\nRan 1 test in 2.573s\r\n\r\nOK\r\n```\r\n\r\n```\r\n$ python test/test_download.py TestDownload.test_CiscoLiveSearch\r\n[download] Downloading playlist: Search query\r\n[CiscoLiveSearch] catalog.js: Downloading webpage\r\n[CiscoLiveSearch] Downloading search JSON page 1\r\n[CiscoLiveSearch] playlist Search query: Downloading 3 videos\r\n[download] Downloading video 1 of 3\r\n[download] Downloading video 2 of 3\r\n[download] Downloading video 3 of 3\r\n[download] Finished downloading playlist: Search query\r\n.\r\n----------------------------------------------------------------------\r\nRan 1 test in 0.889s\r\n\r\nOK\r\n```\r\n",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-04-13T12:22:58Z",
        "closed_at": "2022-05-20T04:25:55Z",
        "merged_at": "2022-05-20T04:25:54Z",
        "body": "https://github.com/ytdl-org/youtube-dl/pull/30809\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nI was confused whether the regex needed to be special when using the `OR` regex operator to list multiple substrings `Like|This`. I had to dig into the code to know what was going on. By moving the adjective in the README to the front it should be clear that both regex and substrings are treated with re.IGNORECASE",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 78,
        "deletions": 16,
        "changed_files": 3,
        "created_at": "2022-04-12T11:04:08Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<details>\r\n<summary><b>Boilerplate</b>: own code, improvement</summary>\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n</details>\r\n\r\n### Description of your *pull request* and other information\r\n\r\nFrom issue #30843 (also https://github.com/yt-dlp/yt-dlp/issues/2543), YT is now supporting clips, which have a URL path like `/clip/{opaque_encoding_string}`. See also https://support.google.com/youtube/answer/10332730?hl=en.\r\n\r\nIn yt-dl such a URL is silently extracted as the whole video from which the clip was taken; in yt-dlp the clip is identified as unsupported.\r\n\r\nThis PR implements a simple-minded solution to extracting the clip by finding the start and end times, passing them as a hidden parameter, enforcing the `FFmpegFD` downloader when that parameter is present, and prepending the _ffmpeg_ `-ss ...` and `-to ...` options with the passed values to the downloader options.\r\n\r\nTo do\r\n- [x] Confirm for separate video+audio streams\r\n- [ ] Should the ID, title or other metadata be modified from that of the original video to distinguish the clip from the original? (NB `_url_transparent` doesn't override the ID, but maybe pass to subclass `YoutubeClipIE` of `YoutubeIE`)\r\n- [ ] Similarly what about `--download-archive`?\r\n- [ ] Add formal tests \r\n- [ ] Should there be a framework for this to support other sites?\r\n- [ ] The clipping details should be recorded in the `info_dict` and unpacked from it so that `--load-info-json ...` works.\r\n\r\nResolves #30843.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 52,
        "deletions": 15,
        "changed_files": 1,
        "created_at": "2022-04-11T22:34:29Z",
        "closed_at": null,
        "merged_at": null,
        "body": "<details>\r\n<summary><b>Boilerplate</b>: own code, bug fix</summary>\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n---\r\n</details>\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe site changed the page structure. This PR modifies the extractor to match the new structure. Thanks also @xifangczy for PR #29876 and @fstirlitz for the Boilerplate idea.\r\n\r\nResolves #30089.\r\nCloses #28649.\r\nCloses #23464.\r\nCloses #25455.\r\n\r\nCloses #29876.",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-09T23:35:42Z",
        "closed_at": "2023-03-09T08:56:01Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-04-05T21:34:31Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 200,
        "deletions": 29,
        "changed_files": 1,
        "created_at": "2022-04-03T11:53:08Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code, except for code from yt-dlp for which this or the below was separately asserted, and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nResolves #30798:\r\n>Tver.jp has had a major overhaul of the website\r\nthe old https://tver.jp/api/access_token.php no longer works.\r\n\r\nThe code is back-ported from https://github.com/yt-dlp/yt-dlp/pull/3268 with some tweaks for yt-dl, some additional checks and regex relaxations, and centralising the Origin+Referer code. All the required metadata was added to the tests, which ran correctly, but have been disabled because site content expires quickly. Thanks @Lesmiscore and other contributors to the PR.\r\n\r\nCloses #30804.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 0,
        "changed_files": 0,
        "created_at": "2022-04-03T11:39:57Z",
        "closed_at": "2022-06-03T15:20:55Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nBack-port of https://github.com/yt-dlp/yt-dlp/issues/3230.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-04-03T01:46:48Z",
        "closed_at": "2022-04-13T12:23:46Z",
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nI was confused whether the regex needed to be special when using the `OR` regex operator to list multiple substrings `Like|This`. I had to dig into the code to know what was going on. By moving the adjective in the README to the front it should be clear that both regex and substrings are treated with re.IGNORECASE",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 70,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-03-31T10:29:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "I created an extractor for Wikimedia commons please review & merge the pull request.\r\n\r\nRegards\r\nEhtisham",
        "comments": 29
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-03-29T14:04:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nI sometimes download some songs with this program and, like with bash primitives, I forget which flag is `embed` and which is `add` for metadata and thumbnail. This PR just add an alias for `--embed-subs` and `--embed-thumbnail` replacing the `embed` word to `add` to solve this problem. Now if you want you can use all add instead of some add and some embed.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 100,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-03-29T08:31:16Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis is an extractor for game VODs, condensed game VODs, and highlight clips from the website of the National Basketball League of Australia (https://nbl.com.au). At this point it supports video watch URLs at the path /tv/[category]/[id]/. All tests are passing on 2.7.18 and 3.9.11 (I wasn't able to run 2.6.* on my dev machine).\r\n\r\n~~I had plans to include the latter part of the url as the display_id, but I must be misunderstanding the named capture groups in _VALID_URL, as this does not seem to be getting added to the info dict.~~ display_id support added\r\n\r\n~~I'd like to support the embed url format as well, e.g https://ott.nbl.com.au/en-int/embed/1303323, as this is used in og:video tags and might be a simplification for the extractor, but I didn't want to add that functionality at this time with my limited knowledge of what's available in ytdl.~~ embed url format is now supported",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1414,
        "deletions": 233,
        "changed_files": 5,
        "created_at": "2022-03-25T13:14:32Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/), except for code from yt-dlp for which either this or the below has been separately asserted\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe XVideos extractor supported single videos presented via various URL formats. The site also offers various playlist-like pages:\r\n* actual playlists: /favorite/ID/SLUG\r\n* related videos/playlist: video URL + #_related-...\r\n* channel activity: /...channels/ID\r\n* channel videos: channel URL + #_tabVideos\r\n* channel favourites (playlist): channel URL + #_tabFavorites\r\n* search results: ...?k=(ID).\r\n\r\nThis PR tries to support extracting from those pages. It also pulls in small changes from the yt-dlp extractor.\r\n\r\nTo do:\r\n- [ ] more tests\r\n- [ ] simplify?\r\n",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 5,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-25T08:01:47Z",
        "closed_at": "2022-03-31T23:46:34Z",
        "merged_at": "2022-03-31T23:46:34Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nneed \"referer\" header when download path such as \"/audio/au1003142\".\r\n\r\nrelated [issue](https://github.com/ytdl-org/youtube-dl/issues/30768).",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 104,
        "deletions": 3,
        "changed_files": 7,
        "created_at": "2022-03-22T23:38:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis adds progress hooks to the post processors in addition to where they are already called in the downloaders. The specific use case this resolves is getting the finalized filename and final file size after merging or other post processing occurs. A new status option was added to the progress hooks called `postprocessed`.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 64,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-03-16T17:53:53Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [X] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [X] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [X] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [X] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [X] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [X] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [X] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdded new extractor for [mujrozhlas.cz](https://mujrozhlas.cz). It is quite straightforward process.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 117,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-03-15T01:39:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nI hope these tests will help us evaluate potential implementations of feature #30737.",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-03-14T18:17:15Z",
        "closed_at": null,
        "merged_at": null,
        "body": "https://web.archive.org/web/20220408161349/https://github.com/ytdl-org/youtube-dl/pull/30743",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-03-14T13:18:54Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-03-10T14:09:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nThe **view_count** field was broken on Pornhub extractor, because they changed the format using letters for thousands and so on.\r\nThis PR fixes that issue.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 254,
        "deletions": 97,
        "changed_files": 7,
        "created_at": "2022-03-10T13:22:15Z",
        "closed_at": "2022-03-10T13:24:09Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe **view_count** field was broken on Pornhub extractor, because they changed the format using letters for thousands and so on.\r\nThis PR fixes that issue.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 61,
        "deletions": 10,
        "changed_files": 4,
        "created_at": "2022-03-07T04:06:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/), except for code taken from yt-dlp for which either this or the below was separately asserted\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThere is a set of options for displaying values from the `info_dict` but these options don't cover all the values of interest (eg https://github.com/ytdl-org/youtube-dl/pull/30703).\r\n\r\nThis PR implements a simplified version of the `--print` option from yt-dlp:\r\n```md\r\n    -O, --print TEMPLATE                 Simulate, quiet but print the given fields.\r\n                                         Either a field name or similar formatting\r\n                                         as the output template can be used\r\n```\r\nUnlike the yt-dlp option, but consistent with yt-dl's output templates, only actual field names are allowed in the template (not index paths).\r\n\r\nExample:\r\n```shellsession\r\n$ youtube-dl --print 'The unsanitised default output filename is' --print '%(title)s-%(id)s.%(ext)s' --print 'The sanitised output filename is' --get-filename 'https://www.youtube.com/watch?v=YbJOTdZBX1g'\r\nThe unsanitised default output filename is\r\nYouTube Rewind 2018: Everyone Controls Rewind | #YouTubeRewind-YbJOTdZBX1g.mp4\r\nThe sanitised output filename is\r\nYouTube Rewind 2018 - Everyone Controls Rewind _ #YouTubeRewind-YbJOTdZBX1g.mp4\r\n$\r\n```\r\nTo do:\r\n- [ ] add test(s)\r\n\r\nCloses #30703 (superseded).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 92,
        "deletions": 83,
        "changed_files": 2,
        "created_at": "2022-03-04T17:06:28Z",
        "closed_at": "2022-11-04T10:13:07Z",
        "merged_at": "2022-11-04T10:13:07Z",
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/), except for code acquired from yt-dlp for which either this or the below was previously asserted\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR back-ports the CeskaTelevize yt-dlp extractor, removing CeskaTelevizePoradyIE. An interim `traverse_obj()` shim is used. The existing tests have been fixed and/or new ones added as needed.\r\n\r\nThe following additional changes were made:\r\n* follow redirect URL\r\n* support `liveBroadcast` and `videobonusDetail` in `__NEXT__` data\r\n* id must be `compat_str`\r\n* return single video for singleton playlist.\r\n\r\nResolves #30151\r\nResolves #30166\r\nResolves #30172\r\nResolves #30406\r\nResolves #30696\r\nExpected to resolve #29415.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 1,
        "changed_files": 5,
        "created_at": "2022-02-28T17:15:47Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nFor every item in the info dictionary, there is a respective `--get-*` option except for the `manifest_url`. This commit adds the new option `--get-manifest-url` simply in the same manner as for all the other `--get-*`options before. This new option can be used as you would use `--get-url` for instance but it would return the manifest URL instead of the video/audio URL.\r\n\r\nResolves #10976.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 142,
        "deletions": 49,
        "changed_files": 2,
        "created_at": "2022-02-28T14:41:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x]  Except for the commit by @kikuyan who separately agreed to either this or the below, I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nThis PR replaces #29796 which was orphaned when @kikuyan's account was deleted.\r\n\r\nThe PR makes the following fixes and improvements to the Facebook extractor:\r\n- improves title, add description, preferring metadata in ld+json if present\r\n- adds another getter for `attachment`s (from PR #30496, issue)\r\n- as ld+json VideoObject type seems to be gone since PR was first made, adds SocialMediaPosting type as a fallback\r\n- when web pages are analyzed as playlists but consist of single video, treats the pages as regular video pages to extract metadata well (examples: tests 7, 9, 10)\r\n- makes test skip for now: TestDownload.test_Facebook_8: the page cannot be parsed (get `ERROR: This video is only available for registered users.`) while it can be opened by a browser.\r\n\r\nThe PR makes the following improvement to the `extractor/common.py`:\r\n- adds SocialMediaPosting for author extraction in `InfoExtractor._json_ld()` (replaces PR #30513).\r\n\r\nResolves #29421, resolves #23627, resolves #23180, resolves #14156.\r\nResolves #30472, resolves #30474, resolves #30650, resolves #30681.\r\n\r\nCloses #29796 (superseded)\r\nCloses #30496 (superseded)\r\nCloses #30513 (superseded).",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 12,
        "changed_files": 3,
        "created_at": "2022-02-27T23:32:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x]  Except for the commits by @kikuyan, @Sipherdrakon who separately agreed to either this or the below, I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR supersedes #30149 which was orphaned when @kikuyan's account was deleted.\r\n\r\nIt improves extraction of the `mgid` value needed to access the MTV APIs.\r\n\r\nIt also fixes/improves utility functions to pass tests:\r\n* get the `timestamp` metadata field from the `<airDate>` element of the XML returned by the MTV feed API if the `<pubDate>` element was empty or missing;\r\n* make `timeconvert()` return `int` or `None` (not `float`). \r\n\r\nResolves #30139\r\nResolves #30678\r\nResolves #29814\r\n\r\nCloses #30149 (superseded).",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 113,
        "deletions": 48,
        "changed_files": 1,
        "created_at": "2022-02-27T14:26:13Z",
        "closed_at": "2023-01-22T06:34:15Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nIn the future 'mp3.zing.vn' will be disabled and upgraded to 'zingmp3.vn' with new feature and UI. And all the method to get data, and endpoint of API will be changed. This PR will update the function to get data from 'mp3.zing.vn' and 'zingmp3.vn'.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-27T13:16:18Z",
        "closed_at": "2022-02-27T13:20:13Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 53,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-02-26T15:58:38Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR containes these improvements:\r\n- extract category **tags**\r\n- extract **creator**\r\n- extract **uploader**, **uploader_id** and **uploader_url**\r\n- extract **actors** names (following the schema proposed by @dirkf in #30672)\r\n- extract **view_count**\r\n- extract **average_rating**\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2022-02-26T14:24:21Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR containes these improvements:\r\n- extract category **tags**\r\n- extract **creator**\r\n- extract **uploader**, **uploader_id** and **uploader_url**\r\n- extract **actors** names (following the schema proposed by @dirkf in #30672)\r\n- extract **view_count**",
        "comments": 13
    },
    {
        "merged": false,
        "additions": 55,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-02-26T14:10:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdds extractor for Filmarkivet.se as requested in https://github.com/yt-dlp/yt-dlp/issues/2885.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 94,
        "deletions": 68,
        "changed_files": 3,
        "created_at": "2022-02-25T19:39:38Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nYourPorn has been renamed to Sxyprn starting from 2016, so the change has been reflected to the extractor making some refactoring.\r\n\r\nThis PR containes also some improvements to the old extractor:\r\n- extract category **tags**\r\n- extract **creator**\r\n- extract **uploader**, **uploader_id** and **uploader_url**\r\n- extract **actors** names (following the schema proposed by @dirkf in #30672)\r\n- extract **view_count**",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 253,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2022-02-25T13:58:33Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/) except for the back-ported code, where\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd extractors for Dropout.tv, required because the generic extractor was no longer able to extract the videos from the site (Referer required).\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 90,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-02-25T00:31:01Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nNew extractor for a Ukrainian site that allows to watch TV shows for free.\r\n\r\nCloses #30618 (superseded).",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-02-24T13:24:09Z",
        "closed_at": "2022-02-24T18:26:59Z",
        "merged_at": "2022-02-24T18:26:58Z",
        "body": "- https://github.com/ytdl-org/youtube-dl/issues/30521\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nWithin the myspass site extractor, there is a short regex for checking for certain substrings in the video url.\r\n```groups()``` was called on ```re.search()``` without first ensuring there were any results to return a regex object. I've added a simple check for this.\r\n\r\nResolves #30521\r\nCloses #30522",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 152,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-02-24T12:18:08Z",
        "closed_at": "2022-02-24T18:27:58Z",
        "merged_at": "2022-02-24T18:27:57Z",
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdds support for CPAC (Canadian Parliament) through new extractors:\r\n* CPACIE: single episode\r\n* CPACPlaylistIE: playlists and searches.\r\n\r\nResolves #18148\r\nResolves #30668\r\n\r\nCloses #18265 (superseded)\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 226,
        "deletions": 113,
        "changed_files": 4,
        "created_at": "2022-02-23T03:11:59Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nhttps://github.com/yt-dlp/yt-dlp/issues/2794 reported that extraction failed for the page https://miami.cbslocal.com/2022/02/12/no-appetite-for-new-miami-restaurant-glorifying-castro-communism/. The same issue affects yt-dl as the relevant code is substantially identical.\r\n\r\nThese problems were identified:\r\n* the page uses Anvato embedding, which after Anvato was bought up by Google, now seems to be hosted at `mp.lura.live`, so the back-end Anvato extractor needed to be updated;\r\n* the page itself has a structure not supported by the `CBSLocalArticleIE` extractor, so the Anvato access key and video ID have to be extracted in a different way, from a script inside the `section#featured-media` element containing the required fields as the `accessKey` and `video` members of JSON that is passed to `AnvatoPlayer('p0').init()`;\r\n* default metadata could be extracted from the `ld+json` script element;\r\n* the extractor first tries to extract a URL suitable for the `SendtoNewsIE` extractor; although no page was found with this, that extractor also needed a rework.\r\n\r\nFor the `AnvatoIE` extractor, a similar pattern of requests to the original is needed, but with slightly different parameters and different API URLs.\r\n1. From `'https://access.mp.lura.live/anvacks/%s?apikey=%s' % (access_key, self._API_KEY)`, get JSON containing all the API URLs with replacement fields that have to be replaced with the video parameters.\r\n2. Use the `api.time` member to get the server time (UNIX epoch).\r\n3. Use the `api.video` member to get video metadata JSON using query parameters and POST data calculated, similar to the existing, from the video data URL and server time, which has the same format as the JSON expected from the old Anvato API.\r\n\r\nFor the SendtoNews extractor, the API returned JSON with media links in `configuration.sources.src` of a playlist item instead of `jwconfiguration`.\r\n\r\nThis PR implements the necessary changes to all three extractors.\r\n\r\nFor all extractors, tests had to be validated, replaced or fixed.\r\n\r\nA small fix from the pending PR #29698 is pulled in to make some tests work under Python 2.\r\n\r\nResolves #27699.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 13,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-02-22T19:33:33Z",
        "closed_at": "2022-03-25T14:47:27Z",
        "merged_at": "2022-03-25T14:47:26Z",
        "body": "## Please follow the guide below\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nIn issue #30656 it was found that the yt-dl command failed because:\r\n* the command used the option `--external-downloader aria2c`\r\n* aria2c options were specified with `--external-downloader-args`\r\n* yt-dl determined that aria2c was not able to download the specific target stream, and selected ffmpeg instead\r\n* the aria2c options were **nonetheless passed to ffmpeg**.\r\n\r\nAs there is no significant commonality of options between possible external downloaders, any options specified with `--external-downloader-args` should only be used with the specified `--external-downloader`.\r\n\r\nThis PR applies a two-stage safeguard to ensure this:\r\n* in `downloader/__init__.py`, the `external_downloader_args` of the `params` dict is nulled if it has an `external_downloader` that is rejected by `get_suitable_downloader()`;\r\n* in `YoutubeDL.py`, the call to `get_suitable_downloader()` is wrapped to generate a warning in that case, since the function itself has no instance context from which to do so.\r\n\r\nThe PR does not affect the case where the user prophesies that yt-dl will invoke an external downloader (ffmpeg) and passes options for it with `--external-downloader-args`.\r\n\r\nResolves #30656.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 147,
        "deletions": 63,
        "changed_files": 1,
        "created_at": "2022-02-20T21:21:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Fix tests, API return check\r\n\r\n## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nIn issue #30647, it was reported that yt-dl could not fetch the Folktinget (Danish Parliament) live stream. The generic extractor identified a Kaltura media item but extraction crashed with:\r\n```\r\nERROR: An extractor error has occurred. (caused by KeyError('dataUrl')); please report this issue on https://yt-dl.org/bug . Make sure you are using the latest version; see  https://yt-dl.org/update  on how to update. Be sure to call youtube-dl with the --verbose flag and include its complete output.\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/youtube_dl/extractor/common.py\", line 508, in extract\r\n    ie_result = self._real_extract(url)\r\n  File \"/usr/lib/python3/dist-packages/youtube_dl/extractor/kaltura.py\", line 283, in _real_extract\r\n    data_url = info['dataUrl']\r\nKeyError: 'dataUrl'\r\n```\r\nThe Kaltura media item (partner ID `2158211`, entry ID `1_24gfa7qq`) was correctly identified but the item was a `KalturaLiveStreamEntry`, with no `dataUrl`.\r\n\r\nThis PR adds support for Kaltura live streams by including  `liveStreamConfigurations` in the set of fields requested from the Kaltura API and parsing the result separately.\r\n\r\nThe tests are fixed/added so that all pass.\r\n\r\nThe logic that checks the values returned by the API has been improved.\r\n\r\nThe non-live media URLs are signed. It did not seem to be necessary for the live stream and the media URLs in the manifests are already signed.\r\n\r\nResolves #30647.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 116,
        "deletions": 36,
        "changed_files": 1,
        "created_at": "2022-02-19T16:16:08Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nIn issue https://github.com/yt-dlp/yt-dlp/issues/2764, it was reported that yt-dlp failed to download an episode of the Rookie (https://www.abc.com/shows/the-rookie/episode-guide/season-04/13-fight-or-flight), with an extractor error `KeyError('video')`. The code for the relevant extractor (`GoIE`) is basically the same in yt-dl and the same failure occurs.\r\n\r\nThe attempt to retrieve JSON from http://api.contents.watchabc.go.com/vp2/ws/contents/3000/videos/001/001/-1/-1/-1/VDKA26139487/-1/-1.json was found to have succeeded but the returned JSON had no video, as the error message indicated:\r\n```\r\n{'ver': '3000', 'build': '2170', 'device': '9024', 'brand': '13', 'xmlns': 'http://abc.go.com/vp2/ws/xmlns', 'count': '0', 'totalcount': '0'}\r\n```\r\nWith the API version path element changed from 3000 to 4000 the desired full result was returned.\r\n\r\nAdditionally several of the Disney sites targeted by the extractor are no longer operational (invalid domain, or redirect to another site's home or mini-site page).\r\n\r\nThis PR applies the consequent changes to the yt-dlp extractor and merges the two extractors as far as possible:\r\n* the API URL is updated to use 4000;\r\n* valid sites are tagged with attribute `'go': True` and the attribute is used to filter the sites when constructing the URL pattern, etc;\r\n* the yt-dlp URL pattern is used and extended;\r\n* some extraction regexes were relaxed or removed;\r\n* title extraction defaults to extraction from the `og:title` `<meta>` value;\r\n* valid tests are fixed and invalid tests flagged.\r\n\r\n\r\n\r\nFixes yt-dl version of https://github.com/yt-dlp/yt-dlp/issues/2764\r\nWould probably have resolved #29544.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 221,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-02-17T07:29:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n(Forgive me for not checking some of them)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n[yt-dlp build workflow](https://github.com/yt-dlp/yt-dlp/raw/master/.github/workflows/build.yml) and [devscripts/update-version.py](https://github.com/yt-dlp/yt-dlp/raw/master/devscripts/update-version.py) for latter.\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe goal for this PR is to give this repository a build workflow, enough to create a release except signatures (aka .sig).\r\nIt also reproduces how the `youtube-dl.exe` was built.\r\n\r\nThe files are reduced version to create a daily releases, so I need some fixes.\r\n\r\nBig thanks for [yt-dlp build workflow](https://github.com/yt-dlp/yt-dlp/raw/master/.github/workflows/build.yml) which this PR is based on. ~~(forgive me for being lazy while ESA is in session)~~ ESA ended. \r\n\r\nTODO\r\n- [x] Fix version manipulation (currently it appends `.114514`)\r\n- [x] Create changelogs (untested)\r\n- [x] Final test (https://github.com/Lesmiscore/youtube-dl/releases/tag/2022.02.20)\r\n\r\nKnown Notes:\r\n- Has to set a secret with key `PUSH_VERSION_COMMIT`. Value can be \"anything\".\r\n- To fully reproduce Releases as it were, you need the private key to sign binaries. That's not what I can have. Either dstftw or remitamine absolutely has it.\r\n\r\nCloses #31067.",
        "comments": 33
    },
    {
        "merged": false,
        "additions": 58,
        "deletions": 43,
        "changed_files": 1,
        "created_at": "2022-02-17T00:25:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe limited JS interpreter used to decode YT signature URLs was enhanced in PR #30188, back-porting yt-dlp PR 1437, and merged from PR #30184 in order to respond to the n parameter challenge introduced by YT.\r\n\r\nIn #30641, a specific embedded application of yt-dl identified significantly reduced extraction performance compared with previous versions and even the stopgap n-parameter response.\r\n\r\nA test application was profiled. After pulling out some constant regex expressions and changing a loop over assignment operators into a regex alternative match, the execution time (Py 2.7) went from 22s to 18s. The number of function calls was down by almost 1M, nearly 25% (application extracting 42 YT pages).\r\n\r\nThe regex optimisations apply to expressions that used f-strings in the yt-dlp version, which are said to be faster than formatting operations available to yt-dl; however, the loop optimisation, and one already made in the back-port, could equally apply to the yt-dlp version.\r\n\r\nCurrently constants used in the `JSInterpreter` class include both global and class vars:\r\n* globals: `_OPERATORS`, `_ASSIGN_OPERATORS`, `_NAME_RE`, `_MATCHING_PARENS`\r\n* class vars: `_EXPR_SPLIT_RE`, `_VARNAME_RE`, `_ARRAY_REF_RE`, `_FN_CALL_RE`, `_MEMBER_REF_RE`, `_FN_NAME_RE`, `_FN_DEF_RE`, `_ASSIGN_EXPR_RE`.\r\n\r\nAs to whether the constant regex expressions used for parsing should be class or global vars, probably the following heuristics should apply:\r\n* constants that are characteristics of the JS language should be _vars of the module or the class\r\n* constants that are specific to the internal workings of the JS interpreter should be __vars of the class.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-15T03:23:11Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nCloses #27643.\r\nThis patch adds a `x-csrf-token` header to the API requests when the `ct0` cookie is set, resolving the HTTP Error 403 when twitter URLs are supplied with a cookie file (`--cookies`).\r\n\r\n(Similar commit in https://github.com/yt-dlp/yt-dlp/pull/2772.)\r\n\r\nManually tested against a private twitter video with success.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 60,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-02-12T15:07:20Z",
        "closed_at": "2022-02-24T13:34:33Z",
        "merged_at": "2022-02-24T13:34:32Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis adds support for bigo.tv.\r\nSome of the code is from yt-dlp/yt-dlp#933 .\r\nCloses #18357\r\n\r\n<!-- wait this is the first extractor PR to youtube-dl!? -->\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 96,
        "deletions": 75,
        "changed_files": 1,
        "created_at": "2022-02-12T12:58:40Z",
        "closed_at": "2022-02-14T07:07:06Z",
        "merged_at": "2022-02-14T07:07:05Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis extractor originally started as https://github.com/ytdl-org/youtube-dl/pull/21774 PR that later evolved to https://github.com/yt-dlp/yt-dlp/pull/1616 which was merged to `yt-dlp`. This is attempt to backport it to `youtube-dl` with minimal changes as I suggested in https://github.com/ytdl-org/youtube-dl/pull/30462#issuecomment-1032477326. Tests are synchronized with PR https://github.com/yt-dlp/yt-dlp/pull/2747.\r\n\r\nFixes: #30160\r\nFixes: #29689\r\nFixes: #20900\r\nFixes: #22114",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 107,
        "deletions": 308,
        "changed_files": 6,
        "created_at": "2022-02-10T21:33:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\nkeezmovies, extremetube, mofosex are dead and tube8 extended keezmovies and was broken.\r\n",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-02-10T09:37:14Z",
        "closed_at": "2022-02-24T13:44:52Z",
        "merged_at": "2022-02-24T13:44:52Z",
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 3,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-02-09T15:43:01Z",
        "closed_at": "2022-02-14T17:54:31Z",
        "merged_at": "2022-02-14T17:54:31Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\n https://smotrim.ru/live/channel/2961\r\n\r\nIt fails due to returning quality as an empty string",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 41,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2022-02-09T05:20:23Z",
        "closed_at": "2022-02-11T12:43:26Z",
        "merged_at": "2022-02-11T12:43:26Z",
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR updates the `VideaIE` extractor in two parts:\r\n1. Revive PR #30418 from deleted user @kikuyan as below (line numbers from original).\r\n>Fix problems when running under Python 2.7.\r\nLine 94 resolves #30416.\r\nLine 124 is for `FutureWarning: The behavior of this method will change in future versions.  Use specific 'len(elem)' or 'elem is not None' test instead`.\r\n\r\n2. Back-port fixes and tests from yt-dlp PRs https://github.com/yt-dlp/yt-dlp/pull/463 and https://github.com/yt-dlp/yt-dlp/pull/1028 (thanks @nyuszika7h), with a change matching that at original l.124.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-08T20:57:56Z",
        "closed_at": "2022-08-28T13:53:25Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe Instagram server has been modified to send items JSONArray in the scope of offering high and low-quality video. It completely messes up with the old extractor. So hereby I have modified Instagram to work in such a situation. I have added a reels link for the test URL, I'm not sure this Instagram update affects users based on Geo-Location, so I'm not sure you will hit my code even with my test URL. Anyway here (in India) this problem is there and my code works fine. \r\n\r\n\r\nNOTE: If you still experiencing issues with the Instagram downloader, kindly try adding cookies before opening the issue here. Instagram servers are designed to prevent DOS attacks by anonymous API requests.\r\n\r\n\r\nWith my updated code and with cookies #30106 there is no issue I have faced, so kindly check it.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 41,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-02-08T10:19:44Z",
        "closed_at": "2022-06-06T17:50:15Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nNew extractor for a Ukrainian site that allows to watch TV shows for free.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 65,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-02-07T23:29:31Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR adds support for extraction from media pages with proceedings, meetings and events in the United Nations website.\r\n\r\nRequested in and resolves #30612.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 93,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-02-07T23:24:40Z",
        "closed_at": "2022-02-24T18:43:48Z",
        "merged_at": "2022-02-24T18:43:47Z",
        "body": "## Please follow the guide below\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR adds support for extraction from two page types in the alsace20.tv site.\r\n\r\nRequested in and resolves #30603. Thanks to OP @Shnoulle for additional testing documented there.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-07T17:07:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n\r\n### Purpose\r\n- [x] Improvement\r\n\r\n---\r\n\r\nJust getting a bold sketch out there\r\n\r\nI still want this to include:\r\n\r\n- Mention of the break after the temporary takedown from GitHub\r\n- Short explanation of the change in management\r\n- Reasons for still supporting 2.7\r\n\r\nUncertain of how much of this is acceptable to @dirkf and the other maintainers, so getting the ball rolling for now. =)",
        "comments": 10
    },
    {
        "merged": true,
        "additions": 146,
        "deletions": 193,
        "changed_files": 1,
        "created_at": "2022-02-04T12:40:24Z",
        "closed_at": "2022-02-04T15:49:13Z",
        "merged_at": "2022-02-04T15:49:12Z",
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR back-ports the Viki extractor from yt-dlp. Apart from necessary Py 2.7 and yt-dl API compatibility changes, some of the code was reorganised to match the existing extractor more closely.\r\n\r\nFixes #29224\r\nFixes #29459 \r\nFixes #29502\r\nFixes #29891\r\nFixes #30592\r\n\r\nPartially resolves #28756, resolves #29243, blaming the site instead of the extractor.\r\n\r\nExpected to resolve #29227, but account needed.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 14,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2022-02-04T12:32:13Z",
        "closed_at": "2022-02-04T14:28:51Z",
        "merged_at": "2022-02-04T14:28:51Z",
        "body": "## Please follow the guide below\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\n#30593 reported a TV2DK page apparently been produced using the Nuxt.js framework from which the required Kaltura ID wasn't being extracted.\r\n\r\nThis PR adds a second target pattern for the Kaltura ID in line with the pattern used for the Partner ID (PPPPPPP) to extract it (KKKKKKKKKK) from a string like this:\r\n```\r\n\"http:\\u002F\\u002Fcdnapi.kaltura.com\\u002Fp\\u002FPPPPPPP\\u002Fsp\\u002F204532100\\u002FplayManifest\\u002FentryId\\u002FKKKKKKKKKK\\u002Fformat\\u002Furl\\u002Fprotocol\\u002Fhttp\"\r\n```\r\nIt also adds logic to return a 1-item playlist as a single video, so getting rid of unwanted playlist-related diagnostics.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 26,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-02-04T11:03:53Z",
        "closed_at": "2022-02-14T15:13:08Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [x] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 7,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-02-01T23:36:23Z",
        "closed_at": "2022-02-02T14:25:04Z",
        "merged_at": "2022-02-02T14:25:03Z",
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nWhen JSInterp-based n-parameter decoding was implemented to replace the temporary fix from derived from VLC, the descrambling code acquired a `try` block that re-raised any exception during descrambling as an `ExtractorError`. This caused yt-dl to fail if the decoding failed, whereas the program could have continued with a warning and run the download at the throttled rate.\r\n\r\nThis PR changes the re-raised exception to a warning. The warning may be shown as many times as the n-parameter is found in the item's media URLs, but that should be an incentive to patch the program quickly.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 28,
        "deletions": 10,
        "changed_files": 2,
        "created_at": "2022-02-01T14:17:50Z",
        "closed_at": "2022-02-01T14:39:03Z",
        "merged_at": "2022-02-01T14:39:03Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nFix parsing of YT player code in line with https://github.com/yt-dlp/yt-dlp/commit/48416bc4a8f1d5ff07d5977659cb8ece7640dcd8.\r\n\r\nFixes #30752.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 17,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-31T00:10:16Z",
        "closed_at": "2022-02-01T14:40:20Z",
        "merged_at": "2022-02-01T14:40:20Z",
        "body": "## Please follow the guide below\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nSimple extension of  `YoutubeIE._VALID_URL` to cover new Shorts format `https://youtube.com/shorts/{id}`.\r\n\r\nResolves #30269\r\nResolves #30328\r\nResolves #30525\r\nResolves #30550\r\nResolves #30701 (etc)\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 14,
        "deletions": 1,
        "changed_files": 3,
        "created_at": "2022-01-30T01:15:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n- Continue downloading nevertheless the HTTP Forbidden403 error.\r\n- I created an exception Forbidden403 which will rise each time the error code returned by compat_urllib_error.HTTPError is equal 403 (compat_urllib_error.HTTPError.code == 403)\r\n- The error will be caught in function YoutubeDl.__handle_extraction_exception.wrapper.\r\n- Once error is caught, it will recurse in wrapper (YoutubeDl.__handle_extraction_exception.wrapper). This makes it attempt to download the webpage a second or more, times, at that same position in the playlist.\r\n\r\n[intended to fix] #29915 and many others",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 1,
        "changed_files": 4,
        "created_at": "2022-01-30T01:05:59Z",
        "closed_at": "2022-01-30T01:09:06Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n- Continue downloading nevertheless the HTTP Forbidden403 error.\r\n- I created an exception `Forbidden403` which will rise each time the error code returned by `compat_urllib_error,HTTPError` is equal 403 (`compat_urllib_error.HTTPError.code == 403`)\r\n- The error will be caught in function `YoutubeDl.__handle_extraction_exception.wrapper`.\r\n- Once error is caught, it will recurse in `wrapper` (`YoutubeDl.__handle_extraction_exception.wrapper`). This makes it attempt to download the webpage a second or more, times, at that same position in the playlist.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 586,
        "deletions": 0,
        "changed_files": 6,
        "created_at": "2022-01-30T00:08:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd cambro.tv, camwhores.tv and camhub.cc extractors. The tricky part was in reverse engineering of kt_player JS in order to re-create video URL reencoding algorithm.\r\n\r\nCloses #30587\r\nCloses #11009\r\n\r\nResearch approach with CDT debugger:\r\n1. Set a breakpoint at kt_start\r\n2. Execute in CDT console:\r\n    ```\r\n    flashvars._video_url = flashvars.video_url;\r\n    Object.defineProperty(flashvars, 'video_url', {\r\n        get: function () {\r\n            return flashvars._video_url;\r\n        },\r\n    \r\n        set: function (value) {\r\n            debugger;\r\n            flashvars._video_url = value;\r\n        }\r\n    });\r\n    ```\r\n3. The second break is where the url re-encoding happens.",
        "comments": 3
    },
    {
        "merged": true,
        "additions": 16,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2022-01-29T19:59:52Z",
        "closed_at": "2022-02-03T01:02:58Z",
        "merged_at": "2022-02-03T01:02:58Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nCode from https://github.com/yt-dlp/yt-dlp/commit/cd684175adbe663bbdf6a6c72d8b99b617b6ff2e\r\nCloses https://github.com/ytdl-org/youtube-dl/issues/29071",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 40,
        "deletions": 20,
        "changed_files": 1,
        "created_at": "2022-01-25T13:34:47Z",
        "closed_at": "2022-02-05T02:22:46Z",
        "merged_at": "2022-02-05T02:22:45Z",
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAccording to issue #30484, support for the WDR children's mini-site 'Die Sendung mit der Maus' was broken.\r\n\r\nThis PR restores that (and possibly other) functionality and fixes the extractor tests.\r\n\r\nA pseudo-URL wdr:id is supported, where id is the 6+ digit suffix in `mdb-nnnnnn`.\r\n\r\nThe obsolete `WDRMobileIE` is marked as not `_WORKING`.\r\n\r\nResolves #30484.\r\n\r\nAlso resolves/replaces these open issues/PRs:\r\n* closes #13178\r\n* closes #17989\r\n* closes #16448.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 178,
        "deletions": 47,
        "changed_files": 1,
        "created_at": "2022-01-22T01:37:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nthe problem is in the functions PlatziIE and PlatziCourseIE the functions to extract the information point to variables that no longer exist within the js\r\nfixed ytdl-org/youtube-dl#28536\r\nfixed ytdl-org/youtube-dl#26566\r\nfixed ytdl-org/youtube-dl#23786\r\nfixed ytdl-org/youtube-dl#22939\r\n\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2022-01-20T14:37:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nSkylineWebcams extractor was not working.\r\n\r\nHere are the list of changes to make it work:\r\n\r\n1. Updated the regex to extract the stream URL from the webpage. In the webpage source code there is just a variable in the form `livee.m3u8?a=<id>` (multiple `e` is correct). The usage of that link by appending it to `https://hd-auth.skylinewebcams.com/` do not work. The solution was to extract just the `?a=<id>` area and appending it to `https://hd-auth.skylinewebcams.com/live.m3u8`. The extractor works properly.\r\n\r\n2. Updated `_TEST` with a new `url`. The old one was disabled.\r\n\r\nResolves #28873.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-01-18T10:00:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd the [Free Software Foundation Europe](https://media.fsfe.org)'s Peertube instance to the list. It is using the new video URL format, so is currently not detected by youtube-dl (see #29475).",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 35,
        "deletions": 51,
        "changed_files": 1,
        "created_at": "2022-01-17T13:58:51Z",
        "closed_at": "2022-02-05T02:08:11Z",
        "merged_at": "2022-02-05T02:08:11Z",
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAccording to #30499, tele5.de is (now) just another Discovery Networks site and no longer uses JWPlatform.\r\n\r\nThis PR reimplements the extractor based on the DPlayIE extractor class, and fixes the tests.\r\n\r\nCertain shows give `ERROR: Missing deviceId in context`, which [appears to show DRM](https://github.com/yt-dlp/yt-dlp/issues/2364): see also #26186, https://github.com/yt-dlp/yt-dlp/issues/2303#issuecomment-1010225932. As this is a provider-level issue, it would better be handled in the DPlay module; for the moment the error is trapped and translated.\r\n\r\nResolves #30499\r\nResolves #30514\r\nResolves #30557.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 69,
        "deletions": 32,
        "changed_files": 1,
        "created_at": "2022-01-17T12:32:49Z",
        "closed_at": "2022-02-05T02:12:44Z",
        "merged_at": "2022-02-05T02:12:44Z",
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nIn issue #30512, a new URL format was found. This PR adds support for that format. It also fixes issues with the extractor classes in the module that caused tests with valid URLs to fail and marks invalid tests appropriately.\r\n\r\nResolves #26563\r\nResolves #30512.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 20,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2022-01-17T03:31:02Z",
        "closed_at": "2022-01-20T08:55:03Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd hidden `--load-webpage` option for debug purposes.\r\n\r\nSometimes it is convenient to be able to load webpage from a file which was saved with `--write-pages` or a command line tool like curl.\r\nMainly intended for sites like Facebook, where accesses in succession will be blocked, and only can be used when a single `self._download_webpage()` is sufficient.\r\n\r\nUsage: `youtube-dl [OPTIONS] URL --load-webpage FILE`\r\n\r\nIf specified FILE cannot be read, continued from URL.\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 169,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2022-01-17T02:33:58Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\n@Vangelis66 wrote on 10 Nov 2021:\r\n> ... **ERT** is the Greek National TV Broadcaster; what used to be `webtv.ert.gr`, where LiveTV and VOD was served from, has become **ERTFLIX** more than a year ago, now hosted on `www.ertflix.gr`, with an overhauled site design/embedded webplayer/underlying infrastructure/etc. ...\r\n> ...\r\n> Some additional info:\r\n> \r\n>     1. Expect some content to be reserved for Greek IPs, only.\r\n> \r\n>     2. At the time of this writing, no mandatory sign-in is enforced to watch VODs; subject to change.\r\n> \r\n>     3. The new web player infrastructure **supports EME/DRM**, but DRM is not currently enforced; subject to change, too...\r\n> ...\r\n\r\nThis PR implements an extractor for URLs like \r\n* https://www.ertflix.gr/vod/vod.nnnnnn-show-id\r\n* https://www.ertflix.gr/ser/ser.nnnnnn-series-id\r\n\r\nand also supports using the show-id directly\r\n* ertflix:show_id\r\n\r\nCurrently the tests all work from the UK but it's marked as draft so that ERT users can test it and/or suggest any other URL formats.\r\n\r\nThanks to @bserem and other contributors to #30070 for suggestions.\r\n\r\n[yt-dlp PR 2338](https://github.com/yt-dlp/yt-dlp/pull/2338) separately adds a new extractor `ErtGrWebtvEmbedIE` for embedded video extraction from ert.gr webtv, with URLs like\r\n* https://www.ert.gr/webtv/live-uni/vod/dt-uni-vod.php?query_params\r\n\r\nIn due course this could be back-ported as part of the same module.\r\n\r\nResolves #15960\r\nResolves #24336\r\nResolves #30070.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 24,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2022-01-16T20:40:55Z",
        "closed_at": "2022-02-05T02:14:36Z",
        "merged_at": "2022-02-05T02:14:35Z",
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe ZDF extractor looks for a place (`content['mainVideoContent']['http://zdf.de/rels/target']`) to find metadata, using the JSON returned from `api.zdf.de`.\r\n\r\nThe new format of this JSON is like this:\r\n```\r\n    'http://zdf.de/rels/target': {\r\n      'title': 'Der mit dem Wolf tanzt',\r\n      ...\r\n      'streams': {\r\n        'default': {\r\n          'label': 'Normal',\r\n          'extId': 'video_artede_097462-000-A',\r\n          'http://zdf.de/rels/streams/ptmd-template': '/content/documents/vod-artede-der-mit-dem-wolf-tanzt-100.json?profile=tmd'\r\n        }\r\n      }\r\n    },\r\n```\r\nThe PR changes the JSON processing to look in `['streams']['default']` as well as in the root of the JSON to find the items `http://zdf.de/rels/streams/ptmd` and `http://zdf.de/rels/streams/ptmd-template`.\r\n\r\nResolves #29893\r\nResolves #30509.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2022-01-15T23:07:43Z",
        "closed_at": "2022-02-24T18:26:59Z",
        "merged_at": null,
        "body": "- https://github.com/ytdl-org/youtube-dl/issues/30521\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nWithin the myspass site extractor, there is a short regex for checking for certain substrings in the video url.\r\n```groups()``` was called on ```re.search()``` without first ensuring there were any results to return a regex object. I've added a simple check for this.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 153,
        "deletions": 47,
        "changed_files": 3,
        "created_at": "2022-01-15T20:32:42Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [x] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nI updated the obsolete JOJ extractor.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 158,
        "deletions": 41,
        "changed_files": 2,
        "created_at": "2022-01-15T20:30:01Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nI updated the obsolete Markiza extractor\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 69,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2022-01-15T20:23:07Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nI updated the obsolete RTVS extractor. Fix Television and Radio.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-15T06:19:24Z",
        "closed_at": "2022-01-20T08:55:03Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd `SocialMediaPosting` type to `_json_ld()`.\r\n\r\nIntend to use by facebook extractor for now, and not to cause any side effects to others, extract metadata from this type only when `expected_type` is given.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 46,
        "deletions": 6,
        "changed_files": 1,
        "created_at": "2022-01-13T21:14:28Z",
        "closed_at": "2022-02-05T02:16:53Z",
        "merged_at": "2022-02-05T02:16:53Z",
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nurplay.se moved its React-ish hydration JSON from an element tagged with `data-react-class` to a typical Next.js structure in a `<script>` with `id` `__NEXT_DATA__`.\r\n\r\nThis PR makes this the initial page format for extraction, with the previous format as fall-back: fortunately the JSON is much the same\r\n\r\nWe can also extract an `age_limit` and subtitles that were not previously found by the extractor.\r\n\r\nResolves #30504.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-01-11T06:39:47Z",
        "closed_at": "2022-01-20T08:55:03Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nResolves #28665 if setfattr is version 2.4.48 or later (released on 2017-09-15).\r\n\r\nI think it's enough to just add `--raw` practically. However, some LTS (ex. debian stretch, ubuntu bionic) still seem to have version 2.4.47, so made it conditional.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2022-01-11T00:59:18Z",
        "closed_at": "2022-01-12T01:22:51Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n_Maybe later_\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nResolves # 30474 (though already closed)",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-09T05:30:02Z",
        "closed_at": "2022-01-20T08:55:06Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n_Not done specifically. Consider to be satisfied by the Description below._\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nResolves #30208.\r\n\r\n`unpad` after decrypt seems to be needed from the start of supporting AES-128 in hlsnative downloader.\r\n\r\nIn ref 1. `draft-pantos-http-live-streaming-17#section-4.3.2.4` (now `RFC 8216`) in `hls.py`, it is described as: \r\nAn encryption method of AES-128 signals that Media Segments are completely encrypted using the Advanced Encryption Standard [AES_128] with a 128-bit key, Cipher Block Chaining, and **PKCS7 padding** [RFC5652]. (bold is by me)\r\n\r\nIt's hard to believe that not doing `unpad` didn't cause problems other than #30208 for a long time, but it seems to have been actually processed well by ffmpeg (when merge or fixup).\r\n\r\nTo confirm this, I made files from encrypted hls streams by `youtube-dl ... --hls-prefer-native --fixup never` without and with `unpad` (version 2021.12.17 and 2021.12.17 plus this PR), then did `ffmpeg -loglevel trace -i INPUT -c copy -bitexact OUTPUT` for both.\r\nThe OUTPUT files were identical, and in the log of without `unpad` INPUT, there were extra messages like `[mpegts @ 0x7f886d803c00] Probe: 8192, score: 44, dvhs_score: -3, fec_score: -1` almost as many as the number of fragments, indicating skipping the paddings I guess.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 140,
        "deletions": 30,
        "changed_files": 2,
        "created_at": "2022-01-07T13:00:58Z",
        "closed_at": "2023-08-05T14:23:34Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\nExcept: this PR subsumes PR #30224 whose author also affirmed this.\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nTT switched (possibly partially) its framework from NextJS to Sigi, and the persisted state JSON sent in the page changed as a result. Instead of a `<script>` element with `id` `__NEXT_DATA__`, we get one with `id` `sigi_persisted_state` and JSON with a slightly different structure.\r\n\r\nThis PR deals with both types of page format, based on PR #30224 and [this patch](https://github.com/ytdl-org/youtube-dl/issues/30251#issuecomment-976947005) which gets more metadata.\r\n\r\nAlso, extraction could fail with a timeout (Error 60 in Windows, SSLError('The read operation timed out',) in Linux) or connection reset (Error 54 in Windows) due to some weird blocking by whatever fronts TikTok's pages (Akamai, apparenty). In order to download the page for parsing, some cookie has to be sent and a way to get it is to make a previous request to the site. The extractor fetched https://www.tiktok.com/ before doing anything else. In yt-dlp, the code fetches the webpage itself twice, commenting that you get 403 otherwise. This PR copies that tactic but instead of fetching the whole page (`GET` request) it just sends a `HEAD` request; if a page is actually returned, rather than an error with a `Set-Cookie` header, it doesn't actually have to be downloaded.\r\n\r\nProbably resolves #28741\r\nResolves #30251\r\nResolves #30432\r\nResolves #30439\r\nResolves #30445\r\nResolves #30454\r\nResolves #30470.\r\n\r\nFinally the non-working `TikTokUserIE` has been resurrected for accessing all the videos of a specific user.\r\n\r\nResolves #30174.\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 86,
        "deletions": 78,
        "changed_files": 1,
        "created_at": "2022-01-03T19:52:55Z",
        "closed_at": "2022-02-19T00:57:27Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nI updated the obsolete Stream.cz extractor. Separated code into classes, so support for playlists, etc. can be easily added. This is my first serious pull request on serious project, so any feedback is appreciated and welcome.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2022-01-03T18:13:47Z",
        "closed_at": "2022-01-29T18:57:57Z",
        "merged_at": null,
        "body": "Added this format names for automatic library management purposes.\r\nyear:  is the release year on Rai\r\nedit_year:  is the first original release year of movie or series.\r\ninfo usable for \"*Arr\"s and other similar collection managers\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdded this two format names for automatic library management purposes.\r\nyear: i think is the release year on Rai/Italy\r\nedit_year:  is the first original release year of movie or series which is info usable for automatic importing into \"*Arr\"s and other similar collection managers\r\n\r\n#30451",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2022-01-02T14:41:25Z",
        "closed_at": "2023-09-08T16:51:23Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nCurrently, youtube-dl only downloads automatically-generated subtitles from videos that also have ASR subtitles (\u201cautomatic speech recognition\u201d, so subtitles automatically generated from speech). This is, however, a bug. There are videos (here's [an example](https://www.youtube.com/watch?v=6XiFntEQXmA)) that have autogenerated subtitles, but no ASR subtitles.\r\n\r\nI've attempted to make the minimal possible change to fix this issue, and validate it using the tests. I can confirm that this change fixes the bug for me, and that it does not cause any subtitle tests to fail.\r\n\r\nHowever, I am not familiar with the youtube-dl codebase, and I cannot say for sure that my change will not affect some other aspect of the code, so I'm very open to suggestions.\r\n\r\nI think some version of this change should happen, because currently, attempting to download autogenerated subtitles on non-ASR videos simply silently fails without printing anything, which is very frustrating and confusing to the user.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 275,
        "deletions": 54,
        "changed_files": 3,
        "created_at": "2022-01-02T00:18:52Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\nThis PR also includes existing code derived from yt-dlp for which the following applies:\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR brings the Mediaset extractor up-to-date, so that it should support all the URLs supported by yt-dlp, including playlists, based on PR https://github.com/yt-dlp/yt-dlp/pull/2158. All thanks to @nixxo for this. As there is no core DRM processing in yt-dl, the extractor tries to ascribe a lack of formats to DRM if there was no geo-blocking error and any API call returned \"None of the available releases match the specified AssetType, ProtectionScheme, and/or Format preferences\".\r\n\r\nThere is also an extractor for related video clips, in case any should be offered without DRM.\r\n\r\nThe playlist extractor revealed a defect in the `OnDemandPagedList` class, which is also fixed.\r\n\r\nExpected, as far as possible, to:\r\n* resolve #28318\r\n* resolve #30411\r\n* possibly #27439\r\n* possibly #29218\r\n* possibly #29998\r\n* possibly #30419.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 339,
        "deletions": 16,
        "changed_files": 1,
        "created_at": "2021-12-29T04:03:02Z",
        "closed_at": "2021-12-29T05:15:33Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nIncrease download speed from from less than 100kbps to 30 to 40mbps.\r\nFixed #30398 ",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-12-26T01:50:30Z",
        "closed_at": null,
        "merged_at": null,
        "body": "This change prevents system damage when a multi-call binary is installed such as \"/usr/local/bin/youtube-dl -> /usr/local/bin/firejail\". This fixes issue #30427. (Yes, a user really reported this problem and had to ask for help in solving it.)\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [n/a] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [n/a] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [n/a] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [n/a] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis pull request fixes the installation instructions (based on either curl or wget). If a system uses a multi-call binary with symlinks, such as \"/usr/local/bin/youtube-dl -> /usr/local/bin/firejail\", the multi-call binary will be overwritten when a user follows the installation instructions. Fortunately a simple change to the installation command solves that issue. I tested and found that both wget and curl overwrite a symlink referent, and outputting to a temp directory and installing with `sudo mv` solves the issue.\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-12-23T02:56:33Z",
        "closed_at": "2022-01-20T08:55:07Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nFix problems when running under Python 2.7.\r\nLine 94 resolves #30416.\r\nLine 124 is for `FutureWarning: The behavior of this method will change in future versions.  Use specific 'len(elem)' or 'elem is not None' test instead`.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-12-22T08:36:58Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Resolves #25555, #26631, #27543, #28330\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site) (Not applicable)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them. Passes flake8\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED) The existing test suite for gfycat seems to be broken anyways\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n\r\nPerform the GET request of the URL and follow the redirects, perform the check of the final hostname with the urlparse. Then we will adjust the API endpoint appropriately.\r\n\r\n- Resolves #25555\r\n- Resolves #26631\r\n- Resolves #27543\r\n- Resolves #28330\r\n\r\nThank you for taking the time to consideration my pull request.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-12-21T14:42:04Z",
        "closed_at": "2022-01-29T19:39:50Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-12-19T19:02:00Z",
        "closed_at": "2022-09-23T18:59:56Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe TOR project have deprecated the v2 onion links and Facebook have switched to v3 onion.\r\n\r\nRef:\r\nhttps://blog.torproject.org/v2-deprecation-timeline/\r\n\r\nhttps://blog.torproject.org/new-release-tor-browser-11-0/\r\n\r\nhttps://www.facebook.com/onion-service\r\n\r\nhttps://en.wikipedia.org/wiki/Facebook_onion_address",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 66,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2021-12-17T12:46:52Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nUK Parliament sessions are no longer being served through Kaltura but instead by a CDN according to metadata from RedBee Media.\r\n\r\nThis PR implements the necessary changes. Apparently no combined AV media streams are offered (though the website allows you to schedule a single file download, captcha-protected, notified by email).",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-12-17T03:26:19Z",
        "closed_at": "2022-01-20T08:55:08Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAny browsers are not using Accept-Charset http header, and using it seems to lead to fingerprinting.\r\n\r\nRefs.\r\nhttps://datatracker.ietf.org/doc/html/rfc7231#section-5.3.3\r\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Charset\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 28,
        "deletions": 25,
        "changed_files": 2,
        "created_at": "2021-12-17T02:11:34Z",
        "closed_at": "2022-01-29T19:39:00Z",
        "merged_at": null,
        "body": "This simple addition of '0' fixes the 404 issues many are having with downloading videos from xvideos.com. Tested on linux, windows, and macOS.\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nA small change in the way the web server is handling URLs caused the parser to interpret valid URLs as 404. Adding zero to the end of URL parser string to allow the porn to continue flowing freely! This enables the new format on xvideos.com website to work as intended with youtube-dl. \r\n\r\nTested with Linux, Windows, macOS. Specifically for baseline testing, [debug] Python version 3.9.9 (CPython) - macOS-12.0.1-x86_64-i386-64bit\r\n\r\nThanks\r\n\r\n",
        "comments": 8
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2021-12-15T19:32:32Z",
        "closed_at": "2022-01-30T01:17:11Z",
        "merged_at": null,
        "body": "I took a swing and it seems to be working with mp3. I'm kind of stunned haha. Anywho...\r\n1.) updated youtube.py to check for 2 or 3 chars in regex\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2021-12-15T04:47:37Z",
        "closed_at": "2021-12-16T18:42:18Z",
        "merged_at": "2021-12-16T18:42:17Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n- This is NOT my code. This code is copied from PSlava's merged fix to the same issue (Link to issue: #30363) observed in the yt-dlp repository using the same regexes for signature parsing. Link to analogous yt-dlp bugfix: yt-dlp/yt-dlp#641. (This also doubles as a qualifier that this code is released under Unlicense by the original author)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nRelevant issue: #30363 \r\nReferring to the discussion in the comments of the aforementioned PR on yt-dlp, along with what is apparent upon scrutinizing Youtube's base.js (https://www.youtube.com/s/player/850eb2bc/player_ias.vflset/en_US/base.js), function signatures are not always 2 characters. An adjustment is made to the regex here to reflect this. I don't know when Youtube changed this, but I have had ~>80% of requests failing for the last 24 hours approx., due to a failure in parsing the function in youtube_dl/extractor/youtube.py::_parse_sig_js. Applying this fix to my local branch has resolved the ExtractorError exceptions and everything works fine now.\r\n\nResolves #30363\nResolves #30364\nResolves #30367\nResolves #30369.\nResolves #30370\nResolves #30372.",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-12-12T01:34:53Z",
        "closed_at": "2022-01-20T08:55:09Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nFrom its name, users may expect that `--get-thumbnail` gets thumbnail, but it actually displays the thumbnail URL. It is peculiar among other `--get-...` option names.\r\nBetter to be renamed to `--get-thumbnail-url`.\r\n\r\n`--get-thumbnail` will continue to be recognized by python optparse and work.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 8,
        "changed_files": 2,
        "created_at": "2021-12-11T02:32:39Z",
        "closed_at": "2022-01-20T08:55:17Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\n- It is too strict to raise error when `--embed-thumbnail` is used to non-target files. And it is not balanced with subtitles handling (no errors for subtitles now).\r\nResolves #9289, resolves #10500\r\n- If users don't get the results they directed or expected, users should be strongly notified by warning, not info level message. In this sense, modify to warn `--embed-sub` and `--embed-thumbnail` when there's nothing to embed.\r\n\r\nAlso modified message text to be more consistent, added \".\" since many warning messages end with it.\r\n\r\n_Part of the code for FFmpegEmbedSubtitlePP conflicts with PR #29807._",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2021-12-09T01:38:42Z",
        "closed_at": "2022-02-05T02:32:45Z",
        "merged_at": "2022-02-05T02:32:45Z",
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nPages from podcast.apple.com have begun to be served with a different structure, where the podcast metadata is found in JSON in an element with `id` `shoebox-media-api-cache-amp-podcasts` rather than `shoebox-ember-data-store`, and the JSON has a slightly different structure.\r\n\r\nThis PR adds support for the new format. On the assumption that this format will eventually be used for all podcast pages, the new format is tried first, and then the old format if that doesn't succeed. The block that handles the old format can be removed once it is determined that the old format is no longer served.\r\n\r\n* Resolves #30216\r\n* Resolves #30250\r\n* Resolves #30413.\r\nAdditionally, the format information returned by the extractor comprised just the media URL, which broke a configuration with, eg, `-f bestaudio` as default.\r\n\r\n* Resolves #29095.\r\n\r\nAdditionally, the default page image is extracted as `thumbnail`.\r\n\r\n* Resolves #29197. ",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2021-12-08T01:49:29Z",
        "closed_at": "2022-01-20T08:55:17Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nModify messages for subtitles and thumbnails.\r\n- balance `--list-subs` and `--list-thumbnails`\r\n- report warning for `--write-sub` and `--write-thumbnail` when no subtitles or thumbnail to write, like `--write-description / -annotations`\r\ncurrently no feedback, which confuses users",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 198,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-12-07T10:18:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nCloses #30236, qv.",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 590,
        "deletions": 198,
        "changed_files": 6,
        "created_at": "2021-12-07T01:53:28Z",
        "closed_at": "2022-02-05T02:47:22Z",
        "merged_at": "2022-02-05T02:47:21Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe  Niconico extractor has been broken following site changes, and also served files that couldn't be downloaded in a single yt-dl run because the server cancelled the download in the absence of a regular heartbeat POST.\r\n\r\nThe corresponding module in yt-dlp has been actively maintained and additional search extractors have been implemented, as well as adding support for the heartbeat function for downloads.\r\n\r\nThis PR adapts the current version of the yt-dlp module to yt-dl conventions, in particular replacing `f'strings'` and `yield from`.\r\n\r\nThe playlist limit in download tests from yt-dlp is implemented.\r\n\r\nAdditionally, if the optional `threading` module is available, the heartbeat function is enabled for DMC-type downloads. This requires a small change to `downloader/__init__.py`\r\n\r\nCredit goes to @CXwudi, @animelover1984 and @pukkandan for recent changes on the yt-dlp version, and see also [below](https://github.com/ytdl-org/youtube-dl/pull/30329#issuecomment-988158605) for other contributors.\r\n\r\nThe PR should fix these issues where extraction failed:\r\n* resolve #29225\r\n* resolve #29974\r\n* resolve #30003\r\n* resolve #30316\r\n* resolve #30395.\r\n\r\nThe PR should fix these issues where downloading needed a heartbeat:\r\n* resolve #14582\r\n* resolve #19261\r\n* resolve #24093.",
        "comments": 11
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 5,
        "changed_files": 1,
        "created_at": "2021-12-06T03:57:06Z",
        "closed_at": "2022-01-20T08:55:18Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nI accidentally passed the wrong filename with `--load-info-json` and got youtube-dl crash.\r\nThis was of course my fault, but I thought it would be better to catch errors that are easy to cause: file not found, cannot be read (IOError), not a json (ValueError), not a valid info json (ExtractorError), etc.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 16,
        "changed_files": 2,
        "created_at": "2021-12-03T16:38:05Z",
        "closed_at": "2022-04-04T21:33:04Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe current command  could potentially read as `youtube-dl URL https://youtube.com/something` should be a valid usage when it actually needs to be `youtube-dl https://youtube.com/something`.\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-12-02T13:15:01Z",
        "closed_at": "2022-01-20T08:55:19Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nModify help text for --external-downloader to meet style with other options. (--recode-video or --convert-subs)\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-12-02T10:07:20Z",
        "closed_at": "2023-01-06T09:49:59Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd movie (URL) support for Ruutu",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 24,
        "deletions": 5,
        "changed_files": 4,
        "created_at": "2021-12-02T09:23:55Z",
        "closed_at": "2022-01-20T08:55:19Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd checks for external downloader:\r\n1. if unknown/unsupported downloader is specified, raise explicit exception instead of now causing KeyError, like:\r\n```\r\n  File \"/usr/local/bin/youtube-dl/youtube_dl/YoutubeDL.py\", line 1910, in dl\r\n  File \"/usr/local/bin/youtube-dl/youtube_dl/downloader/__init__.py\", line 42, in get_suitable_downloader\r\n  File \"/usr/local/bin/youtube-dl/youtube_dl/downloader/external.py\", line 371, in get_external_downloader\r\nKeyError: 'DOWNLOADER'\r\n```\r\n2. if downloader is not found in PATH, raise exception instead of ignoring/skipping silently,\r\nalso distinguish avconv from ffmpeg to not use ffmpeg if avconv is specified (or vice versa)\r\n3. if downloader will not be used for protocol, show warning when continuing (related to #29813)\r\n\r\n2nd condition above may be strict, but I think it should have been done.\r\n3rd condition continues to work, as the user should not be made strongly aware of the protocol.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 101,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-12-01T21:41:53Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nCreated two extractors for the Chinese video sharing portal [Douyin (\u6296\u97f3)](https://www.douyin.com/):\r\n\r\n- One for downloading a video from its viewing page, e.g.\r\n    https://www.douyin.com/video/6989098563519270181\r\n- Another one for downloading all videos from a Douyin user page, e.g.\r\n    https://www.douyin.com/user/MS4wLjABAAAAP5Q7Z-SwleIzAACYIu-LrwGbEZzN2dc5PT3hGNSTkSM\r\n\r\nThe video extractor is superior to the one proposed in PR https://github.com/ytdl-org/youtube-dl/pull/29525 as it does not depend on JSON data embedded into the video's webpage but directly utilizes Douyin's REST API instead. Furthermore, as stated above this PR also provides an extractor for downloading videos from user pages.\r\n\r\nCloses #29525.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2021-12-01T05:22:34Z",
        "closed_at": "2022-01-20T08:55:27Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nModify fixup warning message to show filename instead of video-id to match #30270 and #30297.\r\nFrom <code><i>VIDEO-ID</i>: Non-uniform pixel ratio (<i>%s</i>)</code> to <code>Non-uniform pixel ratio (<i>%f</i>) in \"<i>FILENAME</i>\"</code>.\r\nAnd pixel ratio format (from like `1.7777777777777777` to `1.777778`) to match `FFmpegFixupStretchedPP`.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 19,
        "deletions": 11,
        "changed_files": 3,
        "created_at": "2021-12-01T05:12:46Z",
        "closed_at": "2022-01-20T08:55:28Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\n_This PR can be applied on its own but is meaningless without #30279._\r\n\r\nAdd fixup for MPEG-DASH video-only files as I wrote in #30279.\r\n\r\nRenamed `FFmpegFixupM4aPP` to `FFmpegFixupMpegDashPP` to fit its purpose, and modified the warning message to show filename instead of video-id to match #30270.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-11-30T12:52:41Z",
        "closed_at": "2021-12-10T06:39:15Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nDuring sanitization, the path may break (For example, the title \"? abc\" will become \" abc\", breaking the path).\r\nThe issue can be fixed by calling `.strip()` when sanitizing.",
        "comments": 8
    },
    {
        "merged": true,
        "additions": 43,
        "deletions": 12,
        "changed_files": 1,
        "created_at": "2021-11-30T06:31:13Z",
        "closed_at": "2022-02-05T02:51:47Z",
        "merged_at": "2022-02-05T02:51:46Z",
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nA couple of changes to keep up with BBC [React-ified pages](https://charlespeters.net/writing/server-side-react) where the static HTML contains a script assignment of the initial page structure as JSON to `window.__INITIAL_DATA__`:\r\n\r\n* support stringified JSON in `__INITIAL_DATA__` (thanks https://github.com/ytdl-org/youtube-dl/issues/29926#issuecomment-952978220)\r\n* support [media entries in `['data']['content']['model']['blocks']`](https://github.com/ytdl-org/youtube-dl/issues/29926#issuecomment-915517254) as well as `['data']['blocks']`\r\n* also add initial work-around for randomly 403-ed m3u8 links\r\n* also fix test for `bbcthreeConfig` pages.\r\n\r\nResolves #29926\r\nResolves #30291",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 202,
        "deletions": 12,
        "changed_files": 5,
        "created_at": "2021-11-27T06:54:38Z",
        "closed_at": "2022-01-20T08:55:30Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd `range` and `mediaRange` attributes support of these types to dash mpd parser:\r\n- segment URLs and range (resolves #30235)\r\n- no segment URLs but range (can supersede #14648)\r\n\r\nAlso modified the existing code a bit at `# Segment URLs with no SegmentTimeline` in `extractor/common.py` for clarity, IMO.\r\n\r\n**Regarding the `ftyp` box**\r\n\r\nThere seem to be some mpds that do not include `ftyp` box in the initialization segment because the range doesn't start from 0. As a result, the downloaded files do not have the box either. Such mpds are, for example, https://kinescope.io/200615537/master.mpd in #30235 and `url_and_range.mpd` made with Bento4 I added for test to this PR.\r\n`url_and_range.mpd` has `<Initialization sourceURL=\"video-frag.mp4\" range=\"36-746\"/>`. If the source video file starts like\r\n```\r\n000000  0000 0024 6674 7970 6973 6f6d 0000 0200    ...$ftypisom....\r\n000010  6973 6f6d 6973 6f32 6176 6331 6d70 3431    isomiso2avc1mp41\r\n000020  6973 6f35 0000 02c7 6d6f 6f76 0000 006c    iso5....moov...l\r\n000030  6d76 6864 0000 0000 ddc7 5e78 ddc7 5e78    mvhd......^x..^x\r\n```\r\nthen the downloaded file will start like\r\n```\r\n000000  0000 02c7 6d6f 6f76 0000 006c 6d76 6864    ....moov...lmvhd\r\n000010  0000 0000 ddc7 5e78 ddc7 5e78 0000 03e8    ......^x..^x....\r\n```\r\nThis usually won't be a problem nor emerge because youtube-dl runs ffmpeg to merge video and audio, and the file will be adjusted. And for `m4a_dash` audio-only stream, fixup will be done.\r\n\r\nWhile the video-only file seems to play fine with, say, VLC and QuickTime Player, I'm thinking of making another PR to run ffmpeg for fixup.\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-26T16:12:23Z",
        "closed_at": "2022-02-05T02:24:53Z",
        "merged_at": "2022-02-05T02:24:51Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [X] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [X] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [X] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [X] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [X] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [X] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [X] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 21
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2021-11-26T02:27:32Z",
        "closed_at": "2021-12-01T02:57:32Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\nDone execution tests limited to this modification.\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nModify other fixup warning messages to show filename instead of video-id to match #30270.\r\n- From <code><i>VIDEO-ID</i>: Non-uniform pixel ratio (<i>%s</i>)</code> to <code>Non-uniform pixel ratio (<i>%f</i>) in \"<i>FILENAME</i>\"</code>.\r\nAnd pixel ratio format (from like `1.7777777777777777` to `1.777778`) to match `FFmpegFixupStretchedPP`.\r\n- From <code><i>VIDEO-ID</i>: writing DASH m4a</code> to <code>Writing DASH m4a in \"<i>FILENAME</i>\"</code>.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 42,
        "deletions": 20,
        "changed_files": 2,
        "created_at": "2021-11-25T04:26:37Z",
        "closed_at": "2022-01-20T08:55:27Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThere are problems in post-processing for HLS:\r\n- If native HLS downloader is used for a video-only stream, `FFmpegFixupM3u8PP` does nothing and file is left MPEG-TS. (#26410)\r\n- If native HLS downloader is selected but the download is delegated to ffmpeg, file will be MP4 by default. However, if audio is AAC, `FFmpegFixupM3u8PP` copies MP4 to MP4 unnecessarily.\r\n- Merge fails when audio is MPEG-TS and AAC and ffmpeg is old. (#9913)\r\n\r\nSo I made the following modifications:\r\n- For single HLS stream, test file format and convert MPEG-TS to MP4 in `FFmpegFixupM3u8PP`. (resolves #26410 and the second above)\r\n- For streams to be merged, test audio stream and fix AAC in `FFmpegMergerPP`. (resolves #9913 essentially, resolves #10644, can supersede #10645)\r\n- Added to get file format in `get_audio_codec()`, thus renamed.\r\n\r\nAnd I slightly modified messages to fit the change of purpose:\r\n- From <code><i>VIDEO-ID</i>: malformed AAC bitstream detected</code> to <code>Container might be left MPEG-TS in \"<i>FILENAME</i>\"</code> in `YoutubeDL.py`.\r\nAlso modified to show filename instead of video-id; I think it would be helpful for users to know filename rather than video-id.\r\n- From <code>Fixing malformed AAC bitstream in \"<i>FILENAME</i>\"</code> to <code>Correcting container in \"<i>FILENAME</i>\"</code> in `FFmpegFixupM3u8PP`.",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 298,
        "deletions": 82,
        "changed_files": 1,
        "created_at": "2021-11-24T19:11:45Z",
        "closed_at": "2023-02-03T21:10:09Z",
        "merged_at": "2023-02-03T21:10:09Z",
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/), except where\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (`yt-dlp/yt_dlp/extractor/itv.py`)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR back-ports the [ITV extractor from yt-dlp](https://github.com/yt-dlp/yt-dlp/pull/1776), so incorporating all the latest fixes and facilitating future joint updates.\r\n\r\nThe PR from #28955 is included for the record as an an interim commit.\r\n\r\nIn addition the following changes are applied:\r\n* work-around for ITV using `:` as a decimal point in duration value\r\n* set default UA for extraction as `Mozilla/5.0` to avoid read time-out in extraction\r\n* ditto for download to avoid 403\r\n* detect and handle 404 error for `Episode not found` and `We're really sorry`.\r\n\r\nResolves #25796.\r\nResolves #27582.\r\nResolves #28906.\r\nResolves #29620.\r\nResolves #30265.\r\nResolves #30578.\r\nResolves #30994.\r\n\r\nCloses #28955.\r\n\r\nNow updated for ITVX instead/as well.\r\n\r\nResolves #31363.\r\n\r\nAlso updated ITV BTCC, handles news articles.\r\n\r\nSupersedes, closes #25254.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-21T13:38:08Z",
        "closed_at": null,
        "merged_at": null,
        "body": "minute changes\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 115,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-11-15T08:22:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis adds support for **podchaser.com**, a podcast aggregator. All the podcast info is grabbed from JSON embedded in the HTML. If multiple episodes are found, it returns a playlist--otherwise, just the one result.\r\n\r\nA couple notes:\r\n\r\n - Currently, the json is written in such a way that the only way I know to parse it is to parse it twice. Maybe it's double encoded? I tried running it through `_escape_html`, but that wasn't working, so right now if _parse_json returns a string, it parses again so it returns a dict.\r\n ```\r\n        while isinstance(data, compat_str):\r\n            data = self._parse_json(data, audio_id)\r\n``` \r\n\r\n - When I tested this on Python 2.7, it threw a `DownloadError: ERROR: Unable to download webpage: HTTP Error 403: Forbidden`. I'll keep working on fixing that, but until then, I thought I'd throw this up in case someone has a simple answer for that\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 97,
        "deletions": 18,
        "changed_files": 2,
        "created_at": "2021-11-12T07:27:41Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\n#### JSON-LD extraction improvements\r\n\r\n  * Support top-level @graph expressing implicit default graph\r\n    * Wrap the control flow block in a function, which is called recursively upon such a structure\r\n    * Per [W3C JSON-LD v1.1 \u00a74.9 (non-normative ref)](https://www.w3.org/TR/json-ld11/#named-graphs):\r\n\r\n> When a JSON-LD document's top-level structure is a map that contains no other keys than `@graph` and optionally `@context` (properties that are not mapped to an IRI or a keyword are ignored), `@graph` is  considered to express the otherwise implicit default graph.\r\n\r\n  * Extend `TestInfoExtractor.test_search_json_ld_realworld` to cover said syntax (structure)\r\n    * Refactor tests in a list of 3-tuples: test html string, expected dict, keyword args for `InfoExtractor._search_json_ld`\r\n    * Add new test case for said syntax (structure)\r\n  * Tweak description extraction from nodes with type `Article` or `NewsArticle`: extract description from `articleBody` and fall back to `description` field",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 201,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2021-11-11T15:42:22Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis patch adds support for video extraction from ant1news.gr, a popular Greek content provider and established TV network.\r\n\r\n* Add new IEs\r\n  * Ant1NewsGrBaseIE: Base IE class\r\n  * Ant1NewsGrWatchIE: Extract videos from TV VOD pages\r\n  * Ant1NewsGrArticleIE: Extract videos from news articles\r\n  * Ant1NewsGrEmbedIE: Extract iframe-embeddable ant1news.gr videos\r\n* NB: There is a different platform at vod.antenna.gr, which is not covered here\r\n* The Generic extractor can also be used to extract videos from news article pages (through `Ant1NewsGrEmbed._extract_urls`), however a specific IE is used to extract JSON-LD `@type='NewsArticle'` metadata\r\n  * Yet that does not work currently, as `InfoExtractor._json_ld` does not support `@graph` nesting (see #30229 for a fix)\r\n* Ant1NewsGrArticleIE defers to Ant1NewsGrEmbedIE, either as a playlist or a single video\r\n* Ant1NewsGrWatchIE and Ant1NewsGrEmbedIE query an API endpoint to extract metadata, get the respective stream/source URLs and detect video formats\r\n  * The endpoint HTTP path varies per IE\r\n  * Ant1NewsGrEmbedIE first resolves any redirects for its' own URL, to derive the proper base URL for the API query",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 214,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2021-11-11T13:45:47Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis patch adds support for video extraction from megatv.com, a popular Greek content provider and (recently re-)established TV network.\r\n\r\n* Add new IEs\r\n  * MegaTVComBaseIE: Base IE class\r\n  * MegaTVComIE: Extract from TV VOD pages and news articles, i.e. all sorts of pages showing videos on megatv.com\r\n  * MegaTVComEmbedIE: Extract iframe-embeddable megatv.com videos\r\n* When video_id is not matched in the URL, namely for news articles, extract it (article_id) from a particular element on the web page\r\n* Derive metadata and sources directly from the web page, from data attributes of the player placeholder element and other commonly used elements\r\n* Let MegaTVComEmbedIE defer to MegaTVComIE for extraction, as the metadata on the embeddable page are some times slightly different, for the same video",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 4,
        "changed_files": 1,
        "created_at": "2021-11-10T22:49:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nTikTok now (since a few days ago?) uses a different format for metadata when the user is logged in (I used a cookie file exported from Chrome).\r\n\r\nThis patch just adds a parser for the new format: if the original fails, it tries the modified format. It's basically a copy/pasted/adapted version of the original few lines of a parser, nothing big.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 290,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2021-11-08T11:56:46Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis patch adds support for Glomex videos, both embeddable and on the (demo) site video.glomex.com. Glomex operates a media exchange platform, which powers their video marketplace service, based on revenue sharing. This is used quite a lot in large parts of Europe, primarily by digital news outlets, which embed in their assets video clips provided by various content providers (for example TV channels), tied with advertising. \r\n\r\n* Add new IEs\r\n  * GlomexBaseIE: Base IE class\r\n  * GlomexIE: Extract videos from video.glomex.com (by deferring to glomex:embed)\r\n    * The integrationId parameter is apparently common across video.glomex.com, but we have to hard-code it as it is very hard to extract otherwise: it is deeply hidden in a script asset (a webpack component, which is typically regularly updated)\r\n  * GlomexEmbedIE: Extract Glomex videos by matching the player URL\r\n* Query the API to extract metadata, detect video formats and get the respective (JWT protected) stream/source URLs\r\n* The API query may return one or more videos: the latter case is treated as a playlist\r\n  * As this is otherwise identically handled, a separate IE was not deemed necessary\r\n  * However title and description fields are not set for playlist results\r\n    * They do not exist in the parent object; obtaining them from the first entry is not indicative for the playlist content\r\n    * As the playlist order is not always stable (this is true at least for related videos playlists), it makes writing test cases impossible\r\n* Let GenericIE detect embeds by matching all three integration methods:\r\n  * HTML: glomex-player tag or data attributes\r\n  * Javascript: naive parsing of inline scripts for string constants assigned to integration parameters\r\n  * Iframe: src attribute GlomexEmbedIE._VALID_URL\r\n* Let GlomexIE and the former embed detection pass the origin URL to GlomexEmbedIE by smuggling it in the player URL, as this is an expected parameter in API requests\r\n* Add test cases for both single videos and two playlist flavors",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 6,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-06T00:43:57Z",
        "closed_at": "2022-01-20T08:55:37Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nResolves #30204",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 135,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-11-05T11:37:40Z",
        "closed_at": "2022-05-06T17:39:11Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis pull request adds support for extracting videos hosted on [vimp.oth-regensburg.de/video/...](https://vimp.oth-regensburg.de). Vimp is the main hosting platform for lectures and videos from the [OTH Regensburg](https://oth-regensburg.de) in Germany.  \r\n\r\nCurrently only basic fields are supported with more to be implemented soon. An extractor for videos hosted on `vimp.oth-regensburg.de/m/...` will also be added soon.\r\n\r\nPersonal TODO:\r\n\r\n- [ ] Possible to-extract-able informations\r\n    - [ ] `uploader`\r\n    - [ ] `license`\r\n    - [ ] `creator`\r\n    - [ ] `channel`\r\n    - [ ] `channel_id`\r\n    - [ ] `channel_url`\r\n    - [ ] `view_count`\r\n    - [ ] `like_count`\r\n    - [ ] `categories`\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 324,
        "deletions": 42,
        "changed_files": 3,
        "created_at": "2021-11-05T03:07:17Z",
        "closed_at": "2021-11-05T05:01:24Z",
        "merged_at": null,
        "body": "- Fix test_youtube_playlist_noplaylist\n- Remove obsolete test_youtube_course\n- Fix test_youtube_mix\n- Remove obsolete non-working test_youtube_toptracks\n- Fix test_youtube_flat_playlist_extraction\n- Unthrottle download speed by responding to \"n\" parameter challenge\n- Add compat_map/filter and use the former\n\n## Please follow the guide below\n\n- You will be asked some questions, please read them **carefully** and answer honestly\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\n- Use *Preview* tab to see how your *pull request* will actually look like\n\n---\n\n### Before submitting a *pull request* make sure you have:\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\n\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\n\n### What is the purpose of your *pull request*?\n- [ ] Bug fix\n- [ ] Improvement\n- [ ] New extractor\n- [ ] New feature\n\n---\n\n### Description of your *pull request* and other information\n\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 49,
        "deletions": 2,
        "changed_files": 7,
        "created_at": "2021-11-05T00:19:37Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n  - No tests seem present for any similar options. I guess a test could be added to check whether the resulting ffmpeg command is as expected.\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdds a new argument `--ffmpeg-out-override` and gives these arguments to FFmpeg in place of `-c copy` (which is currently always used) when present. The similar more general option `external-downloader-args` is not suited for this use case.\r\nThis would enable transcoding and compressing videos without first saving them as \"copied\" from the source.\r\nAn example use case would look like this: `youtube-dl --ffmpeg-out-override \"-c:v libx265 -crf 31\" some_source`. I've found it very useful with sources that normally yield very large video files.\r\nThe current name of the argument is questionable, maybe it should be changed before merging.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-11-04T23:55:40Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n  - The nature of the platform doesn't really allow for tests that are similar to those on the other extractors, because the stream pins are supposed to be private and all streams are short-lived.\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd support for https://livestream.kuleuven.be, which is a lecture streaming platform used at KU Leuven university.\r\nI am not sure whether this kind of service is within the scope of what youtube-dl is willing to support, but it would be a welcome addition for KU Leuven students.\r\nThe title is always set to 'kul-stream' because these streams do not have a title, I'm not sure whether this is appropriate.\r\nAlso see the note above on why I didn't add tests. I don't think tests that rely on an always and publicly available stream are possible here, because there is no such stream on this platform.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-11-04T23:37:19Z",
        "closed_at": "2021-11-04T23:52:44Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n  - The nature of the platform doesn't really allow for tests that are similar to those on the other extractors, because the stream pins are supposed to be private and all streams are short-lived.\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd support for https://livestream.kuleuven.be, which is a lecture streaming platform used at KU Leuven university.\r\nI am not sure whether this kind of service is within the scope of what youtube-dl is willing to support, but it would be a welcome addition for KU Leuven students.\r\nThe title is always set to 'kul-stream' because these streams do not have a title, I'm not sure whether this is appropriate.\r\nAlso see the note above on why I didn't add tests. I don't think tests that rely on an always and publicly available stream are possible here, because there is no such stream on this platform.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-11-04T13:35:41Z",
        "closed_at": "2021-11-05T16:45:39Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExtractor for ceskatelevize.cz was broken because the playlist URL changed. This fix contains only one char addition.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 537,
        "deletions": 131,
        "changed_files": 4,
        "created_at": "2021-11-02T13:06:20Z",
        "closed_at": "2022-02-16T23:37:41Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAs part of the PR \"[[youtube] Fix throttling by decrypting n-sig](https://github.com/yt-dlp/yt-dlp/pull/1437)\", @pukkandan implemented a more capable version of the JS interpreter module. Although it's not needed for the [equivalent fix in yt-dl](https://github.com/ytdl-org/youtube-dl/pull/30184), having the same level of capability in yt-dl would facilitate other back-ports, eg in case a more complex YouTube challenge should have to be decoded in future. It might also suffice for certain other extractors where some JS trickery needs to be emulated.\r\n\r\nThis PR back-ports the `jsinterp.py` from https://github.com/yt-dlp/yt-dlp/pull/1437 with changes to make it run in 2.6 <= Python < 3.6 as well.\r\n* `yield from` becomes nested iterator\r\n* `nonlocal` faked by a dummy namespace class\r\n* f'...' replaced by various older format syntaxes\r\n* replace `collections.abc` with `compat_collections_abc` added to `compat.py`.\r\n\r\nAll the tests in the unchanged back-ported `test/test_jsinterp.py` pass.\r\n\r\nThe `diff` below applies to the initial commit 7109df0.\r\n<details>\r\n<summary><code>diff yt_dlp/jsinterp.py youtube_dl/jsinterp.py</code></summary>\r\n\r\n<pre><code>\r\n--- yt_dlp/jsinterp.py\r\n+++ youtube_dl/jsinterp.py\r\n@@ -1,4 +1,5 @@\r\n-from collections.abc import MutableMapping\r\n+from __future__ import unicode_literals\r\n+\r\n import json\r\n import operator\r\n import re\r\n@@ -7,7 +8,16 @@\r\n     ExtractorError,\r\n     remove_quotes,\r\n )\r\n+from .compat import (\r\n+    compat_collections_abc\r\n+)\r\n+MutableMapping = compat_collections_abc.MutableMapping\r\n\r\n+\r\n+class Nonlocal:\r\n+    pass\r\n+\r\n+\r\n _OPERATORS = [\r\n     ('|', operator.or_),\r\n     ('^', operator.xor),\r\n@@ -60,13 +70,14 @@\r\n \r\n     def __iter__(self):\r\n         for scope in self.stack:\r\n-            yield from scope\r\n+            for scope_item in iter(scope):\r\n+                yield scope_item\r\n \r\n     def __len__(self, key):\r\n         return len(iter(self))\r\n \r\n     def __repr__(self):\r\n-        return f'LocalNameSpace{self.stack}'\r\n+        return 'LocalNameSpace%s' % (self.stack, )\r\n \r\n \r\n class JSInterpreter(object):\r\n@@ -80,12 +91,12 @@\r\n \r\n     def _named_object(self, namespace, obj):\r\n         self.__named_object_counter += 1\r\n-        name = f'__yt_dlp_jsinterp_obj{self.__named_object_counter}'\r\n+        name = '__youtube_dl_jsinterp_obj%s' % (self.__named_object_counter, )\r\n         namespace[name] = obj\r\n         return name\r\n \r\n     @staticmethod\r\n-    def _seperate(expr, delim=',', max_split=None):\r\n+    def _separate(expr, delim=',', max_split=None):\r\n         if not expr:\r\n             return\r\n         parens = {'(': 0, '{': 0, '[': 0, ']': 0, '}': 0, ')': 0}\r\n@@ -111,17 +122,17 @@\r\n         yield expr[start:]\r\n \r\n     @staticmethod\r\n-    def _seperate_at_paren(expr, delim):\r\n-        seperated = list(JSInterpreter._seperate(expr, delim, 1))\r\n-        if len(seperated) < 2:\r\n-            raise ExtractorError(f'No terminating paren {delim} in {expr}')\r\n-        return seperated[0][1:].strip(), seperated[1].strip()\r\n+    def _separate_at_paren(expr, delim):\r\n+        separated = list(JSInterpreter._separate(expr, delim, 1))\r\n+        if len(separated) < 2:\r\n+            raise ExtractorError('No terminating paren {0} in {1}'.format(delim, expr))\r\n+        return separated[0][1:].strip(), separated[1].strip()\r\n \r\n     def interpret_statement(self, stmt, local_vars, allow_recursion=100):\r\n         if allow_recursion < 0:\r\n             raise ExtractorError('Recursion limit reached')\r\n \r\n-        sub_statements = list(self._seperate(stmt, ';'))\r\n+        sub_statements = list(self._separate(stmt, ';'))\r\n         stmt = (sub_statements or ['']).pop()\r\n         for sub_stmt in sub_statements:\r\n             ret, should_abort = self.interpret_statement(sub_stmt, local_vars, allow_recursion - 1)\r\n@@ -151,7 +162,7 @@\r\n             return None\r\n \r\n         if expr.startswith('{'):\r\n-            inner, outer = self._seperate_at_paren(expr, '}')\r\n+            inner, outer = self._separate_at_paren(expr, '}')\r\n             inner, should_abort = self.interpret_statement(inner, local_vars, allow_recursion - 1)\r\n             if not outer or should_abort:\r\n                 return inner\r\n@@ -159,7 +170,7 @@\r\n                 expr = json.dumps(inner) + outer\r\n \r\n         if expr.startswith('('):\r\n-            inner, outer = self._seperate_at_paren(expr, ')')\r\n+            inner, outer = self._separate_at_paren(expr, ')')\r\n             inner = self.interpret_expression(inner, local_vars, allow_recursion)\r\n             if not outer:\r\n                 return inner\r\n@@ -167,16 +178,16 @@\r\n                 expr = json.dumps(inner) + outer\r\n \r\n         if expr.startswith('['):\r\n-            inner, outer = self._seperate_at_paren(expr, ']')\r\n+            inner, outer = self._separate_at_paren(expr, ']')\r\n             name = self._named_object(local_vars, [\r\n                 self.interpret_expression(item, local_vars, allow_recursion)\r\n-                for item in self._seperate(inner)])\r\n+                for item in self._separate(inner)])\r\n             expr = name + outer\r\n \r\n         m = re.match(r'try\\s*', expr)\r\n         if m:\r\n             if expr[m.end()] == '{':\r\n-                try_expr, expr = self._seperate_at_paren(expr[m.end():], '}')\r\n+                try_expr, expr = self._separate_at_paren(expr[m.end():], '}')\r\n             else:\r\n                 try_expr, expr = expr[m.end() - 1:], ''\r\n             ret, should_abort = self.interpret_statement(try_expr, local_vars, allow_recursion - 1)\r\n@@ -184,29 +195,32 @@\r\n                 return ret\r\n             return self.interpret_statement(expr, local_vars, allow_recursion - 1)[0]\r\n \r\n-        m = re.match(r'catch\\s*\\(', expr)\r\n-        if m:\r\n+        m = re.match(r'(?:(?P<catch>catch)|(?P<for>for)|(?P<switch>switch))\\s*\\(', expr)\r\n+        md = m.groupdict() if m else {}\r\n+        if md.get('catch'):\r\n             # We ignore the catch block\r\n-            _, expr = self._seperate_at_paren(expr, '}')\r\n+            _, expr = self._separate_at_paren(expr, '}')\r\n             return self.interpret_statement(expr, local_vars, allow_recursion - 1)[0]\r\n \r\n-        m = re.match(r'for\\s*\\(', expr)\r\n-        if m:\r\n-            constructor, remaining = self._seperate_at_paren(expr[m.end() - 1:], ')')\r\n+        elif md.get('for'):\r\n+            def raise_constructor_error(c):\r\n+                raise ExtractorError(\r\n+                    'Premature return in the initialization of a for loop in {0!r}'.format(c))\r\n+\r\n+            constructor, remaining = self._separate_at_paren(expr[m.end() - 1:], ')')\r\n             if remaining.startswith('{'):\r\n-                body, expr = self._seperate_at_paren(remaining, '}')\r\n+                body, expr = self._separate_at_paren(remaining, '}')\r\n             else:\r\n                 m = re.match(r'switch\\s*\\(', remaining)  # FIXME\r\n                 if m:\r\n-                    switch_val, remaining = self._seperate_at_paren(remaining[m.end() - 1:], ')')\r\n-                    body, expr = self._seperate_at_paren(remaining, '}')\r\n+                    switch_val, remaining = self._separate_at_paren(remaining[m.end() - 1:], ')')\r\n+                    body, expr = self._separate_at_paren(remaining, '}')\r\n                     body = 'switch(%s){%s}' % (switch_val, body)\r\n                 else:\r\n                     body, expr = remaining, ''\r\n-            start, cndn, increment = self._seperate(constructor, ';')\r\n+            start, cndn, increment = self._separate(constructor, ';')\r\n             if self.interpret_statement(start, local_vars, allow_recursion - 1)[1]:\r\n-                raise ExtractorError(\r\n-                    f'Premature return in the initialization of a for loop in {constructor!r}')\r\n+                raise_constructor_error(constructor)\r\n             while True:\r\n                 if not self.interpret_expression(cndn, local_vars, allow_recursion):\r\n                     break\r\n@@ -219,22 +233,20 @@\r\n                 except JS_Continue:\r\n                     pass\r\n                 if self.interpret_statement(increment, local_vars, allow_recursion - 1)[1]:\r\n-                    raise ExtractorError(\r\n-                        f'Premature return in the initialization of a for loop in {constructor!r}')\r\n+                    raise_constructor_error(constructor)\r\n             return self.interpret_statement(expr, local_vars, allow_recursion - 1)[0]\r\n \r\n-        m = re.match(r'switch\\s*\\(', expr)\r\n-        if m:\r\n-            switch_val, remaining = self._seperate_at_paren(expr[m.end() - 1:], ')')\r\n+        elif md.get('switch'):\r\n+            switch_val, remaining = self._separate_at_paren(expr[m.end() - 1:], ')')\r\n             switch_val = self.interpret_expression(switch_val, local_vars, allow_recursion)\r\n-            body, expr = self._seperate_at_paren(remaining, '}')\r\n+            body, expr = self._separate_at_paren(remaining, '}')\r\n             body, default = body.split('default:') if 'default:' in body else (body, None)\r\n             items = body.split('case ')[1:]\r\n             if default:\r\n-                items.append(f'default:{default}')\r\n+                items.append('default:%s' % (default, ))\r\n             matched = False\r\n             for item in items:\r\n-                case, stmt = [i.strip() for i in self._seperate(item, ':', 1)]\r\n+                case, stmt = [i.strip() for i in self._separate(item, ':', 1)]\r\n                 matched = matched or case == 'default' or switch_val == self.interpret_expression(case, local_vars, allow_recursion)\r\n                 if matched:\r\n                     try:\r\n@@ -245,15 +257,15 @@\r\n                         break\r\n             return self.interpret_statement(expr, local_vars, allow_recursion - 1)[0]\r\n \r\n-        # Comma seperated statements\r\n-        sub_expressions = list(self._seperate(expr))\r\n+        # Comma separated statements\r\n+        sub_expressions = list(self._separate(expr))\r\n         expr = sub_expressions.pop().strip() if sub_expressions else ''\r\n         for sub_expr in sub_expressions:\r\n             self.interpret_expression(sub_expr, local_vars, allow_recursion)\r\n \r\n-        for m in re.finditer(rf'''(?x)\r\n-                (?P<pre_sign>\\+\\+|--)(?P<var1>{_NAME_RE})|\r\n-                (?P<var2>{_NAME_RE})(?P<post_sign>\\+\\+|--)''', expr):\r\n+        for m in re.finditer(r'''(?x)\r\n+                (?P<pre_sign>\\+\\+|--)(?P<var1>%(_NAME_RE)s)|\r\n+                (?P<var2>%(_NAME_RE)s)(?P<post_sign>\\+\\+|--)''' % globals(), expr):\r\n             var = m.group('var1') or m.group('var2')\r\n             start, end = m.span()\r\n             sign = m.group('pre_sign') or m.group('post_sign')\r\n@@ -276,7 +288,7 @@\r\n                 lvar = local_vars[m.group('out')]\r\n                 idx = self.interpret_expression(m.group('index'), local_vars, allow_recursion)\r\n                 if not isinstance(idx, int):\r\n-                    raise ExtractorError(f'List indices must be integers: {idx}')\r\n+                    raise ExtractorError('List indices must be integers: %s' % (idx, ))\r\n                 cur = lvar[idx]\r\n                 val = opfunc(cur, right_val)\r\n                 lvar[idx] = val\r\n@@ -313,20 +325,23 @@\r\n             idx = self.interpret_expression(m.group('idx'), local_vars, allow_recursion)\r\n             return val[idx]\r\n \r\n+        def raise_expr_error(where, op, exp):\r\n+            raise ExtractorError('Premature {0} return of {1} in {2!r}'.format(where, op, exp))\r\n+\r\n         for op, opfunc in _OPERATORS:\r\n-            seperated = list(self._seperate(expr, op))\r\n-            if len(seperated) < 2:\r\n+            separated = list(self._separate(expr, op))\r\n+            if len(separated) < 2:\r\n                 continue\r\n-            right_val = seperated.pop()\r\n-            left_val = op.join(seperated)\r\n+            right_val = separated.pop()\r\n+            left_val = op.join(separated)\r\n             left_val, should_abort = self.interpret_statement(\r\n                 left_val, local_vars, allow_recursion - 1)\r\n             if should_abort:\r\n-                raise ExtractorError(f'Premature left-side return of {op} in {expr!r}')\r\n+                raise_expr_error('left-side', op, expr)\r\n             right_val, should_abort = self.interpret_statement(\r\n                 right_val, local_vars, allow_recursion - 1)\r\n             if should_abort:\r\n-                raise ExtractorError(f'Premature right-side return of {op} in {expr!r}')\r\n+                raise_expr_error('right-side', op, expr)\r\n             return opfunc(left_val or 0, right_val)\r\n \r\n         m = re.match(\r\n@@ -334,20 +349,23 @@\r\n             expr)\r\n         if m:\r\n             variable = m.group('var')\r\n-            member = remove_quotes(m.group('member') or m.group('member2'))\r\n+            nl = Nonlocal()\r\n+\r\n+            nl.member = remove_quotes(m.group('member') or m.group('member2'))\r\n             arg_str = expr[m.end():]\r\n             if arg_str.startswith('('):\r\n-                arg_str, remaining = self._seperate_at_paren(arg_str, ')')\r\n+                arg_str, remaining = self._separate_at_paren(arg_str, ')')\r\n             else:\r\n                 arg_str, remaining = None, arg_str\r\n \r\n             def assertion(cndn, msg):\r\n                 \"\"\" assert, but without risk of getting optimized out \"\"\"\r\n                 if not cndn:\r\n-                    raise ExtractorError(f'{member} {msg}: {expr}')\r\n+                    raise ExtractorError('{0} {1}: {2}'.format(nl.member, msg, expr))\r\n \r\n             def eval_method():\r\n-                nonlocal member\r\n+                # nonlocal member\r\n+                member = nl.member\r\n                 if variable == 'String':\r\n                     obj = str\r\n                 elif variable in local_vars:\r\n@@ -366,13 +384,13 @@\r\n                 # Function call\r\n                 argvals = [\r\n                     self.interpret_expression(v, local_vars, allow_recursion)\r\n-                    for v in self._seperate(arg_str)]\r\n+                    for v in self._separate(arg_str)]\r\n \r\n                 if obj == str:\r\n                     if member == 'fromCharCode':\r\n                         assertion(argvals, 'takes one or more arguments')\r\n                         return ''.join(map(chr, argvals))\r\n-                    raise ExtractorError(f'Unsupported string method {member}')\r\n+                    raise ExtractorError('Unsupported string method %s' % (member, ))\r\n \r\n                 if member == 'split':\r\n                     assertion(argvals, 'takes one or more arguments')\r\n@@ -435,6 +453,7 @@\r\n \r\n                 if isinstance(obj, list):\r\n                     member = int(member)\r\n+                    nl.member = member\r\n                 return obj[member](argvals)\r\n \r\n             if remaining:\r\n@@ -449,7 +468,7 @@\r\n             fname = m.group('func')\r\n             argvals = tuple([\r\n                 int(v) if v.isdigit() else local_vars[v]\r\n-                for v in self._seperate(m.group('args'))])\r\n+                for v in self._separate(m.group('args'))])\r\n             if fname in local_vars:\r\n                 return local_vars[fname](argvals)\r\n             elif fname not in self._functions:\r\n@@ -486,12 +505,11 @@\r\n         \"\"\" @returns argnames, code \"\"\"\r\n         func_m = re.search(\r\n             r'''(?x)\r\n-                (?:function\\s+%s|[{;,]\\s*%s\\s*=\\s*function|var\\s+%s\\s*=\\s*function)\\s*\r\n+                (?:function\\s+%(f_n)s|[{;,]\\s*%(f_n)s\\s*=\\s*function|var\\s+%(f_n)s\\s*=\\s*function)\\s*\r\n                 \\((?P<args>[^)]*)\\)\\s*\r\n-                (?P<code>\\{(?:(?!};)[^\"]|\"([^\"]|\\\\\")*\")+\\})''' % (\r\n-                re.escape(funcname), re.escape(funcname), re.escape(funcname)),\r\n+                (?P<code>\\{(?:(?!};)[^\"]|\"([^\"]|\\\\\")*\")+\\})''' % {'f_n': re.escape(funcname), },\r\n             self.code)\r\n-        code, _ = self._seperate_at_paren(func_m.group('code'), '}')  # refine the match\r\n+        code, _ = self._separate_at_paren(func_m.group('code'), '}')  # refine the match\r\n         if func_m is None:\r\n             raise ExtractorError('Could not find JS function %r' % funcname)\r\n         return func_m.group('args').split(','), code\r\n@@ -506,7 +524,7 @@\r\n             if mobj is None:\r\n                 break\r\n             start, body_start = mobj.span()\r\n-            body, remaining = self._seperate_at_paren(code[body_start - 1:], '}')\r\n+            body, remaining = self._separate_at_paren(code[body_start - 1:], '}')\r\n             name = self._named_object(\r\n                 local_vars,\r\n                 self.extract_function_from_code(\r\n@@ -523,12 +541,10 @@\r\n         local_vars = global_stack.pop(0)\r\n \r\n         def resf(args, **kwargs):\r\n-            local_vars.update({\r\n-                **dict(zip(argnames, args)),\r\n-                **kwargs\r\n-            })\r\n+            local_vars.update(dict(zip(argnames, args)))\r\n+            local_vars.update(kwargs)\r\n             var_stack = LocalNameSpace(local_vars, *global_stack)\r\n-            for stmt in self._seperate(code.replace('\\n', ''), ';'):\r\n+            for stmt in self._separate(code.replace('\\n', ''), ';'):\r\n                 ret, should_abort = self.interpret_statement(stmt, var_stack)\r\n                 if should_abort:\r\n                     break\r\n</code></pre>\r\n</details>",
        "comments": 10
    },
    {
        "merged": false,
        "additions": 711,
        "deletions": 192,
        "changed_files": 14,
        "created_at": "2021-11-01T06:00:57Z",
        "closed_at": "2022-01-30T23:38:04Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nSince summer 2021, YouTube has started serving media URLs with a query parameter such as `...&n=SXiXBH-xzrjeioPN&...`. This now appears to be the default behaviour. Unless the value of this parameter is transformed according to an algorithm delivered in the site player JS, the download speed for the URL is throttled to ~50kB/s.\r\n\r\nSolutions for this include:\r\n* implementing a more complete JS interpreter, eg based on PR #11272;\r\n* using an external JS interpreter (PhantomJS, now unmaintained, is used by some extractors);\r\n* spoofing the Android or iOS client to acquire unthrottled links, as successfully implemented in [yt-dlp](https://github.com/yt-dlp/yt-dlp/commit/c888ffb95ab0ab4f4cd1d6c93eda014f80479551).\r\n\r\nThis PR now uses the first approach taking the enhanced JSInterpreter module from [yt-dlp PR #1437](https://github.com/yt-dlp/yt-dlp/pull/1437), as back-ported in PR #30188.\r\n\r\nThe PR originally took a different approach derived from the successful solution used in VLC's `youtube.lua` (also implemented differently in [pytube](https://github.com/tfdahlin/pytube/blob/bb890af3b271a616bbe1d08abc8c65bac9266b0a/pytube/cipher.py), relying on the fact that the challenge algorithm is served in a mini-language within the minified player JS and therefore the specific algorithm could be extracted and executed by interpreting the mini-language without actually running the JS itself. This version had the benefit of offering a single file update, but was unstable against regular site changes and raised licensing issues as discussed below.\r\n\r\nThe PR also includes fixes for `test/test_youtube_lists.py`. This download test failed in Python 2 and contained tests that failed or were redundant because of obsolete assumptions about the `youtube.py` extractor or YouTube services.\r\n\r\nAnyone who wants a single file update to fix the 2021.06.06 (or 2012.12.17) release pending merge/release of the PR should use [this version of extractor/youtube.py](https://github.com/ytdl-org/youtube-dl/raw/3b9b1cd4314f9d44630a2a65abfff8abab454887/youtube_dl/extractor/youtube.py) which is a drop-in replacement. This also includes the URL signature fix from #30366 and 2021.12.17.\r\n\r\nResolves #29326 (original analysis of the \"n\" parameter challenge)\r\nResolves #29790\r\nResolves #30004\r\nResolves #30024\r\nResolves #30052\r\nResolves #30088\r\nResolves #30097 (original reference to `n_descramble()`)\r\nResolves #30102\r\nResolves #30109\r\nResolves #30119\r\nResolves #30125\r\nResolves #30128\r\nResolves #30162\r\nResolves #30173\r\nResolves #30186\r\nResolves #30192\r\nResolves #30221\r\nResolves #30239\r\nResolves #30539\r\nResolves #30552.\r\n\r\n",
        "comments": 48
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-29T06:31:21Z",
        "closed_at": "2022-02-19T16:30:32Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nClose #30126\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 27,
        "deletions": 2,
        "changed_files": 2,
        "created_at": "2021-10-27T17:12:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nFixes ytdl-org/youtube-dl#30150 where description was not included in YouTube playlist-type playlists when the parameter `-J` was used on (if you used `-J` on tab-type playlist, it would show the description of the YouTube channel) \r\n\r\nHere are two example outputs from the command:\r\ncommand:\r\n```\r\nyoutube-dl --flat-playlist -J PLZHQObOWTQDMXMi3bUMThGdYqos36X_lA\r\n```\r\n\r\n\r\nbefore change:\r\n```\r\n{\r\n  \"_type\": \"playlist\",\r\n  \"entries\": [\r\n    {\r\n      \"_type\": \"url\",\r\n      \"ie_key\": \"Youtube\",\r\n      \"id\": \"GNcFjFmqEc8\",\r\n      \"url\": \"GNcFjFmqEc8\",\r\n      \"title\": \"But why is a sphere's surface area four times its shadow?\",\r\n      \"description\": null,\r\n      \"duration\": 1021,\r\n      \"view_count\": null,\r\n      \"uploader\": \"3Blue1Brown\"\r\n    },\r\n    {\r\n      \"_type\": \"url\",\r\n      \"ie_key\": \"Youtube\",\r\n      \"id\": \"OkmNXy7er84\",\r\n      \"url\": \"OkmNXy7er84\",\r\n      \"title\": \"The hardest problem on the hardest test\",\r\n      \"description\": null,\r\n      \"duration\": 675,\r\n      \"view_count\": null,\r\n      \"uploader\": \"3Blue1Brown\"\r\n    },\r\n    {\r\n      \"_type\": \"url\",\r\n      \"ie_key\": \"Youtube\",\r\n      \"id\": \"AmgkSdhK4K8\",\r\n      \"url\": \"AmgkSdhK4K8\",\r\n      \"title\": \"Who cares about topology?   (Inscribed rectangle problem)\",\r\n      \"description\": null,\r\n      \"duration\": 1096,\r\n      \"view_count\": null,\r\n      \"uploader\": \"3Blue1Brown\"\r\n    },\r\n    {\r\n      \"_type\": \"url\",\r\n      \"ie_key\": \"Youtube\",\r\n      \"id\": \"pQa_tWZmlGs\",\r\n      \"url\": \"pQa_tWZmlGs\",\r\n      \"title\": \"Why slicing a cone gives an ellipse\",\r\n      \"description\": null,\r\n      \"duration\": 772,\r\n      \"view_count\": null,\r\n      \"uploader\": \"3Blue1Brown\"\r\n    },\r\n    {\r\n      \"_type\": \"url\",\r\n      \"ie_key\": \"Youtube\",\r\n      \"id\": \"yuVqxCSsE7c\",\r\n      \"url\": \"yuVqxCSsE7c\",\r\n      \"title\": \"Sneaky Topology | The Borsuk-Ulam theorem and stolen necklaces\",\r\n      \"description\": null,\r\n      \"duration\": 1190,\r\n      \"view_count\": null,\r\n      \"uploader\": \"3Blue1Brown\"\r\n    },\r\n    {\r\n      \"_type\": \"url\",\r\n      \"ie_key\": \"Youtube\",\r\n      \"id\": \"zwAD6dRSVyI\",\r\n      \"url\": \"zwAD6dRSVyI\",\r\n      \"title\": \"Thinking outside the 10-dimensional box\",\r\n      \"description\": null,\r\n      \"duration\": 1627,\r\n      \"view_count\": null,\r\n      \"uploader\": \"3Blue1Brown\"\r\n    },\r\n    {\r\n      \"_type\": \"url\",\r\n      \"ie_key\": \"Youtube\",\r\n      \"id\": \"K8P8uFahAgc\",\r\n      \"url\": \"K8P8uFahAgc\",\r\n      \"title\": \"Circle Division Solution\",\r\n      \"description\": null,\r\n      \"duration\": 533,\r\n      \"view_count\": null,\r\n      \"uploader\": \"3Blue1Brown\"\r\n    }\r\n  ],\r\n  \"id\": \"PLZHQObOWTQDMXMi3bUMThGdYqos36X_lA\",\r\n  \"title\": \"Geometry\",\r\n  \"uploader\": \"3Blue1Brown\",\r\n  \"uploader_id\": \"UCYO_jab_esuFRV4b17AJtAw\",\r\n  \"uploader_url\": \"https://www.youtube.com/c/3blue1brown\",\r\n  \"extractor\": \"youtube:tab\",\r\n  \"webpage_url\": \"https://www.youtube.com/playlist?list=PLZHQObOWTQDMXMi3bUMThGdYqos36X_lA\",\r\n  \"webpage_url_basename\": \"playlist\",\r\n  \"extractor_key\": \"YoutubeTab\"\r\n}\r\n```\r\n\r\nAfter patch:\r\n```\r\n{\r\n  \"_type\": \"playlist\",\r\n  \"entries\": [\r\n    {\r\n      \"_type\": \"url\",\r\n      \"ie_key\": \"Youtube\",\r\n      \"id\": \"GNcFjFmqEc8\",\r\n      \"url\": \"GNcFjFmqEc8\",\r\n      \"title\": \"But why is a sphere's surface area four times its shadow?\",\r\n      \"description\": null,\r\n      \"duration\": 1021,\r\n      \"view_count\": null,\r\n      \"uploader\": \"3Blue1Brown\"\r\n    },\r\n    {\r\n      \"_type\": \"url\",\r\n      \"ie_key\": \"Youtube\",\r\n      \"id\": \"OkmNXy7er84\",\r\n      \"url\": \"OkmNXy7er84\",\r\n      \"title\": \"The hardest problem on the hardest test\",\r\n      \"description\": null,\r\n      \"duration\": 675,\r\n      \"view_count\": null,\r\n      \"uploader\": \"3Blue1Brown\"\r\n    },\r\n    {\r\n      \"_type\": \"url\",\r\n      \"ie_key\": \"Youtube\",\r\n      \"id\": \"AmgkSdhK4K8\",\r\n      \"url\": \"AmgkSdhK4K8\",\r\n      \"title\": \"Who cares about topology?   (Inscribed rectangle problem)\",\r\n      \"description\": null,\r\n      \"duration\": 1096,\r\n      \"view_count\": null,\r\n      \"uploader\": \"3Blue1Brown\"\r\n    },\r\n    {\r\n      \"_type\": \"url\",\r\n      \"ie_key\": \"Youtube\",\r\n      \"id\": \"pQa_tWZmlGs\",\r\n      \"url\": \"pQa_tWZmlGs\",\r\n      \"title\": \"Why slicing a cone gives an ellipse\",\r\n      \"description\": null,\r\n      \"duration\": 772,\r\n      \"view_count\": null,\r\n      \"uploader\": \"3Blue1Brown\"\r\n    },\r\n    {\r\n      \"_type\": \"url\",\r\n      \"ie_key\": \"Youtube\",\r\n      \"id\": \"yuVqxCSsE7c\",\r\n      \"url\": \"yuVqxCSsE7c\",\r\n      \"title\": \"Sneaky Topology | The Borsuk-Ulam theorem and stolen necklaces\",\r\n      \"description\": null,\r\n      \"duration\": 1190,\r\n      \"view_count\": null,\r\n      \"uploader\": \"3Blue1Brown\"\r\n    },\r\n    {\r\n      \"_type\": \"url\",\r\n      \"ie_key\": \"Youtube\",\r\n      \"id\": \"zwAD6dRSVyI\",\r\n      \"url\": \"zwAD6dRSVyI\",\r\n      \"title\": \"Thinking outside the 10-dimensional box\",\r\n      \"description\": null,\r\n      \"duration\": 1627,\r\n      \"view_count\": null,\r\n      \"uploader\": \"3Blue1Brown\"\r\n    },\r\n    {\r\n      \"_type\": \"url\",\r\n      \"ie_key\": \"Youtube\",\r\n      \"id\": \"K8P8uFahAgc\",\r\n      \"url\": \"K8P8uFahAgc\",\r\n      \"title\": \"Circle Division Solution\",\r\n      \"description\": null,\r\n      \"duration\": 533,\r\n      \"view_count\": null,\r\n      \"uploader\": \"3Blue1Brown\"\r\n    }\r\n  ],\r\n  \"id\": \"PLZHQObOWTQDMXMi3bUMThGdYqos36X_lA\",\r\n  \"title\": \"Geometry\",\r\n  \"view_count\": 125486,\r\n  \"last_updated\": \"20191121\",\r\n  \"uploader\": \"3Blue1Brown\",\r\n  \"uploader_id\": \"UCYO_jab_esuFRV4b17AJtAw\",\r\n  \"uploader_url\": \"https://www.youtube.com/c/3blue1brown\",\r\n  \"extractor\": \"youtube:tab\",\r\n  \"webpage_url\": \"https://www.youtube.com/playlist?list=PLZHQObOWTQDMXMi3bUMThGdYqos36X_lA\",\r\n  \"webpage_url_basename\": \"playlist\",\r\n  \"extractor_key\": \"YoutubeTab\"\r\n}\r\n```\r\n\r\n\r\nAs you can see, in the first example, the playlist does not have its own `description`, `view_count` or `last_updated` date, and in the second example it does.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 5,
        "changed_files": 2,
        "created_at": "2021-10-27T12:05:38Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe shell script `devscripts/run_test.sh` had an actual syntax error that was not revealed in normal use since the default case wasn't being invoked. Review against the http://shellcheck.net checker showed some other hidden errors and style issues in this script and in `devscripts/wine-py2exe.sh`. The PR corrects these scripts to pass the checker.\r\n\r\n`devscripts/release.sh` had only style issues so was not changed:\r\n```\r\n[! -z ...] -> [ -n ...]\r\n`cmd` -> $(cmd)\r\n```",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-26T01:57:10Z",
        "closed_at": "2021-12-06T14:42:28Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nResolves # 30151\r\n\r\nAlthough not always happen, POST requests could be redirected, thus resulting in `ValueError: unknown url type: 'Error'`.\r\nAdding `/` to the end of URL should prevent the redirection from occurring.\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 11,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-25T01:45:18Z",
        "closed_at": "2022-01-20T08:55:38Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nResolves #30139\r\nMay resolve #29814\r\n\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-22T22:50:02Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nVarious other applications and services embed youtube-dl and its forks, in way that may present error messages designed for direct users of youtube-dl to the users of such embedding applications and services. Since such users ran the embedding application or connected to the embedding service, they are generally not competent to respond to an error message that asks them to run youtube-dl with certain command-line options and therefore cannot be helped to solve the issue. They should instead turn to the support channel for the embedding application and service.\r\n\r\nExamples: #30140, https://github.com/ytdl-org/youtube-dl/issues?q=is%3Aissue+telegram.\r\n\r\nThis PR rewords the default postfix message for errors to direct consumers of embedding applications and services away from the youtube-dl bug tracker and towards the support channel for the embedding application and service.",
        "comments": 4
    },
    {
        "merged": true,
        "additions": 48,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-10-18T15:08:18Z",
        "closed_at": "2022-02-05T03:02:56Z",
        "merged_at": "2022-02-05T03:02:56Z",
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAs in issue #30115, ARTE TV has collection playlists, already supported through `ArteTVPlaylistIE`, and also category playlists, not previously supported.\r\n\r\nThis PR adds the ArteTVCategoryIE to support the latter playlist type. Unlike the collection playlists, the page is not populated from the API, so the extractor scrapes the page. In the initial version it just collects the items on the original page, not any items in continuation links or populated by endless scrolling.\r\n\r\nResolves #30115.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-10-17T10:29:12Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description\r\n\r\nI've added a flag to use the \"file://\" scheme.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-15T11:45:25Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Documentation update\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nUpdated README.md with a new output format example. \r\nThis is basically a documentation update with a new output format template and an associated example.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-14T06:54:21Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nImproved SonyLIV extractor to be able to download subtitles if exists. \r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 0,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-13T11:39:44Z",
        "closed_at": "2022-02-05T03:04:36Z",
        "merged_at": "2022-02-05T03:04:36Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\n- Closes https://github.com/ytdl-org/youtube-dl/issues/30091\r\n\r\nIn commit https://github.com/ytdl-org/youtube-dl/commit/ce7db64bf1a558759be63e92f34550d7ba0e4052, `format_id = str_or_none(f.get('id'))` line has been replaced with `format_id = format_id`. Because `format_id` is retrieved from `uol_formats.items()`, this line has no meaning.\r\n\r\n(I just happened to look this while wandering about https://lgtm.com/projects/g/ytdl-org/youtube-dl/?mode=list)\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 283,
        "deletions": 47,
        "changed_files": 4,
        "created_at": "2021-10-11T17:11:43Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe structure of pages at paramountplus.com has changed, as well that of some pages handled by other extractor modules such as cbs.py and theplatform.py.\r\n\r\nThis PR back-ports the required changes from [yt-dlp ](https://github.com/yt-dlp/yt-dlp), with some small changes to match the platform and API. ParamountPlus and ParamountPlusSeries extractors are added, with supporting changes to CBS and ThePlatform extractors.\r\n\r\nA `_match_valid_url()` method is included in the `ThePlatformBaseIE` class, which can be removed if PR #30046 has been merged.\r\n\r\nThe PR is expected (as far as possible) to\r\n* resolve #29564\r\n* resolve #30066\r\n* resolve #30197\r\n* resolve #30247\r\n* resolve #30491.\r\n\r\nThe tests needed to be run in the USA before merging, as the ParamountPlus URLs are strongly geo-blocked. The CI runs seem to have passed that check.\r\n\r\nThanks @dodrian, @Sipherdrakon for additional updates from yt-dlp.\r\n",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-10-11T02:51:00Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nSometimes I just want to know whether youtube-dl can be expected to handle a given URL.  This option accomplishes that quickly.  Previously, I would run youtube-dl with --simulate or --skip-download, but these would take 5+ seconds on my system before returning.  The --determine-extractors option of this PR, however, only takes 1.3 to 2.6 seconds.  You can use it, for example, to handle arbitrary URLs intelligently:  If --determine-extractors indicates success, run youtube-dl (or mpv or whatever).  Otherwise, run $BROWSER.\r\n\r\nThank you.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-10-06T17:01:31Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [X] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n\r\nI tested this on e621.net and it grabbed the file perfectly, so I figure you could add it to the supported sites page",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-10-05T08:25:05Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 453,
        "deletions": 0,
        "changed_files": 3,
        "created_at": "2021-10-03T21:23:39Z",
        "closed_at": "2021-11-05T09:00:23Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nNew extractor for youmaker.com with hls support",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 286,
        "deletions": 290,
        "changed_files": 4,
        "created_at": "2021-10-03T14:47:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAccording to #30043, CBC Gems pages were not being correctly extracted following a site change. The issue was also tracked in https://github.com/yt-dlp/yt-dlp/issues/936, resulting in a PR https://github.com/yt-dlp/yt-dlp/pull/1013. \r\n\r\nThe PR author wrote\r\n>This PR fixes https://github.com/yt-dlp/yt-dlp/issues/936. gem.cbc.ca videos, playlists, and livestreams can now be downloaded again. Content that requires login (which is free) can also be downloaded.\r\n>\r\n>I removed CBCOlympicsIE because the domain it was based on doesn't work anymore. I also removed some dead tests from the other classes.\r\n\r\nThis PR adapts the author's PR with thanks, and a few changes for the conventions and platform requirements of this project.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 261,
        "deletions": 265,
        "changed_files": 10,
        "created_at": "2021-10-02T05:36:03Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nI just tried to make the gh-pages more user-friendly and minimalistic.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 8,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-29T17:03:01Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe only existing test for the VimeoGroups IE went private. A new test is added using the `Vimeo Meetup!` group.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-29T14:49:03Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nIn the IE `_is_valid_url()` method, the URL is tested for validity. The resource linked may be a large media file which could be downloaded and then discarded. An early version of the method used a `HEAD` request, as would be expected. This was then changed to `GET` in 4069766c527d10b8e25b9262a3882101367deb3e, but there is no supporting rationale and no issues mentioning that `HEAD` requests were being rejected.\r\n\r\nIf that should be a problem with a specific site, we can set a class var, say `_test_valid_with_GET = False` and then make the changed lines as follows, with the var set to `True` for the problem site:\r\n```\r\n            req = url if self._test_valid_with_GET else HEADRequest(url)\r\n            self._request_webpage(req, video_id, 'Checking %s URL' % item, headers=headers)\r\n```\r\nComments welcome.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 40,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-09-27T19:29:04Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThese corrections add support for some links that couldn't be handled before. For example:\r\nhttps://www.c-span.org/congress/?chamber=house&date=2017-12-13&t=1513208380",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 210,
        "deletions": 16,
        "changed_files": 4,
        "created_at": "2021-09-25T21:49:23Z",
        "closed_at": "2022-05-15T14:20:28Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n- Added new extractors for baddiehub and porntrex\r\n- Fixed author name extraction in spankbang and add updated tests\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-25T03:35:11Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis commit is to fix the recently broken reddit extractor (see issue #29986). Testing determined that the requests would be allowed so long as the `reddit_session` cookie is set to a value. Currently, the actual value of the cookie does not seem to matter; any value will allow access.\r\n\r\nThis PR sets the cookie to a random 16-character hex string (e.g., `63cd23c3d6a68191`). This is easy to generate, and avoids any potential issues that might crop up if every youtube-dl user started using the same session ID.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 121,
        "deletions": 262,
        "changed_files": 6,
        "created_at": "2021-09-20T01:30:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ X] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ X] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ X] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ X] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ X] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ X] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ X] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe initial goal is to fix the newly broken francetv extractor (see issue https://github.com/ytdl-org/youtube-dl/issues/29956#issue-994870547)\r\n\r\nFew changes:\r\n1. extractor fixes for new backend\r\n2. removed obsolete extractors in the francetv.py file (they now all redirect to the main site)\r\n3. Fixed tests\r\n4. implemented the ability to extract caption streams from m3u8 (behind include_subtitles flag)\r\n5. implemented a new field 'download' that is a lambda function to retrieve subtitles (along 'data' and 'url')",
        "comments": 35
    },
    {
        "merged": false,
        "additions": 104,
        "deletions": 9,
        "changed_files": 4,
        "created_at": "2021-09-19T04:35:13Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nIf the destination filename constructed from the output template is too long for the filesystem, the yt-dl download fails. The user can't predict how long extracted fields (eg `title`) may be, so this may be unexpected. The user then has to work out how to modify the output template (eg `%(title)s` -> `%(title).25s`) and run the command again.\r\n\r\nConsequently there have been suggestions (of which #29912 is the most recent) that the destination filename should be shortened automatically. This doesn't seem unreasonable, since `sanitize_path()` already has the potential to edit the filename. PR #25475 failed because it was platform-specific.\r\n\r\nThis PR adds a function `reduce_filename()` to `utils.py` that shortens the filename component by a specified  factor, and adds logic to `sanitize_open()` to detect `errno.ENAMETOOLONG` and iteratively call `reduce_filename()` until opening either succeeds, or fails for some other reason.\r\n\r\nResolves #30361, resolves #29912, resolves #29975, resolves #29627, resolves #28626, resolves #7765, resolves #5921, resolves #5908, probably others.",
        "comments": 18
    },
    {
        "merged": false,
        "additions": 7,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-17T06:11:11Z",
        "closed_at": null,
        "merged_at": null,
        "body": "Signed-off-by: Jon Doron <arilou@gmail.com>\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n\r\nAdd to the youtube JSON the broadcast start time in case if it was a live stream upload.",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 16,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-16T08:59:08Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 288,
        "deletions": 169,
        "changed_files": 9,
        "created_at": "2021-09-15T23:01:09Z",
        "closed_at": "2022-05-06T16:31:20Z",
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nIt starts an overhaul of `aes`.\r\n- [x] Simplifies signature of functions in the module, instead list of integers they accept bytes.\r\n- [x] Adds function for AES-128-GCM  decrypt (uses already existing function for AES-CRT) and verification.\r\n- [ ] Adds new functionality to existing code (i.e. AES-CRT nonce)\r\n- [ ] Converts (internal) functions to also use mentioned types.\r\n- [ ] Restructures the code according to OOP design\r\n- [ ] Adds new tests cases to `test_aes` to safeguard code\r\n\r\nI'd like to mention @pukkandan and the help he gave me during  the development of this code at https://github.com/yt-dlp/yt-dlp/pull/938.\r\n",
        "comments": 7
    },
    {
        "merged": false,
        "additions": 35,
        "deletions": 7,
        "changed_files": 1,
        "created_at": "2021-09-13T13:59:23Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe SlidesLive extractor now needs a `player_token` query parameter in the JSON URL, whose value is given by the `data-player-token` attribute in the HTML element (`<div>`) with `id=\"player\"`.\r\n\r\nAlso, some of the expected metadata (`timestamp`, eg) wasn't being collected.\r\n\r\nResolves #29954.\r\nMay resolve #30881.",
        "comments": 20
    },
    {
        "merged": false,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-09-12T20:54:53Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nHTTP bad\r\n\r\nI doubt video downloads are getting MITM'd because of this fallback, but better safe than sorry.",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 38,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-12T20:27:57Z",
        "closed_at": "2021-09-13T04:16:03Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 72,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-09-12T11:58:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 63,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2021-09-11T12:04:17Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis PR makes two small and one larger improvement to `test/test_download.py`, in 3 separate commits. \r\n\r\n#### <a id=\"file-hash\">Calculating the file hash</a>\r\n\r\nExternal downloaders may not support limiting the download exactly to a specified size. When running a test download, only a short initial portion of the file is supposed to be downloaded, and the hash is calculated from that portion. If the portion is longer than requested the hash will be incorrect. The PR explicitly uses the requested length, if specified, when calculating the file hash, so that the same value should be calculated regardless of downloader.\r\n\r\n#### <a id=\"header-params\">Header-related params in test cases</a>\r\n\r\nHeader-related params (here: `--user-agent`, `--referer`, `--add-header`) are parsed into `std_headers` rather than the `params` dict in the main yt-dl program. In download tests, only params that are set into the `params` dict were supported, and header-related params in test cases were ignored. This PR changes the params processing for test downloads to match what happens in the main program.\r\n\r\nAs an example, the change makes it possible to specify a test case with a specific UA, such as this for an Invidious site fronted by Cloudflare\r\n```\r\n        ...\r\n        'params': {\r\n            # Cloudflare breaks HTTP if Chrome is mentioned in the UA (2021-08)\r\n            'user_agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/6533.18.5 (KHTML, like Gecko) Safari/6533.18.5',\r\n        },                                       \r\n        ...\r\n```\r\n#### <a id=\"test-all\">Add TestSuite test_..._all with all downloads for each extractor</a>\r\n\r\nWhen testing downloads for an extractor XXX, a set of test cases is created but it's not obvious which item in the extractor's `_TESTS` list corresponds to which `TestDownload.test_XXX...` test case. If there are many test cases one might fail to run some of the later tests, or run past the highest numbered case.\r\n\r\nTo facilitate running the download tests for an extractor in the same way that they run in the CI servers, the PR adds a further download test case with name suffix `_all` for each extractor class that has test case(s). The new test case is a `unittest.TestSuite` that runs all the other download tests for that extractor. Counts of the possible test outcomes (error, failure, etc) are printed.\r\n\r\nThus to test `YoutubeIE`:\r\n```\r\npython test/test_download.py TestDownload.test_Youtube_all\r\n```\r\nSupersedes, closes #27461.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 242,
        "deletions": 92,
        "changed_files": 5,
        "created_at": "2021-09-11T07:39:41Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nInvidious is an open-source front-end to YouTube that is hosted on various host names. Invidious URLs were supported in the YT extractor through a list of Invidious sites in the `_INVIDIOUS_SITES` variable initialised in `extractor/youtube-dl.py`. As in issue #29885, other Invidious sites may be set up (or discontinued) at any time.\r\n\r\nAs the Invidious site list is dynamic (more so than yt-dl releases), a better detection method was needed, not relying on a site list.\r\n\r\nIn [this comment](https://github.com/ytdl-org/youtube-dl/issues/29885#issuecomment-913008310) I proposed a general mechanism by which an extractor could be selected based on the page content, rather than just the URL, so as to avoid handling the details of such pages in the Generic extractor.\r\n\r\nThis PR adds an Invidious extractor class to `extractor/youtube.py` that is invoked using this mechanism.\r\n\r\nIt supports video pages, and also extracts videos from playlists, channels and search pages, including further  pages (starting from the URL given). Playlist results sometimes have fewer items than when the YoutubePlaylistIE is used, because the result list is globally de-duplicated.\r\n\r\nIf this is accepted, a subsequent improvement would be to change the stub code in the Generic extractor so that pages are automatically checked against any active extractor class that implements the `page_suitable()` class method, and to move the `page_url_result()` class method to the base `InfoExtractor` class.\r\n\r\nPartially resolves #29885.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 42,
        "deletions": 38,
        "changed_files": 1,
        "created_at": "2021-09-11T07:13:10Z",
        "closed_at": "2021-12-31T07:12:15Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-09-11T00:19:55Z",
        "closed_at": "2022-01-20T08:55:39Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis is an easy fix to resolve #29829.\r\nHave confirmed that Katsomo (subclass of TV2) works the same as before.\r\n\r\nIt would be better to use new api, though. Minimal call using curl would be:\r\n```\r\ncurl https://api.sumo.tv2.no/play/1676282?stream=HLS \\\r\n-H 'Content-Type: application/json' \\\r\n--data-raw '{\"device\":{\"id\":\"1-1-1\",\"name\":\"Nettleser (HTML)\"}}'\r\n```\r\nand `stream=DASH`.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 29,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-09-07T13:57:49Z",
        "closed_at": "2021-09-07T23:56:29Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\n~~Resolves # 29896.~~\r\n\r\nDidn't need this PR. I missed the commit 57b9a4b4c6cf2580b5007db78bd333a9a237fd47.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-06T15:56:06Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [ ] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 4
    },
    {
        "merged": false,
        "additions": 60,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-09-06T12:34:07Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis pull request adds an extractor for [Snapchat](https://en.wikipedia.org/wiki/Snapchat). Right now, only direct links to spotlight snaps such as [this one](https://story.snapchat.com/o/W7_EDlXWTBiXAEEniNoMPwAAYuz9_1mcdex8MAXndPyIOAXndPyFyAO1OAA) are supported, but support could be expanded to stories, like the ones that can be found [here](https://story.snapchat.com/) as well.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 72,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-09-04T02:33:54Z",
        "closed_at": "2022-01-20T08:55:38Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [x] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdd streamlink support to `--external-downloader` (HLS only).\r\n\r\nstreamlink can download HLS segments in multiple threads, effective for downloading from slow servers.\r\nThis PR sets `--{hls|stream}-segment-threads` to 4 (default 1, max 10).\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-04T02:24:01Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [ ] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [ ] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [ ] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n---\r\n\r\ncloses https://github.com/ytdl-org/youtube-dl/issues/29301\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-09-01T14:41:14Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\nIf \"Covered the code with tests\" means, that I tested it myself by running it, then I have done that too.\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n\r\n---\r\n\r\nFix an error with the JSON decoder that occurs when `webpage` contains a JSON with multiple records.\r\n\r\nFor example:\r\n```json\r\nPage.messaging_box_controller.addItems([{\"type\":\"error\",\"message_body\":\"Dieses Video ist in deiner Region nicht verf\\u00fcgbar.\",\"message_body_html\":\"Dieses Video ist in deiner Region nicht verf\\u00fcgbar.\",\"data\":null},{\"type\":\"error\",\"message_body\":\"Dieses Video ist in deiner Region nicht verf\\u00fcgbar.\",\"message_body_html\":\"Dieses Video ist in deiner Region nicht verf\\u00fcgbar.\",\"data\":null},{\"type\":\"error\",\"message_body\":\"Dieses Video ist in deiner Region nicht verf\\u00fcgbar.\",\"message_body_html\":\"Dieses Video ist in deiner Region nicht verf\\u00fcgbar.\",\"data\":null}]);\r\n```\r\n\r\n\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 66,
        "deletions": 26,
        "changed_files": 4,
        "created_at": "2021-08-30T23:12:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nIssue #571 led to a commit implementing a requirement that ID fields used in output templates shouldn't be changed in filename generation.\r\n\r\nIssue #5035 asked for initial '-' and '.' to be removed from filenames generated by yt-dl. This was implemented with the exception of ID fields, which must be rendered exactly, as above.\r\n\r\nIssue #29875 identified that this implementation could cause unwanted changes in non-ID fields inside (rather than at the start of) an output template.\r\n\r\nThis PR re-implements the changes from issues #571 and #5035 to avoid the problem seen in issue #29875.\r\n\r\nThe existing unit test for `YoutubeDL.py` passes unchanged, while additional test cases have been included for issue #29875.\r\n\r\nAs the functionality for munging initial `[.-]` has been moved out of `sanitize_filename()`, the test cases for that have been deleted from the unit test for `utils.py` and replaced by new test cases for `YoutubeDL.py`.\r\n\r\nAs one result of the PR, the `FORMAT_RE` pattern is promoted to a class variable `_FORMAT_RE` that is available for use by methods of `YoutubeDL` and its subclasses.\r\n\r\nResolves #29875, resolves #5035.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 19,
        "changed_files": 1,
        "created_at": "2021-08-29T10:33:12Z",
        "closed_at": "2022-04-24T11:21:57Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nJove has now DRM's for its content encrypted with Sample-AES.\r\nHowever preview videos (first 2 minutes) for paying content can be downloaded.\r\n\r\n- links updated (changes /video to /v)\r\n- Thumbnails changed to jpg\r\n- Regex modified to match the new DOM\r\n- Removes the comments downloading\r\n- Download preview video for non-free content\r\n- Throws an error for free content as it is DRM protected using Sample-AES\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 13,
        "deletions": 10,
        "changed_files": 1,
        "created_at": "2021-08-27T19:16:07Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [ ] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 79,
        "deletions": 17,
        "changed_files": 1,
        "created_at": "2021-08-26T17:36:40Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAdds support in NBCNewsIE for URLs like https://www.nbcnews.com/news/amp/ncna1276021 (fixes #29759).\r\n\r\nAdds a version of https://github.com/2ShedsJackson/yt-dlp/tree/nbc.py-patch for improved metadata extraction in NBCIE.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 68,
        "deletions": 41,
        "changed_files": 1,
        "created_at": "2021-08-26T03:38:21Z",
        "closed_at": "2022-01-20T08:55:37Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nResolves #29837",
        "comments": 3
    },
    {
        "merged": false,
        "additions": 88,
        "deletions": 9,
        "changed_files": 1,
        "created_at": "2021-08-25T19:32:26Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe site has changed its API. Instead of the `*.beeg.com/api` APIs, the site fetches JSON metadata from `'https://store.externulls.com/facts/file/%d' % video_id`. Video URLs can be found in the `resources` of the `file` object in the JSON. As the site is not good at titling, a default title is created of the form 'Beeg video VIDEO_ID'. The metadata no longer includes explicit thumbnail URL(s) for a video: instead there is a list of preferred offsets (s) into the video that can be fetched using `https://thumbs.beeg.com/videos/{video_id}/{offset}.jpg`.\r\n\r\nThe original extraction is left as a default.\r\n\r\nFixes #29850, fixes #29781.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1795,
        "deletions": 1638,
        "changed_files": 4,
        "created_at": "2021-08-22T12:16:27Z",
        "closed_at": null,
        "merged_at": null,
        "body": "[utils] Small fixes to utils, make tests pass in Py2\r\n## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nTweaks:\r\n* use `enumerate()` instead of `zip(..., itertools.count())`;\r\n* pass `encodeFilename()` test in Py2 by encoding with `'backslashreplace'` and decoding with `'unicode_escape'` when filesystem encoding isn't Unicode;\r\n* ditto for `shell_quote()`;\r\n* consequent changes in `compat_setenv()`, `compat_getenv()`;\r\n* make `compat_expanduser()` test pass;\r\n* consistently test for OS `('nt', 'ce')` (ha!);\r\n* fix error in `urlhandle_detect_ext()` where non-ASCII character couldn't be coerced to Unicode in Py2 (resolves #29417);\r\n* fix issue where `extract_timezone()` could be confused by a date-time string ending in a 4-digit year (check [was added](https://github.com/ytdl-org/youtube-dl/commit/15ac8413c78b991f2e99b6bdc538bc8c5ae8e8a0), then apparently removed with `unified_timestamp()`), add some more date formats and tests (resolves #29948)\r\n* following the [discussion below](https://github.com/ytdl-org/youtube-dl/pull/29845#issuecomment-939303252), add support to `urlhandle_detect_ext()` for all the filename parameter syntaxes specified in RFC6266\r\n* avoid truncating a supplied cookie file, resolves #30082\r\n* fix `get_elements_by_classname()` matching elements with classname (eg) `plist-info` when searching for class `info`, as noted [here](https://github.com/ytdl-org/youtube-dl/issues/30230#issuecomment-967179993).",
        "comments": 9
    },
    {
        "merged": false,
        "additions": 43,
        "deletions": 1,
        "changed_files": 2,
        "created_at": "2021-08-20T02:39:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThis adds basic support for downloading playlists from Iwara, relying on the existing extractor for the final videos.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 250,
        "deletions": 12,
        "changed_files": 2,
        "created_at": "2021-08-19T21:06:11Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe site structure of megaphone.fm appears to have changed (issue #29539).\r\n\r\nThis PR updates the extraction to match the current structure, defaulting to the old extraction if the new one fails.\r\n\r\nAlso:\r\n* adds extraction for episodes playlist.megaphone.fm/?e=...\r\n* adds extraction for playlists playlist.megaphone.fm/?p=...\r\n* adds extraction for channel playlists cms.megaphone.fm/channel/...\r\n\r\nPlaylists and channel playlists support `--no-playlist` to select the current show instead of the whole playlist.\r\n\r\nResolves #29539.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 71,
        "deletions": 27,
        "changed_files": 1,
        "created_at": "2021-08-19T13:08:22Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\nThis builds on #28205 by @vallovic and once again fixes support for RTP Play downloads. Please not that one of the URL which were previously used in the tests was expired, so I replaced it with a more recent one. However, I get:\r\n\r\n```\r\nyoutube_dl.utils.DownloadError: ERROR: requested format not available\r\n```\r\n\r\nFrom what I saw, changing the `format` parameter in `parameters.json` to `best/bestvideo+bestaudio` solves it. That seems to be the default when the app is running too.",
        "comments": 5
    },
    {
        "merged": false,
        "additions": 15,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2021-08-18T12:44:19Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nUpdate title and video id discovering process for RTVE.es live streams.",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 23,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-18T11:43:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nCurrently, videos in rtve.es are opened by the user interface using the `play/videos` path subpart, so users like me that want to download a video using `play` instead of `alacarta` in the URL will find that the generic extractor is not able to resolve the URL:\r\n\r\n<details>\r\n<summary>Error</summary>\r\n\r\n```\r\n$ python3 -m youtube_dl http://www.rtve.es/play/videos/balonmano/o-swiss-cup-masculina-final-espana-suecia/2491869/\r\n[generic] 2491869: Requesting header\r\n[redirect] Following redirect to https://www.rtve.es/play/videos/balonmano/o-swiss-cup-masculina-final-espana-suecia/2491869/\r\n[generic] 2491869: Requesting header\r\nWARNING: Falling back on generic information extractor.\r\n[generic] 2491869: Downloading webpage\r\n[generic] 2491869: Extracting information\r\nERROR: Unsupported URL: https://www.rtve.es/play/videos/balonmano/o-swiss-cup-masculina-final-espana-suecia/2491869/\r\n```\r\n</details>\r\n\r\nFixes #29522 and fixes #29613.\r\n\r\nCloses #26295.",
        "comments": 6
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-17T15:33:52Z",
        "closed_at": "2022-05-30T01:54:28Z",
        "merged_at": null,
        "body": "One character typo fix.\r\n\r\n### What is the purpose of your *pull request*?\r\n- [X] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nDeleted a single comma that shouldn't have been present.",
        "comments": 1
    },
    {
        "merged": true,
        "additions": 22,
        "deletions": 20,
        "changed_files": 1,
        "created_at": "2021-08-17T12:34:31Z",
        "closed_at": "2022-02-05T02:53:23Z",
        "merged_at": "2022-02-05T02:53:23Z",
        "body": "\u2026 fixed bug\r\n\r\nCo-authored-by: dirkf <fieldhouse@gmx.net>\r\n\r\n## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nResolve #29800, resolve #30290, contains following:\r\n- Updated URL regex. Both new and old URL are compatible. \r\n- Updated test case. Number of song in playlist was lesser than expected.\r\n- Updated test case. Playlist didn't contained test song. Added another.\r\n- Disabled test case. Link broken. Add another. See #29808 \r\n- Fixed bug. Convert id from integer to string",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 4,
        "changed_files": 2,
        "created_at": "2021-08-17T04:33:03Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nSubtitles can be embedded in m4a same as mp4.\r\n\r\nI imagine the reason m4a is not allowed now is because no one ever needed it or it is not video. However, given that webm may only contain audio, I think m4a should be allowed as well.\r\n\r\nmpv shows subtitles fine for audio only files: on console, or on gui if thumbnail is embedded (or with --force-window=yes option).",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-15T15:16:24Z",
        "closed_at": "2022-05-30T01:50:50Z",
        "merged_at": "2022-05-30T01:50:50Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\nJust a little explanation for avoiding mistakes",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 106,
        "deletions": 41,
        "changed_files": 1,
        "created_at": "2021-08-15T05:47:54Z",
        "closed_at": "2022-01-20T08:55:03Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nResolves #29421, resolves #23627, resolves #23180, resolves #14156\r\nResolves #30474 (though already closed)\r\n\r\nRequires PR #30513 for some videos and tests.\r\n\r\n- Improve title, add description. Prefer metadata in JSON-LD if present.\r\nJSON-LD VideoObject type seems to be gone since this PR was first made, so added SocialMediaPosting type as a fallback.\r\n- When web pages are analyzed as playlists but consist of single video, treat the pages as regular video pages to extract metadata well.\r\nLike the pages of TestDownload.test_Facebook_7, 9, 10.\r\n\r\nMade test skip for now: TestDownload.test_Facebook_8\r\nThe page cannot be parsed (get `ERROR: This video is only available for registered users.`) while it can be opened by a browser.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-13T03:30:31Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nIf `--embed-thumbnail` is used with `--skip-download`, `--write-thumbnail` should not be added implicitly.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 0,
        "changed_files": 1,
        "created_at": "2021-08-13T03:02:50Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nShow warning for `--convert-sub` if combined with `--skip-download` until PR #9738 is finished.\r\n\r\nUnlike other post-processing options, it is not easy to tell from its name or feature that `--convert-sub` is a post-processing option and doesn't work with `--skip-download`.\r\nThere are users who try/expect to get converted subtitles with `--convert-sub --skip-download`, and without any indication they may confuse.\r\n\r\n_command line only, it is obvious in python api that convert-sub is for post-processing._\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 31,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-08-12T13:41:56Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe Vimeo extractor assumes that a URL to video metadata can be found (as a value assigned to `data-config-url`) in the video's page if it is a Channel video URL like https://vimeo.com/channels/juice/5386137. While this is true in that example, it's not always so. Videos linked from the 'Staff Picks' and 'Best of Staff Picks' channels may not have this, such as https://vimeo.com/channels/bestofstaffpicks/543188947.\r\n\r\nThis PR makes the extractor fall back to the default methods of extracting metadata if the Channel method fails.\r\n\r\nResolves #29205, resolves #29764.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 22,
        "deletions": 8,
        "changed_files": 1,
        "created_at": "2021-08-12T05:59:58Z",
        "closed_at": "2021-08-14T03:27:26Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nResolves # 29421, resolves # 23627, resolves # 23180\r\n\r\nImprove title, add description. Prefer metadata in JSON-LD if present.\r\n\r\nThis PR doesn't touch playlists. Some tests (mostly of playlists) remain fail, and may need other PRs.\r\nTestDownload.test_Facebook_7, 9, 10 (playlists)\r\nTestDownload.test_Facebook_14 (get `ERROR: Cannot parse data`)\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 5,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-12T00:06:34Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nWhen using options combination like `--sub-format ttml --convert-subs ass -k`, even intermediate srt format files are kept. (Without `-k`, get reports like \"Deleting **_original_** file filename.en.srt (pass -k to keep)\".)\r\n\r\nThis is not correct. Intermediate srt format files must be removed unconditionally (or silently).\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 9,
        "deletions": 3,
        "changed_files": 1,
        "created_at": "2021-08-11T05:10:16Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nWhen the original thumbnail is not jpg/png and do `--write-thumbnail --embed-thumbnail`, original thumbnail is removed and converted jpg remains.\r\nThis is not correct as `--write-thumbnail`. Original thumbnail must be kept and converted jpg must be removed.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 17,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-11T01:12:28Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nAs shown in the output below, there are problems on writing thumbnails.\r\n1. improper file names like _filename.**mp4**\\_0.jpg_ (should be like _filename_0.jpg_) for `--write-all-thumbnails`\r\n2. (mostly for YouTube) webp formats may have _jpg_ extensions (should have _webp_ extensions)\r\n```\r\n$ youtube-dl --version\r\n2021.06.06\r\n$ youtube-dl _BggT--yxf0 --ignore-config --id -f18 --skip-download --write-all-thumbnails\r\n[youtube] _BggT--yxf0: Downloading webpage\r\n[youtube] _BggT--yxf0: Downloading thumbnail 0 ...\r\n[youtube] _BggT--yxf0: Writing thumbnail 0 to: _BggT--yxf0.mp4_0.jpg\r\n[youtube] _BggT--yxf0: Downloading thumbnail 1 ...\r\n[youtube] _BggT--yxf0: Writing thumbnail 1 to: _BggT--yxf0.mp4_1.jpg\r\n[youtube] _BggT--yxf0: Downloading thumbnail 2 ...\r\n[youtube] _BggT--yxf0: Writing thumbnail 2 to: _BggT--yxf0.mp4_2.jpg\r\n[youtube] _BggT--yxf0: Downloading thumbnail 3 ...\r\n[youtube] _BggT--yxf0: Writing thumbnail 3 to: _BggT--yxf0.mp4_3.jpg\r\n$ file _BggT--yxf0.mp4_0.jpg \r\n_BggT--yxf0.mp4_0.jpg: RIFF (little-endian) data, Web/P image, VP8 encoding, 168x94, Scaling: [none]x[none], YUV color, decoders should clamp\r\n```\r\nThis PR improves these problems. (resolves #29754 by 2.)\r\n",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 197,
        "deletions": 0,
        "changed_files": 2,
        "created_at": "2021-08-10T21:04:36Z",
        "closed_at": "2022-11-09T20:26:30Z",
        "merged_at": "2022-11-09T20:26:30Z",
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [ ] Improvement\r\n- [x] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nNew extractor for playvids.com with dash + hls support\r\n* Merged back-port from yt-dlp's peekvids.py.\r\n* Merged features from #26798.\r\n\r\nSupersedes: closes #26798",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 12,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-08-09T09:38:39Z",
        "closed_at": null,
        "merged_at": null,
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nSupport of direct links in addition to embed links in the Rumble website plugin.\r\n\r\nLink example:\r\nhttps://rumble.com/vhlrar-mike-lindell-to-confront-brian-kemp-and-doug-ducey-over-election-fraud.html",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 134,
        "deletions": 4,
        "changed_files": 4,
        "created_at": "2021-08-09T03:30:09Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nThe Comedy Central extractor didn't handle playlist or collection URLs. This PR adds support for both.\r\n\r\nCollections have a URL like www.cc.com/collections/ID, where the ID is 6 lower-case alphanumeric characters. The items in a collection have a URL like www.cc.com/collection-playlist/ID/sanitised-dash-separated-title/item_ID, where item_ID has the same format as ID.\r\n\r\nPlaylists have a URL like www.cc.com/playlists/ID. The items in a playlist have a URL like www.cc.com/playlists/ID/sanitised-dash-separated-title/item_ID, corresponding to the playlist with the item selected as \"now playing\". A playlist URL is automatically redirected to a playlist URL with the first item selected. `--no-playlist` is supported to retrieve the first item of a playlist URL with no item selected. As the `--yes-playlist` option is inadequate, to retrieve a playlist from a URL that actually appears in a browser it's necessary to delete the the last two path components. \r\n\r\nThe `ComedyCentralIE` extractor relies on `MTVServicesInfoExtractor`. Two small improvements are included:\r\n* a single item playlist is returned as a video item;\r\n* the 6-character playlist or item ID from the URL is retained as the `display_id`, to complement the internal MTVServices UUID that's used as the `id`.\r\n\r\nCloses #29737.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-08T02:30:28Z",
        "closed_at": "2022-01-20T08:55:08Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nSeveral improvements:\r\n- Include trailing \"/\" to the url and remove HTTP 301 redirection from downloading webpage.\r\n- Add \"Referer\" header to increase download speed. (Resolves #29736)\r\n- Accept URL like in [#29993](https://github.com/ytdl-org/youtube-dl/issues/29993#issuecomment-988244778) (the log provided is not of youtube-dl, though).\r\n- Detect login redirection and raise an error (to avoid making unnecessary issue reports).",
        "comments": 0
    },
    {
        "merged": true,
        "additions": 2,
        "deletions": 2,
        "changed_files": 1,
        "created_at": "2021-08-07T04:04:28Z",
        "closed_at": "2022-07-30T01:10:00Z",
        "merged_at": "2022-07-30T01:10:00Z",
        "body": "### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nPer #29300, the HMAC url signatures need a new key and secret, which was recently changed. This updates the values in the extractor and allows downloading videos again.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-05T15:53:44Z",
        "closed_at": "2021-08-05T17:32:37Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [x] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nExplanation of your *pull request* in arbitrary form goes here. Please make sure the description explains the purpose and effect of your *pull request* and is worded well enough to be understood. Provide as much context and examples as possible.\r\n\r\nSince the regex for url validation didn't include vivo embed links, I modified the regex to fit embed urls since downloader works for both.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-05T05:29:45Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\n`--all-subs` option is not well explained. Users might expect to write subtitle files of all available formats of all available languages. It actually writes subtitle files of one format of all available languages.\r\n\r\nAlso modify the word \"download\" to \"write\" to be consistent with other options.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-05T02:15:51Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\nNo test module using `write_all_thumbnails`\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\n`--write-all-thumbnails` option is not well balanced as compared to formats and subs.\r\n\r\n`--list-formats`/`--all-formats` for formats, `--list-subs`/`--all-subs` for subs, while\r\n`--list-thumbnails`/`--write-all-thumbnails` for thumbnails.\r\n\r\nModify option name to `--all-thumbnails` and leave `--write-all-thumbnails` as its alias.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 3,
        "changed_files": 2,
        "created_at": "2021-08-05T01:02:31Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\n`--keep-video` option is not accurate in that it also keeps subtitles after post-processing.\r\nModify option name to `--keep-files`, and leave `--keep-video` as its alias.\r\n",
        "comments": 1
    },
    {
        "merged": false,
        "additions": 18,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-03T06:08:48Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nResolves #28158",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 4,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-03T00:29:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\nCould not find suitable test module.\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nResolves #9499\r\n\r\nEmbed subtitles in --sub-lang order.\r\n\r\nNotes.\r\n- Download and convert subtitles don't affect the results and not changed.\r\n- Does no meaning for Python 3.7+ which keeps dict insertion order.\r\n\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 3,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-01T20:11:10Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nPer issue #29572, in the format selection code in `YoutubeDL.py`, the parameter on the right-hand side of a format selection string comparison (eg `hls` in `-f best[format_id!*=hls]`) is matched with this regex `(?P<value>[a-zA-Z0-9._-]+)`. However the `format_id` value is sanitised with this `re.sub(r'[\\s,/+\\[\\]()]', '_', format_id)`.\r\n\r\nIf the site provides a format ID that contains a character that is not alphanumeric or in `[._-]` and is not sanitised, a selection expression that specifically excludes the ID (`[format_id!=problem_id]`) causes an exception `ValueError('Invalid filter specification...')`.\r\n\r\nThis PR sanitises the `format_id` in a way that matches the valid set of characters for the RHS of a format selection string comparison.\r\n\r\nFixes #29572.",
        "comments": 2
    },
    {
        "merged": false,
        "additions": 36,
        "deletions": 36,
        "changed_files": 1,
        "created_at": "2021-08-01T12:21:37Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\n- Change \"UNIX\" to \"Unix\".\r\n- Change \"python\" to \"Python\".\r\n- Change \"git\" to \"Git\".\r\n- Change \"box\" to \"computer\".\r\n- Change case to lower case for the Table of Contents.\r\n- Remove redundant \":\" (colon) from headers.",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 10,
        "deletions": 1,
        "changed_files": 1,
        "created_at": "2021-08-01T10:04:44Z",
        "closed_at": null,
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [ ] Covered the code with tests (note that PRs without tests will be REJECTED)\r\nCould not find suitable test module.\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nResolves #28632, resolves #24269, resolves #19921\r\n\r\nSkip postprocessing (converting/embedding) for missing subtitles, like skip embedding for missing thumbnails now.\r\nThis situation can occur if subtitles could not be downloaded, or if the user (un)intentionally deleted subtitles file while downloading the video.\r\n",
        "comments": 0
    },
    {
        "merged": false,
        "additions": 92,
        "deletions": 27,
        "changed_files": 2,
        "created_at": "2021-08-01T01:21:56Z",
        "closed_at": "2021-08-04T01:08:30Z",
        "merged_at": null,
        "body": "## Please follow the guide below\r\n\r\n- You will be asked some questions, please read them **carefully** and answer honestly\r\n- Put an `x` into all the boxes [ ] relevant to your *pull request* (like that [x])\r\n- Use *Preview* tab to see how your *pull request* will actually look like\r\n\r\n---\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [ ] Bug fix\r\n- [x] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nResolves # 29366\r\n\r\nWhen normal and auto subs are available for some language and if both `--write-sub` and `--write-auto-sub` are specified, normal sub is written to _filename.lang.fmt_ but auto sub is not.\r\n\r\nThis PR makes it possible to write auto sub to _filename.lang.**auto**.fmt_\r\nWorks for the aforementioned condition only. Otherwise, auto sub will be written to _filename.lang.fmt_ same as previous versions.\r\n\r\nAlso added the warning when trying to embed ttml subtitles not supported by ffmpeg.\r\n\r\n_This PR replaces my previous PR #29652 which had several problems._",
        "comments": 2
    },
    {
        "merged": true,
        "additions": 39,
        "deletions": 6,
        "changed_files": 3,
        "created_at": "2021-07-31T12:24:13Z",
        "closed_at": "2022-02-26T10:29:43Z",
        "merged_at": "2022-02-26T10:29:43Z",
        "body": "## Please follow the guide below\r\n\r\n### Before submitting a *pull request* make sure you have:\r\n- [x] [Searched](https://github.com/ytdl-org/youtube-dl/search?q=is%3Apr&type=Issues) the bugtracker for similar pull requests\r\n- [x] Read [adding new extractor tutorial](https://github.com/ytdl-org/youtube-dl#adding-support-for-a-new-site)\r\n- [x] Read [youtube-dl coding conventions](https://github.com/ytdl-org/youtube-dl#youtube-dl-coding-conventions) and adjusted the code to meet them\r\n- [x] Covered the code with tests (note that PRs without tests will be REJECTED)\r\n- [x] Checked the code with [flake8](https://pypi.python.org/pypi/flake8)\r\n\r\n### In order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under [Unlicense](http://unlicense.org/). Check one of the following options:\r\n- [x] I am the original author of this code and I am willing to release it under [Unlicense](http://unlicense.org/)\r\n- [ ] I am not the original author of this code but it is in public domain or released under [Unlicense](http://unlicense.org/) (provide reliable evidence)\r\n\r\n### What is the purpose of your *pull request*?\r\n- [x] Bug fix\r\n- [ ] Improvement\r\n- [ ] New extractor\r\n- [ ] New feature\r\n\r\n---\r\n\r\n### Description of your *pull request* and other information\r\n\r\nWhen a Vimeo URL ends with '/ID/hash' and both ID and hash are numeric, the `_VALID_URL` pattern match skips over the ID part and assigns the ID from the hash part. One component of the URL pattern needs to be non-greedy: `(?:.*?/)??` instead of `(?:.*?/)?)`.\r\n\r\nCloses #29690.\r\n",
        "comments": 0
    }
]